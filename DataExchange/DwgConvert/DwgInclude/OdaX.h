

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 6.00.0361 */
/* at Fri Jun 24 15:10:29 2005
 */
/* Compiler settings for \OpenDwg\Dd1.13\DWGDirect_Bin\ActiveX\OdaX\OdaX.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __OdaX_h__
#define __OdaX_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IOPMPropertyExpander_FWD_DEFINED__
#define __IOPMPropertyExpander_FWD_DEFINED__
typedef interface IOPMPropertyExpander IOPMPropertyExpander;
#endif 	/* __IOPMPropertyExpander_FWD_DEFINED__ */


#ifndef __IOPMPropertyExtension_FWD_DEFINED__
#define __IOPMPropertyExtension_FWD_DEFINED__
typedef interface IOPMPropertyExtension IOPMPropertyExtension;
#endif 	/* __IOPMPropertyExtension_FWD_DEFINED__ */


#ifndef __IAcadObject_FWD_DEFINED__
#define __IAcadObject_FWD_DEFINED__
typedef interface IAcadObject IAcadObject;
#endif 	/* __IAcadObject_FWD_DEFINED__ */


#ifndef __IAcadDatabase_FWD_DEFINED__
#define __IAcadDatabase_FWD_DEFINED__
typedef interface IAcadDatabase IAcadDatabase;
#endif 	/* __IAcadDatabase_FWD_DEFINED__ */


#ifndef __IAcadBlock_FWD_DEFINED__
#define __IAcadBlock_FWD_DEFINED__
typedef interface IAcadBlock IAcadBlock;
#endif 	/* __IAcadBlock_FWD_DEFINED__ */


#ifndef __IAcadModelSpace_FWD_DEFINED__
#define __IAcadModelSpace_FWD_DEFINED__
typedef interface IAcadModelSpace IAcadModelSpace;
#endif 	/* __IAcadModelSpace_FWD_DEFINED__ */


#ifndef __IAcadBlock2_FWD_DEFINED__
#define __IAcadBlock2_FWD_DEFINED__
typedef interface IAcadBlock2 IAcadBlock2;
#endif 	/* __IAcadBlock2_FWD_DEFINED__ */


#ifndef __IOdaBlock_FWD_DEFINED__
#define __IOdaBlock_FWD_DEFINED__
typedef interface IOdaBlock IOdaBlock;
#endif 	/* __IOdaBlock_FWD_DEFINED__ */


#ifndef __IAcadEntity_FWD_DEFINED__
#define __IAcadEntity_FWD_DEFINED__
typedef interface IAcadEntity IAcadEntity;
#endif 	/* __IAcadEntity_FWD_DEFINED__ */


#ifndef __IAcadAcCmColor_FWD_DEFINED__
#define __IAcadAcCmColor_FWD_DEFINED__
typedef interface IAcadAcCmColor IAcadAcCmColor;
#endif 	/* __IAcadAcCmColor_FWD_DEFINED__ */


#ifndef __IAcadHyperlinks_FWD_DEFINED__
#define __IAcadHyperlinks_FWD_DEFINED__
typedef interface IAcadHyperlinks IAcadHyperlinks;
#endif 	/* __IAcadHyperlinks_FWD_DEFINED__ */


#ifndef __IAcadHyperlink_FWD_DEFINED__
#define __IAcadHyperlink_FWD_DEFINED__
typedef interface IAcadHyperlink IAcadHyperlink;
#endif 	/* __IAcadHyperlink_FWD_DEFINED__ */


#ifndef __IAcad3DFace_FWD_DEFINED__
#define __IAcad3DFace_FWD_DEFINED__
typedef interface IAcad3DFace IAcad3DFace;
#endif 	/* __IAcad3DFace_FWD_DEFINED__ */


#ifndef __IAcadPolygonMesh_FWD_DEFINED__
#define __IAcadPolygonMesh_FWD_DEFINED__
typedef interface IAcadPolygonMesh IAcadPolygonMesh;
#endif 	/* __IAcadPolygonMesh_FWD_DEFINED__ */


#ifndef __IAcad3DPolyline_FWD_DEFINED__
#define __IAcad3DPolyline_FWD_DEFINED__
typedef interface IAcad3DPolyline IAcad3DPolyline;
#endif 	/* __IAcad3DPolyline_FWD_DEFINED__ */


#ifndef __IAcadArc_FWD_DEFINED__
#define __IAcadArc_FWD_DEFINED__
typedef interface IAcadArc IAcadArc;
#endif 	/* __IAcadArc_FWD_DEFINED__ */


#ifndef __IAcadAttribute_FWD_DEFINED__
#define __IAcadAttribute_FWD_DEFINED__
typedef interface IAcadAttribute IAcadAttribute;
#endif 	/* __IAcadAttribute_FWD_DEFINED__ */


#ifndef __IAcad3DSolid_FWD_DEFINED__
#define __IAcad3DSolid_FWD_DEFINED__
typedef interface IAcad3DSolid IAcad3DSolid;
#endif 	/* __IAcad3DSolid_FWD_DEFINED__ */


#ifndef __IAcadRegion_FWD_DEFINED__
#define __IAcadRegion_FWD_DEFINED__
typedef interface IAcadRegion IAcadRegion;
#endif 	/* __IAcadRegion_FWD_DEFINED__ */


#ifndef __IAcadCircle_FWD_DEFINED__
#define __IAcadCircle_FWD_DEFINED__
typedef interface IAcadCircle IAcadCircle;
#endif 	/* __IAcadCircle_FWD_DEFINED__ */


#ifndef __IAcadDimension_FWD_DEFINED__
#define __IAcadDimension_FWD_DEFINED__
typedef interface IAcadDimension IAcadDimension;
#endif 	/* __IAcadDimension_FWD_DEFINED__ */


#ifndef __IAcadDimAligned_FWD_DEFINED__
#define __IAcadDimAligned_FWD_DEFINED__
typedef interface IAcadDimAligned IAcadDimAligned;
#endif 	/* __IAcadDimAligned_FWD_DEFINED__ */


#ifndef __IAcadDimAngular_FWD_DEFINED__
#define __IAcadDimAngular_FWD_DEFINED__
typedef interface IAcadDimAngular IAcadDimAngular;
#endif 	/* __IAcadDimAngular_FWD_DEFINED__ */


#ifndef __IAcadDimDiametric_FWD_DEFINED__
#define __IAcadDimDiametric_FWD_DEFINED__
typedef interface IAcadDimDiametric IAcadDimDiametric;
#endif 	/* __IAcadDimDiametric_FWD_DEFINED__ */


#ifndef __IAcadDimRotated_FWD_DEFINED__
#define __IAcadDimRotated_FWD_DEFINED__
typedef interface IAcadDimRotated IAcadDimRotated;
#endif 	/* __IAcadDimRotated_FWD_DEFINED__ */


#ifndef __IAcadDimOrdinate_FWD_DEFINED__
#define __IAcadDimOrdinate_FWD_DEFINED__
typedef interface IAcadDimOrdinate IAcadDimOrdinate;
#endif 	/* __IAcadDimOrdinate_FWD_DEFINED__ */


#ifndef __IAcadDimRadial_FWD_DEFINED__
#define __IAcadDimRadial_FWD_DEFINED__
typedef interface IAcadDimRadial IAcadDimRadial;
#endif 	/* __IAcadDimRadial_FWD_DEFINED__ */


#ifndef __IAcadEllipse_FWD_DEFINED__
#define __IAcadEllipse_FWD_DEFINED__
typedef interface IAcadEllipse IAcadEllipse;
#endif 	/* __IAcadEllipse_FWD_DEFINED__ */


#ifndef __IAcadLeader_FWD_DEFINED__
#define __IAcadLeader_FWD_DEFINED__
typedef interface IAcadLeader IAcadLeader;
#endif 	/* __IAcadLeader_FWD_DEFINED__ */


#ifndef __IAcadMText_FWD_DEFINED__
#define __IAcadMText_FWD_DEFINED__
typedef interface IAcadMText IAcadMText;
#endif 	/* __IAcadMText_FWD_DEFINED__ */


#ifndef __IAcadPoint_FWD_DEFINED__
#define __IAcadPoint_FWD_DEFINED__
typedef interface IAcadPoint IAcadPoint;
#endif 	/* __IAcadPoint_FWD_DEFINED__ */


#ifndef __IAcadLWPolyline_FWD_DEFINED__
#define __IAcadLWPolyline_FWD_DEFINED__
typedef interface IAcadLWPolyline IAcadLWPolyline;
#endif 	/* __IAcadLWPolyline_FWD_DEFINED__ */


#ifndef __IAcadPolyline_FWD_DEFINED__
#define __IAcadPolyline_FWD_DEFINED__
typedef interface IAcadPolyline IAcadPolyline;
#endif 	/* __IAcadPolyline_FWD_DEFINED__ */


#ifndef __IAcadRay_FWD_DEFINED__
#define __IAcadRay_FWD_DEFINED__
typedef interface IAcadRay IAcadRay;
#endif 	/* __IAcadRay_FWD_DEFINED__ */


#ifndef __IAcadShape_FWD_DEFINED__
#define __IAcadShape_FWD_DEFINED__
typedef interface IAcadShape IAcadShape;
#endif 	/* __IAcadShape_FWD_DEFINED__ */


#ifndef __IAcadSolid_FWD_DEFINED__
#define __IAcadSolid_FWD_DEFINED__
typedef interface IAcadSolid IAcadSolid;
#endif 	/* __IAcadSolid_FWD_DEFINED__ */


#ifndef __IAcadSpline_FWD_DEFINED__
#define __IAcadSpline_FWD_DEFINED__
typedef interface IAcadSpline IAcadSpline;
#endif 	/* __IAcadSpline_FWD_DEFINED__ */


#ifndef __IAcadText_FWD_DEFINED__
#define __IAcadText_FWD_DEFINED__
typedef interface IAcadText IAcadText;
#endif 	/* __IAcadText_FWD_DEFINED__ */


#ifndef __IAcadTolerance_FWD_DEFINED__
#define __IAcadTolerance_FWD_DEFINED__
typedef interface IAcadTolerance IAcadTolerance;
#endif 	/* __IAcadTolerance_FWD_DEFINED__ */


#ifndef __IAcadTrace_FWD_DEFINED__
#define __IAcadTrace_FWD_DEFINED__
typedef interface IAcadTrace IAcadTrace;
#endif 	/* __IAcadTrace_FWD_DEFINED__ */


#ifndef __IAcadXline_FWD_DEFINED__
#define __IAcadXline_FWD_DEFINED__
typedef interface IAcadXline IAcadXline;
#endif 	/* __IAcadXline_FWD_DEFINED__ */


#ifndef __IAcadBlockReference_FWD_DEFINED__
#define __IAcadBlockReference_FWD_DEFINED__
typedef interface IAcadBlockReference IAcadBlockReference;
#endif 	/* __IAcadBlockReference_FWD_DEFINED__ */


#ifndef __IAcadHatch_FWD_DEFINED__
#define __IAcadHatch_FWD_DEFINED__
typedef interface IAcadHatch IAcadHatch;
#endif 	/* __IAcadHatch_FWD_DEFINED__ */


#ifndef __IAcadRasterImage_FWD_DEFINED__
#define __IAcadRasterImage_FWD_DEFINED__
typedef interface IAcadRasterImage IAcadRasterImage;
#endif 	/* __IAcadRasterImage_FWD_DEFINED__ */


#ifndef __IAcadLine_FWD_DEFINED__
#define __IAcadLine_FWD_DEFINED__
typedef interface IAcadLine IAcadLine;
#endif 	/* __IAcadLine_FWD_DEFINED__ */


#ifndef __IAcadPlotConfiguration_FWD_DEFINED__
#define __IAcadPlotConfiguration_FWD_DEFINED__
typedef interface IAcadPlotConfiguration IAcadPlotConfiguration;
#endif 	/* __IAcadPlotConfiguration_FWD_DEFINED__ */


#ifndef __IAcadLayout_FWD_DEFINED__
#define __IAcadLayout_FWD_DEFINED__
typedef interface IAcadLayout IAcadLayout;
#endif 	/* __IAcadLayout_FWD_DEFINED__ */


#ifndef __IAcadMInsertBlock_FWD_DEFINED__
#define __IAcadMInsertBlock_FWD_DEFINED__
typedef interface IAcadMInsertBlock IAcadMInsertBlock;
#endif 	/* __IAcadMInsertBlock_FWD_DEFINED__ */


#ifndef __IAcadPolyfaceMesh_FWD_DEFINED__
#define __IAcadPolyfaceMesh_FWD_DEFINED__
typedef interface IAcadPolyfaceMesh IAcadPolyfaceMesh;
#endif 	/* __IAcadPolyfaceMesh_FWD_DEFINED__ */


#ifndef __IAcadMLine_FWD_DEFINED__
#define __IAcadMLine_FWD_DEFINED__
typedef interface IAcadMLine IAcadMLine;
#endif 	/* __IAcadMLine_FWD_DEFINED__ */


#ifndef __IAcadDim3PointAngular_FWD_DEFINED__
#define __IAcadDim3PointAngular_FWD_DEFINED__
typedef interface IAcadDim3PointAngular IAcadDim3PointAngular;
#endif 	/* __IAcadDim3PointAngular_FWD_DEFINED__ */


#ifndef __IAcadExternalReference_FWD_DEFINED__
#define __IAcadExternalReference_FWD_DEFINED__
typedef interface IAcadExternalReference IAcadExternalReference;
#endif 	/* __IAcadExternalReference_FWD_DEFINED__ */


#ifndef __IAcadPaperSpace_FWD_DEFINED__
#define __IAcadPaperSpace_FWD_DEFINED__
typedef interface IAcadPaperSpace IAcadPaperSpace;
#endif 	/* __IAcadPaperSpace_FWD_DEFINED__ */


#ifndef __IAcadPViewport_FWD_DEFINED__
#define __IAcadPViewport_FWD_DEFINED__
typedef interface IAcadPViewport IAcadPViewport;
#endif 	/* __IAcadPViewport_FWD_DEFINED__ */


#ifndef __IAcadBlocks_FWD_DEFINED__
#define __IAcadBlocks_FWD_DEFINED__
typedef interface IAcadBlocks IAcadBlocks;
#endif 	/* __IAcadBlocks_FWD_DEFINED__ */


#ifndef __IAcadGroups_FWD_DEFINED__
#define __IAcadGroups_FWD_DEFINED__
typedef interface IAcadGroups IAcadGroups;
#endif 	/* __IAcadGroups_FWD_DEFINED__ */


#ifndef __IAcadGroup_FWD_DEFINED__
#define __IAcadGroup_FWD_DEFINED__
typedef interface IAcadGroup IAcadGroup;
#endif 	/* __IAcadGroup_FWD_DEFINED__ */


#ifndef __IAcadDimStyles_FWD_DEFINED__
#define __IAcadDimStyles_FWD_DEFINED__
typedef interface IAcadDimStyles IAcadDimStyles;
#endif 	/* __IAcadDimStyles_FWD_DEFINED__ */


#ifndef __IAcadDimStyle_FWD_DEFINED__
#define __IAcadDimStyle_FWD_DEFINED__
typedef interface IAcadDimStyle IAcadDimStyle;
#endif 	/* __IAcadDimStyle_FWD_DEFINED__ */


#ifndef __IAcadLayers_FWD_DEFINED__
#define __IAcadLayers_FWD_DEFINED__
typedef interface IAcadLayers IAcadLayers;
#endif 	/* __IAcadLayers_FWD_DEFINED__ */


#ifndef __IAcadLayer_FWD_DEFINED__
#define __IAcadLayer_FWD_DEFINED__
typedef interface IAcadLayer IAcadLayer;
#endif 	/* __IAcadLayer_FWD_DEFINED__ */


#ifndef __IAcadLineTypes_FWD_DEFINED__
#define __IAcadLineTypes_FWD_DEFINED__
typedef interface IAcadLineTypes IAcadLineTypes;
#endif 	/* __IAcadLineTypes_FWD_DEFINED__ */


#ifndef __IAcadLineType_FWD_DEFINED__
#define __IAcadLineType_FWD_DEFINED__
typedef interface IAcadLineType IAcadLineType;
#endif 	/* __IAcadLineType_FWD_DEFINED__ */


#ifndef __IOdaLineType_FWD_DEFINED__
#define __IOdaLineType_FWD_DEFINED__
typedef interface IOdaLineType IOdaLineType;
#endif 	/* __IOdaLineType_FWD_DEFINED__ */


#ifndef __IAcadDictionaries_FWD_DEFINED__
#define __IAcadDictionaries_FWD_DEFINED__
typedef interface IAcadDictionaries IAcadDictionaries;
#endif 	/* __IAcadDictionaries_FWD_DEFINED__ */


#ifndef __IAcadDictionary_FWD_DEFINED__
#define __IAcadDictionary_FWD_DEFINED__
typedef interface IAcadDictionary IAcadDictionary;
#endif 	/* __IAcadDictionary_FWD_DEFINED__ */


#ifndef __IAcadXRecord_FWD_DEFINED__
#define __IAcadXRecord_FWD_DEFINED__
typedef interface IAcadXRecord IAcadXRecord;
#endif 	/* __IAcadXRecord_FWD_DEFINED__ */


#ifndef __IAcadRegisteredApplications_FWD_DEFINED__
#define __IAcadRegisteredApplications_FWD_DEFINED__
typedef interface IAcadRegisteredApplications IAcadRegisteredApplications;
#endif 	/* __IAcadRegisteredApplications_FWD_DEFINED__ */


#ifndef __IAcadRegisteredApplication_FWD_DEFINED__
#define __IAcadRegisteredApplication_FWD_DEFINED__
typedef interface IAcadRegisteredApplication IAcadRegisteredApplication;
#endif 	/* __IAcadRegisteredApplication_FWD_DEFINED__ */


#ifndef __IAcadTextStyles_FWD_DEFINED__
#define __IAcadTextStyles_FWD_DEFINED__
typedef interface IAcadTextStyles IAcadTextStyles;
#endif 	/* __IAcadTextStyles_FWD_DEFINED__ */


#ifndef __IAcadTextStyle_FWD_DEFINED__
#define __IAcadTextStyle_FWD_DEFINED__
typedef interface IAcadTextStyle IAcadTextStyle;
#endif 	/* __IAcadTextStyle_FWD_DEFINED__ */


#ifndef __IAcadUCSs_FWD_DEFINED__
#define __IAcadUCSs_FWD_DEFINED__
typedef interface IAcadUCSs IAcadUCSs;
#endif 	/* __IAcadUCSs_FWD_DEFINED__ */


#ifndef __IAcadUCS_FWD_DEFINED__
#define __IAcadUCS_FWD_DEFINED__
typedef interface IAcadUCS IAcadUCS;
#endif 	/* __IAcadUCS_FWD_DEFINED__ */


#ifndef __IAcadViews_FWD_DEFINED__
#define __IAcadViews_FWD_DEFINED__
typedef interface IAcadViews IAcadViews;
#endif 	/* __IAcadViews_FWD_DEFINED__ */


#ifndef __IAcadView_FWD_DEFINED__
#define __IAcadView_FWD_DEFINED__
typedef interface IAcadView IAcadView;
#endif 	/* __IAcadView_FWD_DEFINED__ */


#ifndef __IAcadViewports_FWD_DEFINED__
#define __IAcadViewports_FWD_DEFINED__
typedef interface IAcadViewports IAcadViewports;
#endif 	/* __IAcadViewports_FWD_DEFINED__ */


#ifndef __IAcadViewport_FWD_DEFINED__
#define __IAcadViewport_FWD_DEFINED__
typedef interface IAcadViewport IAcadViewport;
#endif 	/* __IAcadViewport_FWD_DEFINED__ */


#ifndef __IAcadLayouts_FWD_DEFINED__
#define __IAcadLayouts_FWD_DEFINED__
typedef interface IAcadLayouts IAcadLayouts;
#endif 	/* __IAcadLayouts_FWD_DEFINED__ */


#ifndef __IAcadPlotConfigurations_FWD_DEFINED__
#define __IAcadPlotConfigurations_FWD_DEFINED__
typedef interface IAcadPlotConfigurations IAcadPlotConfigurations;
#endif 	/* __IAcadPlotConfigurations_FWD_DEFINED__ */


#ifndef __IAcadDatabasePreferences_FWD_DEFINED__
#define __IAcadDatabasePreferences_FWD_DEFINED__
typedef interface IAcadDatabasePreferences IAcadDatabasePreferences;
#endif 	/* __IAcadDatabasePreferences_FWD_DEFINED__ */


#ifndef __IAcadFileDependencies_FWD_DEFINED__
#define __IAcadFileDependencies_FWD_DEFINED__
typedef interface IAcadFileDependencies IAcadFileDependencies;
#endif 	/* __IAcadFileDependencies_FWD_DEFINED__ */


#ifndef __IAcadFileDependency_FWD_DEFINED__
#define __IAcadFileDependency_FWD_DEFINED__
typedef interface IAcadFileDependency IAcadFileDependency;
#endif 	/* __IAcadFileDependency_FWD_DEFINED__ */


#ifndef __IAcadSummaryInfo_FWD_DEFINED__
#define __IAcadSummaryInfo_FWD_DEFINED__
typedef interface IAcadSummaryInfo IAcadSummaryInfo;
#endif 	/* __IAcadSummaryInfo_FWD_DEFINED__ */


#ifndef __IAcadIdPair_FWD_DEFINED__
#define __IAcadIdPair_FWD_DEFINED__
typedef interface IAcadIdPair IAcadIdPair;
#endif 	/* __IAcadIdPair_FWD_DEFINED__ */


#ifndef __IAcadAttributeReference_FWD_DEFINED__
#define __IAcadAttributeReference_FWD_DEFINED__
typedef interface IAcadAttributeReference IAcadAttributeReference;
#endif 	/* __IAcadAttributeReference_FWD_DEFINED__ */


#ifndef __IAcadSortentsTable_FWD_DEFINED__
#define __IAcadSortentsTable_FWD_DEFINED__
typedef interface IAcadSortentsTable IAcadSortentsTable;
#endif 	/* __IAcadSortentsTable_FWD_DEFINED__ */


#ifndef __IAcadLayer2_FWD_DEFINED__
#define __IAcadLayer2_FWD_DEFINED__
typedef interface IAcadLayer2 IAcadLayer2;
#endif 	/* __IAcadLayer2_FWD_DEFINED__ */


#ifndef __IAcadView2_FWD_DEFINED__
#define __IAcadView2_FWD_DEFINED__
typedef interface IAcadView2 IAcadView2;
#endif 	/* __IAcadView2_FWD_DEFINED__ */


#ifndef __IAcadTableStyle_FWD_DEFINED__
#define __IAcadTableStyle_FWD_DEFINED__
typedef interface IAcadTableStyle IAcadTableStyle;
#endif 	/* __IAcadTableStyle_FWD_DEFINED__ */


#ifndef __IAcadLayers2_FWD_DEFINED__
#define __IAcadLayers2_FWD_DEFINED__
typedef interface IAcadLayers2 IAcadLayers2;
#endif 	/* __IAcadLayers2_FWD_DEFINED__ */


#ifndef __IAcadMText2_FWD_DEFINED__
#define __IAcadMText2_FWD_DEFINED__
typedef interface IAcadMText2 IAcadMText2;
#endif 	/* __IAcadMText2_FWD_DEFINED__ */


#ifndef __IAcadText2_FWD_DEFINED__
#define __IAcadText2_FWD_DEFINED__
typedef interface IAcadText2 IAcadText2;
#endif 	/* __IAcadText2_FWD_DEFINED__ */


#ifndef __IAcadPViewport2_FWD_DEFINED__
#define __IAcadPViewport2_FWD_DEFINED__
typedef interface IAcadPViewport2 IAcadPViewport2;
#endif 	/* __IAcadPViewport2_FWD_DEFINED__ */


#ifndef __IAcadTable_FWD_DEFINED__
#define __IAcadTable_FWD_DEFINED__
typedef interface IAcadTable IAcadTable;
#endif 	/* __IAcadTable_FWD_DEFINED__ */


#ifndef __IAcadOle_FWD_DEFINED__
#define __IAcadOle_FWD_DEFINED__
typedef interface IAcadOle IAcadOle;
#endif 	/* __IAcadOle_FWD_DEFINED__ */


#ifndef __IAcadModelSpace2_FWD_DEFINED__
#define __IAcadModelSpace2_FWD_DEFINED__
typedef interface IAcadModelSpace2 IAcadModelSpace2;
#endif 	/* __IAcadModelSpace2_FWD_DEFINED__ */


#ifndef __IAcadPaperSpace2_FWD_DEFINED__
#define __IAcadPaperSpace2_FWD_DEFINED__
typedef interface IAcadPaperSpace2 IAcadPaperSpace2;
#endif 	/* __IAcadPaperSpace2_FWD_DEFINED__ */


#ifndef __IOdaMLineStyles_FWD_DEFINED__
#define __IOdaMLineStyles_FWD_DEFINED__
typedef interface IOdaMLineStyles IOdaMLineStyles;
#endif 	/* __IOdaMLineStyles_FWD_DEFINED__ */


#ifndef __IOdaMLineStyle_FWD_DEFINED__
#define __IOdaMLineStyle_FWD_DEFINED__
typedef interface IOdaMLineStyle IOdaMLineStyle;
#endif 	/* __IOdaMLineStyle_FWD_DEFINED__ */


#ifndef __IAcadObjectEvents_FWD_DEFINED__
#define __IAcadObjectEvents_FWD_DEFINED__
typedef interface IAcadObjectEvents IAcadObjectEvents;
#endif 	/* __IAcadObjectEvents_FWD_DEFINED__ */


#ifndef __AcadLine_FWD_DEFINED__
#define __AcadLine_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadLine AcadLine;
#else
typedef struct AcadLine AcadLine;
#endif /* __cplusplus */

#endif 	/* __AcadLine_FWD_DEFINED__ */


#ifndef __AcadObject_FWD_DEFINED__
#define __AcadObject_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadObject AcadObject;
#else
typedef struct AcadObject AcadObject;
#endif /* __cplusplus */

#endif 	/* __AcadObject_FWD_DEFINED__ */


#ifndef __AcadEntity_FWD_DEFINED__
#define __AcadEntity_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadEntity AcadEntity;
#else
typedef struct AcadEntity AcadEntity;
#endif /* __cplusplus */

#endif 	/* __AcadEntity_FWD_DEFINED__ */


#ifndef __AcadDimension_FWD_DEFINED__
#define __AcadDimension_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadDimension AcadDimension;
#else
typedef struct AcadDimension AcadDimension;
#endif /* __cplusplus */

#endif 	/* __AcadDimension_FWD_DEFINED__ */


#ifndef __AcadDimRotated_FWD_DEFINED__
#define __AcadDimRotated_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadDimRotated AcadDimRotated;
#else
typedef struct AcadDimRotated AcadDimRotated;
#endif /* __cplusplus */

#endif 	/* __AcadDimRotated_FWD_DEFINED__ */


#ifndef __AcadMText_FWD_DEFINED__
#define __AcadMText_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadMText AcadMText;
#else
typedef struct AcadMText AcadMText;
#endif /* __cplusplus */

#endif 	/* __AcadMText_FWD_DEFINED__ */


#ifndef __AcadDatabase_FWD_DEFINED__
#define __AcadDatabase_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadDatabase AcadDatabase;
#else
typedef struct AcadDatabase AcadDatabase;
#endif /* __cplusplus */

#endif 	/* __AcadDatabase_FWD_DEFINED__ */


#ifndef __AcadViewport_FWD_DEFINED__
#define __AcadViewport_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadViewport AcadViewport;
#else
typedef struct AcadViewport AcadViewport;
#endif /* __cplusplus */

#endif 	/* __AcadViewport_FWD_DEFINED__ */


#ifndef __AcadViewports_FWD_DEFINED__
#define __AcadViewports_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadViewports AcadViewports;
#else
typedef struct AcadViewports AcadViewports;
#endif /* __cplusplus */

#endif 	/* __AcadViewports_FWD_DEFINED__ */


#ifndef __AcadText_FWD_DEFINED__
#define __AcadText_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadText AcadText;
#else
typedef struct AcadText AcadText;
#endif /* __cplusplus */

#endif 	/* __AcadText_FWD_DEFINED__ */


#ifndef __AcadTrace_FWD_DEFINED__
#define __AcadTrace_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadTrace AcadTrace;
#else
typedef struct AcadTrace AcadTrace;
#endif /* __cplusplus */

#endif 	/* __AcadTrace_FWD_DEFINED__ */


#ifndef __AcadPolyline_FWD_DEFINED__
#define __AcadPolyline_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadPolyline AcadPolyline;
#else
typedef struct AcadPolyline AcadPolyline;
#endif /* __cplusplus */

#endif 	/* __AcadPolyline_FWD_DEFINED__ */


#ifndef __AcadLineTypes_FWD_DEFINED__
#define __AcadLineTypes_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadLineTypes AcadLineTypes;
#else
typedef struct AcadLineTypes AcadLineTypes;
#endif /* __cplusplus */

#endif 	/* __AcadLineTypes_FWD_DEFINED__ */


#ifndef __OdaLineType_FWD_DEFINED__
#define __OdaLineType_FWD_DEFINED__

#ifdef __cplusplus
typedef class OdaLineType OdaLineType;
#else
typedef struct OdaLineType OdaLineType;
#endif /* __cplusplus */

#endif 	/* __OdaLineType_FWD_DEFINED__ */


#ifndef __AcadBlocks_FWD_DEFINED__
#define __AcadBlocks_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadBlocks AcadBlocks;
#else
typedef struct AcadBlocks AcadBlocks;
#endif /* __cplusplus */

#endif 	/* __AcadBlocks_FWD_DEFINED__ */


#ifndef __OdaBlock_FWD_DEFINED__
#define __OdaBlock_FWD_DEFINED__

#ifdef __cplusplus
typedef class OdaBlock OdaBlock;
#else
typedef struct OdaBlock OdaBlock;
#endif /* __cplusplus */

#endif 	/* __OdaBlock_FWD_DEFINED__ */


#ifndef __AcadEllipse_FWD_DEFINED__
#define __AcadEllipse_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadEllipse AcadEllipse;
#else
typedef struct AcadEllipse AcadEllipse;
#endif /* __cplusplus */

#endif 	/* __AcadEllipse_FWD_DEFINED__ */


#ifndef __AcadCircle_FWD_DEFINED__
#define __AcadCircle_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadCircle AcadCircle;
#else
typedef struct AcadCircle AcadCircle;
#endif /* __cplusplus */

#endif 	/* __AcadCircle_FWD_DEFINED__ */


#ifndef __AcadPoint_FWD_DEFINED__
#define __AcadPoint_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadPoint AcadPoint;
#else
typedef struct AcadPoint AcadPoint;
#endif /* __cplusplus */

#endif 	/* __AcadPoint_FWD_DEFINED__ */


#ifndef __Acad3DFace_FWD_DEFINED__
#define __Acad3DFace_FWD_DEFINED__

#ifdef __cplusplus
typedef class Acad3DFace Acad3DFace;
#else
typedef struct Acad3DFace Acad3DFace;
#endif /* __cplusplus */

#endif 	/* __Acad3DFace_FWD_DEFINED__ */


#ifndef __Acad3DPolyline_FWD_DEFINED__
#define __Acad3DPolyline_FWD_DEFINED__

#ifdef __cplusplus
typedef class Acad3DPolyline Acad3DPolyline;
#else
typedef struct Acad3DPolyline Acad3DPolyline;
#endif /* __cplusplus */

#endif 	/* __Acad3DPolyline_FWD_DEFINED__ */


#ifndef __Acad3DSolid_FWD_DEFINED__
#define __Acad3DSolid_FWD_DEFINED__

#ifdef __cplusplus
typedef class Acad3DSolid Acad3DSolid;
#else
typedef struct Acad3DSolid Acad3DSolid;
#endif /* __cplusplus */

#endif 	/* __Acad3DSolid_FWD_DEFINED__ */


#ifndef __AcadArc_FWD_DEFINED__
#define __AcadArc_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadArc AcadArc;
#else
typedef struct AcadArc AcadArc;
#endif /* __cplusplus */

#endif 	/* __AcadArc_FWD_DEFINED__ */


#ifndef __AcadAttribute_FWD_DEFINED__
#define __AcadAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadAttribute AcadAttribute;
#else
typedef struct AcadAttribute AcadAttribute;
#endif /* __cplusplus */

#endif 	/* __AcadAttribute_FWD_DEFINED__ */


#ifndef __AcadLeader_FWD_DEFINED__
#define __AcadLeader_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadLeader AcadLeader;
#else
typedef struct AcadLeader AcadLeader;
#endif /* __cplusplus */

#endif 	/* __AcadLeader_FWD_DEFINED__ */


#ifndef __AcadTolerance_FWD_DEFINED__
#define __AcadTolerance_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadTolerance AcadTolerance;
#else
typedef struct AcadTolerance AcadTolerance;
#endif /* __cplusplus */

#endif 	/* __AcadTolerance_FWD_DEFINED__ */


#ifndef __AcadBlockReference_FWD_DEFINED__
#define __AcadBlockReference_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadBlockReference AcadBlockReference;
#else
typedef struct AcadBlockReference AcadBlockReference;
#endif /* __cplusplus */

#endif 	/* __AcadBlockReference_FWD_DEFINED__ */


#ifndef __AcadDim3PointAngular_FWD_DEFINED__
#define __AcadDim3PointAngular_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadDim3PointAngular AcadDim3PointAngular;
#else
typedef struct AcadDim3PointAngular AcadDim3PointAngular;
#endif /* __cplusplus */

#endif 	/* __AcadDim3PointAngular_FWD_DEFINED__ */


#ifndef __AcadDimAligned_FWD_DEFINED__
#define __AcadDimAligned_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadDimAligned AcadDimAligned;
#else
typedef struct AcadDimAligned AcadDimAligned;
#endif /* __cplusplus */

#endif 	/* __AcadDimAligned_FWD_DEFINED__ */


#ifndef __AcadShape_FWD_DEFINED__
#define __AcadShape_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadShape AcadShape;
#else
typedef struct AcadShape AcadShape;
#endif /* __cplusplus */

#endif 	/* __AcadShape_FWD_DEFINED__ */


#ifndef __AcadSolid_FWD_DEFINED__
#define __AcadSolid_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadSolid AcadSolid;
#else
typedef struct AcadSolid AcadSolid;
#endif /* __cplusplus */

#endif 	/* __AcadSolid_FWD_DEFINED__ */


#ifndef __AcadSpline_FWD_DEFINED__
#define __AcadSpline_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadSpline AcadSpline;
#else
typedef struct AcadSpline AcadSpline;
#endif /* __cplusplus */

#endif 	/* __AcadSpline_FWD_DEFINED__ */


#ifndef __AcadDimAngular_FWD_DEFINED__
#define __AcadDimAngular_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadDimAngular AcadDimAngular;
#else
typedef struct AcadDimAngular AcadDimAngular;
#endif /* __cplusplus */

#endif 	/* __AcadDimAngular_FWD_DEFINED__ */


#ifndef __AcadDimDiametric_FWD_DEFINED__
#define __AcadDimDiametric_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadDimDiametric AcadDimDiametric;
#else
typedef struct AcadDimDiametric AcadDimDiametric;
#endif /* __cplusplus */

#endif 	/* __AcadDimDiametric_FWD_DEFINED__ */


#ifndef __AcadDimOrdinate_FWD_DEFINED__
#define __AcadDimOrdinate_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadDimOrdinate AcadDimOrdinate;
#else
typedef struct AcadDimOrdinate AcadDimOrdinate;
#endif /* __cplusplus */

#endif 	/* __AcadDimOrdinate_FWD_DEFINED__ */


#ifndef __AcadDimRadial_FWD_DEFINED__
#define __AcadDimRadial_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadDimRadial AcadDimRadial;
#else
typedef struct AcadDimRadial AcadDimRadial;
#endif /* __cplusplus */

#endif 	/* __AcadDimRadial_FWD_DEFINED__ */


#ifndef __AcadXRecord_FWD_DEFINED__
#define __AcadXRecord_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadXRecord AcadXRecord;
#else
typedef struct AcadXRecord AcadXRecord;
#endif /* __cplusplus */

#endif 	/* __AcadXRecord_FWD_DEFINED__ */


#ifndef __AcadXline_FWD_DEFINED__
#define __AcadXline_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadXline AcadXline;
#else
typedef struct AcadXline AcadXline;
#endif /* __cplusplus */

#endif 	/* __AcadXline_FWD_DEFINED__ */


#ifndef __AcadRay_FWD_DEFINED__
#define __AcadRay_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadRay AcadRay;
#else
typedef struct AcadRay AcadRay;
#endif /* __cplusplus */

#endif 	/* __AcadRay_FWD_DEFINED__ */


#ifndef __AcadDimStyle_FWD_DEFINED__
#define __AcadDimStyle_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadDimStyle AcadDimStyle;
#else
typedef struct AcadDimStyle AcadDimStyle;
#endif /* __cplusplus */

#endif 	/* __AcadDimStyle_FWD_DEFINED__ */


#ifndef __AcadExternalReference_FWD_DEFINED__
#define __AcadExternalReference_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadExternalReference AcadExternalReference;
#else
typedef struct AcadExternalReference AcadExternalReference;
#endif /* __cplusplus */

#endif 	/* __AcadExternalReference_FWD_DEFINED__ */


#ifndef __AcadMInsertBlock_FWD_DEFINED__
#define __AcadMInsertBlock_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadMInsertBlock AcadMInsertBlock;
#else
typedef struct AcadMInsertBlock AcadMInsertBlock;
#endif /* __cplusplus */

#endif 	/* __AcadMInsertBlock_FWD_DEFINED__ */


#ifndef __AcadDimStyles_FWD_DEFINED__
#define __AcadDimStyles_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadDimStyles AcadDimStyles;
#else
typedef struct AcadDimStyles AcadDimStyles;
#endif /* __cplusplus */

#endif 	/* __AcadDimStyles_FWD_DEFINED__ */


#ifndef __AcadUCS_FWD_DEFINED__
#define __AcadUCS_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadUCS AcadUCS;
#else
typedef struct AcadUCS AcadUCS;
#endif /* __cplusplus */

#endif 	/* __AcadUCS_FWD_DEFINED__ */


#ifndef __AcadUCSs_FWD_DEFINED__
#define __AcadUCSs_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadUCSs AcadUCSs;
#else
typedef struct AcadUCSs AcadUCSs;
#endif /* __cplusplus */

#endif 	/* __AcadUCSs_FWD_DEFINED__ */


#ifndef __AcadView_FWD_DEFINED__
#define __AcadView_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadView AcadView;
#else
typedef struct AcadView AcadView;
#endif /* __cplusplus */

#endif 	/* __AcadView_FWD_DEFINED__ */


#ifndef __AcadViews_FWD_DEFINED__
#define __AcadViews_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadViews AcadViews;
#else
typedef struct AcadViews AcadViews;
#endif /* __cplusplus */

#endif 	/* __AcadViews_FWD_DEFINED__ */


#ifndef __AcadGroup_FWD_DEFINED__
#define __AcadGroup_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadGroup AcadGroup;
#else
typedef struct AcadGroup AcadGroup;
#endif /* __cplusplus */

#endif 	/* __AcadGroup_FWD_DEFINED__ */


#ifndef __AcadGroups_FWD_DEFINED__
#define __AcadGroups_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadGroups AcadGroups;
#else
typedef struct AcadGroups AcadGroups;
#endif /* __cplusplus */

#endif 	/* __AcadGroups_FWD_DEFINED__ */


#ifndef __AcadDictionaries_FWD_DEFINED__
#define __AcadDictionaries_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadDictionaries AcadDictionaries;
#else
typedef struct AcadDictionaries AcadDictionaries;
#endif /* __cplusplus */

#endif 	/* __AcadDictionaries_FWD_DEFINED__ */


#ifndef __AcadDictionary_FWD_DEFINED__
#define __AcadDictionary_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadDictionary AcadDictionary;
#else
typedef struct AcadDictionary AcadDictionary;
#endif /* __cplusplus */

#endif 	/* __AcadDictionary_FWD_DEFINED__ */


#ifndef __AcadLayouts_FWD_DEFINED__
#define __AcadLayouts_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadLayouts AcadLayouts;
#else
typedef struct AcadLayouts AcadLayouts;
#endif /* __cplusplus */

#endif 	/* __AcadLayouts_FWD_DEFINED__ */


#ifndef __AcadLayout_FWD_DEFINED__
#define __AcadLayout_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadLayout AcadLayout;
#else
typedef struct AcadLayout AcadLayout;
#endif /* __cplusplus */

#endif 	/* __AcadLayout_FWD_DEFINED__ */


#ifndef __AcadTextStyle_FWD_DEFINED__
#define __AcadTextStyle_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadTextStyle AcadTextStyle;
#else
typedef struct AcadTextStyle AcadTextStyle;
#endif /* __cplusplus */

#endif 	/* __AcadTextStyle_FWD_DEFINED__ */


#ifndef __AcadTextStyles_FWD_DEFINED__
#define __AcadTextStyles_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadTextStyles AcadTextStyles;
#else
typedef struct AcadTextStyles AcadTextStyles;
#endif /* __cplusplus */

#endif 	/* __AcadTextStyles_FWD_DEFINED__ */


#ifndef __AcadHatch_FWD_DEFINED__
#define __AcadHatch_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadHatch AcadHatch;
#else
typedef struct AcadHatch AcadHatch;
#endif /* __cplusplus */

#endif 	/* __AcadHatch_FWD_DEFINED__ */


#ifndef __AcadMLine_FWD_DEFINED__
#define __AcadMLine_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadMLine AcadMLine;
#else
typedef struct AcadMLine AcadMLine;
#endif /* __cplusplus */

#endif 	/* __AcadMLine_FWD_DEFINED__ */


#ifndef __AcadPolygonMesh_FWD_DEFINED__
#define __AcadPolygonMesh_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadPolygonMesh AcadPolygonMesh;
#else
typedef struct AcadPolygonMesh AcadPolygonMesh;
#endif /* __cplusplus */

#endif 	/* __AcadPolygonMesh_FWD_DEFINED__ */


#ifndef __AcadPolyfaceMesh_FWD_DEFINED__
#define __AcadPolyfaceMesh_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadPolyfaceMesh AcadPolyfaceMesh;
#else
typedef struct AcadPolyfaceMesh AcadPolyfaceMesh;
#endif /* __cplusplus */

#endif 	/* __AcadPolyfaceMesh_FWD_DEFINED__ */


#ifndef __AcadPlotConfiguration_FWD_DEFINED__
#define __AcadPlotConfiguration_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadPlotConfiguration AcadPlotConfiguration;
#else
typedef struct AcadPlotConfiguration AcadPlotConfiguration;
#endif /* __cplusplus */

#endif 	/* __AcadPlotConfiguration_FWD_DEFINED__ */


#ifndef __AcadPlotConfigurations_FWD_DEFINED__
#define __AcadPlotConfigurations_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadPlotConfigurations AcadPlotConfigurations;
#else
typedef struct AcadPlotConfigurations AcadPlotConfigurations;
#endif /* __cplusplus */

#endif 	/* __AcadPlotConfigurations_FWD_DEFINED__ */


#ifndef __AcadRasterImage_FWD_DEFINED__
#define __AcadRasterImage_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadRasterImage AcadRasterImage;
#else
typedef struct AcadRasterImage AcadRasterImage;
#endif /* __cplusplus */

#endif 	/* __AcadRasterImage_FWD_DEFINED__ */


#ifndef __AcadRegion_FWD_DEFINED__
#define __AcadRegion_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadRegion AcadRegion;
#else
typedef struct AcadRegion AcadRegion;
#endif /* __cplusplus */

#endif 	/* __AcadRegion_FWD_DEFINED__ */


#ifndef __AcadRegisteredApplication_FWD_DEFINED__
#define __AcadRegisteredApplication_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadRegisteredApplication AcadRegisteredApplication;
#else
typedef struct AcadRegisteredApplication AcadRegisteredApplication;
#endif /* __cplusplus */

#endif 	/* __AcadRegisteredApplication_FWD_DEFINED__ */


#ifndef __AcadRegisteredApplications_FWD_DEFINED__
#define __AcadRegisteredApplications_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadRegisteredApplications AcadRegisteredApplications;
#else
typedef struct AcadRegisteredApplications AcadRegisteredApplications;
#endif /* __cplusplus */

#endif 	/* __AcadRegisteredApplications_FWD_DEFINED__ */


#ifndef __AcadPViewport_FWD_DEFINED__
#define __AcadPViewport_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadPViewport AcadPViewport;
#else
typedef struct AcadPViewport AcadPViewport;
#endif /* __cplusplus */

#endif 	/* __AcadPViewport_FWD_DEFINED__ */


#ifndef __AcadDatabasePreferences_FWD_DEFINED__
#define __AcadDatabasePreferences_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadDatabasePreferences AcadDatabasePreferences;
#else
typedef struct AcadDatabasePreferences AcadDatabasePreferences;
#endif /* __cplusplus */

#endif 	/* __AcadDatabasePreferences_FWD_DEFINED__ */


#ifndef __AcadHyperlink_FWD_DEFINED__
#define __AcadHyperlink_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadHyperlink AcadHyperlink;
#else
typedef struct AcadHyperlink AcadHyperlink;
#endif /* __cplusplus */

#endif 	/* __AcadHyperlink_FWD_DEFINED__ */


#ifndef __AcadHyperlinks_FWD_DEFINED__
#define __AcadHyperlinks_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadHyperlinks AcadHyperlinks;
#else
typedef struct AcadHyperlinks AcadHyperlinks;
#endif /* __cplusplus */

#endif 	/* __AcadHyperlinks_FWD_DEFINED__ */


#ifndef __AcadLayer_FWD_DEFINED__
#define __AcadLayer_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadLayer AcadLayer;
#else
typedef struct AcadLayer AcadLayer;
#endif /* __cplusplus */

#endif 	/* __AcadLayer_FWD_DEFINED__ */


#ifndef __AcadLayers_FWD_DEFINED__
#define __AcadLayers_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadLayers AcadLayers;
#else
typedef struct AcadLayers AcadLayers;
#endif /* __cplusplus */

#endif 	/* __AcadLayers_FWD_DEFINED__ */


#ifndef __AcadLWPolyline_FWD_DEFINED__
#define __AcadLWPolyline_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadLWPolyline AcadLWPolyline;
#else
typedef struct AcadLWPolyline AcadLWPolyline;
#endif /* __cplusplus */

#endif 	/* __AcadLWPolyline_FWD_DEFINED__ */


#ifndef __AcadPaperSpace_FWD_DEFINED__
#define __AcadPaperSpace_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadPaperSpace AcadPaperSpace;
#else
typedef struct AcadPaperSpace AcadPaperSpace;
#endif /* __cplusplus */

#endif 	/* __AcadPaperSpace_FWD_DEFINED__ */


#ifndef __AcadModelSpace_FWD_DEFINED__
#define __AcadModelSpace_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadModelSpace AcadModelSpace;
#else
typedef struct AcadModelSpace AcadModelSpace;
#endif /* __cplusplus */

#endif 	/* __AcadModelSpace_FWD_DEFINED__ */


#ifndef __AcadAttributeReference_FWD_DEFINED__
#define __AcadAttributeReference_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadAttributeReference AcadAttributeReference;
#else
typedef struct AcadAttributeReference AcadAttributeReference;
#endif /* __cplusplus */

#endif 	/* __AcadAttributeReference_FWD_DEFINED__ */


#ifndef __AcadAcCmColor_FWD_DEFINED__
#define __AcadAcCmColor_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadAcCmColor AcadAcCmColor;
#else
typedef struct AcadAcCmColor AcadAcCmColor;
#endif /* __cplusplus */

#endif 	/* __AcadAcCmColor_FWD_DEFINED__ */


#ifndef __AcadSummaryInfo_FWD_DEFINED__
#define __AcadSummaryInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadSummaryInfo AcadSummaryInfo;
#else
typedef struct AcadSummaryInfo AcadSummaryInfo;
#endif /* __cplusplus */

#endif 	/* __AcadSummaryInfo_FWD_DEFINED__ */


#ifndef __AcadFileDependencies_FWD_DEFINED__
#define __AcadFileDependencies_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadFileDependencies AcadFileDependencies;
#else
typedef struct AcadFileDependencies AcadFileDependencies;
#endif /* __cplusplus */

#endif 	/* __AcadFileDependencies_FWD_DEFINED__ */


#ifndef __AcadFileDependency_FWD_DEFINED__
#define __AcadFileDependency_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadFileDependency AcadFileDependency;
#else
typedef struct AcadFileDependency AcadFileDependency;
#endif /* __cplusplus */

#endif 	/* __AcadFileDependency_FWD_DEFINED__ */


#ifndef __AcadTable_FWD_DEFINED__
#define __AcadTable_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadTable AcadTable;
#else
typedef struct AcadTable AcadTable;
#endif /* __cplusplus */

#endif 	/* __AcadTable_FWD_DEFINED__ */


#ifndef __AcadOle_FWD_DEFINED__
#define __AcadOle_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadOle AcadOle;
#else
typedef struct AcadOle AcadOle;
#endif /* __cplusplus */

#endif 	/* __AcadOle_FWD_DEFINED__ */


#ifndef __AcadTableStyle_FWD_DEFINED__
#define __AcadTableStyle_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadTableStyle AcadTableStyle;
#else
typedef struct AcadTableStyle AcadTableStyle;
#endif /* __cplusplus */

#endif 	/* __AcadTableStyle_FWD_DEFINED__ */


#ifndef __AcadSortentsTable_FWD_DEFINED__
#define __AcadSortentsTable_FWD_DEFINED__

#ifdef __cplusplus
typedef class AcadSortentsTable AcadSortentsTable;
#else
typedef struct AcadSortentsTable AcadSortentsTable;
#endif /* __cplusplus */

#endif 	/* __AcadSortentsTable_FWD_DEFINED__ */


#ifndef __OdaMLineStyles_FWD_DEFINED__
#define __OdaMLineStyles_FWD_DEFINED__

#ifdef __cplusplus
typedef class OdaMLineStyles OdaMLineStyles;
#else
typedef struct OdaMLineStyles OdaMLineStyles;
#endif /* __cplusplus */

#endif 	/* __OdaMLineStyles_FWD_DEFINED__ */


#ifndef __OdaMLineStyle_FWD_DEFINED__
#define __OdaMLineStyle_FWD_DEFINED__

#ifdef __cplusplus
typedef class OdaMLineStyle OdaMLineStyle;
#else
typedef struct OdaMLineStyle OdaMLineStyle;
#endif /* __cplusplus */

#endif 	/* __OdaMLineStyle_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

#ifdef __cplusplus
extern "C"{
#endif 

void * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void * ); 

/* interface __MIDL_itf_OdaX_0000 */
/* [local] */ 





































































































extern RPC_IF_HANDLE __MIDL_itf_OdaX_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_OdaX_0000_v0_0_s_ifspec;

#ifndef __IOPMPropertyExpander_INTERFACE_DEFINED__
#define __IOPMPropertyExpander_INTERFACE_DEFINED__

/* interface IOPMPropertyExpander */
/* [object][uuid] */ 


EXTERN_C const IID IID_IOPMPropertyExpander;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5D535710-D49A-11d1-B616-0060B087E235")
    IOPMPropertyExpander : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetElementValue( 
            /* [in] */ DISPID dispID,
            /* [in] */ DWORD dwCookie,
            /* [out] */ VARIANT *pVarOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetElementValue( 
            /* [in] */ DISPID dispID,
            /* [in] */ DWORD dwCookie,
            /* [in] */ VARIANT VarIn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetElementStrings( 
            /* [in] */ DISPID dispID,
            /* [out] */ CALPOLESTR *pCaStringsOut,
            /* [out] */ CADWORD *pCaCookiesOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetElementGrouping( 
            /* [in] */ DISPID dispID,
            /* [out] */ short *groupingNumber) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGroupCount( 
            /* [in] */ DISPID dispID,
            /* [out] */ long *nGroupCnt) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOPMPropertyExpanderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IOPMPropertyExpander * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IOPMPropertyExpander * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IOPMPropertyExpander * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetElementValue )( 
            IOPMPropertyExpander * This,
            /* [in] */ DISPID dispID,
            /* [in] */ DWORD dwCookie,
            /* [out] */ VARIANT *pVarOut);
        
        HRESULT ( STDMETHODCALLTYPE *SetElementValue )( 
            IOPMPropertyExpander * This,
            /* [in] */ DISPID dispID,
            /* [in] */ DWORD dwCookie,
            /* [in] */ VARIANT VarIn);
        
        HRESULT ( STDMETHODCALLTYPE *GetElementStrings )( 
            IOPMPropertyExpander * This,
            /* [in] */ DISPID dispID,
            /* [out] */ CALPOLESTR *pCaStringsOut,
            /* [out] */ CADWORD *pCaCookiesOut);
        
        HRESULT ( STDMETHODCALLTYPE *GetElementGrouping )( 
            IOPMPropertyExpander * This,
            /* [in] */ DISPID dispID,
            /* [out] */ short *groupingNumber);
        
        HRESULT ( STDMETHODCALLTYPE *GetGroupCount )( 
            IOPMPropertyExpander * This,
            /* [in] */ DISPID dispID,
            /* [out] */ long *nGroupCnt);
        
        END_INTERFACE
    } IOPMPropertyExpanderVtbl;

    interface IOPMPropertyExpander
    {
        CONST_VTBL struct IOPMPropertyExpanderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOPMPropertyExpander_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IOPMPropertyExpander_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IOPMPropertyExpander_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IOPMPropertyExpander_GetElementValue(This,dispID,dwCookie,pVarOut)	\
    (This)->lpVtbl -> GetElementValue(This,dispID,dwCookie,pVarOut)

#define IOPMPropertyExpander_SetElementValue(This,dispID,dwCookie,VarIn)	\
    (This)->lpVtbl -> SetElementValue(This,dispID,dwCookie,VarIn)

#define IOPMPropertyExpander_GetElementStrings(This,dispID,pCaStringsOut,pCaCookiesOut)	\
    (This)->lpVtbl -> GetElementStrings(This,dispID,pCaStringsOut,pCaCookiesOut)

#define IOPMPropertyExpander_GetElementGrouping(This,dispID,groupingNumber)	\
    (This)->lpVtbl -> GetElementGrouping(This,dispID,groupingNumber)

#define IOPMPropertyExpander_GetGroupCount(This,dispID,nGroupCnt)	\
    (This)->lpVtbl -> GetGroupCount(This,dispID,nGroupCnt)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IOPMPropertyExpander_GetElementValue_Proxy( 
    IOPMPropertyExpander * This,
    /* [in] */ DISPID dispID,
    /* [in] */ DWORD dwCookie,
    /* [out] */ VARIANT *pVarOut);


void __RPC_STUB IOPMPropertyExpander_GetElementValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IOPMPropertyExpander_SetElementValue_Proxy( 
    IOPMPropertyExpander * This,
    /* [in] */ DISPID dispID,
    /* [in] */ DWORD dwCookie,
    /* [in] */ VARIANT VarIn);


void __RPC_STUB IOPMPropertyExpander_SetElementValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IOPMPropertyExpander_GetElementStrings_Proxy( 
    IOPMPropertyExpander * This,
    /* [in] */ DISPID dispID,
    /* [out] */ CALPOLESTR *pCaStringsOut,
    /* [out] */ CADWORD *pCaCookiesOut);


void __RPC_STUB IOPMPropertyExpander_GetElementStrings_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IOPMPropertyExpander_GetElementGrouping_Proxy( 
    IOPMPropertyExpander * This,
    /* [in] */ DISPID dispID,
    /* [out] */ short *groupingNumber);


void __RPC_STUB IOPMPropertyExpander_GetElementGrouping_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IOPMPropertyExpander_GetGroupCount_Proxy( 
    IOPMPropertyExpander * This,
    /* [in] */ DISPID dispID,
    /* [out] */ long *nGroupCnt);


void __RPC_STUB IOPMPropertyExpander_GetGroupCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IOPMPropertyExpander_INTERFACE_DEFINED__ */


#ifndef __IOPMPropertyExtension_INTERFACE_DEFINED__
#define __IOPMPropertyExtension_INTERFACE_DEFINED__

/* interface IOPMPropertyExtension */
/* [object][uuid] */ 


EXTERN_C const IID IID_IOPMPropertyExtension;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1236EAA4-7715-11d1-A2DA-0060B06B2D46")
    IOPMPropertyExtension : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDisplayName( 
            /* [in] */ DISPID dispID,
            /* [out] */ BSTR *propName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Editable( 
            /* [in] */ DISPID dispID,
            /* [out] */ BOOL *bEditable) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ShowProperty( 
            /* [in] */ DISPID dispID,
            /* [out] */ BOOL *pShow) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOPMPropertyExtensionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IOPMPropertyExtension * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IOPMPropertyExtension * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IOPMPropertyExtension * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetDisplayName )( 
            IOPMPropertyExtension * This,
            /* [in] */ DISPID dispID,
            /* [out] */ BSTR *propName);
        
        HRESULT ( STDMETHODCALLTYPE *Editable )( 
            IOPMPropertyExtension * This,
            /* [in] */ DISPID dispID,
            /* [out] */ BOOL *bEditable);
        
        HRESULT ( STDMETHODCALLTYPE *ShowProperty )( 
            IOPMPropertyExtension * This,
            /* [in] */ DISPID dispID,
            /* [out] */ BOOL *pShow);
        
        END_INTERFACE
    } IOPMPropertyExtensionVtbl;

    interface IOPMPropertyExtension
    {
        CONST_VTBL struct IOPMPropertyExtensionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOPMPropertyExtension_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IOPMPropertyExtension_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IOPMPropertyExtension_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IOPMPropertyExtension_GetDisplayName(This,dispID,propName)	\
    (This)->lpVtbl -> GetDisplayName(This,dispID,propName)

#define IOPMPropertyExtension_Editable(This,dispID,bEditable)	\
    (This)->lpVtbl -> Editable(This,dispID,bEditable)

#define IOPMPropertyExtension_ShowProperty(This,dispID,pShow)	\
    (This)->lpVtbl -> ShowProperty(This,dispID,pShow)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IOPMPropertyExtension_GetDisplayName_Proxy( 
    IOPMPropertyExtension * This,
    /* [in] */ DISPID dispID,
    /* [out] */ BSTR *propName);


void __RPC_STUB IOPMPropertyExtension_GetDisplayName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IOPMPropertyExtension_Editable_Proxy( 
    IOPMPropertyExtension * This,
    /* [in] */ DISPID dispID,
    /* [out] */ BOOL *bEditable);


void __RPC_STUB IOPMPropertyExtension_Editable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IOPMPropertyExtension_ShowProperty_Proxy( 
    IOPMPropertyExtension * This,
    /* [in] */ DISPID dispID,
    /* [out] */ BOOL *pShow);


void __RPC_STUB IOPMPropertyExtension_ShowProperty_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IOPMPropertyExtension_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_OdaX_0258 */
/* [local] */ 

typedef /* [public][uuid] */  DECLSPEC_UUID("78A5398B-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0001
    {	acFalse	= 0,
	acTrue	= 1
    } 	AcBoolean;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A5398C-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0002
    {	acOff	= 0,
	acOn	= 1
    } 	AcOnOff;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A5398D-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0003
    {	ac3dFace	= 1,
	ac3dPolyline	= 2,
	ac3dSolid	= 3,
	acArc	= 4,
	acAttribute	= 5,
	acAttributeReference	= 6,
	acBlockReference	= 7,
	acCircle	= 8,
	acDimAligned	= 9,
	acDimAngular	= 10,
	acDimDiametric	= 12,
	acDimOrdinate	= 13,
	acDimRadial	= 14,
	acDimRotated	= 15,
	acEllipse	= 16,
	acHatch	= 17,
	acLeader	= 18,
	acLine	= 19,
	acMtext	= 21,
	acPoint	= 22,
	acPolyline	= 23,
	acPolylineLight	= 24,
	acPolymesh	= 25,
	acRaster	= 26,
	acRay	= 27,
	acRegion	= 28,
	acShape	= 29,
	acSolid	= 30,
	acSpline	= 31,
	acText	= 32,
	acTolerance	= 33,
	acTrace	= 34,
	acPViewport	= 35,
	acXline	= 36,
	acGroup	= 37,
	acMInsertBlock	= 38,
	acPolyfaceMesh	= 39,
	acMLine	= 40,
	acDim3PointAngular	= 41,
	acExternalReference	= 42,
	acTable	= 43
    } 	AcEntityName;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A5398E-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0004
    {	acPaperSpace	= 0,
	acModelSpace	= 1
    } 	AcActiveSpace;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A5398F-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0005
    {	acPreferenceClassic	= 0,
	acPreferenceCustom	= 1
    } 	AcKeyboardAccelerator;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A53990-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0006
    {	acPlotOrientationPortrait	= 0,
	acPlotOrientationLandscape	= 1
    } 	AcPlotOrientation;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][uuid] */  DECLSPEC_UUID("78A53991-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0007
    {	acByBlock	= 0,
	acRed	= 1,
	acYellow	= 2,
	acGreen	= 3,
	acCyan	= 4,
	acBlue	= 5,
	acMagenta	= 6,
	acWhite	= 7,
	acByLayer	= 256
    } 	AcColor;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("78A53992-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0008
    {	acAttachmentPointTopLeft	= 1,
	acAttachmentPointTopCenter	= 2,
	acAttachmentPointTopRight	= 3,
	acAttachmentPointMiddleLeft	= 4,
	acAttachmentPointMiddleCenter	= 5,
	acAttachmentPointMiddleRight	= 6,
	acAttachmentPointBottomLeft	= 7,
	acAttachmentPointBottomCenter	= 8,
	acAttachmentPointBottomRight	= 9
    } 	AcAttachmentPoint;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("78A53993-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0009
    {	acLeftToRight	= 1,
	acRightToLeft	= 2,
	acTopToBottom	= 3,
	acBottomToTop	= 4,
	acByStyle	= 5
    } 	AcDrawingDirection;

typedef /* [public][public][public][public][uuid] */  DECLSPEC_UUID("78A53994-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0010
    {	acLineNoArrow	= 0,
	acSplineNoArrow	= 1,
	acLineWithArrow	= 2,
	acSplineWithArrow	= 3
    } 	AcLeaderType;

typedef /* [public][public][uuid] */  DECLSPEC_UUID("78A53995-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0011
    {	acAttributeModeNormal	= 0,
	acAttributeModeInvisible	= 1,
	acAttributeModeConstant	= 2,
	acAttributeModeVerify	= 4,
	acAttributeModePreset	= 8
    } 	AcAttributeMode;

typedef /* [public][public][public][public][public][public][public][uuid] */  DECLSPEC_UUID("78A53996-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0012
    {	acHorizontalAlignmentLeft	= 0,
	acHorizontalAlignmentCenter	= 1,
	acHorizontalAlignmentRight	= 2,
	acHorizontalAlignmentAligned	= 3,
	acHorizontalAlignmentMiddle	= 4,
	acHorizontalAlignmentFit	= 5
    } 	AcHorizontalAlignment;

typedef /* [public][public][public][public][public][public][public][uuid] */  DECLSPEC_UUID("78A53997-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0013
    {	acVerticalAlignmentBaseline	= 0,
	acVerticalAlignmentBottom	= 1,
	acVerticalAlignmentMiddle	= 2,
	acVerticalAlignmentTop	= 3
    } 	AcVerticalAlignment;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A53998-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0014
    {	acTextFlagBackward	= 2,
	acTextFlagUpsideDown	= 4
    } 	AcTextGenerationFlag;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A53999-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0015
    {	acSelectionSetWindow	= 0,
	acSelectionSetCrossing	= 1,
	acSelectionSetFence	= 2,
	acSelectionSetPrevious	= 3,
	acSelectionSetLast	= 4,
	acSelectionSetAll	= 5,
	acSelectionSetWindowPolygon	= 6,
	acSelectionSetCrossingPolygon	= 7
    } 	AcSelect;

typedef /* [public][public][uuid] */  DECLSPEC_UUID("78A5399A-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0016
    {	acHatchPatternTypeUserDefined	= 0,
	acHatchPatternTypePreDefined	= 1,
	acHatchPatternTypeCustomDefined	= 2
    } 	AcPatternType;

typedef /* [public][public][uuid] */  DECLSPEC_UUID("78A5399B-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0017
    {	acHatchLoopTypeDefault	= 0,
	acHatchLoopTypeExternal	= 1,
	acHatchLoopTypePolyline	= 2,
	acHatchLoopTypeDerived	= 4,
	acHatchLoopTypeTextbox	= 8
    } 	AcLoopType;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("78A5399C-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0018
    {	acHatchStyleNormal	= 0,
	acHatchStyleOuter	= 1,
	acHatchStyleIgnore	= 2
    } 	AcHatchStyle;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("78A5399D-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0019
    {	acSimplePoly	= 0,
	acFitCurvePoly	= 1,
	acQuadSplinePoly	= 2,
	acCubicSplinePoly	= 3
    } 	AcPolylineType;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("78A54EFD-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0020
    {	acSimple3DPoly	= 0,
	acQuadSpline3DPoly	= 1,
	acCubicSpline3DPoly	= 2
    } 	Ac3DPolylineType;

typedef /* [public][public][uuid] */  DECLSPEC_UUID("78A5399E-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0021
    {	acViewport2Horizontal	= 0,
	acViewport2Vertical	= 1,
	acViewport3Left	= 2,
	acViewport3Right	= 3,
	acViewport3Horizontal	= 4,
	acViewport3Vertical	= 5,
	acViewport3Above	= 6,
	acViewport3Below	= 7,
	acViewport4	= 8
    } 	AcViewportSplitType;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A5399F-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0022
    {	acActiveViewport	= 0,
	acAllViewports	= 1
    } 	AcRegenType;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("78A539A0-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0023
    {	acUnion	= 0,
	acIntersection	= 1,
	acSubtraction	= 2
    } 	AcBooleanType;

typedef /* [public][public][uuid] */  DECLSPEC_UUID("78A539A1-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0024
    {	acExtendNone	= 0,
	acExtendThisEntity	= 1,
	acExtendOtherEntity	= 2,
	acExtendBoth	= 3
    } 	AcExtendOption;

typedef /* [public][public][public][public][public][uuid] */  DECLSPEC_UUID("78A539A2-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0025
    {	acDegrees	= 0,
	acDegreeMinuteSeconds	= 1,
	acGrads	= 2,
	acRadians	= 3
    } 	AcAngleUnits;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A539A3-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0026
    {	acDefaultUnits	= -1,
	acScientific	= 1,
	acDecimal	= 2,
	acEngineering	= 3,
	acArchitectural	= 4,
	acFractional	= 5
    } 	AcUnits;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A539A4-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0027
    {	acWorld	= 0,
	acUCS	= 1,
	acDisplayDCS	= 2,
	acPaperSpaceDCS	= 3,
	acOCS	= 4
    } 	AcCoordinateSystem;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A539A5-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0028
    {	acEnglish	= 0,
	acMetric	= 1
    } 	AcMeasurementUnits;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A539A6-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0029
    {	acDemandLoadDisabled	= 0,
	acDemandLoadEnabled	= 1,
	acDemandLoadEnabledWithCopy	= 2
    } 	AcXRefDemandLoad;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A539A7-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0030
    {	acPartialPreview	= 0,
	acFullPreview	= 1
    } 	AcPreviewMode;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("78A539A8-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0031
    {	acSimpleMesh	= 0,
	acQuadSurfaceMesh	= 5,
	acCubicSurfaceMesh	= 6,
	acBezierSurfaceMesh	= 8
    } 	AcPolymeshType;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A539A9-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0032
    {	acZoomScaledAbsolute	= 0,
	acZoomScaledRelative	= 1,
	acZoomScaledRelativePSpace	= 2
    } 	AcZoomScaleType;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A539AA-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0033
    {	acDragDoNotDisplay	= 0,
	acDragDisplayOnRequest	= 1,
	acDragDisplayAutomatically	= 2
    } 	AcDragDisplayMode;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A539AB-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0034
    {	acDemanLoadDisable	= 0,
	acDemandLoadOnObjectDetect	= 1,
	acDemandLoadCmdInvoke	= 2
    } 	AcARXDemandLoad;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A539AC-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0035
    {	acFontRegular	= 0,
	acFontItalic	= 1,
	acFontBold	= 2,
	acFontBoldItalic	= 3
    } 	AcTextFontStyle;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A539AD-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0036
    {	acProxyNotShow	= 0,
	acProxyShow	= 1,
	acProxyBoundingBox	= 2
    } 	AcProxyImage;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A539AE-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0037
    {	acKeyboardRunningObjSnap	= 0,
	acKeyboardEntry	= 1,
	acKeyboardEntryExceptScripts	= 2
    } 	AcKeyboardPriority;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A539AF-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0038
    {	acBaseMenuGroup	= 0,
	acPartialMenuGroup	= 1
    } 	AcMenuGroupType;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A539B0-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0039
    {	acMenuFileCompiled	= 0,
	acMenuFileSource	= 1
    } 	AcMenuFileType;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A539B1-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0040
    {	acMenuItem	= 0,
	acMenuSeparator	= 1,
	acMenuSubMenu	= 2
    } 	AcMenuItemType;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A539B2-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0041
    {	acToolbarButton	= 0,
	acToolbarSeparator	= 1,
	acToolbarControl	= 2,
	acToolbarFlyout	= 3
    } 	AcToolbarItemType;

typedef /* [public][uuid] */  DECLSPEC_UUID("78A539B3-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0042
    {	acToolbarDockTop	= 0,
	acToolbarDockBottom	= 1,
	acToolbarDockLeft	= 2,
	acToolbarDockRight	= 3,
	acToolbarFloating	= 4
    } 	AcToolbarDockStatus;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][uuid] */  DECLSPEC_UUID("F6710FBE-9732-11D1-A2AB-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0043
    {	acLnWt000	= 0,
	acLnWt005	= 5,
	acLnWt009	= 9,
	acLnWt013	= 13,
	acLnWt015	= 15,
	acLnWt018	= 18,
	acLnWt020	= 20,
	acLnWt025	= 25,
	acLnWt030	= 30,
	acLnWt035	= 35,
	acLnWt040	= 40,
	acLnWt050	= 50,
	acLnWt053	= 53,
	acLnWt060	= 60,
	acLnWt070	= 70,
	acLnWt080	= 80,
	acLnWt090	= 90,
	acLnWt100	= 100,
	acLnWt106	= 106,
	acLnWt120	= 120,
	acLnWt140	= 140,
	acLnWt158	= 158,
	acLnWt200	= 200,
	acLnWt211	= 211,
	acLnWtByLayer	= -1,
	acLnWtByBlock	= -2,
	acLnWtByLwDefault	= -3
    } 	AcLineWeight;

typedef /* [public][uuid] */  DECLSPEC_UUID("85EFA4E4-AE34-11D1-A2E5-0060B06B2D46") 
enum __MIDL___MIDL_itf_OdaX_0258_0044
    {	acNorm	= 1,
	acMin	= 2,
	acMax	= 3
    } 	AcWindowState;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("E6BE7D6A-06CF-11D2-B653-0060B087E235") 
enum __MIDL___MIDL_itf_OdaX_0258_0045
    {	acInches	= 0,
	acMillimeters	= 1,
	acPixels	= 2
    } 	AcPlotPaperUnits;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("20528646-06D2-11D2-B653-0060B087E235") 
enum __MIDL___MIDL_itf_OdaX_0258_0046
    {	ac0degrees	= 0,
	ac90degrees	= 1,
	ac180degrees	= 2,
	ac270degrees	= 3
    } 	AcPlotRotation;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("20528647-06D2-11D2-B653-0060B087E235") 
enum __MIDL___MIDL_itf_OdaX_0258_0047
    {	acDisplay	= 0,
	acExtents	= 1,
	acLimits	= 2,
	acView	= 3,
	acWindow	= 4,
	acLayout	= 5
    } 	AcPlotType;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("20528648-06D2-11D2-B653-0060B087E235") 
enum __MIDL___MIDL_itf_OdaX_0258_0048
    {	acScaleToFit	= 0,
	ac1_128in_1ft	= 1,
	ac1_64in_1ft	= 2,
	ac1_32in_1ft	= 3,
	ac1_16in_1ft	= 4,
	ac3_32in_1ft	= 5,
	ac1_8in_1ft	= 6,
	ac3_16in_1ft	= 7,
	ac1_4in_1ft	= 8,
	ac3_8in_1ft	= 9,
	ac1_2in_1ft	= 10,
	ac3_4in_1ft	= 11,
	ac1in_1ft	= 12,
	ac3in_1ft	= 13,
	ac6in_1ft	= 14,
	ac1ft_1ft	= 15,
	ac1_1	= 16,
	ac1_2	= 17,
	ac1_4	= 18,
	ac1_8	= 19,
	ac1_10	= 20,
	ac1_16	= 21,
	ac1_20	= 22,
	ac1_30	= 23,
	ac1_40	= 24,
	ac1_50	= 25,
	ac1_100	= 26,
	ac2_1	= 27,
	ac4_1	= 28,
	ac8_1	= 29,
	ac10_1	= 30,
	ac100_1	= 31
    } 	AcPlotScale;

typedef /* [public][public][public][public][public][public][public][uuid] */  DECLSPEC_UUID("78A539B4-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0049
    {	acAlignmentLeft	= 0,
	acAlignmentCenter	= 1,
	acAlignmentRight	= 2,
	acAlignmentAligned	= 3,
	acAlignmentMiddle	= 4,
	acAlignmentFit	= 5,
	acAlignmentTopLeft	= 6,
	acAlignmentTopCenter	= 7,
	acAlignmentTopRight	= 8,
	acAlignmentMiddleLeft	= 9,
	acAlignmentMiddleCenter	= 10,
	acAlignmentMiddleRight	= 11,
	acAlignmentBottomLeft	= 12,
	acAlignmentBottomCenter	= 13,
	acAlignmentBottomRight	= 14
    } 	AcAlignment;

typedef /* [public][uuid] */  DECLSPEC_UUID("7A0A7E6C-9730-11D1-A2AB-080009DC639A") AcColor ACAD_COLOR;

typedef /* [public][uuid] */  DECLSPEC_UUID("7A0A7E6D-9730-11D1-A2AB-080009DC639A") BSTR ACAD_LAYER;

typedef /* [public][uuid] */  DECLSPEC_UUID("7A0A7E6E-9730-11D1-A2AB-080009DC639A") BSTR ACAD_LTYPE;

typedef /* [public][uuid] */  DECLSPEC_UUID("7A0A7E6F-9730-11D1-A2AB-080009DC639A") long ACAD_NULL;

typedef /* [public][uuid] */  DECLSPEC_UUID("7A0A7E70-9730-11D1-A2AB-080009DC639A") double ACAD_DISTANCE;

typedef /* [public][uuid] */  DECLSPEC_UUID("7A0A7E71-9730-11D1-A2AB-080009DC639A") double ACAD_ANGLE;

typedef /* [public][uuid] */  DECLSPEC_UUID("7A0A7E72-9730-11D1-A2AB-080009DC639A") AcLineWeight ACAD_LWEIGHT;

typedef /* [public][uuid] */  DECLSPEC_UUID("7A0A7E73-9730-11D1-A2AB-080009DC639A") double ACAD_NOUNITS;

typedef /* [public][uuid] */  DECLSPEC_UUID("7A0A7E74-9730-11D1-A2AB-080009DC639A") VARIANT ACAD_POINT;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("7A0A7E75-9730-11D1-A2AB-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0050
    {	acLineSpacingStyleAtLeast	= 1,
	acLineSpacingStyleExactly	= 2
    } 	AcLineSpacingStyle;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][uuid] */  DECLSPEC_UUID("7A0A7E76-9730-11D1-A2AB-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0051
    {	acDimPrecisionZero	= 0,
	acDimPrecisionOne	= 1,
	acDimPrecisionTwo	= 2,
	acDimPrecisionThree	= 3,
	acDimPrecisionFour	= 4,
	acDimPrecisionFive	= 5,
	acDimPrecisionSix	= 6,
	acDimPrecisionSeven	= 7,
	acDimPrecisionEight	= 8
    } 	AcDimPrecision;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][uuid] */  DECLSPEC_UUID("78A539B5-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0052
    {	acDimScientific	= 1,
	acDimDecimal	= 2,
	acDimEngineering	= 3,
	acDimArchitecturalStacked	= 4,
	acDimFractionalStacked	= 5,
	acDimArchitectural	= 6,
	acDimFractional	= 7,
	acDimWindowsDesktop	= 8
    } 	AcDimUnits;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][uuid] */  DECLSPEC_UUID("78A539B7-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0053
    {	acDimLScientific	= 1,
	acDimLDecimal	= 2,
	acDimLEngineering	= 3,
	acDimLArchitectural	= 4,
	acDimLFractional	= 5,
	acDimLWindowsDesktop	= 6
    } 	AcDimLUnits;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][uuid] */  DECLSPEC_UUID("7A0A7E77-9730-11D1-A2AB-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0054
    {	acArrowDefault	= 0,
	acArrowClosedBlank	= 1,
	acArrowClosed	= 2,
	acArrowDot	= 3,
	acArrowArchTick	= 4,
	acArrowOblique	= 5,
	acArrowOpen	= 6,
	acArrowOrigin	= 7,
	acArrowOrigin2	= 8,
	acArrowOpen90	= 9,
	acArrowOpen30	= 10,
	acArrowDotSmall	= 11,
	acArrowDotBlank	= 12,
	acArrowSmall	= 13,
	acArrowBoxBlank	= 14,
	acArrowBoxFilled	= 15,
	acArrowDatumBlank	= 16,
	acArrowDatumFilled	= 17,
	acArrowIntegral	= 18,
	acArrowNone	= 19,
	acArrowUserDefined	= 20
    } 	AcDimArrowheadType;

typedef /* [public][public][public][public][public][uuid] */  DECLSPEC_UUID("7A0A7E78-9730-11D1-A2AB-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0055
    {	acCenterMark	= 0,
	acCenterLine	= 1,
	acCenterNone	= 2
    } 	AcDimCenterType;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][uuid] */  DECLSPEC_UUID("7A0A7E79-9730-11D1-A2AB-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0056
    {	acTextAndArrows	= 0,
	acArrowsOnly	= 1,
	acTextOnly	= 2,
	acBestFit	= 3
    } 	AcDimFit;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][uuid] */  DECLSPEC_UUID("7A0A7E7A-9730-11D1-A2AB-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0057
    {	acHorizontal	= 0,
	acDiagonal	= 1,
	acNotStacked	= 2
    } 	AcDimFractionType;

typedef /* [public][public][public][public][public][public][public][public][public][uuid] */  DECLSPEC_UUID("7A0A7E7B-9730-11D1-A2AB-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0058
    {	acHorzCentered	= 0,
	acFirstExtensionLine	= 1,
	acSecondExtensionLine	= 2,
	acOverFirstExtension	= 3,
	acOverSecondExtension	= 4
    } 	AcDimHorizontalJustification;

typedef /* [public][public][public][public][public][uuid] */  DECLSPEC_UUID("7A0A7E7C-9730-11D1-A2AB-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0059
    {	acVertCentered	= 0,
	acAbove	= 1,
	acOutside	= 2,
	acJIS	= 3
    } 	AcDimVerticalJustification;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("7A0A7E7D-9730-11D1-A2AB-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0060
    {	acDimLineWithText	= 0,
	acMoveTextAddLeader	= 1,
	acMoveTextNoLeader	= 2
    } 	AcDimTextMovement;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("7A0A7E7E-9730-11D1-A2AB-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0061
    {	acTolNone	= 0,
	acTolSymmetrical	= 1,
	acTolDeviation	= 2,
	acTolLimits	= 3,
	acTolBasic	= 4
    } 	AcDimToleranceMethod;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("7A0A7E7F-9730-11D1-A2AB-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0062
    {	acTolBottom	= 0,
	acTolMiddle	= 1,
	acTolTop	= 2
    } 	AcDimToleranceJustify;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("78A539B6-6CC5-11D1-A2A7-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0063
    {	acVpScaleToFit	= 0,
	acVpCustomScale	= 1,
	acVp1_1	= 2,
	acVp1_2	= 3,
	acVp1_4	= 4,
	acVp1_8	= 5,
	acVp1_10	= 6,
	acVp1_16	= 7,
	acVp1_20	= 8,
	acVp1_30	= 9,
	acVp1_40	= 10,
	acVp1_50	= 11,
	acVp1_100	= 12,
	acVp2_1	= 13,
	acVp4_1	= 14,
	acVp8_1	= 15,
	acVp10_1	= 16,
	acVp100_1	= 17,
	acVp1_128in_1ft	= 18,
	acVp1_64in_1ft	= 19,
	acVp1_32in_1ft	= 20,
	acVp1_16in_1ft	= 21,
	acVp3_32in_1ft	= 22,
	acVp1_8in_1ft	= 23,
	acVp3_16in_1ft	= 24,
	acVp1_4in_1ft	= 25,
	acVp3_8in_1ft	= 26,
	acVp1_2in_1ft	= 27,
	acVp3_4in_1ft	= 28,
	acVp1in_1ft	= 29,
	acVp1and1_2in_1ft	= 30,
	acVp3in_1ft	= 31,
	acVp6in_1ft	= 32,
	acVp1ft_1ft	= 33
    } 	AcViewportScale;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("7A0A7E80-9730-11D1-A2AB-080009DC639A") 
enum __MIDL___MIDL_itf_OdaX_0258_0064
    {	acPenWidth013	= 13,
	acPenWidth018	= 18,
	acPenWidth025	= 25,
	acPenWidth035	= 35,
	acPenWidth050	= 50,
	acPenWidth070	= 70,
	acPenWidth100	= 100,
	acPenWidth140	= 140,
	acPenWidth200	= 200,
	acPenWidthUnk	= -1
    } 	AcISOPenWidth;

typedef /* [public][uuid] */  DECLSPEC_UUID("6C0BAF10-4352-11D2-B695-0060B087E235") 
enum __MIDL___MIDL_itf_OdaX_0258_0065
    {	acR09_dxf	= -5,
	acR10_dxf	= -4,
	acR12_dwg	= -3,
	acUnknown	= -1,
	acR12_dxf	= 1,
	acR13_dwg	= 4,
	acR13_dxf	= 5,
	acR14_dwg	= 8,
	acR14_dxf	= 9,
	ac2000_dwg	= 12,
	ac2000_dxf	= 13,
	ac2000_Template	= 14,
	ac2004_dwg	= 24,
	ac2004_dxf	= 25,
	ac2004_Template	= 26,
	acNative	= 24,
	acR15_dwg	= 12,
	acR15_dxf	= 13,
	acR15_Template	= 14,
	acR18_dwg	= 24,
	acR18_dxf	= 25,
	acR18_Template	= 26
    } 	AcSaveAsType;

typedef /* [public][uuid] */  DECLSPEC_UUID("6C0BAF11-4352-11D2-B695-0060B087E235") 
enum __MIDL___MIDL_itf_OdaX_0258_0066
    {	acPrinterAlwaysAlert	= 0,
	acPrinterAlertOnce	= 1,
	acPrinterNeverAlertLogOnce	= 2,
	acPrinterNeverAlert	= 3
    } 	AcPrinterSpoolAlert;

typedef /* [public][uuid] */  DECLSPEC_UUID("6C0BAF12-4352-11D2-B695-0060B087E235") 
enum __MIDL___MIDL_itf_OdaX_0258_0067
    {	acPolicyNewDefault	= 0,
	acPolicyNewLegacy	= 1
    } 	AcPlotPolicyForNewDwgs;

typedef /* [public][uuid] */  DECLSPEC_UUID("6C0BAF13-4352-11D2-B695-0060B087E235") 
enum __MIDL___MIDL_itf_OdaX_0258_0068
    {	acPolicyLegacyDefault	= 0,
	acPolicyLegacyQuery	= 1,
	acPolicyLegacyLegacy	= 2
    } 	AcPlotPolicyForLegacyDwgs;

typedef /* [public][uuid] */  DECLSPEC_UUID("6C0BAF14-4352-11D2-B695-0060B087E235") 
enum __MIDL___MIDL_itf_OdaX_0258_0069
    {	acOQLineArt	= 0,
	acOQText	= 1,
	acOQGraphics	= 2,
	acOQPhoto	= 3,
	acOQHighPhoto	= 4
    } 	AcOleQuality;

typedef /* [public][uuid] */  DECLSPEC_UUID("6C0BAF15-4352-11D2-B695-0060B087E235") 
enum __MIDL___MIDL_itf_OdaX_0258_0070
    {	acPaletteByDrawing	= 0,
	acPaletteBySession	= 1
    } 	AcLoadPalette;

typedef /* [public][uuid] */  DECLSPEC_UUID("6C0BAF16-4352-11D2-B695-0060B087E235") 
enum __MIDL___MIDL_itf_OdaX_0258_0071
    {	acInsertUnitsUnitless	= 0,
	acInsertUnitsInches	= 1,
	acInsertUnitsFeet	= 2,
	acInsertUnitsMiles	= 3,
	acInsertUnitsMillimeters	= 4,
	acInsertUnitsCentimeters	= 5,
	acInsertUnitsMeters	= 6,
	acInsertUnitsKilometers	= 7,
	acInsertUnitsMicroinches	= 8,
	acInsertUnitsMils	= 9,
	acInsertUnitsYards	= 10,
	acInsertUnitsAngstroms	= 11,
	acInsertUnitsNanometers	= 12,
	acInsertUnitsMicrons	= 13,
	acInsertUnitsDecimeters	= 14,
	acInsertUnitsDecameters	= 15,
	acInsertUnitsHectometers	= 16,
	acInsertUnitsGigameters	= 17,
	acInsertUnitsAstronomicalUnits	= 18,
	acInsertUnitsLightYears	= 19,
	acInsertUnitsParsecs	= 20
    } 	AcInsertUnits;

typedef /* [public][uuid] */  DECLSPEC_UUID("6C0BAF17-4352-11D2-B695-0060B087E235") 
enum __MIDL___MIDL_itf_OdaX_0258_0072
    {	acAlignPntAcquisitionAutomatic	= 0,
	acAlignPntAcquisitionShiftToAcquire	= 1
    } 	AcAlignmentPointAcquisition;

typedef /* [public][uuid] */  DECLSPEC_UUID("6C0BAF18-4352-11D2-B695-0060B087E235") 
enum __MIDL___MIDL_itf_OdaX_0258_0073
    {	acInsertUnitsPrompt	= 0,
	acInsertUnitsAutoAssign	= 1
    } 	AcInsertUnitsAction;

typedef /* [public][uuid] */  DECLSPEC_UUID("6C0BAF19-4352-11D2-B695-0060B087E235") 
enum __MIDL___MIDL_itf_OdaX_0258_0074
    {	acPolicyNamed	= 0,
	acPolicyLegacy	= 1
    } 	AcPlotPolicy;

typedef /* [public][uuid] */  DECLSPEC_UUID("6C0BAF1A-4352-11D2-B695-0060B087E235") 
enum __MIDL___MIDL_itf_OdaX_0258_0075
    {	acNoDrawingAreaShortCutMenu	= 0,
	acUseDefaultDrawingAreaShortCutMenu	= 1
    } 	AcDrawingAreaShortCutMenu;

typedef /* [public][uuid] */  DECLSPEC_UUID("6C0BAF1B-4352-11D2-B695-0060B087E235") 
enum __MIDL___MIDL_itf_OdaX_0258_0076
    {	acRepeatLastCommand	= 0,
	acSCM	= 1
    } 	AcDrawingAreaSCMDefault;

typedef /* [public][uuid] */  DECLSPEC_UUID("6C0BAF1C-4352-11D2-B695-0060B087E235") 
enum __MIDL___MIDL_itf_OdaX_0258_0077
    {	acEdRepeatLastCommand	= 0,
	acEdSCM	= 1
    } 	AcDrawingAreaSCMEdit;

typedef /* [public][uuid] */  DECLSPEC_UUID("6C0BAF1D-4352-11D2-B695-0060B087E235") 
enum __MIDL___MIDL_itf_OdaX_0258_0078
    {	acEnter	= 0,
	acEnableSCMOptions	= 1,
	acEnableSCM	= 2
    } 	AcDrawingAreaSCMCommand;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("A49AF783-E8C7-4440-A3C0-CD6A1B7BD258") 
enum __MIDL___MIDL_itf_OdaX_0258_0079
    {	acShadePlotAsDisplayed	= 0,
	acShadePlotWireframe	= 1,
	acShadePlotHidden	= 2,
	acShadePlotRendered	= 3
    } 	AcShadePlot;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("C22C4BE2-9CF9-4661-991B-9711A7A6B74B") 
enum __MIDL___MIDL_itf_OdaX_0258_0080
    {	acHatchObject	= 0,
	acGradientObject	= 1
    } 	AcHatchObjectType;

typedef /* [public][uuid] */  DECLSPEC_UUID("20490FFF-3C8A-4085-ABC4-612DFB8DE3D8") 
enum __MIDL___MIDL_itf_OdaX_0258_0081
    {	acPreDefinedGradient	= 0,
	acUserDefinedGradient	= 1
    } 	AcGradientPatternType;

typedef /* [public][public][public][public][public][uuid] */  DECLSPEC_UUID("12271E96-7D84-4368-B329-864FD47A3580") 
enum __MIDL___MIDL_itf_OdaX_0258_0082
    {	acTableTopToBottom	= 0,
	acTableBottomToTop	= 1
    } 	AcTableDirection;

typedef /* [public][public][public][public][public][public][public][uuid] */  DECLSPEC_UUID("6E5A50C8-577A-446F-B0D6-CF6309D148A6") 
enum __MIDL___MIDL_itf_OdaX_0258_0083
    {	acTopLeft	= 1,
	acTopCenter	= 2,
	acTopRight	= 3,
	acMiddleLeft	= 4,
	acMiddleCenter	= 5,
	acMiddleRight	= 6,
	acBottomLeft	= 7,
	acBottomCenter	= 8,
	acBottomRight	= 9
    } 	AcCellAlignment;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][uuid] */  DECLSPEC_UUID("178A96F7-614E-46CE-89BA-B937A13028DE") 
enum __MIDL___MIDL_itf_OdaX_0258_0084
    {	acUnknownRow	= 0,
	acDataRow	= 1,
	acTitleRow	= 2,
	acHeaderRow	= 4
    } 	AcRowType;

typedef /* [public][public][public][public][public][public][public][uuid] */  DECLSPEC_UUID("ED9F01AE-5186-486E-9370-2AD14BC0DE2A") 
enum __MIDL___MIDL_itf_OdaX_0258_0085
    {	acInvalidGridLine	= 0,
	acHorzTop	= 1,
	acHorzInside	= 2,
	acHorzBottom	= 4,
	acVertLeft	= 8,
	acVertInside	= 16,
	acVertRight	= 32
    } 	AcGridLineType;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("F9AFC6B5-BB9F-44F2-A66D-283B9F1ACC15") 
enum __MIDL___MIDL_itf_OdaX_0258_0086
    {	acUnknownCell	= 0,
	acTextCell	= 1,
	acBlockCell	= 2
    } 	AcCellType;

typedef /* [public][public][public][public][uuid] */  DECLSPEC_UUID("5E79A399-5B6D-42AA-96FD-B639FAC0E364") 
enum __MIDL___MIDL_itf_OdaX_0258_0087
    {	acTopMask	= 1,
	acRightMask	= 2,
	acBottomMask	= 4,
	acLeftMask	= 8
    } 	AcCellEdgeMask;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("65703BB6-1E34-4D6B-AA48-39FEDF2CB6AB") 
enum __MIDL___MIDL_itf_OdaX_0258_0088
    {	acDegreesUnknown	= -1,
	acDegrees000	= 0,
	acDegrees090	= 1,
	acDegrees180	= 2,
	acDegrees270	= 3
    } 	AcRotationAngle;

typedef /* [public][public][uuid] */  DECLSPEC_UUID("B2BAB60A-6A67-48D1-BE5B-1F65DBBE631F") 
enum __MIDL___MIDL_itf_OdaX_0258_0089
    {	acTableSelectWindow	= 1,
	acTableSelectCrossing	= 2
    } 	AcSelectType;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("3A78055D-DF06-4868-9CF9-5A7E90FD9F5A") 
enum __MIDL___MIDL_itf_OdaX_0258_0090
    {	acOTLink	= 1,
	acOTEmbedded	= 2,
	acOTStatic	= 3
    } 	AcOleType;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("3530D9B4-BD76-43A2-A2B5-66094339632B") 
enum __MIDL___MIDL_itf_OdaX_0258_0091
    {	acOPQMonochrome	= 0,
	acOPQLowGraphics	= 1,
	acOPQHighGraphics	= 2
    } 	AcOlePlotQuality;

typedef /* [public][uuid] */  DECLSPEC_UUID("A7B51B00-BB2E-4EB4-B6D8-4475F9D8A53A") 
enum __MIDL___MIDL_itf_OdaX_0258_0092
    {	acTitleSuppressed	= 1,
	acHeaderSuppressed	= 2,
	acFlowDirection	= 3,
	acHorzCellMargin	= 4,
	acVertCellMargin	= 5,
	acTitleRowColor	= 6,
	acHeaderRowColor	= 7,
	acDataRowColor	= 8,
	acTitleRowFillNone	= 9,
	acHeaderRowFillNone	= 10,
	acDataRowFillNone	= 11,
	acTitleRowFillColor	= 12,
	acHeaderRowFillColor	= 13,
	acDataRowFillColor	= 14,
	acTitleRowAlignment	= 15,
	acHeaderRowAlignment	= 16,
	acDataRowAlignment	= 17,
	acTitleRowTextStyle	= 18,
	acHeaderRowTextStyle	= 19,
	acDataRowTextStyle	= 20,
	acTitleRowTextHeight	= 21,
	acHeaderRowTextHeight	= 22,
	acDataRowTextHeight	= 23,
	acTitleHorzTopColor	= 40,
	acTitleHorzInsideColor	= 41,
	acTitleHorzBottomColor	= 42,
	acTitleVertLeftColor	= 43,
	acTitleVertInsideColor	= 44,
	acTitleVertRightColor	= 45,
	acHeaderHorzTopColor	= 46,
	acHeaderHorzInsideColor	= 47,
	acHeaderHorzBottomColor	= 48,
	acHeaderVertLeftColor	= 49,
	acHeaderVertInsideColor	= 50,
	acHeaderVertRightColor	= 51,
	acDataHorzTopColor	= 52,
	acDataHorzInsideColor	= 53,
	acDataHorzBottomColor	= 54,
	acDataVertLeftColor	= 55,
	acDataVertInsideColor	= 56,
	acDataVertRightColor	= 57,
	acTitleHorzTopLineWeight	= 70,
	acTitleHorzInsideLineWeight	= 71,
	acTitleHorzBottomLineWeight	= 72,
	acTitleVertLeftLineWeight	= 73,
	acTitleVertInsideLineWeight	= 74,
	acTitleVertRightLineWeight	= 75,
	acHeaderHorzTopLineWeight	= 76,
	acHeaderHorzInsideLineWeight	= 77,
	acHeaderHorzBottomLineWeight	= 78,
	acHeaderVertLeftLineWeight	= 79,
	acHeaderVertInsideLineWeight	= 80,
	acHeaderVertRightLineWeight	= 81,
	acDataHorzTopLineWeight	= 82,
	acDataHorzInsideLineWeight	= 83,
	acDataHorzBottomLineWeight	= 84,
	acDataVertLeftLineWeight	= 85,
	acDataVertInsideLineWeight	= 86,
	acDataVertRightLineWeight	= 87,
	acTitleHorzTopVisibility	= 100,
	acTitleHorzInsideVisibility	= 101,
	acTitleHorzBottomVisibility	= 102,
	acTitleVertLeftVisibility	= 103,
	acTitleVertInsideVisibility	= 104,
	acTitleVertRightVisibility	= 105,
	acHeaderHorzTopVisibility	= 106,
	acHeaderHorzInsideVisibility	= 107,
	acHeaderHorzBottomVisibility	= 108,
	acHeaderVertLeftVisibility	= 109,
	acHeaderVertInsideVisibility	= 110,
	acHeaderVertRightVisibility	= 111,
	acDataHorzTopVisibility	= 112,
	acDataHorzInsideVisibility	= 113,
	acDataHorzBottomVisibility	= 114,
	acDataVertLeftVisibility	= 115,
	acDataVertInsideVisibility	= 116,
	acDataVertRightVisibility	= 117,
	acCellAlign	= 130,
	acCellBackgroundFillNone	= 131,
	acCellBackgroundColor	= 132,
	acCellContentColor	= 133,
	acCellTextStyle	= 134,
	acCellTextHeight	= 135,
	acCellTopGridColor	= 136,
	acCellRightGridColor	= 137,
	acCellBottomGridColor	= 138,
	acCellLeftGridColor	= 139,
	acCellTopGridLineWeight	= 140,
	acCellRightGridLineWeight	= 141,
	acCellBottomGridLineWeight	= 142,
	acCellLeftGridLineWeight	= 143,
	acCellTopVisibility	= 144,
	acCellRightVisibility	= 145,
	acCellBottomVisibility	= 146,
	acCellLeftVisibility	= 147
    } 	AcTableStyleOverrides;



extern RPC_IF_HANDLE __MIDL_itf_OdaX_0258_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_OdaX_0258_v0_0_s_ifspec;

#ifndef __IAcadObject_INTERFACE_DEFINED__
#define __IAcadObject_INTERFACE_DEFINED__

/* interface IAcadObject */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B205D354-37A2-4159-AF10-04542461582C")
    IAcadObject : public IDispatch
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Handle( 
            /* [retval][out] */ BSTR *Handle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ObjectName( 
            /* [retval][out] */ BSTR *ObjectName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetXData( 
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetXData( 
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ObjectID( 
            /* [retval][out] */ long *ObjectID) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch **ApplicationObject) = 0;
        
        virtual /* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Database( 
            /* [retval][out] */ IAcadDatabase **pDatabase) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HasExtensionDictionary( 
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetExtensionDictionary( 
            /* [retval][out] */ IAcadDictionary **pExtDictionary) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_OwnerID( 
            /* [retval][out] */ long *OwnerID) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Document( 
            /* [retval][out] */ IDispatch **pDocument) = 0;
        
        virtual /* [helpstring][hidden][id] */ HRESULT STDMETHODCALLTYPE Erase( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadObject * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadObject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadObject * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadObject * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadObject * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadObject * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadObject * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadObject * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadObject * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadObject * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadObject * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadObject * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadObject * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadObject * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadObject * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadObject * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadObject * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadObject * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadObject * This);
        
        END_INTERFACE
    } IAcadObjectVtbl;

    interface IAcadObject
    {
        CONST_VTBL struct IAcadObjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadObject_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadObject_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadObject_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadObject_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadObject_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadObject_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadObject_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadObject_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadObject_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadObject_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadObject_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadObject_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadObject_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadObject_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadObject_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadObject_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadObject_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadObject_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadObject_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadObject_Erase(This)	\
    (This)->lpVtbl -> Erase(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadObject_get_Handle_Proxy( 
    IAcadObject * This,
    /* [retval][out] */ BSTR *Handle);


void __RPC_STUB IAcadObject_get_Handle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadObject_get_ObjectName_Proxy( 
    IAcadObject * This,
    /* [retval][out] */ BSTR *ObjectName);


void __RPC_STUB IAcadObject_get_ObjectName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadObject_GetXData_Proxy( 
    IAcadObject * This,
    /* [in] */ BSTR AppName,
    /* [out] */ VARIANT *XDataType,
    /* [out] */ VARIANT *XDataValue);


void __RPC_STUB IAcadObject_GetXData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadObject_SetXData_Proxy( 
    IAcadObject * This,
    /* [in] */ VARIANT XDataType,
    /* [in] */ VARIANT XDataValue);


void __RPC_STUB IAcadObject_SetXData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadObject_Delete_Proxy( 
    IAcadObject * This);


void __RPC_STUB IAcadObject_Delete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadObject_get_ObjectID_Proxy( 
    IAcadObject * This,
    /* [retval][out] */ long *ObjectID);


void __RPC_STUB IAcadObject_get_ObjectID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadObject_get_Application_Proxy( 
    IAcadObject * This,
    /* [retval][out] */ IDispatch **ApplicationObject);


void __RPC_STUB IAcadObject_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadObject_get_Database_Proxy( 
    IAcadObject * This,
    /* [retval][out] */ IAcadDatabase **pDatabase);


void __RPC_STUB IAcadObject_get_Database_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadObject_get_HasExtensionDictionary_Proxy( 
    IAcadObject * This,
    /* [retval][out] */ VARIANT_BOOL *bHasDictionary);


void __RPC_STUB IAcadObject_get_HasExtensionDictionary_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadObject_GetExtensionDictionary_Proxy( 
    IAcadObject * This,
    /* [retval][out] */ IAcadDictionary **pExtDictionary);


void __RPC_STUB IAcadObject_GetExtensionDictionary_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadObject_get_OwnerID_Proxy( 
    IAcadObject * This,
    /* [retval][out] */ long *OwnerID);


void __RPC_STUB IAcadObject_get_OwnerID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadObject_get_Document_Proxy( 
    IAcadObject * This,
    /* [retval][out] */ IDispatch **pDocument);


void __RPC_STUB IAcadObject_get_Document_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][id] */ HRESULT STDMETHODCALLTYPE IAcadObject_Erase_Proxy( 
    IAcadObject * This);


void __RPC_STUB IAcadObject_Erase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadObject_INTERFACE_DEFINED__ */


#ifndef __IAcadDatabase_INTERFACE_DEFINED__
#define __IAcadDatabase_INTERFACE_DEFINED__

/* interface IAcadDatabase */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadDatabase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F4493535-029C-4C51-8B88-7F62B42D9FB3")
    IAcadDatabase : public IDispatch
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ModelSpace( 
            /* [retval][out] */ IAcadModelSpace **pMSpace) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PaperSpace( 
            /* [retval][out] */ IAcadPaperSpace **pPSpace) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Blocks( 
            /* [retval][out] */ IAcadBlocks **pBlocks) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CopyObjects( 
            /* [in] */ VARIANT Objects,
            /* [optional][in] */ VARIANT Owner,
            /* [optional][out][in] */ VARIANT *IdPairs,
            /* [retval][out] */ VARIANT *pNewObjects) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Groups( 
            /* [retval][out] */ IAcadGroups **pGroups) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimStyles( 
            /* [retval][out] */ IAcadDimStyles **pDimStyles) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Layers( 
            /* [retval][out] */ IAcadLayers **pLayers) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Linetypes( 
            /* [retval][out] */ IAcadLineTypes **pLinetypes) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Dictionaries( 
            /* [retval][out] */ IAcadDictionaries **pDictionaries) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_RegisteredApplications( 
            /* [retval][out] */ IAcadRegisteredApplications **pRegApps) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextStyles( 
            /* [retval][out] */ IAcadTextStyles **pTextStyles) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserCoordinateSystems( 
            /* [retval][out] */ IAcadUCSs **pUCSs) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Views( 
            /* [retval][out] */ IAcadViews **pViews) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Viewports( 
            /* [retval][out] */ IAcadViewports **pViewports) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ElevationModelSpace( 
            /* [retval][out] */ double *Elevation) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ElevationModelSpace( 
            /* [in] */ double Elevation) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ElevationPaperSpace( 
            /* [retval][out] */ double *Elevation) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ElevationPaperSpace( 
            /* [in] */ double Elevation) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Limits( 
            /* [retval][out] */ VARIANT *Limits) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Limits( 
            /* [in] */ VARIANT Limits) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE HandleToObject( 
            /* [in] */ BSTR Handle,
            /* [retval][out] */ IDispatch **pObj) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ObjectIdToObject( 
            /* [in] */ long ObjectID,
            /* [retval][out] */ IDispatch **pObj) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Layouts( 
            /* [retval][out] */ IAcadLayouts **pLayouts) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PlotConfigurations( 
            /* [retval][out] */ IAcadPlotConfigurations **pPlotConfigs) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Preferences( 
            /* [retval][out] */ IAcadDatabasePreferences **pPref) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileDependencies( 
            /* [retval][out] */ IAcadFileDependencies **pFDM) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SummaryInfo( 
            /* [retval][out] */ IAcadSummaryInfo **pSummaryInfo) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadDatabaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadDatabase * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadDatabase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadDatabase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadDatabase * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadDatabase * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadDatabase * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadDatabase * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ModelSpace )( 
            IAcadDatabase * This,
            /* [retval][out] */ IAcadModelSpace **pMSpace);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PaperSpace )( 
            IAcadDatabase * This,
            /* [retval][out] */ IAcadPaperSpace **pPSpace);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Blocks )( 
            IAcadDatabase * This,
            /* [retval][out] */ IAcadBlocks **pBlocks);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CopyObjects )( 
            IAcadDatabase * This,
            /* [in] */ VARIANT Objects,
            /* [optional][in] */ VARIANT Owner,
            /* [optional][out][in] */ VARIANT *IdPairs,
            /* [retval][out] */ VARIANT *pNewObjects);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Groups )( 
            IAcadDatabase * This,
            /* [retval][out] */ IAcadGroups **pGroups);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimStyles )( 
            IAcadDatabase * This,
            /* [retval][out] */ IAcadDimStyles **pDimStyles);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layers )( 
            IAcadDatabase * This,
            /* [retval][out] */ IAcadLayers **pLayers);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetypes )( 
            IAcadDatabase * This,
            /* [retval][out] */ IAcadLineTypes **pLinetypes);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Dictionaries )( 
            IAcadDatabase * This,
            /* [retval][out] */ IAcadDictionaries **pDictionaries);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RegisteredApplications )( 
            IAcadDatabase * This,
            /* [retval][out] */ IAcadRegisteredApplications **pRegApps);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextStyles )( 
            IAcadDatabase * This,
            /* [retval][out] */ IAcadTextStyles **pTextStyles);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserCoordinateSystems )( 
            IAcadDatabase * This,
            /* [retval][out] */ IAcadUCSs **pUCSs);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Views )( 
            IAcadDatabase * This,
            /* [retval][out] */ IAcadViews **pViews);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Viewports )( 
            IAcadDatabase * This,
            /* [retval][out] */ IAcadViewports **pViewports);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ElevationModelSpace )( 
            IAcadDatabase * This,
            /* [retval][out] */ double *Elevation);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ElevationModelSpace )( 
            IAcadDatabase * This,
            /* [in] */ double Elevation);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ElevationPaperSpace )( 
            IAcadDatabase * This,
            /* [retval][out] */ double *Elevation);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ElevationPaperSpace )( 
            IAcadDatabase * This,
            /* [in] */ double Elevation);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Limits )( 
            IAcadDatabase * This,
            /* [retval][out] */ VARIANT *Limits);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Limits )( 
            IAcadDatabase * This,
            /* [in] */ VARIANT Limits);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HandleToObject )( 
            IAcadDatabase * This,
            /* [in] */ BSTR Handle,
            /* [retval][out] */ IDispatch **pObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ObjectIdToObject )( 
            IAcadDatabase * This,
            /* [in] */ long ObjectID,
            /* [retval][out] */ IDispatch **pObj);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layouts )( 
            IAcadDatabase * This,
            /* [retval][out] */ IAcadLayouts **pLayouts);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotConfigurations )( 
            IAcadDatabase * This,
            /* [retval][out] */ IAcadPlotConfigurations **pPlotConfigs);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Preferences )( 
            IAcadDatabase * This,
            /* [retval][out] */ IAcadDatabasePreferences **pPref);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileDependencies )( 
            IAcadDatabase * This,
            /* [retval][out] */ IAcadFileDependencies **pFDM);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SummaryInfo )( 
            IAcadDatabase * This,
            /* [retval][out] */ IAcadSummaryInfo **pSummaryInfo);
        
        END_INTERFACE
    } IAcadDatabaseVtbl;

    interface IAcadDatabase
    {
        CONST_VTBL struct IAcadDatabaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadDatabase_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadDatabase_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadDatabase_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadDatabase_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadDatabase_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadDatabase_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadDatabase_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadDatabase_get_ModelSpace(This,pMSpace)	\
    (This)->lpVtbl -> get_ModelSpace(This,pMSpace)

#define IAcadDatabase_get_PaperSpace(This,pPSpace)	\
    (This)->lpVtbl -> get_PaperSpace(This,pPSpace)

#define IAcadDatabase_get_Blocks(This,pBlocks)	\
    (This)->lpVtbl -> get_Blocks(This,pBlocks)

#define IAcadDatabase_CopyObjects(This,Objects,Owner,IdPairs,pNewObjects)	\
    (This)->lpVtbl -> CopyObjects(This,Objects,Owner,IdPairs,pNewObjects)

#define IAcadDatabase_get_Groups(This,pGroups)	\
    (This)->lpVtbl -> get_Groups(This,pGroups)

#define IAcadDatabase_get_DimStyles(This,pDimStyles)	\
    (This)->lpVtbl -> get_DimStyles(This,pDimStyles)

#define IAcadDatabase_get_Layers(This,pLayers)	\
    (This)->lpVtbl -> get_Layers(This,pLayers)

#define IAcadDatabase_get_Linetypes(This,pLinetypes)	\
    (This)->lpVtbl -> get_Linetypes(This,pLinetypes)

#define IAcadDatabase_get_Dictionaries(This,pDictionaries)	\
    (This)->lpVtbl -> get_Dictionaries(This,pDictionaries)

#define IAcadDatabase_get_RegisteredApplications(This,pRegApps)	\
    (This)->lpVtbl -> get_RegisteredApplications(This,pRegApps)

#define IAcadDatabase_get_TextStyles(This,pTextStyles)	\
    (This)->lpVtbl -> get_TextStyles(This,pTextStyles)

#define IAcadDatabase_get_UserCoordinateSystems(This,pUCSs)	\
    (This)->lpVtbl -> get_UserCoordinateSystems(This,pUCSs)

#define IAcadDatabase_get_Views(This,pViews)	\
    (This)->lpVtbl -> get_Views(This,pViews)

#define IAcadDatabase_get_Viewports(This,pViewports)	\
    (This)->lpVtbl -> get_Viewports(This,pViewports)

#define IAcadDatabase_get_ElevationModelSpace(This,Elevation)	\
    (This)->lpVtbl -> get_ElevationModelSpace(This,Elevation)

#define IAcadDatabase_put_ElevationModelSpace(This,Elevation)	\
    (This)->lpVtbl -> put_ElevationModelSpace(This,Elevation)

#define IAcadDatabase_get_ElevationPaperSpace(This,Elevation)	\
    (This)->lpVtbl -> get_ElevationPaperSpace(This,Elevation)

#define IAcadDatabase_put_ElevationPaperSpace(This,Elevation)	\
    (This)->lpVtbl -> put_ElevationPaperSpace(This,Elevation)

#define IAcadDatabase_get_Limits(This,Limits)	\
    (This)->lpVtbl -> get_Limits(This,Limits)

#define IAcadDatabase_put_Limits(This,Limits)	\
    (This)->lpVtbl -> put_Limits(This,Limits)

#define IAcadDatabase_HandleToObject(This,Handle,pObj)	\
    (This)->lpVtbl -> HandleToObject(This,Handle,pObj)

#define IAcadDatabase_ObjectIdToObject(This,ObjectID,pObj)	\
    (This)->lpVtbl -> ObjectIdToObject(This,ObjectID,pObj)

#define IAcadDatabase_get_Layouts(This,pLayouts)	\
    (This)->lpVtbl -> get_Layouts(This,pLayouts)

#define IAcadDatabase_get_PlotConfigurations(This,pPlotConfigs)	\
    (This)->lpVtbl -> get_PlotConfigurations(This,pPlotConfigs)

#define IAcadDatabase_get_Preferences(This,pPref)	\
    (This)->lpVtbl -> get_Preferences(This,pPref)

#define IAcadDatabase_get_FileDependencies(This,pFDM)	\
    (This)->lpVtbl -> get_FileDependencies(This,pFDM)

#define IAcadDatabase_get_SummaryInfo(This,pSummaryInfo)	\
    (This)->lpVtbl -> get_SummaryInfo(This,pSummaryInfo)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_ModelSpace_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ IAcadModelSpace **pMSpace);


void __RPC_STUB IAcadDatabase_get_ModelSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_PaperSpace_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ IAcadPaperSpace **pPSpace);


void __RPC_STUB IAcadDatabase_get_PaperSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_Blocks_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ IAcadBlocks **pBlocks);


void __RPC_STUB IAcadDatabase_get_Blocks_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_CopyObjects_Proxy( 
    IAcadDatabase * This,
    /* [in] */ VARIANT Objects,
    /* [optional][in] */ VARIANT Owner,
    /* [optional][out][in] */ VARIANT *IdPairs,
    /* [retval][out] */ VARIANT *pNewObjects);


void __RPC_STUB IAcadDatabase_CopyObjects_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_Groups_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ IAcadGroups **pGroups);


void __RPC_STUB IAcadDatabase_get_Groups_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_DimStyles_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ IAcadDimStyles **pDimStyles);


void __RPC_STUB IAcadDatabase_get_DimStyles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_Layers_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ IAcadLayers **pLayers);


void __RPC_STUB IAcadDatabase_get_Layers_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_Linetypes_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ IAcadLineTypes **pLinetypes);


void __RPC_STUB IAcadDatabase_get_Linetypes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_Dictionaries_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ IAcadDictionaries **pDictionaries);


void __RPC_STUB IAcadDatabase_get_Dictionaries_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_RegisteredApplications_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ IAcadRegisteredApplications **pRegApps);


void __RPC_STUB IAcadDatabase_get_RegisteredApplications_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_TextStyles_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ IAcadTextStyles **pTextStyles);


void __RPC_STUB IAcadDatabase_get_TextStyles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_UserCoordinateSystems_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ IAcadUCSs **pUCSs);


void __RPC_STUB IAcadDatabase_get_UserCoordinateSystems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_Views_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ IAcadViews **pViews);


void __RPC_STUB IAcadDatabase_get_Views_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_Viewports_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ IAcadViewports **pViewports);


void __RPC_STUB IAcadDatabase_get_Viewports_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_ElevationModelSpace_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ double *Elevation);


void __RPC_STUB IAcadDatabase_get_ElevationModelSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_put_ElevationModelSpace_Proxy( 
    IAcadDatabase * This,
    /* [in] */ double Elevation);


void __RPC_STUB IAcadDatabase_put_ElevationModelSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_ElevationPaperSpace_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ double *Elevation);


void __RPC_STUB IAcadDatabase_get_ElevationPaperSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_put_ElevationPaperSpace_Proxy( 
    IAcadDatabase * This,
    /* [in] */ double Elevation);


void __RPC_STUB IAcadDatabase_put_ElevationPaperSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_Limits_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ VARIANT *Limits);


void __RPC_STUB IAcadDatabase_get_Limits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_put_Limits_Proxy( 
    IAcadDatabase * This,
    /* [in] */ VARIANT Limits);


void __RPC_STUB IAcadDatabase_put_Limits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_HandleToObject_Proxy( 
    IAcadDatabase * This,
    /* [in] */ BSTR Handle,
    /* [retval][out] */ IDispatch **pObj);


void __RPC_STUB IAcadDatabase_HandleToObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_ObjectIdToObject_Proxy( 
    IAcadDatabase * This,
    /* [in] */ long ObjectID,
    /* [retval][out] */ IDispatch **pObj);


void __RPC_STUB IAcadDatabase_ObjectIdToObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_Layouts_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ IAcadLayouts **pLayouts);


void __RPC_STUB IAcadDatabase_get_Layouts_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_PlotConfigurations_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ IAcadPlotConfigurations **pPlotConfigs);


void __RPC_STUB IAcadDatabase_get_PlotConfigurations_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_Preferences_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ IAcadDatabasePreferences **pPref);


void __RPC_STUB IAcadDatabase_get_Preferences_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_FileDependencies_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ IAcadFileDependencies **pFDM);


void __RPC_STUB IAcadDatabase_get_FileDependencies_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabase_get_SummaryInfo_Proxy( 
    IAcadDatabase * This,
    /* [retval][out] */ IAcadSummaryInfo **pSummaryInfo);


void __RPC_STUB IAcadDatabase_get_SummaryInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadDatabase_INTERFACE_DEFINED__ */


#ifndef __IAcadBlock_INTERFACE_DEFINED__
#define __IAcadBlock_INTERFACE_DEFINED__

/* interface IAcadBlock */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadBlock;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D4262CE6-325F-48F0-83B2-ED2A461DFA3F")
    IAcadBlock : public IAcadObject
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadEntity **pItem) = 0;
        
        virtual /* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Origin( 
            /* [retval][out] */ VARIANT *Origin) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Origin( 
            /* [in] */ VARIANT Origin) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddCustomObject( 
            /* [in] */ BSTR ClassName,
            /* [retval][out] */ IDispatch **pObject) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add3DFace( 
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [in] */ VARIANT Point4,
            /* [retval][out] */ IAcad3DFace **pFace3d) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add3DMesh( 
            /* [in] */ int M,
            /* [in] */ int N,
            /* [in] */ VARIANT PointsMatrix,
            /* [retval][out] */ IAcadPolygonMesh **pMesh3d) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add3DPoly( 
            /* [in] */ VARIANT PointsArray,
            /* [retval][out] */ IAcad3DPolyline **pPoly3d) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddArc( 
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [in] */ double StartAngle,
            /* [in] */ double EndAngle,
            /* [retval][out] */ IAcadArc **pArc) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddAttribute( 
            /* [in] */ double Height,
            /* [in] */ AcAttributeMode Mode,
            /* [in] */ BSTR Prompt,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Tag,
            /* [in] */ BSTR Value,
            /* [retval][out] */ IAcadAttribute **pAttr) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddBox( 
            /* [in] */ VARIANT Origin,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pBox) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddCircle( 
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [retval][out] */ IAcadCircle **pCircle) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddCone( 
            /* [in] */ VARIANT Center,
            /* [in] */ double BaseRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pCone) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddCylinder( 
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pCyl) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddDimAligned( 
            /* [in] */ VARIANT ExtLine1Point,
            /* [in] */ VARIANT ExtLine2Point,
            /* [in] */ VARIANT TextPosition,
            /* [retval][out] */ IAcadDimAligned **pDim) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddDimAngular( 
            /* [in] */ VARIANT AngleVertex,
            /* [in] */ VARIANT FirstEndPoint,
            /* [in] */ VARIANT SecondEndPoint,
            /* [in] */ VARIANT TextPoint,
            /* [retval][out] */ IAcadDimAngular **pDim) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddDimDiametric( 
            /* [in] */ VARIANT ChordPoint,
            /* [in] */ VARIANT FarChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IAcadDimDiametric **pDim) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddDimRotated( 
            /* [in] */ VARIANT ExtLine1Point,
            /* [in] */ VARIANT ExtLine2Point,
            /* [in] */ VARIANT DimLineLocation,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadDimRotated **pDim) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddDimOrdinate( 
            /* [in] */ VARIANT DefinitionPoint,
            /* [in] */ VARIANT LeaderEndPoint,
            /* [in] */ int UseXAxis,
            /* [retval][out] */ IAcadDimOrdinate **pDim) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddDimRadial( 
            /* [in] */ VARIANT Center,
            /* [in] */ VARIANT ChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IAcadDimRadial **pDim) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddEllipse( 
            /* [in] */ VARIANT Center,
            /* [in] */ VARIANT MajorAxis,
            /* [in] */ double RadiusRatio,
            /* [retval][out] */ IAcadEllipse **pEllipse) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddEllipticalCone( 
            /* [in] */ VARIANT Center,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pEllipCone) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddEllipticalCylinder( 
            /* [in] */ VARIANT Center,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pEllipCyl) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddExtrudedSolid( 
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ double Height,
            /* [in] */ double TaperAngle,
            /* [retval][out] */ IAcad3DSolid **pExtrSolid) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddExtrudedSolidAlongPath( 
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ IDispatch *Path,
            /* [retval][out] */ IAcad3DSolid **pExtrSolid) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddLeader( 
            /* [in] */ VARIANT PointsArray,
            /* [in] */ IAcadEntity *Annotation,
            /* [in] */ AcLeaderType Type,
            /* [retval][out] */ IAcadLeader **pLeader) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddMText( 
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Width,
            /* [in] */ BSTR Text,
            /* [retval][out] */ IAcadMText **pMtext) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddPoint( 
            /* [in] */ VARIANT Point,
            /* [retval][out] */ IAcadPoint **pPoint) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddLightWeightPolyline( 
            /* [in] */ VARIANT VerticesList,
            /* [retval][out] */ IAcadLWPolyline **pLWPolyline) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddPolyline( 
            /* [in] */ VARIANT VerticesList,
            /* [retval][out] */ IAcadPolyline **pPolyline) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddRay( 
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IAcadRay **pRay) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddRegion( 
            /* [in] */ VARIANT ObjectList,
            /* [retval][out] */ VARIANT *pRegions) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddRevolvedSolid( 
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ VARIANT AxisPoint,
            /* [in] */ VARIANT AxisDir,
            /* [in] */ double Angle,
            /* [retval][out] */ IAcad3DSolid **pRevolSolid) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddShape( 
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double ScaleFactor,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadShape **pShape) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddSolid( 
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [in] */ VARIANT Point4,
            /* [retval][out] */ IAcadSolid **pSolid) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddSphere( 
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [retval][out] */ IAcad3DSolid **pSphere) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddSpline( 
            /* [in] */ VARIANT PointsArray,
            /* [in] */ VARIANT StartTangent,
            /* [in] */ VARIANT EndTangent,
            /* [retval][out] */ IAcadSpline **pSpline) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddText( 
            /* [in] */ BSTR TextString,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Height,
            /* [retval][out] */ IAcadText **pText) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddTolerance( 
            /* [in] */ BSTR Text,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ VARIANT Direction,
            /* [retval][out] */ IAcadTolerance **pTolerance) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddTorus( 
            /* [in] */ VARIANT Center,
            /* [in] */ double TorusRadius,
            /* [in] */ double TubeRadius,
            /* [retval][out] */ IAcad3DSolid **pTorus) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddTrace( 
            /* [in] */ VARIANT PointsArray,
            /* [retval][out] */ IAcadTrace **pTrace) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddWedge( 
            /* [in] */ VARIANT Center,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pWedge) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddXline( 
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IAcadXline **pXline) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE InsertBlock( 
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Name,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadBlockReference **pBlkRef) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddHatch( 
            /* [in] */ int PatternType,
            /* [in] */ BSTR PatternName,
            /* [in] */ VARIANT_BOOL Associativity,
            /* [optional][in] */ VARIANT HatchObjectType,
            /* [retval][out] */ IAcadHatch **pHatch) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddRaster( 
            /* [in] */ BSTR imageFileName,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double ScaleFactor,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadRasterImage **pRaster) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddLine( 
            /* [in] */ VARIANT StartPoint,
            /* [in] */ VARIANT EndPoint,
            /* [retval][out] */ IAcadLine **pLine) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsLayout( 
            /* [retval][out] */ VARIANT_BOOL *bIsLayout) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Layout( 
            /* [retval][out] */ IAcadLayout **pLayout) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsXRef( 
            /* [retval][out] */ VARIANT_BOOL *pIsXRref) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddMInsertBlock( 
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Name,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [in] */ long NumRows,
            /* [in] */ long NumColumns,
            /* [in] */ long RowSpacing,
            /* [in] */ long ColumnSpacing,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadMInsertBlock **pMInsertBlk) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddPolyfaceMesh( 
            /* [in] */ VARIANT VertexList,
            /* [in] */ VARIANT FaceList,
            /* [retval][out] */ IAcadPolyfaceMesh **pPFMesh) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddMLine( 
            /* [in] */ VARIANT VertexList,
            /* [retval][out] */ IAcadMLine **pMLine) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddDim3PointAngular( 
            /* [in] */ VARIANT AngleVertex,
            /* [in] */ VARIANT FirstEndPoint,
            /* [in] */ VARIANT SecondEndPoint,
            /* [in] */ VARIANT TextPoint,
            /* [retval][out] */ IAcadDim3PointAngular **pDim) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_XRefDatabase( 
            /* [retval][out] */ IAcadDatabase **pDatabase) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AttachExternalReference( 
            /* [in] */ BSTR PathName,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [in] */ VARIANT_BOOL bOverlay,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadExternalReference **pXRef) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Unload( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Reload( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Bind( 
            /* [in] */ VARIANT_BOOL bPrefixName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Detach( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadBlockVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadBlock * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadBlock * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadBlock * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadBlock * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadBlock * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadBlock * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadBlock * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadBlock * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadBlock * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadBlock * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadBlock * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadBlock * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadBlock * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadBlock * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadBlock * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadBlock * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadBlock * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadBlock * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadBlock * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadBlock * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadBlock * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadEntity **pItem);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadBlock * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadBlock * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadBlock * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadBlock * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Origin )( 
            IAcadBlock * This,
            /* [retval][out] */ VARIANT *Origin);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Origin )( 
            IAcadBlock * This,
            /* [in] */ VARIANT Origin);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCustomObject )( 
            IAcadBlock * This,
            /* [in] */ BSTR ClassName,
            /* [retval][out] */ IDispatch **pObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DFace )( 
            IAcadBlock * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [in] */ VARIANT Point4,
            /* [retval][out] */ IAcad3DFace **pFace3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DMesh )( 
            IAcadBlock * This,
            /* [in] */ int M,
            /* [in] */ int N,
            /* [in] */ VARIANT PointsMatrix,
            /* [retval][out] */ IAcadPolygonMesh **pMesh3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DPoly )( 
            IAcadBlock * This,
            /* [in] */ VARIANT PointsArray,
            /* [retval][out] */ IAcad3DPolyline **pPoly3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddArc )( 
            IAcadBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [in] */ double StartAngle,
            /* [in] */ double EndAngle,
            /* [retval][out] */ IAcadArc **pArc);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            IAcadBlock * This,
            /* [in] */ double Height,
            /* [in] */ AcAttributeMode Mode,
            /* [in] */ BSTR Prompt,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Tag,
            /* [in] */ BSTR Value,
            /* [retval][out] */ IAcadAttribute **pAttr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddBox )( 
            IAcadBlock * This,
            /* [in] */ VARIANT Origin,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pBox);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCircle )( 
            IAcadBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [retval][out] */ IAcadCircle **pCircle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCone )( 
            IAcadBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double BaseRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pCone);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCylinder )( 
            IAcadBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pCyl);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimAligned )( 
            IAcadBlock * This,
            /* [in] */ VARIANT ExtLine1Point,
            /* [in] */ VARIANT ExtLine2Point,
            /* [in] */ VARIANT TextPosition,
            /* [retval][out] */ IAcadDimAligned **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimAngular )( 
            IAcadBlock * This,
            /* [in] */ VARIANT AngleVertex,
            /* [in] */ VARIANT FirstEndPoint,
            /* [in] */ VARIANT SecondEndPoint,
            /* [in] */ VARIANT TextPoint,
            /* [retval][out] */ IAcadDimAngular **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimDiametric )( 
            IAcadBlock * This,
            /* [in] */ VARIANT ChordPoint,
            /* [in] */ VARIANT FarChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IAcadDimDiametric **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimRotated )( 
            IAcadBlock * This,
            /* [in] */ VARIANT ExtLine1Point,
            /* [in] */ VARIANT ExtLine2Point,
            /* [in] */ VARIANT DimLineLocation,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadDimRotated **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimOrdinate )( 
            IAcadBlock * This,
            /* [in] */ VARIANT DefinitionPoint,
            /* [in] */ VARIANT LeaderEndPoint,
            /* [in] */ int UseXAxis,
            /* [retval][out] */ IAcadDimOrdinate **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimRadial )( 
            IAcadBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ VARIANT ChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IAcadDimRadial **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipse )( 
            IAcadBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ VARIANT MajorAxis,
            /* [in] */ double RadiusRatio,
            /* [retval][out] */ IAcadEllipse **pEllipse);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCone )( 
            IAcadBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pEllipCone);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCylinder )( 
            IAcadBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pEllipCyl);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolid )( 
            IAcadBlock * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ double Height,
            /* [in] */ double TaperAngle,
            /* [retval][out] */ IAcad3DSolid **pExtrSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolidAlongPath )( 
            IAcadBlock * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ IDispatch *Path,
            /* [retval][out] */ IAcad3DSolid **pExtrSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLeader )( 
            IAcadBlock * This,
            /* [in] */ VARIANT PointsArray,
            /* [in] */ IAcadEntity *Annotation,
            /* [in] */ AcLeaderType Type,
            /* [retval][out] */ IAcadLeader **pLeader);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMText )( 
            IAcadBlock * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Width,
            /* [in] */ BSTR Text,
            /* [retval][out] */ IAcadMText **pMtext);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPoint )( 
            IAcadBlock * This,
            /* [in] */ VARIANT Point,
            /* [retval][out] */ IAcadPoint **pPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLightWeightPolyline )( 
            IAcadBlock * This,
            /* [in] */ VARIANT VerticesList,
            /* [retval][out] */ IAcadLWPolyline **pLWPolyline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPolyline )( 
            IAcadBlock * This,
            /* [in] */ VARIANT VerticesList,
            /* [retval][out] */ IAcadPolyline **pPolyline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRay )( 
            IAcadBlock * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IAcadRay **pRay);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRegion )( 
            IAcadBlock * This,
            /* [in] */ VARIANT ObjectList,
            /* [retval][out] */ VARIANT *pRegions);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRevolvedSolid )( 
            IAcadBlock * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ VARIANT AxisPoint,
            /* [in] */ VARIANT AxisDir,
            /* [in] */ double Angle,
            /* [retval][out] */ IAcad3DSolid **pRevolSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddShape )( 
            IAcadBlock * This,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double ScaleFactor,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadShape **pShape);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSolid )( 
            IAcadBlock * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [in] */ VARIANT Point4,
            /* [retval][out] */ IAcadSolid **pSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSphere )( 
            IAcadBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [retval][out] */ IAcad3DSolid **pSphere);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSpline )( 
            IAcadBlock * This,
            /* [in] */ VARIANT PointsArray,
            /* [in] */ VARIANT StartTangent,
            /* [in] */ VARIANT EndTangent,
            /* [retval][out] */ IAcadSpline **pSpline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddText )( 
            IAcadBlock * This,
            /* [in] */ BSTR TextString,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Height,
            /* [retval][out] */ IAcadText **pText);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTolerance )( 
            IAcadBlock * This,
            /* [in] */ BSTR Text,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ VARIANT Direction,
            /* [retval][out] */ IAcadTolerance **pTolerance);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTorus )( 
            IAcadBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double TorusRadius,
            /* [in] */ double TubeRadius,
            /* [retval][out] */ IAcad3DSolid **pTorus);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTrace )( 
            IAcadBlock * This,
            /* [in] */ VARIANT PointsArray,
            /* [retval][out] */ IAcadTrace **pTrace);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddWedge )( 
            IAcadBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pWedge);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddXline )( 
            IAcadBlock * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IAcadXline **pXline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *InsertBlock )( 
            IAcadBlock * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Name,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadBlockReference **pBlkRef);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddHatch )( 
            IAcadBlock * This,
            /* [in] */ int PatternType,
            /* [in] */ BSTR PatternName,
            /* [in] */ VARIANT_BOOL Associativity,
            /* [optional][in] */ VARIANT HatchObjectType,
            /* [retval][out] */ IAcadHatch **pHatch);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRaster )( 
            IAcadBlock * This,
            /* [in] */ BSTR imageFileName,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double ScaleFactor,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadRasterImage **pRaster);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLine )( 
            IAcadBlock * This,
            /* [in] */ VARIANT StartPoint,
            /* [in] */ VARIANT EndPoint,
            /* [retval][out] */ IAcadLine **pLine);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsLayout )( 
            IAcadBlock * This,
            /* [retval][out] */ VARIANT_BOOL *bIsLayout);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layout )( 
            IAcadBlock * This,
            /* [retval][out] */ IAcadLayout **pLayout);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsXRef )( 
            IAcadBlock * This,
            /* [retval][out] */ VARIANT_BOOL *pIsXRref);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMInsertBlock )( 
            IAcadBlock * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Name,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [in] */ long NumRows,
            /* [in] */ long NumColumns,
            /* [in] */ long RowSpacing,
            /* [in] */ long ColumnSpacing,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadMInsertBlock **pMInsertBlk);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPolyfaceMesh )( 
            IAcadBlock * This,
            /* [in] */ VARIANT VertexList,
            /* [in] */ VARIANT FaceList,
            /* [retval][out] */ IAcadPolyfaceMesh **pPFMesh);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMLine )( 
            IAcadBlock * This,
            /* [in] */ VARIANT VertexList,
            /* [retval][out] */ IAcadMLine **pMLine);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDim3PointAngular )( 
            IAcadBlock * This,
            /* [in] */ VARIANT AngleVertex,
            /* [in] */ VARIANT FirstEndPoint,
            /* [in] */ VARIANT SecondEndPoint,
            /* [in] */ VARIANT TextPoint,
            /* [retval][out] */ IAcadDim3PointAngular **pDim);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XRefDatabase )( 
            IAcadBlock * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AttachExternalReference )( 
            IAcadBlock * This,
            /* [in] */ BSTR PathName,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [in] */ VARIANT_BOOL bOverlay,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadExternalReference **pXRef);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Unload )( 
            IAcadBlock * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Reload )( 
            IAcadBlock * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Bind )( 
            IAcadBlock * This,
            /* [in] */ VARIANT_BOOL bPrefixName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Detach )( 
            IAcadBlock * This);
        
        END_INTERFACE
    } IAcadBlockVtbl;

    interface IAcadBlock
    {
        CONST_VTBL struct IAcadBlockVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadBlock_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadBlock_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadBlock_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadBlock_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadBlock_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadBlock_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadBlock_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadBlock_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadBlock_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadBlock_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadBlock_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadBlock_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadBlock_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadBlock_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadBlock_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadBlock_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadBlock_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadBlock_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadBlock_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadBlock_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadBlock_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadBlock_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadBlock_get_Count(This,pVal)	\
    (This)->lpVtbl -> get_Count(This,pVal)

#define IAcadBlock_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadBlock_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#define IAcadBlock_get_Origin(This,Origin)	\
    (This)->lpVtbl -> get_Origin(This,Origin)

#define IAcadBlock_put_Origin(This,Origin)	\
    (This)->lpVtbl -> put_Origin(This,Origin)

#define IAcadBlock_AddCustomObject(This,ClassName,pObject)	\
    (This)->lpVtbl -> AddCustomObject(This,ClassName,pObject)

#define IAcadBlock_Add3DFace(This,Point1,Point2,point3,Point4,pFace3d)	\
    (This)->lpVtbl -> Add3DFace(This,Point1,Point2,point3,Point4,pFace3d)

#define IAcadBlock_Add3DMesh(This,M,N,PointsMatrix,pMesh3d)	\
    (This)->lpVtbl -> Add3DMesh(This,M,N,PointsMatrix,pMesh3d)

#define IAcadBlock_Add3DPoly(This,PointsArray,pPoly3d)	\
    (This)->lpVtbl -> Add3DPoly(This,PointsArray,pPoly3d)

#define IAcadBlock_AddArc(This,Center,Radius,StartAngle,EndAngle,pArc)	\
    (This)->lpVtbl -> AddArc(This,Center,Radius,StartAngle,EndAngle,pArc)

#define IAcadBlock_AddAttribute(This,Height,Mode,Prompt,InsertionPoint,Tag,Value,pAttr)	\
    (This)->lpVtbl -> AddAttribute(This,Height,Mode,Prompt,InsertionPoint,Tag,Value,pAttr)

#define IAcadBlock_AddBox(This,Origin,Length,Width,Height,pBox)	\
    (This)->lpVtbl -> AddBox(This,Origin,Length,Width,Height,pBox)

#define IAcadBlock_AddCircle(This,Center,Radius,pCircle)	\
    (This)->lpVtbl -> AddCircle(This,Center,Radius,pCircle)

#define IAcadBlock_AddCone(This,Center,BaseRadius,Height,pCone)	\
    (This)->lpVtbl -> AddCone(This,Center,BaseRadius,Height,pCone)

#define IAcadBlock_AddCylinder(This,Center,Radius,Height,pCyl)	\
    (This)->lpVtbl -> AddCylinder(This,Center,Radius,Height,pCyl)

#define IAcadBlock_AddDimAligned(This,ExtLine1Point,ExtLine2Point,TextPosition,pDim)	\
    (This)->lpVtbl -> AddDimAligned(This,ExtLine1Point,ExtLine2Point,TextPosition,pDim)

#define IAcadBlock_AddDimAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)	\
    (This)->lpVtbl -> AddDimAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)

#define IAcadBlock_AddDimDiametric(This,ChordPoint,FarChordPoint,LeaderLength,pDim)	\
    (This)->lpVtbl -> AddDimDiametric(This,ChordPoint,FarChordPoint,LeaderLength,pDim)

#define IAcadBlock_AddDimRotated(This,ExtLine1Point,ExtLine2Point,DimLineLocation,RotationAngle,pDim)	\
    (This)->lpVtbl -> AddDimRotated(This,ExtLine1Point,ExtLine2Point,DimLineLocation,RotationAngle,pDim)

#define IAcadBlock_AddDimOrdinate(This,DefinitionPoint,LeaderEndPoint,UseXAxis,pDim)	\
    (This)->lpVtbl -> AddDimOrdinate(This,DefinitionPoint,LeaderEndPoint,UseXAxis,pDim)

#define IAcadBlock_AddDimRadial(This,Center,ChordPoint,LeaderLength,pDim)	\
    (This)->lpVtbl -> AddDimRadial(This,Center,ChordPoint,LeaderLength,pDim)

#define IAcadBlock_AddEllipse(This,Center,MajorAxis,RadiusRatio,pEllipse)	\
    (This)->lpVtbl -> AddEllipse(This,Center,MajorAxis,RadiusRatio,pEllipse)

#define IAcadBlock_AddEllipticalCone(This,Center,MajorRadius,MinorRadius,Height,pEllipCone)	\
    (This)->lpVtbl -> AddEllipticalCone(This,Center,MajorRadius,MinorRadius,Height,pEllipCone)

#define IAcadBlock_AddEllipticalCylinder(This,Center,MajorRadius,MinorRadius,Height,pEllipCyl)	\
    (This)->lpVtbl -> AddEllipticalCylinder(This,Center,MajorRadius,MinorRadius,Height,pEllipCyl)

#define IAcadBlock_AddExtrudedSolid(This,Profile,Height,TaperAngle,pExtrSolid)	\
    (This)->lpVtbl -> AddExtrudedSolid(This,Profile,Height,TaperAngle,pExtrSolid)

#define IAcadBlock_AddExtrudedSolidAlongPath(This,Profile,Path,pExtrSolid)	\
    (This)->lpVtbl -> AddExtrudedSolidAlongPath(This,Profile,Path,pExtrSolid)

#define IAcadBlock_AddLeader(This,PointsArray,Annotation,Type,pLeader)	\
    (This)->lpVtbl -> AddLeader(This,PointsArray,Annotation,Type,pLeader)

#define IAcadBlock_AddMText(This,InsertionPoint,Width,Text,pMtext)	\
    (This)->lpVtbl -> AddMText(This,InsertionPoint,Width,Text,pMtext)

#define IAcadBlock_AddPoint(This,Point,pPoint)	\
    (This)->lpVtbl -> AddPoint(This,Point,pPoint)

#define IAcadBlock_AddLightWeightPolyline(This,VerticesList,pLWPolyline)	\
    (This)->lpVtbl -> AddLightWeightPolyline(This,VerticesList,pLWPolyline)

#define IAcadBlock_AddPolyline(This,VerticesList,pPolyline)	\
    (This)->lpVtbl -> AddPolyline(This,VerticesList,pPolyline)

#define IAcadBlock_AddRay(This,Point1,Point2,pRay)	\
    (This)->lpVtbl -> AddRay(This,Point1,Point2,pRay)

#define IAcadBlock_AddRegion(This,ObjectList,pRegions)	\
    (This)->lpVtbl -> AddRegion(This,ObjectList,pRegions)

#define IAcadBlock_AddRevolvedSolid(This,Profile,AxisPoint,AxisDir,Angle,pRevolSolid)	\
    (This)->lpVtbl -> AddRevolvedSolid(This,Profile,AxisPoint,AxisDir,Angle,pRevolSolid)

#define IAcadBlock_AddShape(This,Name,InsertionPoint,ScaleFactor,RotationAngle,pShape)	\
    (This)->lpVtbl -> AddShape(This,Name,InsertionPoint,ScaleFactor,RotationAngle,pShape)

#define IAcadBlock_AddSolid(This,Point1,Point2,point3,Point4,pSolid)	\
    (This)->lpVtbl -> AddSolid(This,Point1,Point2,point3,Point4,pSolid)

#define IAcadBlock_AddSphere(This,Center,Radius,pSphere)	\
    (This)->lpVtbl -> AddSphere(This,Center,Radius,pSphere)

#define IAcadBlock_AddSpline(This,PointsArray,StartTangent,EndTangent,pSpline)	\
    (This)->lpVtbl -> AddSpline(This,PointsArray,StartTangent,EndTangent,pSpline)

#define IAcadBlock_AddText(This,TextString,InsertionPoint,Height,pText)	\
    (This)->lpVtbl -> AddText(This,TextString,InsertionPoint,Height,pText)

#define IAcadBlock_AddTolerance(This,Text,InsertionPoint,Direction,pTolerance)	\
    (This)->lpVtbl -> AddTolerance(This,Text,InsertionPoint,Direction,pTolerance)

#define IAcadBlock_AddTorus(This,Center,TorusRadius,TubeRadius,pTorus)	\
    (This)->lpVtbl -> AddTorus(This,Center,TorusRadius,TubeRadius,pTorus)

#define IAcadBlock_AddTrace(This,PointsArray,pTrace)	\
    (This)->lpVtbl -> AddTrace(This,PointsArray,pTrace)

#define IAcadBlock_AddWedge(This,Center,Length,Width,Height,pWedge)	\
    (This)->lpVtbl -> AddWedge(This,Center,Length,Width,Height,pWedge)

#define IAcadBlock_AddXline(This,Point1,Point2,pXline)	\
    (This)->lpVtbl -> AddXline(This,Point1,Point2,pXline)

#define IAcadBlock_InsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,Password,pBlkRef)	\
    (This)->lpVtbl -> InsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,Password,pBlkRef)

#define IAcadBlock_AddHatch(This,PatternType,PatternName,Associativity,HatchObjectType,pHatch)	\
    (This)->lpVtbl -> AddHatch(This,PatternType,PatternName,Associativity,HatchObjectType,pHatch)

#define IAcadBlock_AddRaster(This,imageFileName,InsertionPoint,ScaleFactor,RotationAngle,pRaster)	\
    (This)->lpVtbl -> AddRaster(This,imageFileName,InsertionPoint,ScaleFactor,RotationAngle,pRaster)

#define IAcadBlock_AddLine(This,StartPoint,EndPoint,pLine)	\
    (This)->lpVtbl -> AddLine(This,StartPoint,EndPoint,pLine)

#define IAcadBlock_get_IsLayout(This,bIsLayout)	\
    (This)->lpVtbl -> get_IsLayout(This,bIsLayout)

#define IAcadBlock_get_Layout(This,pLayout)	\
    (This)->lpVtbl -> get_Layout(This,pLayout)

#define IAcadBlock_get_IsXRef(This,pIsXRref)	\
    (This)->lpVtbl -> get_IsXRef(This,pIsXRref)

#define IAcadBlock_AddMInsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,NumRows,NumColumns,RowSpacing,ColumnSpacing,Password,pMInsertBlk)	\
    (This)->lpVtbl -> AddMInsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,NumRows,NumColumns,RowSpacing,ColumnSpacing,Password,pMInsertBlk)

#define IAcadBlock_AddPolyfaceMesh(This,VertexList,FaceList,pPFMesh)	\
    (This)->lpVtbl -> AddPolyfaceMesh(This,VertexList,FaceList,pPFMesh)

#define IAcadBlock_AddMLine(This,VertexList,pMLine)	\
    (This)->lpVtbl -> AddMLine(This,VertexList,pMLine)

#define IAcadBlock_AddDim3PointAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)	\
    (This)->lpVtbl -> AddDim3PointAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)

#define IAcadBlock_get_XRefDatabase(This,pDatabase)	\
    (This)->lpVtbl -> get_XRefDatabase(This,pDatabase)

#define IAcadBlock_AttachExternalReference(This,PathName,Name,InsertionPoint,Xscale,Yscale,Zscale,Rotation,bOverlay,Password,pXRef)	\
    (This)->lpVtbl -> AttachExternalReference(This,PathName,Name,InsertionPoint,Xscale,Yscale,Zscale,Rotation,bOverlay,Password,pXRef)

#define IAcadBlock_Unload(This)	\
    (This)->lpVtbl -> Unload(This)

#define IAcadBlock_Reload(This)	\
    (This)->lpVtbl -> Reload(This)

#define IAcadBlock_Bind(This,bPrefixName)	\
    (This)->lpVtbl -> Bind(This,bPrefixName)

#define IAcadBlock_Detach(This)	\
    (This)->lpVtbl -> Detach(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_Item_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ IAcadEntity **pItem);


void __RPC_STUB IAcadBlock_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_get__NewEnum_Proxy( 
    IAcadBlock * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IAcadBlock_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_get_Count_Proxy( 
    IAcadBlock * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IAcadBlock_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_get_Name_Proxy( 
    IAcadBlock * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadBlock_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_put_Name_Proxy( 
    IAcadBlock * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadBlock_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_get_Origin_Proxy( 
    IAcadBlock * This,
    /* [retval][out] */ VARIANT *Origin);


void __RPC_STUB IAcadBlock_get_Origin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_put_Origin_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT Origin);


void __RPC_STUB IAcadBlock_put_Origin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddCustomObject_Proxy( 
    IAcadBlock * This,
    /* [in] */ BSTR ClassName,
    /* [retval][out] */ IDispatch **pObject);


void __RPC_STUB IAcadBlock_AddCustomObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_Add3DFace_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT Point1,
    /* [in] */ VARIANT Point2,
    /* [in] */ VARIANT point3,
    /* [in] */ VARIANT Point4,
    /* [retval][out] */ IAcad3DFace **pFace3d);


void __RPC_STUB IAcadBlock_Add3DFace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_Add3DMesh_Proxy( 
    IAcadBlock * This,
    /* [in] */ int M,
    /* [in] */ int N,
    /* [in] */ VARIANT PointsMatrix,
    /* [retval][out] */ IAcadPolygonMesh **pMesh3d);


void __RPC_STUB IAcadBlock_Add3DMesh_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_Add3DPoly_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT PointsArray,
    /* [retval][out] */ IAcad3DPolyline **pPoly3d);


void __RPC_STUB IAcadBlock_Add3DPoly_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddArc_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT Center,
    /* [in] */ double Radius,
    /* [in] */ double StartAngle,
    /* [in] */ double EndAngle,
    /* [retval][out] */ IAcadArc **pArc);


void __RPC_STUB IAcadBlock_AddArc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddAttribute_Proxy( 
    IAcadBlock * This,
    /* [in] */ double Height,
    /* [in] */ AcAttributeMode Mode,
    /* [in] */ BSTR Prompt,
    /* [in] */ VARIANT InsertionPoint,
    /* [in] */ BSTR Tag,
    /* [in] */ BSTR Value,
    /* [retval][out] */ IAcadAttribute **pAttr);


void __RPC_STUB IAcadBlock_AddAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddBox_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT Origin,
    /* [in] */ double Length,
    /* [in] */ double Width,
    /* [in] */ double Height,
    /* [retval][out] */ IAcad3DSolid **pBox);


void __RPC_STUB IAcadBlock_AddBox_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddCircle_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT Center,
    /* [in] */ double Radius,
    /* [retval][out] */ IAcadCircle **pCircle);


void __RPC_STUB IAcadBlock_AddCircle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddCone_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT Center,
    /* [in] */ double BaseRadius,
    /* [in] */ double Height,
    /* [retval][out] */ IAcad3DSolid **pCone);


void __RPC_STUB IAcadBlock_AddCone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddCylinder_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT Center,
    /* [in] */ double Radius,
    /* [in] */ double Height,
    /* [retval][out] */ IAcad3DSolid **pCyl);


void __RPC_STUB IAcadBlock_AddCylinder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddDimAligned_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT ExtLine1Point,
    /* [in] */ VARIANT ExtLine2Point,
    /* [in] */ VARIANT TextPosition,
    /* [retval][out] */ IAcadDimAligned **pDim);


void __RPC_STUB IAcadBlock_AddDimAligned_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddDimAngular_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT AngleVertex,
    /* [in] */ VARIANT FirstEndPoint,
    /* [in] */ VARIANT SecondEndPoint,
    /* [in] */ VARIANT TextPoint,
    /* [retval][out] */ IAcadDimAngular **pDim);


void __RPC_STUB IAcadBlock_AddDimAngular_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddDimDiametric_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT ChordPoint,
    /* [in] */ VARIANT FarChordPoint,
    /* [in] */ double LeaderLength,
    /* [retval][out] */ IAcadDimDiametric **pDim);


void __RPC_STUB IAcadBlock_AddDimDiametric_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddDimRotated_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT ExtLine1Point,
    /* [in] */ VARIANT ExtLine2Point,
    /* [in] */ VARIANT DimLineLocation,
    /* [in] */ double RotationAngle,
    /* [retval][out] */ IAcadDimRotated **pDim);


void __RPC_STUB IAcadBlock_AddDimRotated_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddDimOrdinate_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT DefinitionPoint,
    /* [in] */ VARIANT LeaderEndPoint,
    /* [in] */ int UseXAxis,
    /* [retval][out] */ IAcadDimOrdinate **pDim);


void __RPC_STUB IAcadBlock_AddDimOrdinate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddDimRadial_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT Center,
    /* [in] */ VARIANT ChordPoint,
    /* [in] */ double LeaderLength,
    /* [retval][out] */ IAcadDimRadial **pDim);


void __RPC_STUB IAcadBlock_AddDimRadial_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddEllipse_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT Center,
    /* [in] */ VARIANT MajorAxis,
    /* [in] */ double RadiusRatio,
    /* [retval][out] */ IAcadEllipse **pEllipse);


void __RPC_STUB IAcadBlock_AddEllipse_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddEllipticalCone_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT Center,
    /* [in] */ double MajorRadius,
    /* [in] */ double MinorRadius,
    /* [in] */ double Height,
    /* [retval][out] */ IAcad3DSolid **pEllipCone);


void __RPC_STUB IAcadBlock_AddEllipticalCone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddEllipticalCylinder_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT Center,
    /* [in] */ double MajorRadius,
    /* [in] */ double MinorRadius,
    /* [in] */ double Height,
    /* [retval][out] */ IAcad3DSolid **pEllipCyl);


void __RPC_STUB IAcadBlock_AddEllipticalCylinder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddExtrudedSolid_Proxy( 
    IAcadBlock * This,
    /* [in] */ IAcadRegion *Profile,
    /* [in] */ double Height,
    /* [in] */ double TaperAngle,
    /* [retval][out] */ IAcad3DSolid **pExtrSolid);


void __RPC_STUB IAcadBlock_AddExtrudedSolid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddExtrudedSolidAlongPath_Proxy( 
    IAcadBlock * This,
    /* [in] */ IAcadRegion *Profile,
    /* [in] */ IDispatch *Path,
    /* [retval][out] */ IAcad3DSolid **pExtrSolid);


void __RPC_STUB IAcadBlock_AddExtrudedSolidAlongPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddLeader_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT PointsArray,
    /* [in] */ IAcadEntity *Annotation,
    /* [in] */ AcLeaderType Type,
    /* [retval][out] */ IAcadLeader **pLeader);


void __RPC_STUB IAcadBlock_AddLeader_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddMText_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT InsertionPoint,
    /* [in] */ double Width,
    /* [in] */ BSTR Text,
    /* [retval][out] */ IAcadMText **pMtext);


void __RPC_STUB IAcadBlock_AddMText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddPoint_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT Point,
    /* [retval][out] */ IAcadPoint **pPoint);


void __RPC_STUB IAcadBlock_AddPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddLightWeightPolyline_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT VerticesList,
    /* [retval][out] */ IAcadLWPolyline **pLWPolyline);


void __RPC_STUB IAcadBlock_AddLightWeightPolyline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddPolyline_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT VerticesList,
    /* [retval][out] */ IAcadPolyline **pPolyline);


void __RPC_STUB IAcadBlock_AddPolyline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddRay_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT Point1,
    /* [in] */ VARIANT Point2,
    /* [retval][out] */ IAcadRay **pRay);


void __RPC_STUB IAcadBlock_AddRay_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddRegion_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT ObjectList,
    /* [retval][out] */ VARIANT *pRegions);


void __RPC_STUB IAcadBlock_AddRegion_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddRevolvedSolid_Proxy( 
    IAcadBlock * This,
    /* [in] */ IAcadRegion *Profile,
    /* [in] */ VARIANT AxisPoint,
    /* [in] */ VARIANT AxisDir,
    /* [in] */ double Angle,
    /* [retval][out] */ IAcad3DSolid **pRevolSolid);


void __RPC_STUB IAcadBlock_AddRevolvedSolid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddShape_Proxy( 
    IAcadBlock * This,
    /* [in] */ BSTR Name,
    /* [in] */ VARIANT InsertionPoint,
    /* [in] */ double ScaleFactor,
    /* [in] */ double RotationAngle,
    /* [retval][out] */ IAcadShape **pShape);


void __RPC_STUB IAcadBlock_AddShape_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddSolid_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT Point1,
    /* [in] */ VARIANT Point2,
    /* [in] */ VARIANT point3,
    /* [in] */ VARIANT Point4,
    /* [retval][out] */ IAcadSolid **pSolid);


void __RPC_STUB IAcadBlock_AddSolid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddSphere_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT Center,
    /* [in] */ double Radius,
    /* [retval][out] */ IAcad3DSolid **pSphere);


void __RPC_STUB IAcadBlock_AddSphere_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddSpline_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT PointsArray,
    /* [in] */ VARIANT StartTangent,
    /* [in] */ VARIANT EndTangent,
    /* [retval][out] */ IAcadSpline **pSpline);


void __RPC_STUB IAcadBlock_AddSpline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddText_Proxy( 
    IAcadBlock * This,
    /* [in] */ BSTR TextString,
    /* [in] */ VARIANT InsertionPoint,
    /* [in] */ double Height,
    /* [retval][out] */ IAcadText **pText);


void __RPC_STUB IAcadBlock_AddText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddTolerance_Proxy( 
    IAcadBlock * This,
    /* [in] */ BSTR Text,
    /* [in] */ VARIANT InsertionPoint,
    /* [in] */ VARIANT Direction,
    /* [retval][out] */ IAcadTolerance **pTolerance);


void __RPC_STUB IAcadBlock_AddTolerance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddTorus_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT Center,
    /* [in] */ double TorusRadius,
    /* [in] */ double TubeRadius,
    /* [retval][out] */ IAcad3DSolid **pTorus);


void __RPC_STUB IAcadBlock_AddTorus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddTrace_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT PointsArray,
    /* [retval][out] */ IAcadTrace **pTrace);


void __RPC_STUB IAcadBlock_AddTrace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddWedge_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT Center,
    /* [in] */ double Length,
    /* [in] */ double Width,
    /* [in] */ double Height,
    /* [retval][out] */ IAcad3DSolid **pWedge);


void __RPC_STUB IAcadBlock_AddWedge_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddXline_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT Point1,
    /* [in] */ VARIANT Point2,
    /* [retval][out] */ IAcadXline **pXline);


void __RPC_STUB IAcadBlock_AddXline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_InsertBlock_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT InsertionPoint,
    /* [in] */ BSTR Name,
    /* [in] */ double Xscale,
    /* [in] */ double Yscale,
    /* [in] */ double Zscale,
    /* [in] */ double Rotation,
    /* [optional][in] */ VARIANT Password,
    /* [retval][out] */ IAcadBlockReference **pBlkRef);


void __RPC_STUB IAcadBlock_InsertBlock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddHatch_Proxy( 
    IAcadBlock * This,
    /* [in] */ int PatternType,
    /* [in] */ BSTR PatternName,
    /* [in] */ VARIANT_BOOL Associativity,
    /* [optional][in] */ VARIANT HatchObjectType,
    /* [retval][out] */ IAcadHatch **pHatch);


void __RPC_STUB IAcadBlock_AddHatch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddRaster_Proxy( 
    IAcadBlock * This,
    /* [in] */ BSTR imageFileName,
    /* [in] */ VARIANT InsertionPoint,
    /* [in] */ double ScaleFactor,
    /* [in] */ double RotationAngle,
    /* [retval][out] */ IAcadRasterImage **pRaster);


void __RPC_STUB IAcadBlock_AddRaster_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddLine_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT StartPoint,
    /* [in] */ VARIANT EndPoint,
    /* [retval][out] */ IAcadLine **pLine);


void __RPC_STUB IAcadBlock_AddLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_get_IsLayout_Proxy( 
    IAcadBlock * This,
    /* [retval][out] */ VARIANT_BOOL *bIsLayout);


void __RPC_STUB IAcadBlock_get_IsLayout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_get_Layout_Proxy( 
    IAcadBlock * This,
    /* [retval][out] */ IAcadLayout **pLayout);


void __RPC_STUB IAcadBlock_get_Layout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_get_IsXRef_Proxy( 
    IAcadBlock * This,
    /* [retval][out] */ VARIANT_BOOL *pIsXRref);


void __RPC_STUB IAcadBlock_get_IsXRef_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddMInsertBlock_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT InsertionPoint,
    /* [in] */ BSTR Name,
    /* [in] */ double Xscale,
    /* [in] */ double Yscale,
    /* [in] */ double Zscale,
    /* [in] */ double Rotation,
    /* [in] */ long NumRows,
    /* [in] */ long NumColumns,
    /* [in] */ long RowSpacing,
    /* [in] */ long ColumnSpacing,
    /* [optional][in] */ VARIANT Password,
    /* [retval][out] */ IAcadMInsertBlock **pMInsertBlk);


void __RPC_STUB IAcadBlock_AddMInsertBlock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddPolyfaceMesh_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT VertexList,
    /* [in] */ VARIANT FaceList,
    /* [retval][out] */ IAcadPolyfaceMesh **pPFMesh);


void __RPC_STUB IAcadBlock_AddPolyfaceMesh_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddMLine_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT VertexList,
    /* [retval][out] */ IAcadMLine **pMLine);


void __RPC_STUB IAcadBlock_AddMLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AddDim3PointAngular_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT AngleVertex,
    /* [in] */ VARIANT FirstEndPoint,
    /* [in] */ VARIANT SecondEndPoint,
    /* [in] */ VARIANT TextPoint,
    /* [retval][out] */ IAcadDim3PointAngular **pDim);


void __RPC_STUB IAcadBlock_AddDim3PointAngular_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_get_XRefDatabase_Proxy( 
    IAcadBlock * This,
    /* [retval][out] */ IAcadDatabase **pDatabase);


void __RPC_STUB IAcadBlock_get_XRefDatabase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_AttachExternalReference_Proxy( 
    IAcadBlock * This,
    /* [in] */ BSTR PathName,
    /* [in] */ BSTR Name,
    /* [in] */ VARIANT InsertionPoint,
    /* [in] */ double Xscale,
    /* [in] */ double Yscale,
    /* [in] */ double Zscale,
    /* [in] */ double Rotation,
    /* [in] */ VARIANT_BOOL bOverlay,
    /* [optional][in] */ VARIANT Password,
    /* [retval][out] */ IAcadExternalReference **pXRef);


void __RPC_STUB IAcadBlock_AttachExternalReference_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_Unload_Proxy( 
    IAcadBlock * This);


void __RPC_STUB IAcadBlock_Unload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_Reload_Proxy( 
    IAcadBlock * This);


void __RPC_STUB IAcadBlock_Reload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_Bind_Proxy( 
    IAcadBlock * This,
    /* [in] */ VARIANT_BOOL bPrefixName);


void __RPC_STUB IAcadBlock_Bind_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock_Detach_Proxy( 
    IAcadBlock * This);


void __RPC_STUB IAcadBlock_Detach_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadBlock_INTERFACE_DEFINED__ */


#ifndef __IAcadModelSpace_INTERFACE_DEFINED__
#define __IAcadModelSpace_INTERFACE_DEFINED__

/* interface IAcadModelSpace */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadModelSpace;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EACE0252-C787-4FCF-BA77-906667D7B12E")
    IAcadModelSpace : public IAcadBlock
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct IAcadModelSpaceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadModelSpace * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadModelSpace * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadModelSpace * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadModelSpace * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadModelSpace * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadModelSpace * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadModelSpace * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadModelSpace * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadModelSpace * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadModelSpace * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadModelSpace * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadModelSpace * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadModelSpace * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadModelSpace * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadModelSpace * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadModelSpace * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadModelSpace * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadModelSpace * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadModelSpace * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadEntity **pItem);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadModelSpace * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadModelSpace * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadModelSpace * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadModelSpace * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Origin )( 
            IAcadModelSpace * This,
            /* [retval][out] */ VARIANT *Origin);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Origin )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT Origin);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCustomObject )( 
            IAcadModelSpace * This,
            /* [in] */ BSTR ClassName,
            /* [retval][out] */ IDispatch **pObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DFace )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [in] */ VARIANT Point4,
            /* [retval][out] */ IAcad3DFace **pFace3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DMesh )( 
            IAcadModelSpace * This,
            /* [in] */ int M,
            /* [in] */ int N,
            /* [in] */ VARIANT PointsMatrix,
            /* [retval][out] */ IAcadPolygonMesh **pMesh3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DPoly )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT PointsArray,
            /* [retval][out] */ IAcad3DPolyline **pPoly3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddArc )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [in] */ double StartAngle,
            /* [in] */ double EndAngle,
            /* [retval][out] */ IAcadArc **pArc);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            IAcadModelSpace * This,
            /* [in] */ double Height,
            /* [in] */ AcAttributeMode Mode,
            /* [in] */ BSTR Prompt,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Tag,
            /* [in] */ BSTR Value,
            /* [retval][out] */ IAcadAttribute **pAttr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddBox )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT Origin,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pBox);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCircle )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [retval][out] */ IAcadCircle **pCircle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCone )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double BaseRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pCone);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCylinder )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pCyl);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimAligned )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT ExtLine1Point,
            /* [in] */ VARIANT ExtLine2Point,
            /* [in] */ VARIANT TextPosition,
            /* [retval][out] */ IAcadDimAligned **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimAngular )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT AngleVertex,
            /* [in] */ VARIANT FirstEndPoint,
            /* [in] */ VARIANT SecondEndPoint,
            /* [in] */ VARIANT TextPoint,
            /* [retval][out] */ IAcadDimAngular **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimDiametric )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT ChordPoint,
            /* [in] */ VARIANT FarChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IAcadDimDiametric **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimRotated )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT ExtLine1Point,
            /* [in] */ VARIANT ExtLine2Point,
            /* [in] */ VARIANT DimLineLocation,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadDimRotated **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimOrdinate )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT DefinitionPoint,
            /* [in] */ VARIANT LeaderEndPoint,
            /* [in] */ int UseXAxis,
            /* [retval][out] */ IAcadDimOrdinate **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimRadial )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ VARIANT ChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IAcadDimRadial **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipse )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ VARIANT MajorAxis,
            /* [in] */ double RadiusRatio,
            /* [retval][out] */ IAcadEllipse **pEllipse);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCone )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pEllipCone);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCylinder )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pEllipCyl);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolid )( 
            IAcadModelSpace * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ double Height,
            /* [in] */ double TaperAngle,
            /* [retval][out] */ IAcad3DSolid **pExtrSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolidAlongPath )( 
            IAcadModelSpace * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ IDispatch *Path,
            /* [retval][out] */ IAcad3DSolid **pExtrSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLeader )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT PointsArray,
            /* [in] */ IAcadEntity *Annotation,
            /* [in] */ AcLeaderType Type,
            /* [retval][out] */ IAcadLeader **pLeader);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMText )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Width,
            /* [in] */ BSTR Text,
            /* [retval][out] */ IAcadMText **pMtext);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPoint )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT Point,
            /* [retval][out] */ IAcadPoint **pPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLightWeightPolyline )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT VerticesList,
            /* [retval][out] */ IAcadLWPolyline **pLWPolyline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPolyline )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT VerticesList,
            /* [retval][out] */ IAcadPolyline **pPolyline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRay )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IAcadRay **pRay);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRegion )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT ObjectList,
            /* [retval][out] */ VARIANT *pRegions);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRevolvedSolid )( 
            IAcadModelSpace * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ VARIANT AxisPoint,
            /* [in] */ VARIANT AxisDir,
            /* [in] */ double Angle,
            /* [retval][out] */ IAcad3DSolid **pRevolSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddShape )( 
            IAcadModelSpace * This,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double ScaleFactor,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadShape **pShape);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSolid )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [in] */ VARIANT Point4,
            /* [retval][out] */ IAcadSolid **pSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSphere )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [retval][out] */ IAcad3DSolid **pSphere);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSpline )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT PointsArray,
            /* [in] */ VARIANT StartTangent,
            /* [in] */ VARIANT EndTangent,
            /* [retval][out] */ IAcadSpline **pSpline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddText )( 
            IAcadModelSpace * This,
            /* [in] */ BSTR TextString,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Height,
            /* [retval][out] */ IAcadText **pText);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTolerance )( 
            IAcadModelSpace * This,
            /* [in] */ BSTR Text,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ VARIANT Direction,
            /* [retval][out] */ IAcadTolerance **pTolerance);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTorus )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double TorusRadius,
            /* [in] */ double TubeRadius,
            /* [retval][out] */ IAcad3DSolid **pTorus);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTrace )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT PointsArray,
            /* [retval][out] */ IAcadTrace **pTrace);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddWedge )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pWedge);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddXline )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IAcadXline **pXline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *InsertBlock )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Name,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadBlockReference **pBlkRef);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddHatch )( 
            IAcadModelSpace * This,
            /* [in] */ int PatternType,
            /* [in] */ BSTR PatternName,
            /* [in] */ VARIANT_BOOL Associativity,
            /* [optional][in] */ VARIANT HatchObjectType,
            /* [retval][out] */ IAcadHatch **pHatch);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRaster )( 
            IAcadModelSpace * This,
            /* [in] */ BSTR imageFileName,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double ScaleFactor,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadRasterImage **pRaster);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLine )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT StartPoint,
            /* [in] */ VARIANT EndPoint,
            /* [retval][out] */ IAcadLine **pLine);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsLayout )( 
            IAcadModelSpace * This,
            /* [retval][out] */ VARIANT_BOOL *bIsLayout);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layout )( 
            IAcadModelSpace * This,
            /* [retval][out] */ IAcadLayout **pLayout);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsXRef )( 
            IAcadModelSpace * This,
            /* [retval][out] */ VARIANT_BOOL *pIsXRref);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMInsertBlock )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Name,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [in] */ long NumRows,
            /* [in] */ long NumColumns,
            /* [in] */ long RowSpacing,
            /* [in] */ long ColumnSpacing,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadMInsertBlock **pMInsertBlk);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPolyfaceMesh )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT VertexList,
            /* [in] */ VARIANT FaceList,
            /* [retval][out] */ IAcadPolyfaceMesh **pPFMesh);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMLine )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT VertexList,
            /* [retval][out] */ IAcadMLine **pMLine);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDim3PointAngular )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT AngleVertex,
            /* [in] */ VARIANT FirstEndPoint,
            /* [in] */ VARIANT SecondEndPoint,
            /* [in] */ VARIANT TextPoint,
            /* [retval][out] */ IAcadDim3PointAngular **pDim);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XRefDatabase )( 
            IAcadModelSpace * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AttachExternalReference )( 
            IAcadModelSpace * This,
            /* [in] */ BSTR PathName,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [in] */ VARIANT_BOOL bOverlay,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadExternalReference **pXRef);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Unload )( 
            IAcadModelSpace * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Reload )( 
            IAcadModelSpace * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Bind )( 
            IAcadModelSpace * This,
            /* [in] */ VARIANT_BOOL bPrefixName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Detach )( 
            IAcadModelSpace * This);
        
        END_INTERFACE
    } IAcadModelSpaceVtbl;

    interface IAcadModelSpace
    {
        CONST_VTBL struct IAcadModelSpaceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadModelSpace_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadModelSpace_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadModelSpace_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadModelSpace_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadModelSpace_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadModelSpace_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadModelSpace_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadModelSpace_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadModelSpace_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadModelSpace_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadModelSpace_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadModelSpace_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadModelSpace_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadModelSpace_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadModelSpace_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadModelSpace_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadModelSpace_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadModelSpace_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadModelSpace_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadModelSpace_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadModelSpace_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadModelSpace_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadModelSpace_get_Count(This,pVal)	\
    (This)->lpVtbl -> get_Count(This,pVal)

#define IAcadModelSpace_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadModelSpace_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#define IAcadModelSpace_get_Origin(This,Origin)	\
    (This)->lpVtbl -> get_Origin(This,Origin)

#define IAcadModelSpace_put_Origin(This,Origin)	\
    (This)->lpVtbl -> put_Origin(This,Origin)

#define IAcadModelSpace_AddCustomObject(This,ClassName,pObject)	\
    (This)->lpVtbl -> AddCustomObject(This,ClassName,pObject)

#define IAcadModelSpace_Add3DFace(This,Point1,Point2,point3,Point4,pFace3d)	\
    (This)->lpVtbl -> Add3DFace(This,Point1,Point2,point3,Point4,pFace3d)

#define IAcadModelSpace_Add3DMesh(This,M,N,PointsMatrix,pMesh3d)	\
    (This)->lpVtbl -> Add3DMesh(This,M,N,PointsMatrix,pMesh3d)

#define IAcadModelSpace_Add3DPoly(This,PointsArray,pPoly3d)	\
    (This)->lpVtbl -> Add3DPoly(This,PointsArray,pPoly3d)

#define IAcadModelSpace_AddArc(This,Center,Radius,StartAngle,EndAngle,pArc)	\
    (This)->lpVtbl -> AddArc(This,Center,Radius,StartAngle,EndAngle,pArc)

#define IAcadModelSpace_AddAttribute(This,Height,Mode,Prompt,InsertionPoint,Tag,Value,pAttr)	\
    (This)->lpVtbl -> AddAttribute(This,Height,Mode,Prompt,InsertionPoint,Tag,Value,pAttr)

#define IAcadModelSpace_AddBox(This,Origin,Length,Width,Height,pBox)	\
    (This)->lpVtbl -> AddBox(This,Origin,Length,Width,Height,pBox)

#define IAcadModelSpace_AddCircle(This,Center,Radius,pCircle)	\
    (This)->lpVtbl -> AddCircle(This,Center,Radius,pCircle)

#define IAcadModelSpace_AddCone(This,Center,BaseRadius,Height,pCone)	\
    (This)->lpVtbl -> AddCone(This,Center,BaseRadius,Height,pCone)

#define IAcadModelSpace_AddCylinder(This,Center,Radius,Height,pCyl)	\
    (This)->lpVtbl -> AddCylinder(This,Center,Radius,Height,pCyl)

#define IAcadModelSpace_AddDimAligned(This,ExtLine1Point,ExtLine2Point,TextPosition,pDim)	\
    (This)->lpVtbl -> AddDimAligned(This,ExtLine1Point,ExtLine2Point,TextPosition,pDim)

#define IAcadModelSpace_AddDimAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)	\
    (This)->lpVtbl -> AddDimAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)

#define IAcadModelSpace_AddDimDiametric(This,ChordPoint,FarChordPoint,LeaderLength,pDim)	\
    (This)->lpVtbl -> AddDimDiametric(This,ChordPoint,FarChordPoint,LeaderLength,pDim)

#define IAcadModelSpace_AddDimRotated(This,ExtLine1Point,ExtLine2Point,DimLineLocation,RotationAngle,pDim)	\
    (This)->lpVtbl -> AddDimRotated(This,ExtLine1Point,ExtLine2Point,DimLineLocation,RotationAngle,pDim)

#define IAcadModelSpace_AddDimOrdinate(This,DefinitionPoint,LeaderEndPoint,UseXAxis,pDim)	\
    (This)->lpVtbl -> AddDimOrdinate(This,DefinitionPoint,LeaderEndPoint,UseXAxis,pDim)

#define IAcadModelSpace_AddDimRadial(This,Center,ChordPoint,LeaderLength,pDim)	\
    (This)->lpVtbl -> AddDimRadial(This,Center,ChordPoint,LeaderLength,pDim)

#define IAcadModelSpace_AddEllipse(This,Center,MajorAxis,RadiusRatio,pEllipse)	\
    (This)->lpVtbl -> AddEllipse(This,Center,MajorAxis,RadiusRatio,pEllipse)

#define IAcadModelSpace_AddEllipticalCone(This,Center,MajorRadius,MinorRadius,Height,pEllipCone)	\
    (This)->lpVtbl -> AddEllipticalCone(This,Center,MajorRadius,MinorRadius,Height,pEllipCone)

#define IAcadModelSpace_AddEllipticalCylinder(This,Center,MajorRadius,MinorRadius,Height,pEllipCyl)	\
    (This)->lpVtbl -> AddEllipticalCylinder(This,Center,MajorRadius,MinorRadius,Height,pEllipCyl)

#define IAcadModelSpace_AddExtrudedSolid(This,Profile,Height,TaperAngle,pExtrSolid)	\
    (This)->lpVtbl -> AddExtrudedSolid(This,Profile,Height,TaperAngle,pExtrSolid)

#define IAcadModelSpace_AddExtrudedSolidAlongPath(This,Profile,Path,pExtrSolid)	\
    (This)->lpVtbl -> AddExtrudedSolidAlongPath(This,Profile,Path,pExtrSolid)

#define IAcadModelSpace_AddLeader(This,PointsArray,Annotation,Type,pLeader)	\
    (This)->lpVtbl -> AddLeader(This,PointsArray,Annotation,Type,pLeader)

#define IAcadModelSpace_AddMText(This,InsertionPoint,Width,Text,pMtext)	\
    (This)->lpVtbl -> AddMText(This,InsertionPoint,Width,Text,pMtext)

#define IAcadModelSpace_AddPoint(This,Point,pPoint)	\
    (This)->lpVtbl -> AddPoint(This,Point,pPoint)

#define IAcadModelSpace_AddLightWeightPolyline(This,VerticesList,pLWPolyline)	\
    (This)->lpVtbl -> AddLightWeightPolyline(This,VerticesList,pLWPolyline)

#define IAcadModelSpace_AddPolyline(This,VerticesList,pPolyline)	\
    (This)->lpVtbl -> AddPolyline(This,VerticesList,pPolyline)

#define IAcadModelSpace_AddRay(This,Point1,Point2,pRay)	\
    (This)->lpVtbl -> AddRay(This,Point1,Point2,pRay)

#define IAcadModelSpace_AddRegion(This,ObjectList,pRegions)	\
    (This)->lpVtbl -> AddRegion(This,ObjectList,pRegions)

#define IAcadModelSpace_AddRevolvedSolid(This,Profile,AxisPoint,AxisDir,Angle,pRevolSolid)	\
    (This)->lpVtbl -> AddRevolvedSolid(This,Profile,AxisPoint,AxisDir,Angle,pRevolSolid)

#define IAcadModelSpace_AddShape(This,Name,InsertionPoint,ScaleFactor,RotationAngle,pShape)	\
    (This)->lpVtbl -> AddShape(This,Name,InsertionPoint,ScaleFactor,RotationAngle,pShape)

#define IAcadModelSpace_AddSolid(This,Point1,Point2,point3,Point4,pSolid)	\
    (This)->lpVtbl -> AddSolid(This,Point1,Point2,point3,Point4,pSolid)

#define IAcadModelSpace_AddSphere(This,Center,Radius,pSphere)	\
    (This)->lpVtbl -> AddSphere(This,Center,Radius,pSphere)

#define IAcadModelSpace_AddSpline(This,PointsArray,StartTangent,EndTangent,pSpline)	\
    (This)->lpVtbl -> AddSpline(This,PointsArray,StartTangent,EndTangent,pSpline)

#define IAcadModelSpace_AddText(This,TextString,InsertionPoint,Height,pText)	\
    (This)->lpVtbl -> AddText(This,TextString,InsertionPoint,Height,pText)

#define IAcadModelSpace_AddTolerance(This,Text,InsertionPoint,Direction,pTolerance)	\
    (This)->lpVtbl -> AddTolerance(This,Text,InsertionPoint,Direction,pTolerance)

#define IAcadModelSpace_AddTorus(This,Center,TorusRadius,TubeRadius,pTorus)	\
    (This)->lpVtbl -> AddTorus(This,Center,TorusRadius,TubeRadius,pTorus)

#define IAcadModelSpace_AddTrace(This,PointsArray,pTrace)	\
    (This)->lpVtbl -> AddTrace(This,PointsArray,pTrace)

#define IAcadModelSpace_AddWedge(This,Center,Length,Width,Height,pWedge)	\
    (This)->lpVtbl -> AddWedge(This,Center,Length,Width,Height,pWedge)

#define IAcadModelSpace_AddXline(This,Point1,Point2,pXline)	\
    (This)->lpVtbl -> AddXline(This,Point1,Point2,pXline)

#define IAcadModelSpace_InsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,Password,pBlkRef)	\
    (This)->lpVtbl -> InsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,Password,pBlkRef)

#define IAcadModelSpace_AddHatch(This,PatternType,PatternName,Associativity,HatchObjectType,pHatch)	\
    (This)->lpVtbl -> AddHatch(This,PatternType,PatternName,Associativity,HatchObjectType,pHatch)

#define IAcadModelSpace_AddRaster(This,imageFileName,InsertionPoint,ScaleFactor,RotationAngle,pRaster)	\
    (This)->lpVtbl -> AddRaster(This,imageFileName,InsertionPoint,ScaleFactor,RotationAngle,pRaster)

#define IAcadModelSpace_AddLine(This,StartPoint,EndPoint,pLine)	\
    (This)->lpVtbl -> AddLine(This,StartPoint,EndPoint,pLine)

#define IAcadModelSpace_get_IsLayout(This,bIsLayout)	\
    (This)->lpVtbl -> get_IsLayout(This,bIsLayout)

#define IAcadModelSpace_get_Layout(This,pLayout)	\
    (This)->lpVtbl -> get_Layout(This,pLayout)

#define IAcadModelSpace_get_IsXRef(This,pIsXRref)	\
    (This)->lpVtbl -> get_IsXRef(This,pIsXRref)

#define IAcadModelSpace_AddMInsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,NumRows,NumColumns,RowSpacing,ColumnSpacing,Password,pMInsertBlk)	\
    (This)->lpVtbl -> AddMInsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,NumRows,NumColumns,RowSpacing,ColumnSpacing,Password,pMInsertBlk)

#define IAcadModelSpace_AddPolyfaceMesh(This,VertexList,FaceList,pPFMesh)	\
    (This)->lpVtbl -> AddPolyfaceMesh(This,VertexList,FaceList,pPFMesh)

#define IAcadModelSpace_AddMLine(This,VertexList,pMLine)	\
    (This)->lpVtbl -> AddMLine(This,VertexList,pMLine)

#define IAcadModelSpace_AddDim3PointAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)	\
    (This)->lpVtbl -> AddDim3PointAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)

#define IAcadModelSpace_get_XRefDatabase(This,pDatabase)	\
    (This)->lpVtbl -> get_XRefDatabase(This,pDatabase)

#define IAcadModelSpace_AttachExternalReference(This,PathName,Name,InsertionPoint,Xscale,Yscale,Zscale,Rotation,bOverlay,Password,pXRef)	\
    (This)->lpVtbl -> AttachExternalReference(This,PathName,Name,InsertionPoint,Xscale,Yscale,Zscale,Rotation,bOverlay,Password,pXRef)

#define IAcadModelSpace_Unload(This)	\
    (This)->lpVtbl -> Unload(This)

#define IAcadModelSpace_Reload(This)	\
    (This)->lpVtbl -> Reload(This)

#define IAcadModelSpace_Bind(This,bPrefixName)	\
    (This)->lpVtbl -> Bind(This,bPrefixName)

#define IAcadModelSpace_Detach(This)	\
    (This)->lpVtbl -> Detach(This)


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAcadModelSpace_INTERFACE_DEFINED__ */


#ifndef __IAcadBlock2_INTERFACE_DEFINED__
#define __IAcadBlock2_INTERFACE_DEFINED__

/* interface IAcadBlock2 */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadBlock2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EA11F695-D2A7-4602-A34D-03B7B11FA762")
    IAcadBlock2 : public IAcadBlock
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddTable( 
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ int NumRows,
            /* [in] */ int NumColumns,
            /* [in] */ double RowHeight,
            /* [in] */ double ColWidth,
            /* [retval][out] */ IAcadTable **pTable) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Path( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Path( 
            /* [in] */ BSTR bstrName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadBlock2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadBlock2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadBlock2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadBlock2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadBlock2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadBlock2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadBlock2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadBlock2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadBlock2 * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadBlock2 * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadBlock2 * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadBlock2 * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadBlock2 * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadBlock2 * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadBlock2 * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadBlock2 * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadBlock2 * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadBlock2 * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadBlock2 * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadBlock2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadEntity **pItem);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadBlock2 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadBlock2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadBlock2 * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadBlock2 * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Origin )( 
            IAcadBlock2 * This,
            /* [retval][out] */ VARIANT *Origin);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Origin )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT Origin);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCustomObject )( 
            IAcadBlock2 * This,
            /* [in] */ BSTR ClassName,
            /* [retval][out] */ IDispatch **pObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DFace )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [in] */ VARIANT Point4,
            /* [retval][out] */ IAcad3DFace **pFace3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DMesh )( 
            IAcadBlock2 * This,
            /* [in] */ int M,
            /* [in] */ int N,
            /* [in] */ VARIANT PointsMatrix,
            /* [retval][out] */ IAcadPolygonMesh **pMesh3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DPoly )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT PointsArray,
            /* [retval][out] */ IAcad3DPolyline **pPoly3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddArc )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [in] */ double StartAngle,
            /* [in] */ double EndAngle,
            /* [retval][out] */ IAcadArc **pArc);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            IAcadBlock2 * This,
            /* [in] */ double Height,
            /* [in] */ AcAttributeMode Mode,
            /* [in] */ BSTR Prompt,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Tag,
            /* [in] */ BSTR Value,
            /* [retval][out] */ IAcadAttribute **pAttr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddBox )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT Origin,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pBox);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCircle )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [retval][out] */ IAcadCircle **pCircle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCone )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double BaseRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pCone);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCylinder )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pCyl);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimAligned )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT ExtLine1Point,
            /* [in] */ VARIANT ExtLine2Point,
            /* [in] */ VARIANT TextPosition,
            /* [retval][out] */ IAcadDimAligned **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimAngular )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT AngleVertex,
            /* [in] */ VARIANT FirstEndPoint,
            /* [in] */ VARIANT SecondEndPoint,
            /* [in] */ VARIANT TextPoint,
            /* [retval][out] */ IAcadDimAngular **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimDiametric )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT ChordPoint,
            /* [in] */ VARIANT FarChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IAcadDimDiametric **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimRotated )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT ExtLine1Point,
            /* [in] */ VARIANT ExtLine2Point,
            /* [in] */ VARIANT DimLineLocation,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadDimRotated **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimOrdinate )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT DefinitionPoint,
            /* [in] */ VARIANT LeaderEndPoint,
            /* [in] */ int UseXAxis,
            /* [retval][out] */ IAcadDimOrdinate **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimRadial )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ VARIANT ChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IAcadDimRadial **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipse )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ VARIANT MajorAxis,
            /* [in] */ double RadiusRatio,
            /* [retval][out] */ IAcadEllipse **pEllipse);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCone )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pEllipCone);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCylinder )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pEllipCyl);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolid )( 
            IAcadBlock2 * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ double Height,
            /* [in] */ double TaperAngle,
            /* [retval][out] */ IAcad3DSolid **pExtrSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolidAlongPath )( 
            IAcadBlock2 * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ IDispatch *Path,
            /* [retval][out] */ IAcad3DSolid **pExtrSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLeader )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT PointsArray,
            /* [in] */ IAcadEntity *Annotation,
            /* [in] */ AcLeaderType Type,
            /* [retval][out] */ IAcadLeader **pLeader);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMText )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Width,
            /* [in] */ BSTR Text,
            /* [retval][out] */ IAcadMText **pMtext);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPoint )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT Point,
            /* [retval][out] */ IAcadPoint **pPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLightWeightPolyline )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT VerticesList,
            /* [retval][out] */ IAcadLWPolyline **pLWPolyline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPolyline )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT VerticesList,
            /* [retval][out] */ IAcadPolyline **pPolyline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRay )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IAcadRay **pRay);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRegion )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT ObjectList,
            /* [retval][out] */ VARIANT *pRegions);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRevolvedSolid )( 
            IAcadBlock2 * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ VARIANT AxisPoint,
            /* [in] */ VARIANT AxisDir,
            /* [in] */ double Angle,
            /* [retval][out] */ IAcad3DSolid **pRevolSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddShape )( 
            IAcadBlock2 * This,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double ScaleFactor,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadShape **pShape);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSolid )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [in] */ VARIANT Point4,
            /* [retval][out] */ IAcadSolid **pSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSphere )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [retval][out] */ IAcad3DSolid **pSphere);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSpline )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT PointsArray,
            /* [in] */ VARIANT StartTangent,
            /* [in] */ VARIANT EndTangent,
            /* [retval][out] */ IAcadSpline **pSpline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddText )( 
            IAcadBlock2 * This,
            /* [in] */ BSTR TextString,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Height,
            /* [retval][out] */ IAcadText **pText);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTolerance )( 
            IAcadBlock2 * This,
            /* [in] */ BSTR Text,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ VARIANT Direction,
            /* [retval][out] */ IAcadTolerance **pTolerance);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTorus )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double TorusRadius,
            /* [in] */ double TubeRadius,
            /* [retval][out] */ IAcad3DSolid **pTorus);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTrace )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT PointsArray,
            /* [retval][out] */ IAcadTrace **pTrace);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddWedge )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pWedge);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddXline )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IAcadXline **pXline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *InsertBlock )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Name,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadBlockReference **pBlkRef);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddHatch )( 
            IAcadBlock2 * This,
            /* [in] */ int PatternType,
            /* [in] */ BSTR PatternName,
            /* [in] */ VARIANT_BOOL Associativity,
            /* [optional][in] */ VARIANT HatchObjectType,
            /* [retval][out] */ IAcadHatch **pHatch);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRaster )( 
            IAcadBlock2 * This,
            /* [in] */ BSTR imageFileName,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double ScaleFactor,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadRasterImage **pRaster);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLine )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT StartPoint,
            /* [in] */ VARIANT EndPoint,
            /* [retval][out] */ IAcadLine **pLine);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsLayout )( 
            IAcadBlock2 * This,
            /* [retval][out] */ VARIANT_BOOL *bIsLayout);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layout )( 
            IAcadBlock2 * This,
            /* [retval][out] */ IAcadLayout **pLayout);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsXRef )( 
            IAcadBlock2 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsXRref);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMInsertBlock )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Name,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [in] */ long NumRows,
            /* [in] */ long NumColumns,
            /* [in] */ long RowSpacing,
            /* [in] */ long ColumnSpacing,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadMInsertBlock **pMInsertBlk);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPolyfaceMesh )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT VertexList,
            /* [in] */ VARIANT FaceList,
            /* [retval][out] */ IAcadPolyfaceMesh **pPFMesh);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMLine )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT VertexList,
            /* [retval][out] */ IAcadMLine **pMLine);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDim3PointAngular )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT AngleVertex,
            /* [in] */ VARIANT FirstEndPoint,
            /* [in] */ VARIANT SecondEndPoint,
            /* [in] */ VARIANT TextPoint,
            /* [retval][out] */ IAcadDim3PointAngular **pDim);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XRefDatabase )( 
            IAcadBlock2 * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AttachExternalReference )( 
            IAcadBlock2 * This,
            /* [in] */ BSTR PathName,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [in] */ VARIANT_BOOL bOverlay,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadExternalReference **pXRef);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Unload )( 
            IAcadBlock2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Reload )( 
            IAcadBlock2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Bind )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT_BOOL bPrefixName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Detach )( 
            IAcadBlock2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTable )( 
            IAcadBlock2 * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ int NumRows,
            /* [in] */ int NumColumns,
            /* [in] */ double RowHeight,
            /* [in] */ double ColWidth,
            /* [retval][out] */ IAcadTable **pTable);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Path )( 
            IAcadBlock2 * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Path )( 
            IAcadBlock2 * This,
            /* [in] */ BSTR bstrName);
        
        END_INTERFACE
    } IAcadBlock2Vtbl;

    interface IAcadBlock2
    {
        CONST_VTBL struct IAcadBlock2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadBlock2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadBlock2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadBlock2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadBlock2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadBlock2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadBlock2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadBlock2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadBlock2_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadBlock2_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadBlock2_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadBlock2_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadBlock2_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadBlock2_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadBlock2_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadBlock2_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadBlock2_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadBlock2_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadBlock2_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadBlock2_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadBlock2_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadBlock2_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadBlock2_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadBlock2_get_Count(This,pVal)	\
    (This)->lpVtbl -> get_Count(This,pVal)

#define IAcadBlock2_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadBlock2_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#define IAcadBlock2_get_Origin(This,Origin)	\
    (This)->lpVtbl -> get_Origin(This,Origin)

#define IAcadBlock2_put_Origin(This,Origin)	\
    (This)->lpVtbl -> put_Origin(This,Origin)

#define IAcadBlock2_AddCustomObject(This,ClassName,pObject)	\
    (This)->lpVtbl -> AddCustomObject(This,ClassName,pObject)

#define IAcadBlock2_Add3DFace(This,Point1,Point2,point3,Point4,pFace3d)	\
    (This)->lpVtbl -> Add3DFace(This,Point1,Point2,point3,Point4,pFace3d)

#define IAcadBlock2_Add3DMesh(This,M,N,PointsMatrix,pMesh3d)	\
    (This)->lpVtbl -> Add3DMesh(This,M,N,PointsMatrix,pMesh3d)

#define IAcadBlock2_Add3DPoly(This,PointsArray,pPoly3d)	\
    (This)->lpVtbl -> Add3DPoly(This,PointsArray,pPoly3d)

#define IAcadBlock2_AddArc(This,Center,Radius,StartAngle,EndAngle,pArc)	\
    (This)->lpVtbl -> AddArc(This,Center,Radius,StartAngle,EndAngle,pArc)

#define IAcadBlock2_AddAttribute(This,Height,Mode,Prompt,InsertionPoint,Tag,Value,pAttr)	\
    (This)->lpVtbl -> AddAttribute(This,Height,Mode,Prompt,InsertionPoint,Tag,Value,pAttr)

#define IAcadBlock2_AddBox(This,Origin,Length,Width,Height,pBox)	\
    (This)->lpVtbl -> AddBox(This,Origin,Length,Width,Height,pBox)

#define IAcadBlock2_AddCircle(This,Center,Radius,pCircle)	\
    (This)->lpVtbl -> AddCircle(This,Center,Radius,pCircle)

#define IAcadBlock2_AddCone(This,Center,BaseRadius,Height,pCone)	\
    (This)->lpVtbl -> AddCone(This,Center,BaseRadius,Height,pCone)

#define IAcadBlock2_AddCylinder(This,Center,Radius,Height,pCyl)	\
    (This)->lpVtbl -> AddCylinder(This,Center,Radius,Height,pCyl)

#define IAcadBlock2_AddDimAligned(This,ExtLine1Point,ExtLine2Point,TextPosition,pDim)	\
    (This)->lpVtbl -> AddDimAligned(This,ExtLine1Point,ExtLine2Point,TextPosition,pDim)

#define IAcadBlock2_AddDimAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)	\
    (This)->lpVtbl -> AddDimAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)

#define IAcadBlock2_AddDimDiametric(This,ChordPoint,FarChordPoint,LeaderLength,pDim)	\
    (This)->lpVtbl -> AddDimDiametric(This,ChordPoint,FarChordPoint,LeaderLength,pDim)

#define IAcadBlock2_AddDimRotated(This,ExtLine1Point,ExtLine2Point,DimLineLocation,RotationAngle,pDim)	\
    (This)->lpVtbl -> AddDimRotated(This,ExtLine1Point,ExtLine2Point,DimLineLocation,RotationAngle,pDim)

#define IAcadBlock2_AddDimOrdinate(This,DefinitionPoint,LeaderEndPoint,UseXAxis,pDim)	\
    (This)->lpVtbl -> AddDimOrdinate(This,DefinitionPoint,LeaderEndPoint,UseXAxis,pDim)

#define IAcadBlock2_AddDimRadial(This,Center,ChordPoint,LeaderLength,pDim)	\
    (This)->lpVtbl -> AddDimRadial(This,Center,ChordPoint,LeaderLength,pDim)

#define IAcadBlock2_AddEllipse(This,Center,MajorAxis,RadiusRatio,pEllipse)	\
    (This)->lpVtbl -> AddEllipse(This,Center,MajorAxis,RadiusRatio,pEllipse)

#define IAcadBlock2_AddEllipticalCone(This,Center,MajorRadius,MinorRadius,Height,pEllipCone)	\
    (This)->lpVtbl -> AddEllipticalCone(This,Center,MajorRadius,MinorRadius,Height,pEllipCone)

#define IAcadBlock2_AddEllipticalCylinder(This,Center,MajorRadius,MinorRadius,Height,pEllipCyl)	\
    (This)->lpVtbl -> AddEllipticalCylinder(This,Center,MajorRadius,MinorRadius,Height,pEllipCyl)

#define IAcadBlock2_AddExtrudedSolid(This,Profile,Height,TaperAngle,pExtrSolid)	\
    (This)->lpVtbl -> AddExtrudedSolid(This,Profile,Height,TaperAngle,pExtrSolid)

#define IAcadBlock2_AddExtrudedSolidAlongPath(This,Profile,Path,pExtrSolid)	\
    (This)->lpVtbl -> AddExtrudedSolidAlongPath(This,Profile,Path,pExtrSolid)

#define IAcadBlock2_AddLeader(This,PointsArray,Annotation,Type,pLeader)	\
    (This)->lpVtbl -> AddLeader(This,PointsArray,Annotation,Type,pLeader)

#define IAcadBlock2_AddMText(This,InsertionPoint,Width,Text,pMtext)	\
    (This)->lpVtbl -> AddMText(This,InsertionPoint,Width,Text,pMtext)

#define IAcadBlock2_AddPoint(This,Point,pPoint)	\
    (This)->lpVtbl -> AddPoint(This,Point,pPoint)

#define IAcadBlock2_AddLightWeightPolyline(This,VerticesList,pLWPolyline)	\
    (This)->lpVtbl -> AddLightWeightPolyline(This,VerticesList,pLWPolyline)

#define IAcadBlock2_AddPolyline(This,VerticesList,pPolyline)	\
    (This)->lpVtbl -> AddPolyline(This,VerticesList,pPolyline)

#define IAcadBlock2_AddRay(This,Point1,Point2,pRay)	\
    (This)->lpVtbl -> AddRay(This,Point1,Point2,pRay)

#define IAcadBlock2_AddRegion(This,ObjectList,pRegions)	\
    (This)->lpVtbl -> AddRegion(This,ObjectList,pRegions)

#define IAcadBlock2_AddRevolvedSolid(This,Profile,AxisPoint,AxisDir,Angle,pRevolSolid)	\
    (This)->lpVtbl -> AddRevolvedSolid(This,Profile,AxisPoint,AxisDir,Angle,pRevolSolid)

#define IAcadBlock2_AddShape(This,Name,InsertionPoint,ScaleFactor,RotationAngle,pShape)	\
    (This)->lpVtbl -> AddShape(This,Name,InsertionPoint,ScaleFactor,RotationAngle,pShape)

#define IAcadBlock2_AddSolid(This,Point1,Point2,point3,Point4,pSolid)	\
    (This)->lpVtbl -> AddSolid(This,Point1,Point2,point3,Point4,pSolid)

#define IAcadBlock2_AddSphere(This,Center,Radius,pSphere)	\
    (This)->lpVtbl -> AddSphere(This,Center,Radius,pSphere)

#define IAcadBlock2_AddSpline(This,PointsArray,StartTangent,EndTangent,pSpline)	\
    (This)->lpVtbl -> AddSpline(This,PointsArray,StartTangent,EndTangent,pSpline)

#define IAcadBlock2_AddText(This,TextString,InsertionPoint,Height,pText)	\
    (This)->lpVtbl -> AddText(This,TextString,InsertionPoint,Height,pText)

#define IAcadBlock2_AddTolerance(This,Text,InsertionPoint,Direction,pTolerance)	\
    (This)->lpVtbl -> AddTolerance(This,Text,InsertionPoint,Direction,pTolerance)

#define IAcadBlock2_AddTorus(This,Center,TorusRadius,TubeRadius,pTorus)	\
    (This)->lpVtbl -> AddTorus(This,Center,TorusRadius,TubeRadius,pTorus)

#define IAcadBlock2_AddTrace(This,PointsArray,pTrace)	\
    (This)->lpVtbl -> AddTrace(This,PointsArray,pTrace)

#define IAcadBlock2_AddWedge(This,Center,Length,Width,Height,pWedge)	\
    (This)->lpVtbl -> AddWedge(This,Center,Length,Width,Height,pWedge)

#define IAcadBlock2_AddXline(This,Point1,Point2,pXline)	\
    (This)->lpVtbl -> AddXline(This,Point1,Point2,pXline)

#define IAcadBlock2_InsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,Password,pBlkRef)	\
    (This)->lpVtbl -> InsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,Password,pBlkRef)

#define IAcadBlock2_AddHatch(This,PatternType,PatternName,Associativity,HatchObjectType,pHatch)	\
    (This)->lpVtbl -> AddHatch(This,PatternType,PatternName,Associativity,HatchObjectType,pHatch)

#define IAcadBlock2_AddRaster(This,imageFileName,InsertionPoint,ScaleFactor,RotationAngle,pRaster)	\
    (This)->lpVtbl -> AddRaster(This,imageFileName,InsertionPoint,ScaleFactor,RotationAngle,pRaster)

#define IAcadBlock2_AddLine(This,StartPoint,EndPoint,pLine)	\
    (This)->lpVtbl -> AddLine(This,StartPoint,EndPoint,pLine)

#define IAcadBlock2_get_IsLayout(This,bIsLayout)	\
    (This)->lpVtbl -> get_IsLayout(This,bIsLayout)

#define IAcadBlock2_get_Layout(This,pLayout)	\
    (This)->lpVtbl -> get_Layout(This,pLayout)

#define IAcadBlock2_get_IsXRef(This,pIsXRref)	\
    (This)->lpVtbl -> get_IsXRef(This,pIsXRref)

#define IAcadBlock2_AddMInsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,NumRows,NumColumns,RowSpacing,ColumnSpacing,Password,pMInsertBlk)	\
    (This)->lpVtbl -> AddMInsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,NumRows,NumColumns,RowSpacing,ColumnSpacing,Password,pMInsertBlk)

#define IAcadBlock2_AddPolyfaceMesh(This,VertexList,FaceList,pPFMesh)	\
    (This)->lpVtbl -> AddPolyfaceMesh(This,VertexList,FaceList,pPFMesh)

#define IAcadBlock2_AddMLine(This,VertexList,pMLine)	\
    (This)->lpVtbl -> AddMLine(This,VertexList,pMLine)

#define IAcadBlock2_AddDim3PointAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)	\
    (This)->lpVtbl -> AddDim3PointAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)

#define IAcadBlock2_get_XRefDatabase(This,pDatabase)	\
    (This)->lpVtbl -> get_XRefDatabase(This,pDatabase)

#define IAcadBlock2_AttachExternalReference(This,PathName,Name,InsertionPoint,Xscale,Yscale,Zscale,Rotation,bOverlay,Password,pXRef)	\
    (This)->lpVtbl -> AttachExternalReference(This,PathName,Name,InsertionPoint,Xscale,Yscale,Zscale,Rotation,bOverlay,Password,pXRef)

#define IAcadBlock2_Unload(This)	\
    (This)->lpVtbl -> Unload(This)

#define IAcadBlock2_Reload(This)	\
    (This)->lpVtbl -> Reload(This)

#define IAcadBlock2_Bind(This,bPrefixName)	\
    (This)->lpVtbl -> Bind(This,bPrefixName)

#define IAcadBlock2_Detach(This)	\
    (This)->lpVtbl -> Detach(This)


#define IAcadBlock2_AddTable(This,InsertionPoint,NumRows,NumColumns,RowHeight,ColWidth,pTable)	\
    (This)->lpVtbl -> AddTable(This,InsertionPoint,NumRows,NumColumns,RowHeight,ColWidth,pTable)

#define IAcadBlock2_get_Path(This,bstrName)	\
    (This)->lpVtbl -> get_Path(This,bstrName)

#define IAcadBlock2_put_Path(This,bstrName)	\
    (This)->lpVtbl -> put_Path(This,bstrName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock2_AddTable_Proxy( 
    IAcadBlock2 * This,
    /* [in] */ VARIANT InsertionPoint,
    /* [in] */ int NumRows,
    /* [in] */ int NumColumns,
    /* [in] */ double RowHeight,
    /* [in] */ double ColWidth,
    /* [retval][out] */ IAcadTable **pTable);


void __RPC_STUB IAcadBlock2_AddTable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock2_get_Path_Proxy( 
    IAcadBlock2 * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadBlock2_get_Path_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadBlock2_put_Path_Proxy( 
    IAcadBlock2 * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadBlock2_put_Path_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadBlock2_INTERFACE_DEFINED__ */


#ifndef __IOdaBlock_INTERFACE_DEFINED__
#define __IOdaBlock_INTERFACE_DEFINED__

/* interface IOdaBlock */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IOdaBlock;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DF4624E2-D5BF-4c7b-9E3C-A29083187720")
    IOdaBlock : public IAcadBlock2
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetReferences( 
            /* [retval][out] */ VARIANT *pObjs) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_isFromOverlayReference( 
            /* [retval][out] */ VARIANT_BOOL *bResult) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_isResolved( 
            /* [retval][out] */ VARIANT_BOOL *bResult) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_isDependent( 
            /* [retval][out] */ VARIANT_BOOL *bResult) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_isUnloaded( 
            /* [retval][out] */ VARIANT_BOOL *bResult) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE setOverlaid( 
            /* [in] */ VARIANT_BOOL bOverlaid) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOdaBlockVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IOdaBlock * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IOdaBlock * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IOdaBlock * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IOdaBlock * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IOdaBlock * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IOdaBlock * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IOdaBlock * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IOdaBlock * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IOdaBlock * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IOdaBlock * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IOdaBlock * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IOdaBlock * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IOdaBlock * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IOdaBlock * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IOdaBlock * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IOdaBlock * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IOdaBlock * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IOdaBlock * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IOdaBlock * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IOdaBlock * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IOdaBlock * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadEntity **pItem);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IOdaBlock * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IOdaBlock * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IOdaBlock * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IOdaBlock * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Origin )( 
            IOdaBlock * This,
            /* [retval][out] */ VARIANT *Origin);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Origin )( 
            IOdaBlock * This,
            /* [in] */ VARIANT Origin);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCustomObject )( 
            IOdaBlock * This,
            /* [in] */ BSTR ClassName,
            /* [retval][out] */ IDispatch **pObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DFace )( 
            IOdaBlock * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [in] */ VARIANT Point4,
            /* [retval][out] */ IAcad3DFace **pFace3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DMesh )( 
            IOdaBlock * This,
            /* [in] */ int M,
            /* [in] */ int N,
            /* [in] */ VARIANT PointsMatrix,
            /* [retval][out] */ IAcadPolygonMesh **pMesh3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DPoly )( 
            IOdaBlock * This,
            /* [in] */ VARIANT PointsArray,
            /* [retval][out] */ IAcad3DPolyline **pPoly3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddArc )( 
            IOdaBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [in] */ double StartAngle,
            /* [in] */ double EndAngle,
            /* [retval][out] */ IAcadArc **pArc);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            IOdaBlock * This,
            /* [in] */ double Height,
            /* [in] */ AcAttributeMode Mode,
            /* [in] */ BSTR Prompt,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Tag,
            /* [in] */ BSTR Value,
            /* [retval][out] */ IAcadAttribute **pAttr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddBox )( 
            IOdaBlock * This,
            /* [in] */ VARIANT Origin,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pBox);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCircle )( 
            IOdaBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [retval][out] */ IAcadCircle **pCircle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCone )( 
            IOdaBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double BaseRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pCone);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCylinder )( 
            IOdaBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pCyl);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimAligned )( 
            IOdaBlock * This,
            /* [in] */ VARIANT ExtLine1Point,
            /* [in] */ VARIANT ExtLine2Point,
            /* [in] */ VARIANT TextPosition,
            /* [retval][out] */ IAcadDimAligned **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimAngular )( 
            IOdaBlock * This,
            /* [in] */ VARIANT AngleVertex,
            /* [in] */ VARIANT FirstEndPoint,
            /* [in] */ VARIANT SecondEndPoint,
            /* [in] */ VARIANT TextPoint,
            /* [retval][out] */ IAcadDimAngular **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimDiametric )( 
            IOdaBlock * This,
            /* [in] */ VARIANT ChordPoint,
            /* [in] */ VARIANT FarChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IAcadDimDiametric **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimRotated )( 
            IOdaBlock * This,
            /* [in] */ VARIANT ExtLine1Point,
            /* [in] */ VARIANT ExtLine2Point,
            /* [in] */ VARIANT DimLineLocation,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadDimRotated **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimOrdinate )( 
            IOdaBlock * This,
            /* [in] */ VARIANT DefinitionPoint,
            /* [in] */ VARIANT LeaderEndPoint,
            /* [in] */ int UseXAxis,
            /* [retval][out] */ IAcadDimOrdinate **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimRadial )( 
            IOdaBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ VARIANT ChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IAcadDimRadial **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipse )( 
            IOdaBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ VARIANT MajorAxis,
            /* [in] */ double RadiusRatio,
            /* [retval][out] */ IAcadEllipse **pEllipse);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCone )( 
            IOdaBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pEllipCone);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCylinder )( 
            IOdaBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pEllipCyl);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolid )( 
            IOdaBlock * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ double Height,
            /* [in] */ double TaperAngle,
            /* [retval][out] */ IAcad3DSolid **pExtrSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolidAlongPath )( 
            IOdaBlock * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ IDispatch *Path,
            /* [retval][out] */ IAcad3DSolid **pExtrSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLeader )( 
            IOdaBlock * This,
            /* [in] */ VARIANT PointsArray,
            /* [in] */ IAcadEntity *Annotation,
            /* [in] */ AcLeaderType Type,
            /* [retval][out] */ IAcadLeader **pLeader);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMText )( 
            IOdaBlock * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Width,
            /* [in] */ BSTR Text,
            /* [retval][out] */ IAcadMText **pMtext);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPoint )( 
            IOdaBlock * This,
            /* [in] */ VARIANT Point,
            /* [retval][out] */ IAcadPoint **pPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLightWeightPolyline )( 
            IOdaBlock * This,
            /* [in] */ VARIANT VerticesList,
            /* [retval][out] */ IAcadLWPolyline **pLWPolyline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPolyline )( 
            IOdaBlock * This,
            /* [in] */ VARIANT VerticesList,
            /* [retval][out] */ IAcadPolyline **pPolyline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRay )( 
            IOdaBlock * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IAcadRay **pRay);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRegion )( 
            IOdaBlock * This,
            /* [in] */ VARIANT ObjectList,
            /* [retval][out] */ VARIANT *pRegions);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRevolvedSolid )( 
            IOdaBlock * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ VARIANT AxisPoint,
            /* [in] */ VARIANT AxisDir,
            /* [in] */ double Angle,
            /* [retval][out] */ IAcad3DSolid **pRevolSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddShape )( 
            IOdaBlock * This,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double ScaleFactor,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadShape **pShape);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSolid )( 
            IOdaBlock * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [in] */ VARIANT Point4,
            /* [retval][out] */ IAcadSolid **pSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSphere )( 
            IOdaBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [retval][out] */ IAcad3DSolid **pSphere);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSpline )( 
            IOdaBlock * This,
            /* [in] */ VARIANT PointsArray,
            /* [in] */ VARIANT StartTangent,
            /* [in] */ VARIANT EndTangent,
            /* [retval][out] */ IAcadSpline **pSpline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddText )( 
            IOdaBlock * This,
            /* [in] */ BSTR TextString,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Height,
            /* [retval][out] */ IAcadText **pText);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTolerance )( 
            IOdaBlock * This,
            /* [in] */ BSTR Text,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ VARIANT Direction,
            /* [retval][out] */ IAcadTolerance **pTolerance);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTorus )( 
            IOdaBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double TorusRadius,
            /* [in] */ double TubeRadius,
            /* [retval][out] */ IAcad3DSolid **pTorus);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTrace )( 
            IOdaBlock * This,
            /* [in] */ VARIANT PointsArray,
            /* [retval][out] */ IAcadTrace **pTrace);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddWedge )( 
            IOdaBlock * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pWedge);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddXline )( 
            IOdaBlock * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IAcadXline **pXline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *InsertBlock )( 
            IOdaBlock * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Name,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadBlockReference **pBlkRef);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddHatch )( 
            IOdaBlock * This,
            /* [in] */ int PatternType,
            /* [in] */ BSTR PatternName,
            /* [in] */ VARIANT_BOOL Associativity,
            /* [optional][in] */ VARIANT HatchObjectType,
            /* [retval][out] */ IAcadHatch **pHatch);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRaster )( 
            IOdaBlock * This,
            /* [in] */ BSTR imageFileName,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double ScaleFactor,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadRasterImage **pRaster);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLine )( 
            IOdaBlock * This,
            /* [in] */ VARIANT StartPoint,
            /* [in] */ VARIANT EndPoint,
            /* [retval][out] */ IAcadLine **pLine);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsLayout )( 
            IOdaBlock * This,
            /* [retval][out] */ VARIANT_BOOL *bIsLayout);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layout )( 
            IOdaBlock * This,
            /* [retval][out] */ IAcadLayout **pLayout);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsXRef )( 
            IOdaBlock * This,
            /* [retval][out] */ VARIANT_BOOL *pIsXRref);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMInsertBlock )( 
            IOdaBlock * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Name,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [in] */ long NumRows,
            /* [in] */ long NumColumns,
            /* [in] */ long RowSpacing,
            /* [in] */ long ColumnSpacing,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadMInsertBlock **pMInsertBlk);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPolyfaceMesh )( 
            IOdaBlock * This,
            /* [in] */ VARIANT VertexList,
            /* [in] */ VARIANT FaceList,
            /* [retval][out] */ IAcadPolyfaceMesh **pPFMesh);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMLine )( 
            IOdaBlock * This,
            /* [in] */ VARIANT VertexList,
            /* [retval][out] */ IAcadMLine **pMLine);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDim3PointAngular )( 
            IOdaBlock * This,
            /* [in] */ VARIANT AngleVertex,
            /* [in] */ VARIANT FirstEndPoint,
            /* [in] */ VARIANT SecondEndPoint,
            /* [in] */ VARIANT TextPoint,
            /* [retval][out] */ IAcadDim3PointAngular **pDim);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XRefDatabase )( 
            IOdaBlock * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AttachExternalReference )( 
            IOdaBlock * This,
            /* [in] */ BSTR PathName,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [in] */ VARIANT_BOOL bOverlay,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadExternalReference **pXRef);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Unload )( 
            IOdaBlock * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Reload )( 
            IOdaBlock * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Bind )( 
            IOdaBlock * This,
            /* [in] */ VARIANT_BOOL bPrefixName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Detach )( 
            IOdaBlock * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTable )( 
            IOdaBlock * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ int NumRows,
            /* [in] */ int NumColumns,
            /* [in] */ double RowHeight,
            /* [in] */ double ColWidth,
            /* [retval][out] */ IAcadTable **pTable);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Path )( 
            IOdaBlock * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Path )( 
            IOdaBlock * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetReferences )( 
            IOdaBlock * This,
            /* [retval][out] */ VARIANT *pObjs);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_isFromOverlayReference )( 
            IOdaBlock * This,
            /* [retval][out] */ VARIANT_BOOL *bResult);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_isResolved )( 
            IOdaBlock * This,
            /* [retval][out] */ VARIANT_BOOL *bResult);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_isDependent )( 
            IOdaBlock * This,
            /* [retval][out] */ VARIANT_BOOL *bResult);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_isUnloaded )( 
            IOdaBlock * This,
            /* [retval][out] */ VARIANT_BOOL *bResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *setOverlaid )( 
            IOdaBlock * This,
            /* [in] */ VARIANT_BOOL bOverlaid);
        
        END_INTERFACE
    } IOdaBlockVtbl;

    interface IOdaBlock
    {
        CONST_VTBL struct IOdaBlockVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOdaBlock_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IOdaBlock_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IOdaBlock_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IOdaBlock_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IOdaBlock_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IOdaBlock_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IOdaBlock_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IOdaBlock_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IOdaBlock_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IOdaBlock_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IOdaBlock_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IOdaBlock_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IOdaBlock_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IOdaBlock_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IOdaBlock_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IOdaBlock_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IOdaBlock_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IOdaBlock_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IOdaBlock_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IOdaBlock_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IOdaBlock_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IOdaBlock_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IOdaBlock_get_Count(This,pVal)	\
    (This)->lpVtbl -> get_Count(This,pVal)

#define IOdaBlock_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IOdaBlock_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#define IOdaBlock_get_Origin(This,Origin)	\
    (This)->lpVtbl -> get_Origin(This,Origin)

#define IOdaBlock_put_Origin(This,Origin)	\
    (This)->lpVtbl -> put_Origin(This,Origin)

#define IOdaBlock_AddCustomObject(This,ClassName,pObject)	\
    (This)->lpVtbl -> AddCustomObject(This,ClassName,pObject)

#define IOdaBlock_Add3DFace(This,Point1,Point2,point3,Point4,pFace3d)	\
    (This)->lpVtbl -> Add3DFace(This,Point1,Point2,point3,Point4,pFace3d)

#define IOdaBlock_Add3DMesh(This,M,N,PointsMatrix,pMesh3d)	\
    (This)->lpVtbl -> Add3DMesh(This,M,N,PointsMatrix,pMesh3d)

#define IOdaBlock_Add3DPoly(This,PointsArray,pPoly3d)	\
    (This)->lpVtbl -> Add3DPoly(This,PointsArray,pPoly3d)

#define IOdaBlock_AddArc(This,Center,Radius,StartAngle,EndAngle,pArc)	\
    (This)->lpVtbl -> AddArc(This,Center,Radius,StartAngle,EndAngle,pArc)

#define IOdaBlock_AddAttribute(This,Height,Mode,Prompt,InsertionPoint,Tag,Value,pAttr)	\
    (This)->lpVtbl -> AddAttribute(This,Height,Mode,Prompt,InsertionPoint,Tag,Value,pAttr)

#define IOdaBlock_AddBox(This,Origin,Length,Width,Height,pBox)	\
    (This)->lpVtbl -> AddBox(This,Origin,Length,Width,Height,pBox)

#define IOdaBlock_AddCircle(This,Center,Radius,pCircle)	\
    (This)->lpVtbl -> AddCircle(This,Center,Radius,pCircle)

#define IOdaBlock_AddCone(This,Center,BaseRadius,Height,pCone)	\
    (This)->lpVtbl -> AddCone(This,Center,BaseRadius,Height,pCone)

#define IOdaBlock_AddCylinder(This,Center,Radius,Height,pCyl)	\
    (This)->lpVtbl -> AddCylinder(This,Center,Radius,Height,pCyl)

#define IOdaBlock_AddDimAligned(This,ExtLine1Point,ExtLine2Point,TextPosition,pDim)	\
    (This)->lpVtbl -> AddDimAligned(This,ExtLine1Point,ExtLine2Point,TextPosition,pDim)

#define IOdaBlock_AddDimAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)	\
    (This)->lpVtbl -> AddDimAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)

#define IOdaBlock_AddDimDiametric(This,ChordPoint,FarChordPoint,LeaderLength,pDim)	\
    (This)->lpVtbl -> AddDimDiametric(This,ChordPoint,FarChordPoint,LeaderLength,pDim)

#define IOdaBlock_AddDimRotated(This,ExtLine1Point,ExtLine2Point,DimLineLocation,RotationAngle,pDim)	\
    (This)->lpVtbl -> AddDimRotated(This,ExtLine1Point,ExtLine2Point,DimLineLocation,RotationAngle,pDim)

#define IOdaBlock_AddDimOrdinate(This,DefinitionPoint,LeaderEndPoint,UseXAxis,pDim)	\
    (This)->lpVtbl -> AddDimOrdinate(This,DefinitionPoint,LeaderEndPoint,UseXAxis,pDim)

#define IOdaBlock_AddDimRadial(This,Center,ChordPoint,LeaderLength,pDim)	\
    (This)->lpVtbl -> AddDimRadial(This,Center,ChordPoint,LeaderLength,pDim)

#define IOdaBlock_AddEllipse(This,Center,MajorAxis,RadiusRatio,pEllipse)	\
    (This)->lpVtbl -> AddEllipse(This,Center,MajorAxis,RadiusRatio,pEllipse)

#define IOdaBlock_AddEllipticalCone(This,Center,MajorRadius,MinorRadius,Height,pEllipCone)	\
    (This)->lpVtbl -> AddEllipticalCone(This,Center,MajorRadius,MinorRadius,Height,pEllipCone)

#define IOdaBlock_AddEllipticalCylinder(This,Center,MajorRadius,MinorRadius,Height,pEllipCyl)	\
    (This)->lpVtbl -> AddEllipticalCylinder(This,Center,MajorRadius,MinorRadius,Height,pEllipCyl)

#define IOdaBlock_AddExtrudedSolid(This,Profile,Height,TaperAngle,pExtrSolid)	\
    (This)->lpVtbl -> AddExtrudedSolid(This,Profile,Height,TaperAngle,pExtrSolid)

#define IOdaBlock_AddExtrudedSolidAlongPath(This,Profile,Path,pExtrSolid)	\
    (This)->lpVtbl -> AddExtrudedSolidAlongPath(This,Profile,Path,pExtrSolid)

#define IOdaBlock_AddLeader(This,PointsArray,Annotation,Type,pLeader)	\
    (This)->lpVtbl -> AddLeader(This,PointsArray,Annotation,Type,pLeader)

#define IOdaBlock_AddMText(This,InsertionPoint,Width,Text,pMtext)	\
    (This)->lpVtbl -> AddMText(This,InsertionPoint,Width,Text,pMtext)

#define IOdaBlock_AddPoint(This,Point,pPoint)	\
    (This)->lpVtbl -> AddPoint(This,Point,pPoint)

#define IOdaBlock_AddLightWeightPolyline(This,VerticesList,pLWPolyline)	\
    (This)->lpVtbl -> AddLightWeightPolyline(This,VerticesList,pLWPolyline)

#define IOdaBlock_AddPolyline(This,VerticesList,pPolyline)	\
    (This)->lpVtbl -> AddPolyline(This,VerticesList,pPolyline)

#define IOdaBlock_AddRay(This,Point1,Point2,pRay)	\
    (This)->lpVtbl -> AddRay(This,Point1,Point2,pRay)

#define IOdaBlock_AddRegion(This,ObjectList,pRegions)	\
    (This)->lpVtbl -> AddRegion(This,ObjectList,pRegions)

#define IOdaBlock_AddRevolvedSolid(This,Profile,AxisPoint,AxisDir,Angle,pRevolSolid)	\
    (This)->lpVtbl -> AddRevolvedSolid(This,Profile,AxisPoint,AxisDir,Angle,pRevolSolid)

#define IOdaBlock_AddShape(This,Name,InsertionPoint,ScaleFactor,RotationAngle,pShape)	\
    (This)->lpVtbl -> AddShape(This,Name,InsertionPoint,ScaleFactor,RotationAngle,pShape)

#define IOdaBlock_AddSolid(This,Point1,Point2,point3,Point4,pSolid)	\
    (This)->lpVtbl -> AddSolid(This,Point1,Point2,point3,Point4,pSolid)

#define IOdaBlock_AddSphere(This,Center,Radius,pSphere)	\
    (This)->lpVtbl -> AddSphere(This,Center,Radius,pSphere)

#define IOdaBlock_AddSpline(This,PointsArray,StartTangent,EndTangent,pSpline)	\
    (This)->lpVtbl -> AddSpline(This,PointsArray,StartTangent,EndTangent,pSpline)

#define IOdaBlock_AddText(This,TextString,InsertionPoint,Height,pText)	\
    (This)->lpVtbl -> AddText(This,TextString,InsertionPoint,Height,pText)

#define IOdaBlock_AddTolerance(This,Text,InsertionPoint,Direction,pTolerance)	\
    (This)->lpVtbl -> AddTolerance(This,Text,InsertionPoint,Direction,pTolerance)

#define IOdaBlock_AddTorus(This,Center,TorusRadius,TubeRadius,pTorus)	\
    (This)->lpVtbl -> AddTorus(This,Center,TorusRadius,TubeRadius,pTorus)

#define IOdaBlock_AddTrace(This,PointsArray,pTrace)	\
    (This)->lpVtbl -> AddTrace(This,PointsArray,pTrace)

#define IOdaBlock_AddWedge(This,Center,Length,Width,Height,pWedge)	\
    (This)->lpVtbl -> AddWedge(This,Center,Length,Width,Height,pWedge)

#define IOdaBlock_AddXline(This,Point1,Point2,pXline)	\
    (This)->lpVtbl -> AddXline(This,Point1,Point2,pXline)

#define IOdaBlock_InsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,Password,pBlkRef)	\
    (This)->lpVtbl -> InsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,Password,pBlkRef)

#define IOdaBlock_AddHatch(This,PatternType,PatternName,Associativity,HatchObjectType,pHatch)	\
    (This)->lpVtbl -> AddHatch(This,PatternType,PatternName,Associativity,HatchObjectType,pHatch)

#define IOdaBlock_AddRaster(This,imageFileName,InsertionPoint,ScaleFactor,RotationAngle,pRaster)	\
    (This)->lpVtbl -> AddRaster(This,imageFileName,InsertionPoint,ScaleFactor,RotationAngle,pRaster)

#define IOdaBlock_AddLine(This,StartPoint,EndPoint,pLine)	\
    (This)->lpVtbl -> AddLine(This,StartPoint,EndPoint,pLine)

#define IOdaBlock_get_IsLayout(This,bIsLayout)	\
    (This)->lpVtbl -> get_IsLayout(This,bIsLayout)

#define IOdaBlock_get_Layout(This,pLayout)	\
    (This)->lpVtbl -> get_Layout(This,pLayout)

#define IOdaBlock_get_IsXRef(This,pIsXRref)	\
    (This)->lpVtbl -> get_IsXRef(This,pIsXRref)

#define IOdaBlock_AddMInsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,NumRows,NumColumns,RowSpacing,ColumnSpacing,Password,pMInsertBlk)	\
    (This)->lpVtbl -> AddMInsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,NumRows,NumColumns,RowSpacing,ColumnSpacing,Password,pMInsertBlk)

#define IOdaBlock_AddPolyfaceMesh(This,VertexList,FaceList,pPFMesh)	\
    (This)->lpVtbl -> AddPolyfaceMesh(This,VertexList,FaceList,pPFMesh)

#define IOdaBlock_AddMLine(This,VertexList,pMLine)	\
    (This)->lpVtbl -> AddMLine(This,VertexList,pMLine)

#define IOdaBlock_AddDim3PointAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)	\
    (This)->lpVtbl -> AddDim3PointAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)

#define IOdaBlock_get_XRefDatabase(This,pDatabase)	\
    (This)->lpVtbl -> get_XRefDatabase(This,pDatabase)

#define IOdaBlock_AttachExternalReference(This,PathName,Name,InsertionPoint,Xscale,Yscale,Zscale,Rotation,bOverlay,Password,pXRef)	\
    (This)->lpVtbl -> AttachExternalReference(This,PathName,Name,InsertionPoint,Xscale,Yscale,Zscale,Rotation,bOverlay,Password,pXRef)

#define IOdaBlock_Unload(This)	\
    (This)->lpVtbl -> Unload(This)

#define IOdaBlock_Reload(This)	\
    (This)->lpVtbl -> Reload(This)

#define IOdaBlock_Bind(This,bPrefixName)	\
    (This)->lpVtbl -> Bind(This,bPrefixName)

#define IOdaBlock_Detach(This)	\
    (This)->lpVtbl -> Detach(This)


#define IOdaBlock_AddTable(This,InsertionPoint,NumRows,NumColumns,RowHeight,ColWidth,pTable)	\
    (This)->lpVtbl -> AddTable(This,InsertionPoint,NumRows,NumColumns,RowHeight,ColWidth,pTable)

#define IOdaBlock_get_Path(This,bstrName)	\
    (This)->lpVtbl -> get_Path(This,bstrName)

#define IOdaBlock_put_Path(This,bstrName)	\
    (This)->lpVtbl -> put_Path(This,bstrName)


#define IOdaBlock_GetReferences(This,pObjs)	\
    (This)->lpVtbl -> GetReferences(This,pObjs)

#define IOdaBlock_get_isFromOverlayReference(This,bResult)	\
    (This)->lpVtbl -> get_isFromOverlayReference(This,bResult)

#define IOdaBlock_get_isResolved(This,bResult)	\
    (This)->lpVtbl -> get_isResolved(This,bResult)

#define IOdaBlock_get_isDependent(This,bResult)	\
    (This)->lpVtbl -> get_isDependent(This,bResult)

#define IOdaBlock_get_isUnloaded(This,bResult)	\
    (This)->lpVtbl -> get_isUnloaded(This,bResult)

#define IOdaBlock_setOverlaid(This,bOverlaid)	\
    (This)->lpVtbl -> setOverlaid(This,bOverlaid)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IOdaBlock_GetReferences_Proxy( 
    IOdaBlock * This,
    /* [retval][out] */ VARIANT *pObjs);


void __RPC_STUB IOdaBlock_GetReferences_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IOdaBlock_get_isFromOverlayReference_Proxy( 
    IOdaBlock * This,
    /* [retval][out] */ VARIANT_BOOL *bResult);


void __RPC_STUB IOdaBlock_get_isFromOverlayReference_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IOdaBlock_get_isResolved_Proxy( 
    IOdaBlock * This,
    /* [retval][out] */ VARIANT_BOOL *bResult);


void __RPC_STUB IOdaBlock_get_isResolved_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IOdaBlock_get_isDependent_Proxy( 
    IOdaBlock * This,
    /* [retval][out] */ VARIANT_BOOL *bResult);


void __RPC_STUB IOdaBlock_get_isDependent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IOdaBlock_get_isUnloaded_Proxy( 
    IOdaBlock * This,
    /* [retval][out] */ VARIANT_BOOL *bResult);


void __RPC_STUB IOdaBlock_get_isUnloaded_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IOdaBlock_setOverlaid_Proxy( 
    IOdaBlock * This,
    /* [in] */ VARIANT_BOOL bOverlaid);


void __RPC_STUB IOdaBlock_setOverlaid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IOdaBlock_INTERFACE_DEFINED__ */


#ifndef __IAcadEntity_INTERFACE_DEFINED__
#define __IAcadEntity_INTERFACE_DEFINED__

/* interface IAcadEntity */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadEntity;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ED471E71-0DED-490F-A11E-FC857711441A")
    IAcadEntity : public IAcadObject
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TrueColor( 
            /* [retval][out] */ IAcadAcCmColor **pColor) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TrueColor( 
            /* [in] */ IAcadAcCmColor *pColor) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Layer( 
            /* [retval][out] */ BSTR *Layer) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Layer( 
            /* [in] */ BSTR Layer) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Linetype( 
            /* [retval][out] */ BSTR *Linetype) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Linetype( 
            /* [in] */ BSTR Linetype) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LinetypeScale( 
            /* [retval][out] */ ACAD_NOUNITS *ltScale) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LinetypeScale( 
            /* [in] */ ACAD_NOUNITS ltScale) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL *bVisible) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL bVisible) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ArrayPolar( 
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ArrayRectangular( 
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Highlight( 
            /* [in] */ VARIANT_BOOL HighlightFlag) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IDispatch **pCopyObj) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Rotate( 
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Rotate3D( 
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Mirror( 
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Mirror3D( 
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ScaleEntity( 
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE TransformBy( 
            /* [in] */ VARIANT TransformationMatrix) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Update( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBoundingBox( 
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IntersectWith( 
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PlotStyleName( 
            /* [retval][out] */ BSTR *plotStyle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PlotStyleName( 
            /* [in] */ BSTR plotStyle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Lineweight( 
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Lineweight( 
            /* [in] */ ACAD_LWEIGHT Lineweight) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Hyperlinks( 
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks) = 0;
        
        virtual /* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntityName( 
            /* [retval][out] */ BSTR *EntityName) = 0;
        
        virtual /* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntityType( 
            /* [retval][out] */ long *entType) = 0;
        
        virtual /* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_color( 
            /* [retval][out] */ ACAD_COLOR *color) = 0;
        
        virtual /* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_color( 
            /* [in] */ ACAD_COLOR color) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadEntityVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadEntity * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadEntity * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadEntity * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadEntity * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadEntity * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadEntity * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadEntity * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadEntity * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadEntity * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadEntity * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadEntity * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadEntity * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadEntity * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadEntity * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadEntity * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadEntity * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadEntity * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadEntity * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadEntity * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadEntity * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadEntity * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadEntity * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadEntity * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadEntity * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadEntity * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadEntity * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadEntity * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadEntity * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadEntity * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadEntity * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadEntity * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadEntity * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadEntity * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadEntity * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadEntity * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadEntity * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadEntity * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadEntity * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadEntity * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadEntity * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadEntity * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadEntity * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadEntity * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadEntity * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadEntity * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadEntity * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadEntity * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadEntity * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadEntity * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadEntity * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadEntity * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadEntity * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadEntity * This,
            /* [in] */ ACAD_COLOR color);
        
        END_INTERFACE
    } IAcadEntityVtbl;

    interface IAcadEntity
    {
        CONST_VTBL struct IAcadEntityVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadEntity_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadEntity_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadEntity_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadEntity_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadEntity_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadEntity_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadEntity_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadEntity_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadEntity_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadEntity_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadEntity_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadEntity_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadEntity_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadEntity_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadEntity_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadEntity_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadEntity_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadEntity_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadEntity_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadEntity_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadEntity_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadEntity_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadEntity_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadEntity_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadEntity_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadEntity_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadEntity_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadEntity_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadEntity_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadEntity_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadEntity_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadEntity_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadEntity_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadEntity_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadEntity_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadEntity_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadEntity_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadEntity_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadEntity_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadEntity_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadEntity_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadEntity_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadEntity_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadEntity_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadEntity_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadEntity_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadEntity_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadEntity_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadEntity_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadEntity_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadEntity_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadEntity_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadEntity_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_get_TrueColor_Proxy( 
    IAcadEntity * This,
    /* [retval][out] */ IAcadAcCmColor **pColor);


void __RPC_STUB IAcadEntity_get_TrueColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_put_TrueColor_Proxy( 
    IAcadEntity * This,
    /* [in] */ IAcadAcCmColor *pColor);


void __RPC_STUB IAcadEntity_put_TrueColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_get_Layer_Proxy( 
    IAcadEntity * This,
    /* [retval][out] */ BSTR *Layer);


void __RPC_STUB IAcadEntity_get_Layer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_put_Layer_Proxy( 
    IAcadEntity * This,
    /* [in] */ BSTR Layer);


void __RPC_STUB IAcadEntity_put_Layer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_get_Linetype_Proxy( 
    IAcadEntity * This,
    /* [retval][out] */ BSTR *Linetype);


void __RPC_STUB IAcadEntity_get_Linetype_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_put_Linetype_Proxy( 
    IAcadEntity * This,
    /* [in] */ BSTR Linetype);


void __RPC_STUB IAcadEntity_put_Linetype_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_get_LinetypeScale_Proxy( 
    IAcadEntity * This,
    /* [retval][out] */ ACAD_NOUNITS *ltScale);


void __RPC_STUB IAcadEntity_get_LinetypeScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_put_LinetypeScale_Proxy( 
    IAcadEntity * This,
    /* [in] */ ACAD_NOUNITS ltScale);


void __RPC_STUB IAcadEntity_put_LinetypeScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_get_Visible_Proxy( 
    IAcadEntity * This,
    /* [retval][out] */ VARIANT_BOOL *bVisible);


void __RPC_STUB IAcadEntity_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_put_Visible_Proxy( 
    IAcadEntity * This,
    /* [in] */ VARIANT_BOOL bVisible);


void __RPC_STUB IAcadEntity_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_ArrayPolar_Proxy( 
    IAcadEntity * This,
    /* [in] */ int NumberOfObjects,
    /* [in] */ double AngleToFill,
    /* [in] */ VARIANT CenterPoint,
    /* [retval][out] */ VARIANT *pArrayObjs);


void __RPC_STUB IAcadEntity_ArrayPolar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_ArrayRectangular_Proxy( 
    IAcadEntity * This,
    /* [in] */ int NumberOfRows,
    /* [in] */ int NumberOfColumns,
    /* [in] */ int NumberOfLevels,
    /* [in] */ double DistBetweenRows,
    /* [in] */ double DistBetweenCols,
    /* [in] */ double DistBetweenLevels,
    /* [retval][out] */ VARIANT *pArrayObjs);


void __RPC_STUB IAcadEntity_ArrayRectangular_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_Highlight_Proxy( 
    IAcadEntity * This,
    /* [in] */ VARIANT_BOOL HighlightFlag);


void __RPC_STUB IAcadEntity_Highlight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_Copy_Proxy( 
    IAcadEntity * This,
    /* [retval][out] */ IDispatch **pCopyObj);


void __RPC_STUB IAcadEntity_Copy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_Move_Proxy( 
    IAcadEntity * This,
    /* [in] */ VARIANT FromPoint,
    /* [in] */ VARIANT ToPoint);


void __RPC_STUB IAcadEntity_Move_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_Rotate_Proxy( 
    IAcadEntity * This,
    /* [in] */ VARIANT BasePoint,
    /* [in] */ double RotationAngle);


void __RPC_STUB IAcadEntity_Rotate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_Rotate3D_Proxy( 
    IAcadEntity * This,
    /* [in] */ VARIANT Point1,
    /* [in] */ VARIANT Point2,
    /* [in] */ double RotationAngle);


void __RPC_STUB IAcadEntity_Rotate3D_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_Mirror_Proxy( 
    IAcadEntity * This,
    /* [in] */ VARIANT Point1,
    /* [in] */ VARIANT Point2,
    /* [retval][out] */ IDispatch **pMirrorObj);


void __RPC_STUB IAcadEntity_Mirror_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_Mirror3D_Proxy( 
    IAcadEntity * This,
    /* [in] */ VARIANT Point1,
    /* [in] */ VARIANT Point2,
    /* [in] */ VARIANT point3,
    /* [retval][out] */ IDispatch **pMirrorObj);


void __RPC_STUB IAcadEntity_Mirror3D_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_ScaleEntity_Proxy( 
    IAcadEntity * This,
    /* [in] */ VARIANT BasePoint,
    /* [in] */ double ScaleFactor);


void __RPC_STUB IAcadEntity_ScaleEntity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_TransformBy_Proxy( 
    IAcadEntity * This,
    /* [in] */ VARIANT TransformationMatrix);


void __RPC_STUB IAcadEntity_TransformBy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_Update_Proxy( 
    IAcadEntity * This);


void __RPC_STUB IAcadEntity_Update_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_GetBoundingBox_Proxy( 
    IAcadEntity * This,
    /* [out] */ VARIANT *MinPoint,
    /* [out] */ VARIANT *MaxPoint);


void __RPC_STUB IAcadEntity_GetBoundingBox_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_IntersectWith_Proxy( 
    IAcadEntity * This,
    /* [in] */ IDispatch *IntersectObject,
    /* [in] */ AcExtendOption option,
    /* [retval][out] */ VARIANT *intPoints);


void __RPC_STUB IAcadEntity_IntersectWith_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_get_PlotStyleName_Proxy( 
    IAcadEntity * This,
    /* [retval][out] */ BSTR *plotStyle);


void __RPC_STUB IAcadEntity_get_PlotStyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_put_PlotStyleName_Proxy( 
    IAcadEntity * This,
    /* [in] */ BSTR plotStyle);


void __RPC_STUB IAcadEntity_put_PlotStyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_get_Lineweight_Proxy( 
    IAcadEntity * This,
    /* [retval][out] */ ACAD_LWEIGHT *Lineweight);


void __RPC_STUB IAcadEntity_get_Lineweight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_put_Lineweight_Proxy( 
    IAcadEntity * This,
    /* [in] */ ACAD_LWEIGHT Lineweight);


void __RPC_STUB IAcadEntity_put_Lineweight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_get_Hyperlinks_Proxy( 
    IAcadEntity * This,
    /* [retval][out] */ IAcadHyperlinks **Hyperlinks);


void __RPC_STUB IAcadEntity_get_Hyperlinks_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_get_EntityName_Proxy( 
    IAcadEntity * This,
    /* [retval][out] */ BSTR *EntityName);


void __RPC_STUB IAcadEntity_get_EntityName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_get_EntityType_Proxy( 
    IAcadEntity * This,
    /* [retval][out] */ long *entType);


void __RPC_STUB IAcadEntity_get_EntityType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_get_color_Proxy( 
    IAcadEntity * This,
    /* [retval][out] */ ACAD_COLOR *color);


void __RPC_STUB IAcadEntity_get_color_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadEntity_put_color_Proxy( 
    IAcadEntity * This,
    /* [in] */ ACAD_COLOR color);


void __RPC_STUB IAcadEntity_put_color_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadEntity_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_OdaX_0265 */
/* [local] */ 

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("7904356D-4920-4A78-9C96-9A0C922162A0") 
enum __MIDL___MIDL_itf_OdaX_0265_0001
    {	acColorMethodByLayer	= 192,
	acColorMethodByBlock	= 193,
	acColorMethodByRGB	= 194,
	acColorMethodByACI	= 195,
	acColorMethodForeground	= 197
    } 	AcColorMethod;



extern RPC_IF_HANDLE __MIDL_itf_OdaX_0265_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_OdaX_0265_v0_0_s_ifspec;

#ifndef __IAcadAcCmColor_INTERFACE_DEFINED__
#define __IAcadAcCmColor_INTERFACE_DEFINED__

/* interface IAcadAcCmColor */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadAcCmColor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("74ADF264-6DD9-4202-B6DD-F632EE145E10")
    IAcadAcCmColor : public IDispatch
    {
    public:
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_EntityColor( 
            /* [in] */ long eColor) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntityColor( 
            /* [retval][out] */ long *eColor) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ColorName( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_BookName( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetNames( 
            /* [in] */ BSTR ColorName,
            /* [in] */ BSTR BookName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Red( 
            /* [retval][out] */ long *Red) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Blue( 
            /* [retval][out] */ long *Blue) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Green( 
            /* [retval][out] */ long *Green) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetRGB( 
            /* [in] */ long Red,
            /* [in] */ long Green,
            /* [in] */ long Blue) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ColorMethod( 
            /* [in] */ AcColorMethod Flags) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ColorMethod( 
            /* [retval][out] */ AcColorMethod *Flags) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ColorIndex( 
            /* [retval][out] */ AcColor *color) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ColorIndex( 
            /* [in] */ AcColor color) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetColorBookColor( 
            /* [in] */ BSTR BookName,
            /* [in] */ BSTR ColorName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadAcCmColorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadAcCmColor * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadAcCmColor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadAcCmColor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadAcCmColor * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadAcCmColor * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadAcCmColor * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadAcCmColor * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntityColor )( 
            IAcadAcCmColor * This,
            /* [in] */ long eColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityColor )( 
            IAcadAcCmColor * This,
            /* [retval][out] */ long *eColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ColorName )( 
            IAcadAcCmColor * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BookName )( 
            IAcadAcCmColor * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNames )( 
            IAcadAcCmColor * This,
            /* [in] */ BSTR ColorName,
            /* [in] */ BSTR BookName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadAcCmColor * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Red )( 
            IAcadAcCmColor * This,
            /* [retval][out] */ long *Red);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Blue )( 
            IAcadAcCmColor * This,
            /* [retval][out] */ long *Blue);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Green )( 
            IAcadAcCmColor * This,
            /* [retval][out] */ long *Green);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetRGB )( 
            IAcadAcCmColor * This,
            /* [in] */ long Red,
            /* [in] */ long Green,
            /* [in] */ long Blue);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ColorMethod )( 
            IAcadAcCmColor * This,
            /* [in] */ AcColorMethod Flags);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ColorMethod )( 
            IAcadAcCmColor * This,
            /* [retval][out] */ AcColorMethod *Flags);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ColorIndex )( 
            IAcadAcCmColor * This,
            /* [retval][out] */ AcColor *color);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ColorIndex )( 
            IAcadAcCmColor * This,
            /* [in] */ AcColor color);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetColorBookColor )( 
            IAcadAcCmColor * This,
            /* [in] */ BSTR BookName,
            /* [in] */ BSTR ColorName);
        
        END_INTERFACE
    } IAcadAcCmColorVtbl;

    interface IAcadAcCmColor
    {
        CONST_VTBL struct IAcadAcCmColorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadAcCmColor_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadAcCmColor_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadAcCmColor_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadAcCmColor_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadAcCmColor_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadAcCmColor_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadAcCmColor_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadAcCmColor_put_EntityColor(This,eColor)	\
    (This)->lpVtbl -> put_EntityColor(This,eColor)

#define IAcadAcCmColor_get_EntityColor(This,eColor)	\
    (This)->lpVtbl -> get_EntityColor(This,eColor)

#define IAcadAcCmColor_get_ColorName(This,Name)	\
    (This)->lpVtbl -> get_ColorName(This,Name)

#define IAcadAcCmColor_get_BookName(This,Name)	\
    (This)->lpVtbl -> get_BookName(This,Name)

#define IAcadAcCmColor_SetNames(This,ColorName,BookName)	\
    (This)->lpVtbl -> SetNames(This,ColorName,BookName)

#define IAcadAcCmColor_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadAcCmColor_get_Red(This,Red)	\
    (This)->lpVtbl -> get_Red(This,Red)

#define IAcadAcCmColor_get_Blue(This,Blue)	\
    (This)->lpVtbl -> get_Blue(This,Blue)

#define IAcadAcCmColor_get_Green(This,Green)	\
    (This)->lpVtbl -> get_Green(This,Green)

#define IAcadAcCmColor_SetRGB(This,Red,Green,Blue)	\
    (This)->lpVtbl -> SetRGB(This,Red,Green,Blue)

#define IAcadAcCmColor_put_ColorMethod(This,Flags)	\
    (This)->lpVtbl -> put_ColorMethod(This,Flags)

#define IAcadAcCmColor_get_ColorMethod(This,Flags)	\
    (This)->lpVtbl -> get_ColorMethod(This,Flags)

#define IAcadAcCmColor_get_ColorIndex(This,color)	\
    (This)->lpVtbl -> get_ColorIndex(This,color)

#define IAcadAcCmColor_put_ColorIndex(This,color)	\
    (This)->lpVtbl -> put_ColorIndex(This,color)

#define IAcadAcCmColor_SetColorBookColor(This,BookName,ColorName)	\
    (This)->lpVtbl -> SetColorBookColor(This,BookName,ColorName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAcCmColor_put_EntityColor_Proxy( 
    IAcadAcCmColor * This,
    /* [in] */ long eColor);


void __RPC_STUB IAcadAcCmColor_put_EntityColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAcCmColor_get_EntityColor_Proxy( 
    IAcadAcCmColor * This,
    /* [retval][out] */ long *eColor);


void __RPC_STUB IAcadAcCmColor_get_EntityColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAcCmColor_get_ColorName_Proxy( 
    IAcadAcCmColor * This,
    /* [retval][out] */ BSTR *Name);


void __RPC_STUB IAcadAcCmColor_get_ColorName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAcCmColor_get_BookName_Proxy( 
    IAcadAcCmColor * This,
    /* [retval][out] */ BSTR *Name);


void __RPC_STUB IAcadAcCmColor_get_BookName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadAcCmColor_SetNames_Proxy( 
    IAcadAcCmColor * This,
    /* [in] */ BSTR ColorName,
    /* [in] */ BSTR BookName);


void __RPC_STUB IAcadAcCmColor_SetNames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadAcCmColor_Delete_Proxy( 
    IAcadAcCmColor * This);


void __RPC_STUB IAcadAcCmColor_Delete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAcCmColor_get_Red_Proxy( 
    IAcadAcCmColor * This,
    /* [retval][out] */ long *Red);


void __RPC_STUB IAcadAcCmColor_get_Red_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAcCmColor_get_Blue_Proxy( 
    IAcadAcCmColor * This,
    /* [retval][out] */ long *Blue);


void __RPC_STUB IAcadAcCmColor_get_Blue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAcCmColor_get_Green_Proxy( 
    IAcadAcCmColor * This,
    /* [retval][out] */ long *Green);


void __RPC_STUB IAcadAcCmColor_get_Green_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadAcCmColor_SetRGB_Proxy( 
    IAcadAcCmColor * This,
    /* [in] */ long Red,
    /* [in] */ long Green,
    /* [in] */ long Blue);


void __RPC_STUB IAcadAcCmColor_SetRGB_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAcCmColor_put_ColorMethod_Proxy( 
    IAcadAcCmColor * This,
    /* [in] */ AcColorMethod Flags);


void __RPC_STUB IAcadAcCmColor_put_ColorMethod_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAcCmColor_get_ColorMethod_Proxy( 
    IAcadAcCmColor * This,
    /* [retval][out] */ AcColorMethod *Flags);


void __RPC_STUB IAcadAcCmColor_get_ColorMethod_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAcCmColor_get_ColorIndex_Proxy( 
    IAcadAcCmColor * This,
    /* [retval][out] */ AcColor *color);


void __RPC_STUB IAcadAcCmColor_get_ColorIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAcCmColor_put_ColorIndex_Proxy( 
    IAcadAcCmColor * This,
    /* [in] */ AcColor color);


void __RPC_STUB IAcadAcCmColor_put_ColorIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadAcCmColor_SetColorBookColor_Proxy( 
    IAcadAcCmColor * This,
    /* [in] */ BSTR BookName,
    /* [in] */ BSTR ColorName);


void __RPC_STUB IAcadAcCmColor_SetColorBookColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadAcCmColor_INTERFACE_DEFINED__ */


#ifndef __IAcadHyperlinks_INTERFACE_DEFINED__
#define __IAcadHyperlinks_INTERFACE_DEFINED__

/* interface IAcadHyperlinks */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadHyperlinks;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("97701BE6-4DAC-412F-A914-6F2EF110B63F")
    IAcadHyperlinks : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IAcadHyperlink **pItem) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch **ApplicationObject) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Description,
            /* [optional][in] */ VARIANT NamedLocation,
            /* [retval][out] */ IAcadHyperlink **pHyperlink) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadHyperlinksVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadHyperlinks * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadHyperlinks * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadHyperlinks * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadHyperlinks * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadHyperlinks * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadHyperlinks * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadHyperlinks * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadHyperlinks * This,
            /* [in] */ long Index,
            /* [retval][out] */ IAcadHyperlink **pItem);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadHyperlinks * This,
            /* [retval][out] */ long *pVal);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadHyperlinks * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadHyperlinks * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IAcadHyperlinks * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Description,
            /* [optional][in] */ VARIANT NamedLocation,
            /* [retval][out] */ IAcadHyperlink **pHyperlink);
        
        END_INTERFACE
    } IAcadHyperlinksVtbl;

    interface IAcadHyperlinks
    {
        CONST_VTBL struct IAcadHyperlinksVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadHyperlinks_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadHyperlinks_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadHyperlinks_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadHyperlinks_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadHyperlinks_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadHyperlinks_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadHyperlinks_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadHyperlinks_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadHyperlinks_get_Count(This,pVal)	\
    (This)->lpVtbl -> get_Count(This,pVal)

#define IAcadHyperlinks_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadHyperlinks_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadHyperlinks_Add(This,Name,Description,NamedLocation,pHyperlink)	\
    (This)->lpVtbl -> Add(This,Name,Description,NamedLocation,pHyperlink)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadHyperlinks_Item_Proxy( 
    IAcadHyperlinks * This,
    /* [in] */ long Index,
    /* [retval][out] */ IAcadHyperlink **pItem);


void __RPC_STUB IAcadHyperlinks_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHyperlinks_get_Count_Proxy( 
    IAcadHyperlinks * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IAcadHyperlinks_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHyperlinks_get__NewEnum_Proxy( 
    IAcadHyperlinks * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IAcadHyperlinks_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHyperlinks_get_Application_Proxy( 
    IAcadHyperlinks * This,
    /* [retval][out] */ IDispatch **ApplicationObject);


void __RPC_STUB IAcadHyperlinks_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadHyperlinks_Add_Proxy( 
    IAcadHyperlinks * This,
    /* [in] */ BSTR Name,
    /* [optional][in] */ VARIANT Description,
    /* [optional][in] */ VARIANT NamedLocation,
    /* [retval][out] */ IAcadHyperlink **pHyperlink);


void __RPC_STUB IAcadHyperlinks_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadHyperlinks_INTERFACE_DEFINED__ */


#ifndef __IAcadHyperlink_INTERFACE_DEFINED__
#define __IAcadHyperlink_INTERFACE_DEFINED__

/* interface IAcadHyperlink */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadHyperlink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("34E826E8-2285-49A2-BAD8-903903A31BE8")
    IAcadHyperlink : public IDispatch
    {
    public:
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_URL( 
            /* [in] */ BSTR URLPath) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_URL( 
            /* [retval][out] */ BSTR *URLPath) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_URLDescription( 
            /* [in] */ BSTR Description) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_URLDescription( 
            /* [retval][out] */ BSTR *Description) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch **ApplicationObject) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_URLNamedLocation( 
            /* [in] */ BSTR Location) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_URLNamedLocation( 
            /* [retval][out] */ BSTR *Location) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadHyperlinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadHyperlink * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadHyperlink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadHyperlink * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadHyperlink * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadHyperlink * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadHyperlink * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadHyperlink * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_URL )( 
            IAcadHyperlink * This,
            /* [in] */ BSTR URLPath);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_URL )( 
            IAcadHyperlink * This,
            /* [retval][out] */ BSTR *URLPath);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_URLDescription )( 
            IAcadHyperlink * This,
            /* [in] */ BSTR Description);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_URLDescription )( 
            IAcadHyperlink * This,
            /* [retval][out] */ BSTR *Description);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadHyperlink * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadHyperlink * This);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_URLNamedLocation )( 
            IAcadHyperlink * This,
            /* [in] */ BSTR Location);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_URLNamedLocation )( 
            IAcadHyperlink * This,
            /* [retval][out] */ BSTR *Location);
        
        END_INTERFACE
    } IAcadHyperlinkVtbl;

    interface IAcadHyperlink
    {
        CONST_VTBL struct IAcadHyperlinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadHyperlink_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadHyperlink_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadHyperlink_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadHyperlink_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadHyperlink_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadHyperlink_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadHyperlink_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadHyperlink_put_URL(This,URLPath)	\
    (This)->lpVtbl -> put_URL(This,URLPath)

#define IAcadHyperlink_get_URL(This,URLPath)	\
    (This)->lpVtbl -> get_URL(This,URLPath)

#define IAcadHyperlink_put_URLDescription(This,Description)	\
    (This)->lpVtbl -> put_URLDescription(This,Description)

#define IAcadHyperlink_get_URLDescription(This,Description)	\
    (This)->lpVtbl -> get_URLDescription(This,Description)

#define IAcadHyperlink_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadHyperlink_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadHyperlink_put_URLNamedLocation(This,Location)	\
    (This)->lpVtbl -> put_URLNamedLocation(This,Location)

#define IAcadHyperlink_get_URLNamedLocation(This,Location)	\
    (This)->lpVtbl -> get_URLNamedLocation(This,Location)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadHyperlink_put_URL_Proxy( 
    IAcadHyperlink * This,
    /* [in] */ BSTR URLPath);


void __RPC_STUB IAcadHyperlink_put_URL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHyperlink_get_URL_Proxy( 
    IAcadHyperlink * This,
    /* [retval][out] */ BSTR *URLPath);


void __RPC_STUB IAcadHyperlink_get_URL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadHyperlink_put_URLDescription_Proxy( 
    IAcadHyperlink * This,
    /* [in] */ BSTR Description);


void __RPC_STUB IAcadHyperlink_put_URLDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHyperlink_get_URLDescription_Proxy( 
    IAcadHyperlink * This,
    /* [retval][out] */ BSTR *Description);


void __RPC_STUB IAcadHyperlink_get_URLDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHyperlink_get_Application_Proxy( 
    IAcadHyperlink * This,
    /* [retval][out] */ IDispatch **ApplicationObject);


void __RPC_STUB IAcadHyperlink_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadHyperlink_Delete_Proxy( 
    IAcadHyperlink * This);


void __RPC_STUB IAcadHyperlink_Delete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadHyperlink_put_URLNamedLocation_Proxy( 
    IAcadHyperlink * This,
    /* [in] */ BSTR Location);


void __RPC_STUB IAcadHyperlink_put_URLNamedLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHyperlink_get_URLNamedLocation_Proxy( 
    IAcadHyperlink * This,
    /* [retval][out] */ BSTR *Location);


void __RPC_STUB IAcadHyperlink_get_URLNamedLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadHyperlink_INTERFACE_DEFINED__ */


#ifndef __IAcad3DFace_INTERFACE_DEFINED__
#define __IAcad3DFace_INTERFACE_DEFINED__

/* interface IAcad3DFace */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcad3DFace;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E6DC4387-6A52-4530-AE10-7C77494A5ACE")
    IAcad3DFace : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *corners) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT corners) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_VisibilityEdge1( 
            /* [retval][out] */ VARIANT_BOOL *visibility) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_VisibilityEdge1( 
            /* [in] */ VARIANT_BOOL visibility) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_VisibilityEdge2( 
            /* [retval][out] */ VARIANT_BOOL *visibility) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_VisibilityEdge2( 
            /* [in] */ VARIANT_BOOL visibility) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_VisibilityEdge3( 
            /* [retval][out] */ VARIANT_BOOL *visibility) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_VisibilityEdge3( 
            /* [in] */ VARIANT_BOOL visibility) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_VisibilityEdge4( 
            /* [retval][out] */ VARIANT_BOOL *visibility) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_VisibilityEdge4( 
            /* [in] */ VARIANT_BOOL visibility) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetInvisibleEdge( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT_BOOL *bVisible) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetInvisibleEdge( 
            /* [in] */ int Index,
            /* [in] */ VARIANT_BOOL State) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Coordinate( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Coordinate( 
            /* [in] */ int Index,
            /* [in] */ VARIANT pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcad3DFaceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcad3DFace * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcad3DFace * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcad3DFace * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcad3DFace * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcad3DFace * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcad3DFace * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcad3DFace * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcad3DFace * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcad3DFace * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcad3DFace * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcad3DFace * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcad3DFace * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcad3DFace * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcad3DFace * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcad3DFace * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcad3DFace * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcad3DFace * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcad3DFace * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcad3DFace * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcad3DFace * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcad3DFace * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcad3DFace * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcad3DFace * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcad3DFace * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcad3DFace * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcad3DFace * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcad3DFace * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcad3DFace * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcad3DFace * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcad3DFace * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcad3DFace * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcad3DFace * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcad3DFace * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcad3DFace * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcad3DFace * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcad3DFace * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcad3DFace * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcad3DFace * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcad3DFace * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcad3DFace * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcad3DFace * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcad3DFace * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcad3DFace * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcad3DFace * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcad3DFace * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcad3DFace * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcad3DFace * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcad3DFace * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcad3DFace * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcad3DFace * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcad3DFace * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcad3DFace * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcad3DFace * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IAcad3DFace * This,
            /* [retval][out] */ VARIANT *corners);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IAcad3DFace * This,
            /* [in] */ VARIANT corners);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VisibilityEdge1 )( 
            IAcad3DFace * This,
            /* [retval][out] */ VARIANT_BOOL *visibility);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VisibilityEdge1 )( 
            IAcad3DFace * This,
            /* [in] */ VARIANT_BOOL visibility);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VisibilityEdge2 )( 
            IAcad3DFace * This,
            /* [retval][out] */ VARIANT_BOOL *visibility);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VisibilityEdge2 )( 
            IAcad3DFace * This,
            /* [in] */ VARIANT_BOOL visibility);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VisibilityEdge3 )( 
            IAcad3DFace * This,
            /* [retval][out] */ VARIANT_BOOL *visibility);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VisibilityEdge3 )( 
            IAcad3DFace * This,
            /* [in] */ VARIANT_BOOL visibility);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VisibilityEdge4 )( 
            IAcad3DFace * This,
            /* [retval][out] */ VARIANT_BOOL *visibility);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VisibilityEdge4 )( 
            IAcad3DFace * This,
            /* [in] */ VARIANT_BOOL visibility);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetInvisibleEdge )( 
            IAcad3DFace * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetInvisibleEdge )( 
            IAcad3DFace * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT_BOOL State);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinate )( 
            IAcad3DFace * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinate )( 
            IAcad3DFace * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT pVal);
        
        END_INTERFACE
    } IAcad3DFaceVtbl;

    interface IAcad3DFace
    {
        CONST_VTBL struct IAcad3DFaceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcad3DFace_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcad3DFace_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcad3DFace_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcad3DFace_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcad3DFace_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcad3DFace_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcad3DFace_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcad3DFace_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcad3DFace_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcad3DFace_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcad3DFace_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcad3DFace_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcad3DFace_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcad3DFace_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcad3DFace_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcad3DFace_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcad3DFace_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcad3DFace_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcad3DFace_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcad3DFace_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcad3DFace_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcad3DFace_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcad3DFace_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcad3DFace_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcad3DFace_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcad3DFace_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcad3DFace_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcad3DFace_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcad3DFace_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcad3DFace_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcad3DFace_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcad3DFace_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcad3DFace_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcad3DFace_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcad3DFace_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcad3DFace_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcad3DFace_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcad3DFace_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcad3DFace_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcad3DFace_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcad3DFace_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcad3DFace_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcad3DFace_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcad3DFace_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcad3DFace_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcad3DFace_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcad3DFace_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcad3DFace_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcad3DFace_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcad3DFace_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcad3DFace_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcad3DFace_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcad3DFace_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcad3DFace_get_Coordinates(This,corners)	\
    (This)->lpVtbl -> get_Coordinates(This,corners)

#define IAcad3DFace_put_Coordinates(This,corners)	\
    (This)->lpVtbl -> put_Coordinates(This,corners)

#define IAcad3DFace_get_VisibilityEdge1(This,visibility)	\
    (This)->lpVtbl -> get_VisibilityEdge1(This,visibility)

#define IAcad3DFace_put_VisibilityEdge1(This,visibility)	\
    (This)->lpVtbl -> put_VisibilityEdge1(This,visibility)

#define IAcad3DFace_get_VisibilityEdge2(This,visibility)	\
    (This)->lpVtbl -> get_VisibilityEdge2(This,visibility)

#define IAcad3DFace_put_VisibilityEdge2(This,visibility)	\
    (This)->lpVtbl -> put_VisibilityEdge2(This,visibility)

#define IAcad3DFace_get_VisibilityEdge3(This,visibility)	\
    (This)->lpVtbl -> get_VisibilityEdge3(This,visibility)

#define IAcad3DFace_put_VisibilityEdge3(This,visibility)	\
    (This)->lpVtbl -> put_VisibilityEdge3(This,visibility)

#define IAcad3DFace_get_VisibilityEdge4(This,visibility)	\
    (This)->lpVtbl -> get_VisibilityEdge4(This,visibility)

#define IAcad3DFace_put_VisibilityEdge4(This,visibility)	\
    (This)->lpVtbl -> put_VisibilityEdge4(This,visibility)

#define IAcad3DFace_GetInvisibleEdge(This,Index,bVisible)	\
    (This)->lpVtbl -> GetInvisibleEdge(This,Index,bVisible)

#define IAcad3DFace_SetInvisibleEdge(This,Index,State)	\
    (This)->lpVtbl -> SetInvisibleEdge(This,Index,State)

#define IAcad3DFace_get_Coordinate(This,Index,pVal)	\
    (This)->lpVtbl -> get_Coordinate(This,Index,pVal)

#define IAcad3DFace_put_Coordinate(This,Index,pVal)	\
    (This)->lpVtbl -> put_Coordinate(This,Index,pVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcad3DFace_get_Coordinates_Proxy( 
    IAcad3DFace * This,
    /* [retval][out] */ VARIANT *corners);


void __RPC_STUB IAcad3DFace_get_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcad3DFace_put_Coordinates_Proxy( 
    IAcad3DFace * This,
    /* [in] */ VARIANT corners);


void __RPC_STUB IAcad3DFace_put_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcad3DFace_get_VisibilityEdge1_Proxy( 
    IAcad3DFace * This,
    /* [retval][out] */ VARIANT_BOOL *visibility);


void __RPC_STUB IAcad3DFace_get_VisibilityEdge1_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcad3DFace_put_VisibilityEdge1_Proxy( 
    IAcad3DFace * This,
    /* [in] */ VARIANT_BOOL visibility);


void __RPC_STUB IAcad3DFace_put_VisibilityEdge1_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcad3DFace_get_VisibilityEdge2_Proxy( 
    IAcad3DFace * This,
    /* [retval][out] */ VARIANT_BOOL *visibility);


void __RPC_STUB IAcad3DFace_get_VisibilityEdge2_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcad3DFace_put_VisibilityEdge2_Proxy( 
    IAcad3DFace * This,
    /* [in] */ VARIANT_BOOL visibility);


void __RPC_STUB IAcad3DFace_put_VisibilityEdge2_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcad3DFace_get_VisibilityEdge3_Proxy( 
    IAcad3DFace * This,
    /* [retval][out] */ VARIANT_BOOL *visibility);


void __RPC_STUB IAcad3DFace_get_VisibilityEdge3_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcad3DFace_put_VisibilityEdge3_Proxy( 
    IAcad3DFace * This,
    /* [in] */ VARIANT_BOOL visibility);


void __RPC_STUB IAcad3DFace_put_VisibilityEdge3_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcad3DFace_get_VisibilityEdge4_Proxy( 
    IAcad3DFace * This,
    /* [retval][out] */ VARIANT_BOOL *visibility);


void __RPC_STUB IAcad3DFace_get_VisibilityEdge4_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcad3DFace_put_VisibilityEdge4_Proxy( 
    IAcad3DFace * This,
    /* [in] */ VARIANT_BOOL visibility);


void __RPC_STUB IAcad3DFace_put_VisibilityEdge4_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcad3DFace_GetInvisibleEdge_Proxy( 
    IAcad3DFace * This,
    /* [in] */ int Index,
    /* [retval][out] */ VARIANT_BOOL *bVisible);


void __RPC_STUB IAcad3DFace_GetInvisibleEdge_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcad3DFace_SetInvisibleEdge_Proxy( 
    IAcad3DFace * This,
    /* [in] */ int Index,
    /* [in] */ VARIANT_BOOL State);


void __RPC_STUB IAcad3DFace_SetInvisibleEdge_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcad3DFace_get_Coordinate_Proxy( 
    IAcad3DFace * This,
    /* [in] */ int Index,
    /* [retval][out] */ VARIANT *pVal);


void __RPC_STUB IAcad3DFace_get_Coordinate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcad3DFace_put_Coordinate_Proxy( 
    IAcad3DFace * This,
    /* [in] */ int Index,
    /* [in] */ VARIANT pVal);


void __RPC_STUB IAcad3DFace_put_Coordinate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcad3DFace_INTERFACE_DEFINED__ */


#ifndef __IAcadPolygonMesh_INTERFACE_DEFINED__
#define __IAcadPolygonMesh_INTERFACE_DEFINED__

/* interface IAcadPolygonMesh */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadPolygonMesh;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A8F34134-7EFB-41A3-84C7-5C29CBB179A7")
    IAcadPolygonMesh : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *Coordinates) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT Coordinates) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_MClose( 
            /* [retval][out] */ VARIANT_BOOL *bClose) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_MClose( 
            /* [in] */ VARIANT_BOOL bClose) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_NClose( 
            /* [retval][out] */ VARIANT_BOOL *bClose) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_NClose( 
            /* [in] */ VARIANT_BOOL bClose) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_MDensity( 
            /* [retval][out] */ long *density) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_MDensity( 
            /* [in] */ long density) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_NDensity( 
            /* [retval][out] */ long *density) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_NDensity( 
            /* [in] */ long density) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_MVertexCount( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_NVertexCount( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ AcPolymeshType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ AcPolymeshType Type) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AppendVertex( 
            /* [in] */ VARIANT vertex) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Explode( 
            /* [retval][out] */ VARIANT *pArrayObjs) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Coordinate( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Coordinate( 
            /* [in] */ int Index,
            /* [in] */ VARIANT pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadPolygonMeshVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadPolygonMesh * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadPolygonMesh * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadPolygonMesh * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadPolygonMesh * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadPolygonMesh * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadPolygonMesh * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadPolygonMesh * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadPolygonMesh * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadPolygonMesh * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadPolygonMesh * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadPolygonMesh * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadPolygonMesh * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadPolygonMesh * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadPolygonMesh * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadPolygonMesh * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadPolygonMesh * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadPolygonMesh * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadPolygonMesh * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadPolygonMesh * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadPolygonMesh * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadPolygonMesh * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadPolygonMesh * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadPolygonMesh * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadPolygonMesh * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadPolygonMesh * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadPolygonMesh * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadPolygonMesh * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadPolygonMesh * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadPolygonMesh * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadPolygonMesh * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadPolygonMesh * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadPolygonMesh * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ VARIANT *Coordinates);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IAcadPolygonMesh * This,
            /* [in] */ VARIANT Coordinates);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MClose )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ VARIANT_BOOL *bClose);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MClose )( 
            IAcadPolygonMesh * This,
            /* [in] */ VARIANT_BOOL bClose);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NClose )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ VARIANT_BOOL *bClose);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NClose )( 
            IAcadPolygonMesh * This,
            /* [in] */ VARIANT_BOOL bClose);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MDensity )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ long *density);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MDensity )( 
            IAcadPolygonMesh * This,
            /* [in] */ long density);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NDensity )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ long *density);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NDensity )( 
            IAcadPolygonMesh * This,
            /* [in] */ long density);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MVertexCount )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ long *Count);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NVertexCount )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ long *Count);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ AcPolymeshType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            IAcadPolygonMesh * This,
            /* [in] */ AcPolymeshType Type);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AppendVertex )( 
            IAcadPolygonMesh * This,
            /* [in] */ VARIANT vertex);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Explode )( 
            IAcadPolygonMesh * This,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinate )( 
            IAcadPolygonMesh * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinate )( 
            IAcadPolygonMesh * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT pVal);
        
        END_INTERFACE
    } IAcadPolygonMeshVtbl;

    interface IAcadPolygonMesh
    {
        CONST_VTBL struct IAcadPolygonMeshVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadPolygonMesh_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadPolygonMesh_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadPolygonMesh_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadPolygonMesh_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadPolygonMesh_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadPolygonMesh_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadPolygonMesh_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadPolygonMesh_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadPolygonMesh_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadPolygonMesh_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadPolygonMesh_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadPolygonMesh_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadPolygonMesh_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadPolygonMesh_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadPolygonMesh_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadPolygonMesh_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadPolygonMesh_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadPolygonMesh_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadPolygonMesh_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadPolygonMesh_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadPolygonMesh_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadPolygonMesh_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadPolygonMesh_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadPolygonMesh_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadPolygonMesh_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadPolygonMesh_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadPolygonMesh_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadPolygonMesh_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadPolygonMesh_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadPolygonMesh_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadPolygonMesh_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadPolygonMesh_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadPolygonMesh_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadPolygonMesh_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadPolygonMesh_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadPolygonMesh_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadPolygonMesh_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadPolygonMesh_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadPolygonMesh_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadPolygonMesh_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadPolygonMesh_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadPolygonMesh_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadPolygonMesh_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadPolygonMesh_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadPolygonMesh_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadPolygonMesh_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadPolygonMesh_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadPolygonMesh_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadPolygonMesh_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadPolygonMesh_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadPolygonMesh_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadPolygonMesh_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadPolygonMesh_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadPolygonMesh_get_Coordinates(This,Coordinates)	\
    (This)->lpVtbl -> get_Coordinates(This,Coordinates)

#define IAcadPolygonMesh_put_Coordinates(This,Coordinates)	\
    (This)->lpVtbl -> put_Coordinates(This,Coordinates)

#define IAcadPolygonMesh_get_MClose(This,bClose)	\
    (This)->lpVtbl -> get_MClose(This,bClose)

#define IAcadPolygonMesh_put_MClose(This,bClose)	\
    (This)->lpVtbl -> put_MClose(This,bClose)

#define IAcadPolygonMesh_get_NClose(This,bClose)	\
    (This)->lpVtbl -> get_NClose(This,bClose)

#define IAcadPolygonMesh_put_NClose(This,bClose)	\
    (This)->lpVtbl -> put_NClose(This,bClose)

#define IAcadPolygonMesh_get_MDensity(This,density)	\
    (This)->lpVtbl -> get_MDensity(This,density)

#define IAcadPolygonMesh_put_MDensity(This,density)	\
    (This)->lpVtbl -> put_MDensity(This,density)

#define IAcadPolygonMesh_get_NDensity(This,density)	\
    (This)->lpVtbl -> get_NDensity(This,density)

#define IAcadPolygonMesh_put_NDensity(This,density)	\
    (This)->lpVtbl -> put_NDensity(This,density)

#define IAcadPolygonMesh_get_MVertexCount(This,Count)	\
    (This)->lpVtbl -> get_MVertexCount(This,Count)

#define IAcadPolygonMesh_get_NVertexCount(This,Count)	\
    (This)->lpVtbl -> get_NVertexCount(This,Count)

#define IAcadPolygonMesh_get_Type(This,Type)	\
    (This)->lpVtbl -> get_Type(This,Type)

#define IAcadPolygonMesh_put_Type(This,Type)	\
    (This)->lpVtbl -> put_Type(This,Type)

#define IAcadPolygonMesh_AppendVertex(This,vertex)	\
    (This)->lpVtbl -> AppendVertex(This,vertex)

#define IAcadPolygonMesh_Explode(This,pArrayObjs)	\
    (This)->lpVtbl -> Explode(This,pArrayObjs)

#define IAcadPolygonMesh_get_Coordinate(This,Index,pVal)	\
    (This)->lpVtbl -> get_Coordinate(This,Index,pVal)

#define IAcadPolygonMesh_put_Coordinate(This,Index,pVal)	\
    (This)->lpVtbl -> put_Coordinate(This,Index,pVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolygonMesh_get_Coordinates_Proxy( 
    IAcadPolygonMesh * This,
    /* [retval][out] */ VARIANT *Coordinates);


void __RPC_STUB IAcadPolygonMesh_get_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPolygonMesh_put_Coordinates_Proxy( 
    IAcadPolygonMesh * This,
    /* [in] */ VARIANT Coordinates);


void __RPC_STUB IAcadPolygonMesh_put_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolygonMesh_get_MClose_Proxy( 
    IAcadPolygonMesh * This,
    /* [retval][out] */ VARIANT_BOOL *bClose);


void __RPC_STUB IAcadPolygonMesh_get_MClose_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPolygonMesh_put_MClose_Proxy( 
    IAcadPolygonMesh * This,
    /* [in] */ VARIANT_BOOL bClose);


void __RPC_STUB IAcadPolygonMesh_put_MClose_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolygonMesh_get_NClose_Proxy( 
    IAcadPolygonMesh * This,
    /* [retval][out] */ VARIANT_BOOL *bClose);


void __RPC_STUB IAcadPolygonMesh_get_NClose_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPolygonMesh_put_NClose_Proxy( 
    IAcadPolygonMesh * This,
    /* [in] */ VARIANT_BOOL bClose);


void __RPC_STUB IAcadPolygonMesh_put_NClose_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolygonMesh_get_MDensity_Proxy( 
    IAcadPolygonMesh * This,
    /* [retval][out] */ long *density);


void __RPC_STUB IAcadPolygonMesh_get_MDensity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPolygonMesh_put_MDensity_Proxy( 
    IAcadPolygonMesh * This,
    /* [in] */ long density);


void __RPC_STUB IAcadPolygonMesh_put_MDensity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolygonMesh_get_NDensity_Proxy( 
    IAcadPolygonMesh * This,
    /* [retval][out] */ long *density);


void __RPC_STUB IAcadPolygonMesh_get_NDensity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPolygonMesh_put_NDensity_Proxy( 
    IAcadPolygonMesh * This,
    /* [in] */ long density);


void __RPC_STUB IAcadPolygonMesh_put_NDensity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolygonMesh_get_MVertexCount_Proxy( 
    IAcadPolygonMesh * This,
    /* [retval][out] */ long *Count);


void __RPC_STUB IAcadPolygonMesh_get_MVertexCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolygonMesh_get_NVertexCount_Proxy( 
    IAcadPolygonMesh * This,
    /* [retval][out] */ long *Count);


void __RPC_STUB IAcadPolygonMesh_get_NVertexCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolygonMesh_get_Type_Proxy( 
    IAcadPolygonMesh * This,
    /* [retval][out] */ AcPolymeshType *Type);


void __RPC_STUB IAcadPolygonMesh_get_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPolygonMesh_put_Type_Proxy( 
    IAcadPolygonMesh * This,
    /* [in] */ AcPolymeshType Type);


void __RPC_STUB IAcadPolygonMesh_put_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPolygonMesh_AppendVertex_Proxy( 
    IAcadPolygonMesh * This,
    /* [in] */ VARIANT vertex);


void __RPC_STUB IAcadPolygonMesh_AppendVertex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPolygonMesh_Explode_Proxy( 
    IAcadPolygonMesh * This,
    /* [retval][out] */ VARIANT *pArrayObjs);


void __RPC_STUB IAcadPolygonMesh_Explode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolygonMesh_get_Coordinate_Proxy( 
    IAcadPolygonMesh * This,
    /* [in] */ int Index,
    /* [retval][out] */ VARIANT *pVal);


void __RPC_STUB IAcadPolygonMesh_get_Coordinate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPolygonMesh_put_Coordinate_Proxy( 
    IAcadPolygonMesh * This,
    /* [in] */ int Index,
    /* [in] */ VARIANT pVal);


void __RPC_STUB IAcadPolygonMesh_put_Coordinate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadPolygonMesh_INTERFACE_DEFINED__ */


#ifndef __IAcad3DPolyline_INTERFACE_DEFINED__
#define __IAcad3DPolyline_INTERFACE_DEFINED__

/* interface IAcad3DPolyline */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcad3DPolyline;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("655B8BB0-56E6-48AC-923B-4284072D946D")
    IAcad3DPolyline : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *Coordinates) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT Coordinates) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AppendVertex( 
            /* [in] */ VARIANT vertex) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Explode( 
            /* [retval][out] */ VARIANT *pArrayObjs) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Coordinate( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Coordinate( 
            /* [in] */ int Index,
            /* [in] */ VARIANT pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ Ac3DPolylineType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ Ac3DPolylineType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Closed( 
            /* [retval][out] */ VARIANT_BOOL *fClose) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Closed( 
            /* [in] */ VARIANT_BOOL fClose) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Length( 
            /* [retval][out] */ double *Length) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcad3DPolylineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcad3DPolyline * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcad3DPolyline * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcad3DPolyline * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcad3DPolyline * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcad3DPolyline * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcad3DPolyline * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcad3DPolyline * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcad3DPolyline * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcad3DPolyline * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcad3DPolyline * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcad3DPolyline * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcad3DPolyline * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcad3DPolyline * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcad3DPolyline * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcad3DPolyline * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcad3DPolyline * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcad3DPolyline * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcad3DPolyline * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcad3DPolyline * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcad3DPolyline * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcad3DPolyline * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcad3DPolyline * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcad3DPolyline * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcad3DPolyline * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcad3DPolyline * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcad3DPolyline * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcad3DPolyline * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcad3DPolyline * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcad3DPolyline * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcad3DPolyline * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcad3DPolyline * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcad3DPolyline * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ VARIANT *Coordinates);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IAcad3DPolyline * This,
            /* [in] */ VARIANT Coordinates);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AppendVertex )( 
            IAcad3DPolyline * This,
            /* [in] */ VARIANT vertex);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Explode )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinate )( 
            IAcad3DPolyline * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinate )( 
            IAcad3DPolyline * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ Ac3DPolylineType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            IAcad3DPolyline * This,
            /* [in] */ Ac3DPolylineType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Closed )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ VARIANT_BOOL *fClose);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Closed )( 
            IAcad3DPolyline * This,
            /* [in] */ VARIANT_BOOL fClose);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Length )( 
            IAcad3DPolyline * This,
            /* [retval][out] */ double *Length);
        
        END_INTERFACE
    } IAcad3DPolylineVtbl;

    interface IAcad3DPolyline
    {
        CONST_VTBL struct IAcad3DPolylineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcad3DPolyline_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcad3DPolyline_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcad3DPolyline_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcad3DPolyline_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcad3DPolyline_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcad3DPolyline_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcad3DPolyline_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcad3DPolyline_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcad3DPolyline_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcad3DPolyline_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcad3DPolyline_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcad3DPolyline_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcad3DPolyline_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcad3DPolyline_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcad3DPolyline_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcad3DPolyline_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcad3DPolyline_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcad3DPolyline_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcad3DPolyline_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcad3DPolyline_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcad3DPolyline_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcad3DPolyline_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcad3DPolyline_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcad3DPolyline_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcad3DPolyline_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcad3DPolyline_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcad3DPolyline_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcad3DPolyline_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcad3DPolyline_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcad3DPolyline_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcad3DPolyline_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcad3DPolyline_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcad3DPolyline_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcad3DPolyline_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcad3DPolyline_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcad3DPolyline_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcad3DPolyline_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcad3DPolyline_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcad3DPolyline_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcad3DPolyline_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcad3DPolyline_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcad3DPolyline_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcad3DPolyline_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcad3DPolyline_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcad3DPolyline_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcad3DPolyline_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcad3DPolyline_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcad3DPolyline_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcad3DPolyline_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcad3DPolyline_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcad3DPolyline_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcad3DPolyline_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcad3DPolyline_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcad3DPolyline_get_Coordinates(This,Coordinates)	\
    (This)->lpVtbl -> get_Coordinates(This,Coordinates)

#define IAcad3DPolyline_put_Coordinates(This,Coordinates)	\
    (This)->lpVtbl -> put_Coordinates(This,Coordinates)

#define IAcad3DPolyline_AppendVertex(This,vertex)	\
    (This)->lpVtbl -> AppendVertex(This,vertex)

#define IAcad3DPolyline_Explode(This,pArrayObjs)	\
    (This)->lpVtbl -> Explode(This,pArrayObjs)

#define IAcad3DPolyline_get_Coordinate(This,Index,pVal)	\
    (This)->lpVtbl -> get_Coordinate(This,Index,pVal)

#define IAcad3DPolyline_put_Coordinate(This,Index,pVal)	\
    (This)->lpVtbl -> put_Coordinate(This,Index,pVal)

#define IAcad3DPolyline_get_Type(This,Type)	\
    (This)->lpVtbl -> get_Type(This,Type)

#define IAcad3DPolyline_put_Type(This,Type)	\
    (This)->lpVtbl -> put_Type(This,Type)

#define IAcad3DPolyline_get_Closed(This,fClose)	\
    (This)->lpVtbl -> get_Closed(This,fClose)

#define IAcad3DPolyline_put_Closed(This,fClose)	\
    (This)->lpVtbl -> put_Closed(This,fClose)

#define IAcad3DPolyline_get_Length(This,Length)	\
    (This)->lpVtbl -> get_Length(This,Length)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcad3DPolyline_get_Coordinates_Proxy( 
    IAcad3DPolyline * This,
    /* [retval][out] */ VARIANT *Coordinates);


void __RPC_STUB IAcad3DPolyline_get_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcad3DPolyline_put_Coordinates_Proxy( 
    IAcad3DPolyline * This,
    /* [in] */ VARIANT Coordinates);


void __RPC_STUB IAcad3DPolyline_put_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcad3DPolyline_AppendVertex_Proxy( 
    IAcad3DPolyline * This,
    /* [in] */ VARIANT vertex);


void __RPC_STUB IAcad3DPolyline_AppendVertex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcad3DPolyline_Explode_Proxy( 
    IAcad3DPolyline * This,
    /* [retval][out] */ VARIANT *pArrayObjs);


void __RPC_STUB IAcad3DPolyline_Explode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcad3DPolyline_get_Coordinate_Proxy( 
    IAcad3DPolyline * This,
    /* [in] */ int Index,
    /* [retval][out] */ VARIANT *pVal);


void __RPC_STUB IAcad3DPolyline_get_Coordinate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcad3DPolyline_put_Coordinate_Proxy( 
    IAcad3DPolyline * This,
    /* [in] */ int Index,
    /* [in] */ VARIANT pVal);


void __RPC_STUB IAcad3DPolyline_put_Coordinate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcad3DPolyline_get_Type_Proxy( 
    IAcad3DPolyline * This,
    /* [retval][out] */ Ac3DPolylineType *Type);


void __RPC_STUB IAcad3DPolyline_get_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcad3DPolyline_put_Type_Proxy( 
    IAcad3DPolyline * This,
    /* [in] */ Ac3DPolylineType Type);


void __RPC_STUB IAcad3DPolyline_put_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcad3DPolyline_get_Closed_Proxy( 
    IAcad3DPolyline * This,
    /* [retval][out] */ VARIANT_BOOL *fClose);


void __RPC_STUB IAcad3DPolyline_get_Closed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcad3DPolyline_put_Closed_Proxy( 
    IAcad3DPolyline * This,
    /* [in] */ VARIANT_BOOL fClose);


void __RPC_STUB IAcad3DPolyline_put_Closed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcad3DPolyline_get_Length_Proxy( 
    IAcad3DPolyline * This,
    /* [retval][out] */ double *Length);


void __RPC_STUB IAcad3DPolyline_get_Length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcad3DPolyline_INTERFACE_DEFINED__ */


#ifndef __IAcadArc_INTERFACE_DEFINED__
#define __IAcadArc_INTERFACE_DEFINED__

/* interface IAcadArc */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadArc;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("75FF9FD8-04FA-4D88-8903-2C806543E22E")
    IAcadArc : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [retval][out] */ VARIANT *StartPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Center( 
            /* [retval][out] */ VARIANT *CenterPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Center( 
            /* [in] */ VARIANT CenterPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
            /* [retval][out] */ VARIANT *EndPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Radius( 
            /* [retval][out] */ double *Radius) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Radius( 
            /* [in] */ double Radius) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartAngle( 
            /* [retval][out] */ ACAD_ANGLE *Angle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_StartAngle( 
            /* [in] */ ACAD_ANGLE Angle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndAngle( 
            /* [retval][out] */ ACAD_ANGLE *Angle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_EndAngle( 
            /* [in] */ ACAD_ANGLE Angle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TotalAngle( 
            /* [retval][out] */ ACAD_ANGLE *TotalAngle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ArcLength( 
            /* [retval][out] */ ACAD_DISTANCE *ArcLength) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *Thickness) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thickness) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Offset( 
            /* [in] */ double Distance,
            /* [retval][out] */ VARIANT *pOffsetCurves) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Area( 
            /* [retval][out] */ double *Area) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *Normal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT Normal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadArcVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadArc * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadArc * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadArc * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadArc * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadArc * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadArc * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadArc * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadArc * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadArc * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadArc * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadArc * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadArc * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadArc * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadArc * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadArc * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadArc * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadArc * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadArc * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadArc * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadArc * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadArc * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadArc * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadArc * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadArc * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadArc * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadArc * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadArc * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadArc * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadArc * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadArc * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadArc * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadArc * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadArc * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadArc * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadArc * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadArc * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadArc * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadArc * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadArc * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadArc * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadArc * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadArc * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadArc * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadArc * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadArc * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadArc * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadArc * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadArc * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadArc * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadArc * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadArc * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadArc * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadArc * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            IAcadArc * This,
            /* [retval][out] */ VARIANT *StartPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Center )( 
            IAcadArc * This,
            /* [retval][out] */ VARIANT *CenterPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Center )( 
            IAcadArc * This,
            /* [in] */ VARIANT CenterPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            IAcadArc * This,
            /* [retval][out] */ VARIANT *EndPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Radius )( 
            IAcadArc * This,
            /* [retval][out] */ double *Radius);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Radius )( 
            IAcadArc * This,
            /* [in] */ double Radius);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartAngle )( 
            IAcadArc * This,
            /* [retval][out] */ ACAD_ANGLE *Angle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StartAngle )( 
            IAcadArc * This,
            /* [in] */ ACAD_ANGLE Angle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndAngle )( 
            IAcadArc * This,
            /* [retval][out] */ ACAD_ANGLE *Angle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EndAngle )( 
            IAcadArc * This,
            /* [in] */ ACAD_ANGLE Angle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TotalAngle )( 
            IAcadArc * This,
            /* [retval][out] */ ACAD_ANGLE *TotalAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ArcLength )( 
            IAcadArc * This,
            /* [retval][out] */ ACAD_DISTANCE *ArcLength);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IAcadArc * This,
            /* [retval][out] */ double *Thickness);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IAcadArc * This,
            /* [in] */ double Thickness);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Offset )( 
            IAcadArc * This,
            /* [in] */ double Distance,
            /* [retval][out] */ VARIANT *pOffsetCurves);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Area )( 
            IAcadArc * This,
            /* [retval][out] */ double *Area);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadArc * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadArc * This,
            /* [in] */ VARIANT Normal);
        
        END_INTERFACE
    } IAcadArcVtbl;

    interface IAcadArc
    {
        CONST_VTBL struct IAcadArcVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadArc_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadArc_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadArc_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadArc_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadArc_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadArc_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadArc_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadArc_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadArc_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadArc_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadArc_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadArc_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadArc_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadArc_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadArc_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadArc_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadArc_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadArc_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadArc_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadArc_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadArc_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadArc_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadArc_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadArc_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadArc_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadArc_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadArc_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadArc_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadArc_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadArc_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadArc_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadArc_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadArc_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadArc_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadArc_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadArc_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadArc_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadArc_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadArc_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadArc_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadArc_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadArc_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadArc_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadArc_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadArc_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadArc_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadArc_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadArc_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadArc_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadArc_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadArc_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadArc_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadArc_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadArc_get_StartPoint(This,StartPoint)	\
    (This)->lpVtbl -> get_StartPoint(This,StartPoint)

#define IAcadArc_get_Center(This,CenterPoint)	\
    (This)->lpVtbl -> get_Center(This,CenterPoint)

#define IAcadArc_put_Center(This,CenterPoint)	\
    (This)->lpVtbl -> put_Center(This,CenterPoint)

#define IAcadArc_get_EndPoint(This,EndPoint)	\
    (This)->lpVtbl -> get_EndPoint(This,EndPoint)

#define IAcadArc_get_Radius(This,Radius)	\
    (This)->lpVtbl -> get_Radius(This,Radius)

#define IAcadArc_put_Radius(This,Radius)	\
    (This)->lpVtbl -> put_Radius(This,Radius)

#define IAcadArc_get_StartAngle(This,Angle)	\
    (This)->lpVtbl -> get_StartAngle(This,Angle)

#define IAcadArc_put_StartAngle(This,Angle)	\
    (This)->lpVtbl -> put_StartAngle(This,Angle)

#define IAcadArc_get_EndAngle(This,Angle)	\
    (This)->lpVtbl -> get_EndAngle(This,Angle)

#define IAcadArc_put_EndAngle(This,Angle)	\
    (This)->lpVtbl -> put_EndAngle(This,Angle)

#define IAcadArc_get_TotalAngle(This,TotalAngle)	\
    (This)->lpVtbl -> get_TotalAngle(This,TotalAngle)

#define IAcadArc_get_ArcLength(This,ArcLength)	\
    (This)->lpVtbl -> get_ArcLength(This,ArcLength)

#define IAcadArc_get_Thickness(This,Thickness)	\
    (This)->lpVtbl -> get_Thickness(This,Thickness)

#define IAcadArc_put_Thickness(This,Thickness)	\
    (This)->lpVtbl -> put_Thickness(This,Thickness)

#define IAcadArc_Offset(This,Distance,pOffsetCurves)	\
    (This)->lpVtbl -> Offset(This,Distance,pOffsetCurves)

#define IAcadArc_get_Area(This,Area)	\
    (This)->lpVtbl -> get_Area(This,Area)

#define IAcadArc_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadArc_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadArc_get_StartPoint_Proxy( 
    IAcadArc * This,
    /* [retval][out] */ VARIANT *StartPoint);


void __RPC_STUB IAcadArc_get_StartPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadArc_get_Center_Proxy( 
    IAcadArc * This,
    /* [retval][out] */ VARIANT *CenterPoint);


void __RPC_STUB IAcadArc_get_Center_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadArc_put_Center_Proxy( 
    IAcadArc * This,
    /* [in] */ VARIANT CenterPoint);


void __RPC_STUB IAcadArc_put_Center_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadArc_get_EndPoint_Proxy( 
    IAcadArc * This,
    /* [retval][out] */ VARIANT *EndPoint);


void __RPC_STUB IAcadArc_get_EndPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadArc_get_Radius_Proxy( 
    IAcadArc * This,
    /* [retval][out] */ double *Radius);


void __RPC_STUB IAcadArc_get_Radius_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadArc_put_Radius_Proxy( 
    IAcadArc * This,
    /* [in] */ double Radius);


void __RPC_STUB IAcadArc_put_Radius_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadArc_get_StartAngle_Proxy( 
    IAcadArc * This,
    /* [retval][out] */ ACAD_ANGLE *Angle);


void __RPC_STUB IAcadArc_get_StartAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadArc_put_StartAngle_Proxy( 
    IAcadArc * This,
    /* [in] */ ACAD_ANGLE Angle);


void __RPC_STUB IAcadArc_put_StartAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadArc_get_EndAngle_Proxy( 
    IAcadArc * This,
    /* [retval][out] */ ACAD_ANGLE *Angle);


void __RPC_STUB IAcadArc_get_EndAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadArc_put_EndAngle_Proxy( 
    IAcadArc * This,
    /* [in] */ ACAD_ANGLE Angle);


void __RPC_STUB IAcadArc_put_EndAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadArc_get_TotalAngle_Proxy( 
    IAcadArc * This,
    /* [retval][out] */ ACAD_ANGLE *TotalAngle);


void __RPC_STUB IAcadArc_get_TotalAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadArc_get_ArcLength_Proxy( 
    IAcadArc * This,
    /* [retval][out] */ ACAD_DISTANCE *ArcLength);


void __RPC_STUB IAcadArc_get_ArcLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadArc_get_Thickness_Proxy( 
    IAcadArc * This,
    /* [retval][out] */ double *Thickness);


void __RPC_STUB IAcadArc_get_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadArc_put_Thickness_Proxy( 
    IAcadArc * This,
    /* [in] */ double Thickness);


void __RPC_STUB IAcadArc_put_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadArc_Offset_Proxy( 
    IAcadArc * This,
    /* [in] */ double Distance,
    /* [retval][out] */ VARIANT *pOffsetCurves);


void __RPC_STUB IAcadArc_Offset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadArc_get_Area_Proxy( 
    IAcadArc * This,
    /* [retval][out] */ double *Area);


void __RPC_STUB IAcadArc_get_Area_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadArc_get_Normal_Proxy( 
    IAcadArc * This,
    /* [retval][out] */ VARIANT *Normal);


void __RPC_STUB IAcadArc_get_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadArc_put_Normal_Proxy( 
    IAcadArc * This,
    /* [in] */ VARIANT Normal);


void __RPC_STUB IAcadArc_put_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadArc_INTERFACE_DEFINED__ */


#ifndef __IAcadAttribute_INTERFACE_DEFINED__
#define __IAcadAttribute_INTERFACE_DEFINED__

/* interface IAcadAttribute */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5A401278-DC00-4B1C-9F12-9A4F93C9A623")
    IAcadAttribute : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_FieldLength( 
            /* [retval][out] */ long *fieldLen) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_FieldLength( 
            /* [in] */ long fieldLen) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TagString( 
            /* [retval][out] */ BSTR *Tag) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TagString( 
            /* [in] */ BSTR Tag) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PromptString( 
            /* [retval][out] */ BSTR *bstrPrompt) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PromptString( 
            /* [in] */ BSTR bstrPrompt) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextString( 
            /* [retval][out] */ BSTR *bstrText) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextString( 
            /* [in] */ BSTR bstrText) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_StyleName( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_StyleName( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Alignment( 
            /* [retval][out] */ AcAlignment *align) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Alignment( 
            /* [in] */ AcAlignment align) = 0;
        
        virtual /* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_HorizontalAlignment( 
            /* [retval][out] */ AcHorizontalAlignment *horizAlign) = 0;
        
        virtual /* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_HorizontalAlignment( 
            /* [in] */ AcHorizontalAlignment horizAlign) = 0;
        
        virtual /* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_VerticalAlignment( 
            /* [retval][out] */ AcVerticalAlignment *vertiAlign) = 0;
        
        virtual /* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_VerticalAlignment( 
            /* [in] */ AcVerticalAlignment vertiAlign) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *Height) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
            /* [retval][out] */ ACAD_ANGLE *rotAngle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
            /* [in] */ ACAD_ANGLE rotAngle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ScaleFactor( 
            /* [retval][out] */ ACAD_NOUNITS *scalFactor) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ScaleFactor( 
            /* [in] */ ACAD_NOUNITS scalFactor) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ObliqueAngle( 
            /* [retval][out] */ ACAD_ANGLE *obliAngle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ObliqueAngle( 
            /* [in] */ ACAD_ANGLE obliAngle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextAlignmentPoint( 
            /* [retval][out] */ VARIANT *alignPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextAlignmentPoint( 
            /* [in] */ VARIANT alignPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_InsertionPoint( 
            /* [retval][out] */ VARIANT *insPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_InsertionPoint( 
            /* [in] */ VARIANT insPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *Normal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT Normal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextGenerationFlag( 
            /* [retval][out] */ long *textGenFlag) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextGenerationFlag( 
            /* [in] */ long textGenFlag) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *Thickness) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thickness) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mode( 
            /* [retval][out] */ long *Mode) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mode( 
            /* [in] */ long Mode) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_UpsideDown( 
            /* [retval][out] */ VARIANT_BOOL *bUpsideDown) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_UpsideDown( 
            /* [in] */ VARIANT_BOOL bUpsideDown) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Backward( 
            /* [retval][out] */ VARIANT_BOOL *bBackward) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Backward( 
            /* [in] */ VARIANT_BOOL bBackward) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Invisible( 
            /* [retval][out] */ VARIANT_BOOL *bInvisible) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Invisible( 
            /* [in] */ VARIANT_BOOL bInvisible) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Constant( 
            /* [retval][out] */ VARIANT_BOOL *bConstant) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Constant( 
            /* [in] */ VARIANT_BOOL bConstant) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Verify( 
            /* [retval][out] */ VARIANT_BOOL *bVerify) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Verify( 
            /* [in] */ VARIANT_BOOL bVerify) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Preset( 
            /* [retval][out] */ VARIANT_BOOL *bPreset) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Preset( 
            /* [in] */ VARIANT_BOOL bPreset) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadAttribute * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadAttribute * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadAttribute * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadAttribute * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadAttribute * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadAttribute * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadAttribute * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadAttribute * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadAttribute * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadAttribute * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadAttribute * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadAttribute * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadAttribute * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadAttribute * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadAttribute * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadAttribute * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadAttribute * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadAttribute * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadAttribute * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadAttribute * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadAttribute * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadAttribute * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadAttribute * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadAttribute * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadAttribute * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadAttribute * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadAttribute * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadAttribute * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadAttribute * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadAttribute * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadAttribute * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadAttribute * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadAttribute * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadAttribute * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadAttribute * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadAttribute * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadAttribute * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadAttribute * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadAttribute * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadAttribute * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadAttribute * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadAttribute * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadAttribute * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadAttribute * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadAttribute * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadAttribute * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadAttribute * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadAttribute * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FieldLength )( 
            IAcadAttribute * This,
            /* [retval][out] */ long *fieldLen);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FieldLength )( 
            IAcadAttribute * This,
            /* [in] */ long fieldLen);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TagString )( 
            IAcadAttribute * This,
            /* [retval][out] */ BSTR *Tag);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TagString )( 
            IAcadAttribute * This,
            /* [in] */ BSTR Tag);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PromptString )( 
            IAcadAttribute * This,
            /* [retval][out] */ BSTR *bstrPrompt);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PromptString )( 
            IAcadAttribute * This,
            /* [in] */ BSTR bstrPrompt);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextString )( 
            IAcadAttribute * This,
            /* [retval][out] */ BSTR *bstrText);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextString )( 
            IAcadAttribute * This,
            /* [in] */ BSTR bstrText);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IAcadAttribute * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IAcadAttribute * This,
            /* [in] */ BSTR Name);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Alignment )( 
            IAcadAttribute * This,
            /* [retval][out] */ AcAlignment *align);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Alignment )( 
            IAcadAttribute * This,
            /* [in] */ AcAlignment align);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalAlignment )( 
            IAcadAttribute * This,
            /* [retval][out] */ AcHorizontalAlignment *horizAlign);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalAlignment )( 
            IAcadAttribute * This,
            /* [in] */ AcHorizontalAlignment horizAlign);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalAlignment )( 
            IAcadAttribute * This,
            /* [retval][out] */ AcVerticalAlignment *vertiAlign);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalAlignment )( 
            IAcadAttribute * This,
            /* [in] */ AcVerticalAlignment vertiAlign);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IAcadAttribute * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IAcadAttribute * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IAcadAttribute * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IAcadAttribute * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IAcadAttribute * This,
            /* [retval][out] */ ACAD_NOUNITS *scalFactor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IAcadAttribute * This,
            /* [in] */ ACAD_NOUNITS scalFactor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObliqueAngle )( 
            IAcadAttribute * This,
            /* [retval][out] */ ACAD_ANGLE *obliAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ObliqueAngle )( 
            IAcadAttribute * This,
            /* [in] */ ACAD_ANGLE obliAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlignmentPoint )( 
            IAcadAttribute * This,
            /* [retval][out] */ VARIANT *alignPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextAlignmentPoint )( 
            IAcadAttribute * This,
            /* [in] */ VARIANT alignPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IAcadAttribute * This,
            /* [retval][out] */ VARIANT *insPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IAcadAttribute * This,
            /* [in] */ VARIANT insPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadAttribute * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadAttribute * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextGenerationFlag )( 
            IAcadAttribute * This,
            /* [retval][out] */ long *textGenFlag);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextGenerationFlag )( 
            IAcadAttribute * This,
            /* [in] */ long textGenFlag);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IAcadAttribute * This,
            /* [retval][out] */ double *Thickness);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IAcadAttribute * This,
            /* [in] */ double Thickness);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IAcadAttribute * This,
            /* [retval][out] */ long *Mode);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mode )( 
            IAcadAttribute * This,
            /* [in] */ long Mode);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UpsideDown )( 
            IAcadAttribute * This,
            /* [retval][out] */ VARIANT_BOOL *bUpsideDown);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UpsideDown )( 
            IAcadAttribute * This,
            /* [in] */ VARIANT_BOOL bUpsideDown);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Backward )( 
            IAcadAttribute * This,
            /* [retval][out] */ VARIANT_BOOL *bBackward);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Backward )( 
            IAcadAttribute * This,
            /* [in] */ VARIANT_BOOL bBackward);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Invisible )( 
            IAcadAttribute * This,
            /* [retval][out] */ VARIANT_BOOL *bInvisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Invisible )( 
            IAcadAttribute * This,
            /* [in] */ VARIANT_BOOL bInvisible);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Constant )( 
            IAcadAttribute * This,
            /* [retval][out] */ VARIANT_BOOL *bConstant);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Constant )( 
            IAcadAttribute * This,
            /* [in] */ VARIANT_BOOL bConstant);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Verify )( 
            IAcadAttribute * This,
            /* [retval][out] */ VARIANT_BOOL *bVerify);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Verify )( 
            IAcadAttribute * This,
            /* [in] */ VARIANT_BOOL bVerify);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Preset )( 
            IAcadAttribute * This,
            /* [retval][out] */ VARIANT_BOOL *bPreset);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Preset )( 
            IAcadAttribute * This,
            /* [in] */ VARIANT_BOOL bPreset);
        
        END_INTERFACE
    } IAcadAttributeVtbl;

    interface IAcadAttribute
    {
        CONST_VTBL struct IAcadAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadAttribute_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadAttribute_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadAttribute_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadAttribute_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadAttribute_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadAttribute_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadAttribute_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadAttribute_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadAttribute_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadAttribute_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadAttribute_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadAttribute_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadAttribute_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadAttribute_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadAttribute_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadAttribute_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadAttribute_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadAttribute_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadAttribute_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadAttribute_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadAttribute_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadAttribute_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadAttribute_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadAttribute_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadAttribute_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadAttribute_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadAttribute_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadAttribute_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadAttribute_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadAttribute_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadAttribute_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadAttribute_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadAttribute_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadAttribute_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadAttribute_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadAttribute_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadAttribute_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadAttribute_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadAttribute_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadAttribute_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadAttribute_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadAttribute_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadAttribute_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadAttribute_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadAttribute_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadAttribute_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadAttribute_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadAttribute_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadAttribute_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadAttribute_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadAttribute_get_FieldLength(This,fieldLen)	\
    (This)->lpVtbl -> get_FieldLength(This,fieldLen)

#define IAcadAttribute_put_FieldLength(This,fieldLen)	\
    (This)->lpVtbl -> put_FieldLength(This,fieldLen)

#define IAcadAttribute_get_TagString(This,Tag)	\
    (This)->lpVtbl -> get_TagString(This,Tag)

#define IAcadAttribute_put_TagString(This,Tag)	\
    (This)->lpVtbl -> put_TagString(This,Tag)

#define IAcadAttribute_get_PromptString(This,bstrPrompt)	\
    (This)->lpVtbl -> get_PromptString(This,bstrPrompt)

#define IAcadAttribute_put_PromptString(This,bstrPrompt)	\
    (This)->lpVtbl -> put_PromptString(This,bstrPrompt)

#define IAcadAttribute_get_TextString(This,bstrText)	\
    (This)->lpVtbl -> get_TextString(This,bstrText)

#define IAcadAttribute_put_TextString(This,bstrText)	\
    (This)->lpVtbl -> put_TextString(This,bstrText)

#define IAcadAttribute_get_StyleName(This,Name)	\
    (This)->lpVtbl -> get_StyleName(This,Name)

#define IAcadAttribute_put_StyleName(This,Name)	\
    (This)->lpVtbl -> put_StyleName(This,Name)

#define IAcadAttribute_get_Alignment(This,align)	\
    (This)->lpVtbl -> get_Alignment(This,align)

#define IAcadAttribute_put_Alignment(This,align)	\
    (This)->lpVtbl -> put_Alignment(This,align)

#define IAcadAttribute_get_HorizontalAlignment(This,horizAlign)	\
    (This)->lpVtbl -> get_HorizontalAlignment(This,horizAlign)

#define IAcadAttribute_put_HorizontalAlignment(This,horizAlign)	\
    (This)->lpVtbl -> put_HorizontalAlignment(This,horizAlign)

#define IAcadAttribute_get_VerticalAlignment(This,vertiAlign)	\
    (This)->lpVtbl -> get_VerticalAlignment(This,vertiAlign)

#define IAcadAttribute_put_VerticalAlignment(This,vertiAlign)	\
    (This)->lpVtbl -> put_VerticalAlignment(This,vertiAlign)

#define IAcadAttribute_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAcadAttribute_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAcadAttribute_get_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> get_Rotation(This,rotAngle)

#define IAcadAttribute_put_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> put_Rotation(This,rotAngle)

#define IAcadAttribute_get_ScaleFactor(This,scalFactor)	\
    (This)->lpVtbl -> get_ScaleFactor(This,scalFactor)

#define IAcadAttribute_put_ScaleFactor(This,scalFactor)	\
    (This)->lpVtbl -> put_ScaleFactor(This,scalFactor)

#define IAcadAttribute_get_ObliqueAngle(This,obliAngle)	\
    (This)->lpVtbl -> get_ObliqueAngle(This,obliAngle)

#define IAcadAttribute_put_ObliqueAngle(This,obliAngle)	\
    (This)->lpVtbl -> put_ObliqueAngle(This,obliAngle)

#define IAcadAttribute_get_TextAlignmentPoint(This,alignPoint)	\
    (This)->lpVtbl -> get_TextAlignmentPoint(This,alignPoint)

#define IAcadAttribute_put_TextAlignmentPoint(This,alignPoint)	\
    (This)->lpVtbl -> put_TextAlignmentPoint(This,alignPoint)

#define IAcadAttribute_get_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> get_InsertionPoint(This,insPoint)

#define IAcadAttribute_put_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> put_InsertionPoint(This,insPoint)

#define IAcadAttribute_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadAttribute_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadAttribute_get_TextGenerationFlag(This,textGenFlag)	\
    (This)->lpVtbl -> get_TextGenerationFlag(This,textGenFlag)

#define IAcadAttribute_put_TextGenerationFlag(This,textGenFlag)	\
    (This)->lpVtbl -> put_TextGenerationFlag(This,textGenFlag)

#define IAcadAttribute_get_Thickness(This,Thickness)	\
    (This)->lpVtbl -> get_Thickness(This,Thickness)

#define IAcadAttribute_put_Thickness(This,Thickness)	\
    (This)->lpVtbl -> put_Thickness(This,Thickness)

#define IAcadAttribute_get_Mode(This,Mode)	\
    (This)->lpVtbl -> get_Mode(This,Mode)

#define IAcadAttribute_put_Mode(This,Mode)	\
    (This)->lpVtbl -> put_Mode(This,Mode)

#define IAcadAttribute_get_UpsideDown(This,bUpsideDown)	\
    (This)->lpVtbl -> get_UpsideDown(This,bUpsideDown)

#define IAcadAttribute_put_UpsideDown(This,bUpsideDown)	\
    (This)->lpVtbl -> put_UpsideDown(This,bUpsideDown)

#define IAcadAttribute_get_Backward(This,bBackward)	\
    (This)->lpVtbl -> get_Backward(This,bBackward)

#define IAcadAttribute_put_Backward(This,bBackward)	\
    (This)->lpVtbl -> put_Backward(This,bBackward)

#define IAcadAttribute_get_Invisible(This,bInvisible)	\
    (This)->lpVtbl -> get_Invisible(This,bInvisible)

#define IAcadAttribute_put_Invisible(This,bInvisible)	\
    (This)->lpVtbl -> put_Invisible(This,bInvisible)

#define IAcadAttribute_get_Constant(This,bConstant)	\
    (This)->lpVtbl -> get_Constant(This,bConstant)

#define IAcadAttribute_put_Constant(This,bConstant)	\
    (This)->lpVtbl -> put_Constant(This,bConstant)

#define IAcadAttribute_get_Verify(This,bVerify)	\
    (This)->lpVtbl -> get_Verify(This,bVerify)

#define IAcadAttribute_put_Verify(This,bVerify)	\
    (This)->lpVtbl -> put_Verify(This,bVerify)

#define IAcadAttribute_get_Preset(This,bPreset)	\
    (This)->lpVtbl -> get_Preset(This,bPreset)

#define IAcadAttribute_put_Preset(This,bPreset)	\
    (This)->lpVtbl -> put_Preset(This,bPreset)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_FieldLength_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ long *fieldLen);


void __RPC_STUB IAcadAttribute_get_FieldLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_FieldLength_Proxy( 
    IAcadAttribute * This,
    /* [in] */ long fieldLen);


void __RPC_STUB IAcadAttribute_put_FieldLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_TagString_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ BSTR *Tag);


void __RPC_STUB IAcadAttribute_get_TagString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_TagString_Proxy( 
    IAcadAttribute * This,
    /* [in] */ BSTR Tag);


void __RPC_STUB IAcadAttribute_put_TagString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_PromptString_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ BSTR *bstrPrompt);


void __RPC_STUB IAcadAttribute_get_PromptString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_PromptString_Proxy( 
    IAcadAttribute * This,
    /* [in] */ BSTR bstrPrompt);


void __RPC_STUB IAcadAttribute_put_PromptString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_TextString_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ BSTR *bstrText);


void __RPC_STUB IAcadAttribute_get_TextString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_TextString_Proxy( 
    IAcadAttribute * This,
    /* [in] */ BSTR bstrText);


void __RPC_STUB IAcadAttribute_put_TextString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_StyleName_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ BSTR *Name);


void __RPC_STUB IAcadAttribute_get_StyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_StyleName_Proxy( 
    IAcadAttribute * This,
    /* [in] */ BSTR Name);


void __RPC_STUB IAcadAttribute_put_StyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_Alignment_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ AcAlignment *align);


void __RPC_STUB IAcadAttribute_get_Alignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_Alignment_Proxy( 
    IAcadAttribute * This,
    /* [in] */ AcAlignment align);


void __RPC_STUB IAcadAttribute_put_Alignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_HorizontalAlignment_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ AcHorizontalAlignment *horizAlign);


void __RPC_STUB IAcadAttribute_get_HorizontalAlignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_HorizontalAlignment_Proxy( 
    IAcadAttribute * This,
    /* [in] */ AcHorizontalAlignment horizAlign);


void __RPC_STUB IAcadAttribute_put_HorizontalAlignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_VerticalAlignment_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ AcVerticalAlignment *vertiAlign);


void __RPC_STUB IAcadAttribute_get_VerticalAlignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_VerticalAlignment_Proxy( 
    IAcadAttribute * This,
    /* [in] */ AcVerticalAlignment vertiAlign);


void __RPC_STUB IAcadAttribute_put_VerticalAlignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_Height_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ double *Height);


void __RPC_STUB IAcadAttribute_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_Height_Proxy( 
    IAcadAttribute * This,
    /* [in] */ double Height);


void __RPC_STUB IAcadAttribute_put_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_Rotation_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ ACAD_ANGLE *rotAngle);


void __RPC_STUB IAcadAttribute_get_Rotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_Rotation_Proxy( 
    IAcadAttribute * This,
    /* [in] */ ACAD_ANGLE rotAngle);


void __RPC_STUB IAcadAttribute_put_Rotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_ScaleFactor_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ ACAD_NOUNITS *scalFactor);


void __RPC_STUB IAcadAttribute_get_ScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_ScaleFactor_Proxy( 
    IAcadAttribute * This,
    /* [in] */ ACAD_NOUNITS scalFactor);


void __RPC_STUB IAcadAttribute_put_ScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_ObliqueAngle_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ ACAD_ANGLE *obliAngle);


void __RPC_STUB IAcadAttribute_get_ObliqueAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_ObliqueAngle_Proxy( 
    IAcadAttribute * This,
    /* [in] */ ACAD_ANGLE obliAngle);


void __RPC_STUB IAcadAttribute_put_ObliqueAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_TextAlignmentPoint_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ VARIANT *alignPoint);


void __RPC_STUB IAcadAttribute_get_TextAlignmentPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_TextAlignmentPoint_Proxy( 
    IAcadAttribute * This,
    /* [in] */ VARIANT alignPoint);


void __RPC_STUB IAcadAttribute_put_TextAlignmentPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_InsertionPoint_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ VARIANT *insPoint);


void __RPC_STUB IAcadAttribute_get_InsertionPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_InsertionPoint_Proxy( 
    IAcadAttribute * This,
    /* [in] */ VARIANT insPoint);


void __RPC_STUB IAcadAttribute_put_InsertionPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_Normal_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ VARIANT *Normal);


void __RPC_STUB IAcadAttribute_get_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_Normal_Proxy( 
    IAcadAttribute * This,
    /* [in] */ VARIANT Normal);


void __RPC_STUB IAcadAttribute_put_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_TextGenerationFlag_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ long *textGenFlag);


void __RPC_STUB IAcadAttribute_get_TextGenerationFlag_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_TextGenerationFlag_Proxy( 
    IAcadAttribute * This,
    /* [in] */ long textGenFlag);


void __RPC_STUB IAcadAttribute_put_TextGenerationFlag_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_Thickness_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ double *Thickness);


void __RPC_STUB IAcadAttribute_get_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_Thickness_Proxy( 
    IAcadAttribute * This,
    /* [in] */ double Thickness);


void __RPC_STUB IAcadAttribute_put_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_Mode_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ long *Mode);


void __RPC_STUB IAcadAttribute_get_Mode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_Mode_Proxy( 
    IAcadAttribute * This,
    /* [in] */ long Mode);


void __RPC_STUB IAcadAttribute_put_Mode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_UpsideDown_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ VARIANT_BOOL *bUpsideDown);


void __RPC_STUB IAcadAttribute_get_UpsideDown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_UpsideDown_Proxy( 
    IAcadAttribute * This,
    /* [in] */ VARIANT_BOOL bUpsideDown);


void __RPC_STUB IAcadAttribute_put_UpsideDown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_Backward_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ VARIANT_BOOL *bBackward);


void __RPC_STUB IAcadAttribute_get_Backward_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_Backward_Proxy( 
    IAcadAttribute * This,
    /* [in] */ VARIANT_BOOL bBackward);


void __RPC_STUB IAcadAttribute_put_Backward_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_Invisible_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ VARIANT_BOOL *bInvisible);


void __RPC_STUB IAcadAttribute_get_Invisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_Invisible_Proxy( 
    IAcadAttribute * This,
    /* [in] */ VARIANT_BOOL bInvisible);


void __RPC_STUB IAcadAttribute_put_Invisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_Constant_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ VARIANT_BOOL *bConstant);


void __RPC_STUB IAcadAttribute_get_Constant_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_Constant_Proxy( 
    IAcadAttribute * This,
    /* [in] */ VARIANT_BOOL bConstant);


void __RPC_STUB IAcadAttribute_put_Constant_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_Verify_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ VARIANT_BOOL *bVerify);


void __RPC_STUB IAcadAttribute_get_Verify_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_Verify_Proxy( 
    IAcadAttribute * This,
    /* [in] */ VARIANT_BOOL bVerify);


void __RPC_STUB IAcadAttribute_put_Verify_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_get_Preset_Proxy( 
    IAcadAttribute * This,
    /* [retval][out] */ VARIANT_BOOL *bPreset);


void __RPC_STUB IAcadAttribute_get_Preset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttribute_put_Preset_Proxy( 
    IAcadAttribute * This,
    /* [in] */ VARIANT_BOOL bPreset);


void __RPC_STUB IAcadAttribute_put_Preset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadAttribute_INTERFACE_DEFINED__ */


#ifndef __IAcad3DSolid_INTERFACE_DEFINED__
#define __IAcad3DSolid_INTERFACE_DEFINED__

/* interface IAcad3DSolid */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcad3DSolid;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8821B222-79ED-43DD-86BF-828311A81087")
    IAcad3DSolid : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Centroid( 
            /* [retval][out] */ VARIANT *Centroid) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_MomentOfInertia( 
            /* [retval][out] */ VARIANT *momentInertia) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PrincipalDirections( 
            /* [retval][out] */ VARIANT *prinDir) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PrincipalMoments( 
            /* [retval][out] */ VARIANT *prinMoments) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProductOfInertia( 
            /* [retval][out] */ VARIANT *prodInertia) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_RadiiOfGyration( 
            /* [retval][out] */ VARIANT *radiiGyration) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Volume( 
            /* [retval][out] */ double *Volume) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Boolean( 
            /* [in] */ AcBooleanType Operation,
            /* [in] */ IAcad3DSolid *SolidObject) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CheckInterference( 
            /* [in] */ IAcad3DSolid *Object,
            /* [in] */ VARIANT_BOOL CreateInterferenceSolid,
            /* [retval][out] */ IAcad3DSolid **pIntSolid) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SectionSolid( 
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IAcadRegion **pRegion) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SliceSolid( 
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [in] */ VARIANT_BOOL Negative,
            /* [retval][out] */ IAcad3DSolid **pNegSideSolid) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcad3DSolidVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcad3DSolid * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcad3DSolid * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcad3DSolid * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcad3DSolid * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcad3DSolid * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcad3DSolid * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcad3DSolid * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcad3DSolid * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcad3DSolid * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcad3DSolid * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcad3DSolid * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcad3DSolid * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcad3DSolid * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcad3DSolid * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcad3DSolid * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcad3DSolid * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcad3DSolid * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcad3DSolid * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcad3DSolid * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcad3DSolid * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcad3DSolid * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcad3DSolid * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcad3DSolid * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcad3DSolid * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcad3DSolid * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcad3DSolid * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcad3DSolid * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcad3DSolid * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcad3DSolid * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcad3DSolid * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcad3DSolid * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcad3DSolid * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcad3DSolid * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcad3DSolid * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcad3DSolid * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcad3DSolid * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcad3DSolid * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcad3DSolid * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcad3DSolid * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcad3DSolid * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcad3DSolid * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcad3DSolid * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcad3DSolid * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcad3DSolid * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcad3DSolid * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcad3DSolid * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcad3DSolid * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcad3DSolid * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcad3DSolid * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcad3DSolid * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcad3DSolid * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcad3DSolid * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcad3DSolid * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Centroid )( 
            IAcad3DSolid * This,
            /* [retval][out] */ VARIANT *Centroid);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MomentOfInertia )( 
            IAcad3DSolid * This,
            /* [retval][out] */ VARIANT *momentInertia);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PrincipalDirections )( 
            IAcad3DSolid * This,
            /* [retval][out] */ VARIANT *prinDir);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PrincipalMoments )( 
            IAcad3DSolid * This,
            /* [retval][out] */ VARIANT *prinMoments);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProductOfInertia )( 
            IAcad3DSolid * This,
            /* [retval][out] */ VARIANT *prodInertia);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RadiiOfGyration )( 
            IAcad3DSolid * This,
            /* [retval][out] */ VARIANT *radiiGyration);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IAcad3DSolid * This,
            /* [retval][out] */ double *Volume);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Boolean )( 
            IAcad3DSolid * This,
            /* [in] */ AcBooleanType Operation,
            /* [in] */ IAcad3DSolid *SolidObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CheckInterference )( 
            IAcad3DSolid * This,
            /* [in] */ IAcad3DSolid *Object,
            /* [in] */ VARIANT_BOOL CreateInterferenceSolid,
            /* [retval][out] */ IAcad3DSolid **pIntSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SectionSolid )( 
            IAcad3DSolid * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IAcadRegion **pRegion);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SliceSolid )( 
            IAcad3DSolid * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [in] */ VARIANT_BOOL Negative,
            /* [retval][out] */ IAcad3DSolid **pNegSideSolid);
        
        END_INTERFACE
    } IAcad3DSolidVtbl;

    interface IAcad3DSolid
    {
        CONST_VTBL struct IAcad3DSolidVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcad3DSolid_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcad3DSolid_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcad3DSolid_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcad3DSolid_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcad3DSolid_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcad3DSolid_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcad3DSolid_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcad3DSolid_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcad3DSolid_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcad3DSolid_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcad3DSolid_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcad3DSolid_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcad3DSolid_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcad3DSolid_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcad3DSolid_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcad3DSolid_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcad3DSolid_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcad3DSolid_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcad3DSolid_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcad3DSolid_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcad3DSolid_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcad3DSolid_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcad3DSolid_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcad3DSolid_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcad3DSolid_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcad3DSolid_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcad3DSolid_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcad3DSolid_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcad3DSolid_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcad3DSolid_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcad3DSolid_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcad3DSolid_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcad3DSolid_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcad3DSolid_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcad3DSolid_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcad3DSolid_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcad3DSolid_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcad3DSolid_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcad3DSolid_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcad3DSolid_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcad3DSolid_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcad3DSolid_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcad3DSolid_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcad3DSolid_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcad3DSolid_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcad3DSolid_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcad3DSolid_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcad3DSolid_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcad3DSolid_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcad3DSolid_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcad3DSolid_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcad3DSolid_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcad3DSolid_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcad3DSolid_get_Centroid(This,Centroid)	\
    (This)->lpVtbl -> get_Centroid(This,Centroid)

#define IAcad3DSolid_get_MomentOfInertia(This,momentInertia)	\
    (This)->lpVtbl -> get_MomentOfInertia(This,momentInertia)

#define IAcad3DSolid_get_PrincipalDirections(This,prinDir)	\
    (This)->lpVtbl -> get_PrincipalDirections(This,prinDir)

#define IAcad3DSolid_get_PrincipalMoments(This,prinMoments)	\
    (This)->lpVtbl -> get_PrincipalMoments(This,prinMoments)

#define IAcad3DSolid_get_ProductOfInertia(This,prodInertia)	\
    (This)->lpVtbl -> get_ProductOfInertia(This,prodInertia)

#define IAcad3DSolid_get_RadiiOfGyration(This,radiiGyration)	\
    (This)->lpVtbl -> get_RadiiOfGyration(This,radiiGyration)

#define IAcad3DSolid_get_Volume(This,Volume)	\
    (This)->lpVtbl -> get_Volume(This,Volume)

#define IAcad3DSolid_Boolean(This,Operation,SolidObject)	\
    (This)->lpVtbl -> Boolean(This,Operation,SolidObject)

#define IAcad3DSolid_CheckInterference(This,Object,CreateInterferenceSolid,pIntSolid)	\
    (This)->lpVtbl -> CheckInterference(This,Object,CreateInterferenceSolid,pIntSolid)

#define IAcad3DSolid_SectionSolid(This,Point1,Point2,point3,pRegion)	\
    (This)->lpVtbl -> SectionSolid(This,Point1,Point2,point3,pRegion)

#define IAcad3DSolid_SliceSolid(This,Point1,Point2,point3,Negative,pNegSideSolid)	\
    (This)->lpVtbl -> SliceSolid(This,Point1,Point2,point3,Negative,pNegSideSolid)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcad3DSolid_get_Centroid_Proxy( 
    IAcad3DSolid * This,
    /* [retval][out] */ VARIANT *Centroid);


void __RPC_STUB IAcad3DSolid_get_Centroid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcad3DSolid_get_MomentOfInertia_Proxy( 
    IAcad3DSolid * This,
    /* [retval][out] */ VARIANT *momentInertia);


void __RPC_STUB IAcad3DSolid_get_MomentOfInertia_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcad3DSolid_get_PrincipalDirections_Proxy( 
    IAcad3DSolid * This,
    /* [retval][out] */ VARIANT *prinDir);


void __RPC_STUB IAcad3DSolid_get_PrincipalDirections_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcad3DSolid_get_PrincipalMoments_Proxy( 
    IAcad3DSolid * This,
    /* [retval][out] */ VARIANT *prinMoments);


void __RPC_STUB IAcad3DSolid_get_PrincipalMoments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcad3DSolid_get_ProductOfInertia_Proxy( 
    IAcad3DSolid * This,
    /* [retval][out] */ VARIANT *prodInertia);


void __RPC_STUB IAcad3DSolid_get_ProductOfInertia_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcad3DSolid_get_RadiiOfGyration_Proxy( 
    IAcad3DSolid * This,
    /* [retval][out] */ VARIANT *radiiGyration);


void __RPC_STUB IAcad3DSolid_get_RadiiOfGyration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcad3DSolid_get_Volume_Proxy( 
    IAcad3DSolid * This,
    /* [retval][out] */ double *Volume);


void __RPC_STUB IAcad3DSolid_get_Volume_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcad3DSolid_Boolean_Proxy( 
    IAcad3DSolid * This,
    /* [in] */ AcBooleanType Operation,
    /* [in] */ IAcad3DSolid *SolidObject);


void __RPC_STUB IAcad3DSolid_Boolean_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcad3DSolid_CheckInterference_Proxy( 
    IAcad3DSolid * This,
    /* [in] */ IAcad3DSolid *Object,
    /* [in] */ VARIANT_BOOL CreateInterferenceSolid,
    /* [retval][out] */ IAcad3DSolid **pIntSolid);


void __RPC_STUB IAcad3DSolid_CheckInterference_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcad3DSolid_SectionSolid_Proxy( 
    IAcad3DSolid * This,
    /* [in] */ VARIANT Point1,
    /* [in] */ VARIANT Point2,
    /* [in] */ VARIANT point3,
    /* [retval][out] */ IAcadRegion **pRegion);


void __RPC_STUB IAcad3DSolid_SectionSolid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcad3DSolid_SliceSolid_Proxy( 
    IAcad3DSolid * This,
    /* [in] */ VARIANT Point1,
    /* [in] */ VARIANT Point2,
    /* [in] */ VARIANT point3,
    /* [in] */ VARIANT_BOOL Negative,
    /* [retval][out] */ IAcad3DSolid **pNegSideSolid);


void __RPC_STUB IAcad3DSolid_SliceSolid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcad3DSolid_INTERFACE_DEFINED__ */


#ifndef __IAcadRegion_INTERFACE_DEFINED__
#define __IAcadRegion_INTERFACE_DEFINED__

/* interface IAcadRegion */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadRegion;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0A7DC97A-45C2-4A83-B0D4-D8A621FA4479")
    IAcadRegion : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Area( 
            /* [retval][out] */ double *Area) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Centroid( 
            /* [retval][out] */ VARIANT *Centroid) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_MomentOfInertia( 
            /* [retval][out] */ VARIANT *momentInertia) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *Normal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Perimeter( 
            /* [retval][out] */ double *Perimeter) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PrincipalDirections( 
            /* [retval][out] */ VARIANT *prinDir) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PrincipalMoments( 
            /* [retval][out] */ VARIANT *prinMoments) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProductOfInertia( 
            /* [retval][out] */ double *prodInertia) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_RadiiOfGyration( 
            /* [retval][out] */ VARIANT *radiiGyration) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Boolean( 
            /* [in] */ AcBooleanType Operation,
            /* [in] */ IAcadRegion *Object) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Explode( 
            /* [retval][out] */ VARIANT *pArrayObjs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadRegionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadRegion * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadRegion * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadRegion * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadRegion * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadRegion * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadRegion * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadRegion * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadRegion * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadRegion * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadRegion * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadRegion * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadRegion * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadRegion * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadRegion * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadRegion * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadRegion * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadRegion * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadRegion * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadRegion * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadRegion * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadRegion * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadRegion * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadRegion * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadRegion * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadRegion * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadRegion * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadRegion * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadRegion * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadRegion * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadRegion * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadRegion * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadRegion * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadRegion * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadRegion * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadRegion * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadRegion * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadRegion * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadRegion * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadRegion * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadRegion * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadRegion * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadRegion * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadRegion * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadRegion * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadRegion * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadRegion * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadRegion * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadRegion * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadRegion * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadRegion * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadRegion * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadRegion * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadRegion * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Area )( 
            IAcadRegion * This,
            /* [retval][out] */ double *Area);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Centroid )( 
            IAcadRegion * This,
            /* [retval][out] */ VARIANT *Centroid);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MomentOfInertia )( 
            IAcadRegion * This,
            /* [retval][out] */ VARIANT *momentInertia);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadRegion * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Perimeter )( 
            IAcadRegion * This,
            /* [retval][out] */ double *Perimeter);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PrincipalDirections )( 
            IAcadRegion * This,
            /* [retval][out] */ VARIANT *prinDir);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PrincipalMoments )( 
            IAcadRegion * This,
            /* [retval][out] */ VARIANT *prinMoments);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProductOfInertia )( 
            IAcadRegion * This,
            /* [retval][out] */ double *prodInertia);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RadiiOfGyration )( 
            IAcadRegion * This,
            /* [retval][out] */ VARIANT *radiiGyration);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Boolean )( 
            IAcadRegion * This,
            /* [in] */ AcBooleanType Operation,
            /* [in] */ IAcadRegion *Object);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Explode )( 
            IAcadRegion * This,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        END_INTERFACE
    } IAcadRegionVtbl;

    interface IAcadRegion
    {
        CONST_VTBL struct IAcadRegionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadRegion_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadRegion_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadRegion_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadRegion_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadRegion_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadRegion_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadRegion_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadRegion_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadRegion_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadRegion_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadRegion_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadRegion_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadRegion_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadRegion_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadRegion_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadRegion_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadRegion_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadRegion_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadRegion_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadRegion_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadRegion_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadRegion_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadRegion_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadRegion_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadRegion_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadRegion_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadRegion_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadRegion_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadRegion_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadRegion_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadRegion_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadRegion_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadRegion_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadRegion_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadRegion_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadRegion_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadRegion_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadRegion_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadRegion_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadRegion_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadRegion_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadRegion_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadRegion_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadRegion_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadRegion_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadRegion_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadRegion_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadRegion_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadRegion_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadRegion_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadRegion_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadRegion_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadRegion_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadRegion_get_Area(This,Area)	\
    (This)->lpVtbl -> get_Area(This,Area)

#define IAcadRegion_get_Centroid(This,Centroid)	\
    (This)->lpVtbl -> get_Centroid(This,Centroid)

#define IAcadRegion_get_MomentOfInertia(This,momentInertia)	\
    (This)->lpVtbl -> get_MomentOfInertia(This,momentInertia)

#define IAcadRegion_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadRegion_get_Perimeter(This,Perimeter)	\
    (This)->lpVtbl -> get_Perimeter(This,Perimeter)

#define IAcadRegion_get_PrincipalDirections(This,prinDir)	\
    (This)->lpVtbl -> get_PrincipalDirections(This,prinDir)

#define IAcadRegion_get_PrincipalMoments(This,prinMoments)	\
    (This)->lpVtbl -> get_PrincipalMoments(This,prinMoments)

#define IAcadRegion_get_ProductOfInertia(This,prodInertia)	\
    (This)->lpVtbl -> get_ProductOfInertia(This,prodInertia)

#define IAcadRegion_get_RadiiOfGyration(This,radiiGyration)	\
    (This)->lpVtbl -> get_RadiiOfGyration(This,radiiGyration)

#define IAcadRegion_Boolean(This,Operation,Object)	\
    (This)->lpVtbl -> Boolean(This,Operation,Object)

#define IAcadRegion_Explode(This,pArrayObjs)	\
    (This)->lpVtbl -> Explode(This,pArrayObjs)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRegion_get_Area_Proxy( 
    IAcadRegion * This,
    /* [retval][out] */ double *Area);


void __RPC_STUB IAcadRegion_get_Area_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRegion_get_Centroid_Proxy( 
    IAcadRegion * This,
    /* [retval][out] */ VARIANT *Centroid);


void __RPC_STUB IAcadRegion_get_Centroid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRegion_get_MomentOfInertia_Proxy( 
    IAcadRegion * This,
    /* [retval][out] */ VARIANT *momentInertia);


void __RPC_STUB IAcadRegion_get_MomentOfInertia_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRegion_get_Normal_Proxy( 
    IAcadRegion * This,
    /* [retval][out] */ VARIANT *Normal);


void __RPC_STUB IAcadRegion_get_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRegion_get_Perimeter_Proxy( 
    IAcadRegion * This,
    /* [retval][out] */ double *Perimeter);


void __RPC_STUB IAcadRegion_get_Perimeter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRegion_get_PrincipalDirections_Proxy( 
    IAcadRegion * This,
    /* [retval][out] */ VARIANT *prinDir);


void __RPC_STUB IAcadRegion_get_PrincipalDirections_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRegion_get_PrincipalMoments_Proxy( 
    IAcadRegion * This,
    /* [retval][out] */ VARIANT *prinMoments);


void __RPC_STUB IAcadRegion_get_PrincipalMoments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRegion_get_ProductOfInertia_Proxy( 
    IAcadRegion * This,
    /* [retval][out] */ double *prodInertia);


void __RPC_STUB IAcadRegion_get_ProductOfInertia_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRegion_get_RadiiOfGyration_Proxy( 
    IAcadRegion * This,
    /* [retval][out] */ VARIANT *radiiGyration);


void __RPC_STUB IAcadRegion_get_RadiiOfGyration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadRegion_Boolean_Proxy( 
    IAcadRegion * This,
    /* [in] */ AcBooleanType Operation,
    /* [in] */ IAcadRegion *Object);


void __RPC_STUB IAcadRegion_Boolean_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadRegion_Explode_Proxy( 
    IAcadRegion * This,
    /* [retval][out] */ VARIANT *pArrayObjs);


void __RPC_STUB IAcadRegion_Explode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadRegion_INTERFACE_DEFINED__ */


#ifndef __IAcadCircle_INTERFACE_DEFINED__
#define __IAcadCircle_INTERFACE_DEFINED__

/* interface IAcadCircle */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadCircle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("46A82B9E-FA08-484A-85AA-7F847F68A682")
    IAcadCircle : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Center( 
            /* [retval][out] */ VARIANT *CenterPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Center( 
            /* [in] */ VARIANT CenterPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Radius( 
            /* [retval][out] */ double *Radius) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Radius( 
            /* [in] */ double Radius) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Diameter( 
            /* [retval][out] */ double *Diameter) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Diameter( 
            /* [in] */ double Diameter) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Circumference( 
            /* [retval][out] */ double *Circumference) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Circumference( 
            /* [in] */ double Circumference) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Area( 
            /* [retval][out] */ double *Area) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Area( 
            /* [in] */ double Area) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *Normal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT Normal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *Thickness) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thickness) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Offset( 
            /* [in] */ double Distance,
            /* [retval][out] */ VARIANT *pOffsetCurves) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadCircleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadCircle * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadCircle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadCircle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadCircle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadCircle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadCircle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadCircle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadCircle * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadCircle * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadCircle * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadCircle * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadCircle * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadCircle * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadCircle * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadCircle * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadCircle * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadCircle * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadCircle * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadCircle * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadCircle * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadCircle * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadCircle * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadCircle * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadCircle * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadCircle * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadCircle * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadCircle * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadCircle * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadCircle * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadCircle * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadCircle * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadCircle * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadCircle * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadCircle * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadCircle * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadCircle * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadCircle * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadCircle * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadCircle * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadCircle * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadCircle * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadCircle * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadCircle * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadCircle * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadCircle * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadCircle * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadCircle * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadCircle * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadCircle * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadCircle * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadCircle * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadCircle * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadCircle * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Center )( 
            IAcadCircle * This,
            /* [retval][out] */ VARIANT *CenterPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Center )( 
            IAcadCircle * This,
            /* [in] */ VARIANT CenterPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Radius )( 
            IAcadCircle * This,
            /* [retval][out] */ double *Radius);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Radius )( 
            IAcadCircle * This,
            /* [in] */ double Radius);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Diameter )( 
            IAcadCircle * This,
            /* [retval][out] */ double *Diameter);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Diameter )( 
            IAcadCircle * This,
            /* [in] */ double Diameter);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Circumference )( 
            IAcadCircle * This,
            /* [retval][out] */ double *Circumference);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Circumference )( 
            IAcadCircle * This,
            /* [in] */ double Circumference);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Area )( 
            IAcadCircle * This,
            /* [retval][out] */ double *Area);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Area )( 
            IAcadCircle * This,
            /* [in] */ double Area);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadCircle * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadCircle * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IAcadCircle * This,
            /* [retval][out] */ double *Thickness);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IAcadCircle * This,
            /* [in] */ double Thickness);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Offset )( 
            IAcadCircle * This,
            /* [in] */ double Distance,
            /* [retval][out] */ VARIANT *pOffsetCurves);
        
        END_INTERFACE
    } IAcadCircleVtbl;

    interface IAcadCircle
    {
        CONST_VTBL struct IAcadCircleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadCircle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadCircle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadCircle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadCircle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadCircle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadCircle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadCircle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadCircle_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadCircle_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadCircle_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadCircle_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadCircle_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadCircle_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadCircle_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadCircle_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadCircle_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadCircle_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadCircle_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadCircle_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadCircle_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadCircle_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadCircle_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadCircle_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadCircle_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadCircle_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadCircle_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadCircle_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadCircle_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadCircle_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadCircle_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadCircle_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadCircle_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadCircle_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadCircle_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadCircle_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadCircle_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadCircle_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadCircle_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadCircle_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadCircle_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadCircle_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadCircle_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadCircle_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadCircle_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadCircle_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadCircle_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadCircle_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadCircle_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadCircle_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadCircle_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadCircle_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadCircle_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadCircle_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadCircle_get_Center(This,CenterPoint)	\
    (This)->lpVtbl -> get_Center(This,CenterPoint)

#define IAcadCircle_put_Center(This,CenterPoint)	\
    (This)->lpVtbl -> put_Center(This,CenterPoint)

#define IAcadCircle_get_Radius(This,Radius)	\
    (This)->lpVtbl -> get_Radius(This,Radius)

#define IAcadCircle_put_Radius(This,Radius)	\
    (This)->lpVtbl -> put_Radius(This,Radius)

#define IAcadCircle_get_Diameter(This,Diameter)	\
    (This)->lpVtbl -> get_Diameter(This,Diameter)

#define IAcadCircle_put_Diameter(This,Diameter)	\
    (This)->lpVtbl -> put_Diameter(This,Diameter)

#define IAcadCircle_get_Circumference(This,Circumference)	\
    (This)->lpVtbl -> get_Circumference(This,Circumference)

#define IAcadCircle_put_Circumference(This,Circumference)	\
    (This)->lpVtbl -> put_Circumference(This,Circumference)

#define IAcadCircle_get_Area(This,Area)	\
    (This)->lpVtbl -> get_Area(This,Area)

#define IAcadCircle_put_Area(This,Area)	\
    (This)->lpVtbl -> put_Area(This,Area)

#define IAcadCircle_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadCircle_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadCircle_get_Thickness(This,Thickness)	\
    (This)->lpVtbl -> get_Thickness(This,Thickness)

#define IAcadCircle_put_Thickness(This,Thickness)	\
    (This)->lpVtbl -> put_Thickness(This,Thickness)

#define IAcadCircle_Offset(This,Distance,pOffsetCurves)	\
    (This)->lpVtbl -> Offset(This,Distance,pOffsetCurves)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadCircle_get_Center_Proxy( 
    IAcadCircle * This,
    /* [retval][out] */ VARIANT *CenterPoint);


void __RPC_STUB IAcadCircle_get_Center_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadCircle_put_Center_Proxy( 
    IAcadCircle * This,
    /* [in] */ VARIANT CenterPoint);


void __RPC_STUB IAcadCircle_put_Center_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadCircle_get_Radius_Proxy( 
    IAcadCircle * This,
    /* [retval][out] */ double *Radius);


void __RPC_STUB IAcadCircle_get_Radius_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadCircle_put_Radius_Proxy( 
    IAcadCircle * This,
    /* [in] */ double Radius);


void __RPC_STUB IAcadCircle_put_Radius_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadCircle_get_Diameter_Proxy( 
    IAcadCircle * This,
    /* [retval][out] */ double *Diameter);


void __RPC_STUB IAcadCircle_get_Diameter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadCircle_put_Diameter_Proxy( 
    IAcadCircle * This,
    /* [in] */ double Diameter);


void __RPC_STUB IAcadCircle_put_Diameter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadCircle_get_Circumference_Proxy( 
    IAcadCircle * This,
    /* [retval][out] */ double *Circumference);


void __RPC_STUB IAcadCircle_get_Circumference_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadCircle_put_Circumference_Proxy( 
    IAcadCircle * This,
    /* [in] */ double Circumference);


void __RPC_STUB IAcadCircle_put_Circumference_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadCircle_get_Area_Proxy( 
    IAcadCircle * This,
    /* [retval][out] */ double *Area);


void __RPC_STUB IAcadCircle_get_Area_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadCircle_put_Area_Proxy( 
    IAcadCircle * This,
    /* [in] */ double Area);


void __RPC_STUB IAcadCircle_put_Area_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadCircle_get_Normal_Proxy( 
    IAcadCircle * This,
    /* [retval][out] */ VARIANT *Normal);


void __RPC_STUB IAcadCircle_get_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadCircle_put_Normal_Proxy( 
    IAcadCircle * This,
    /* [in] */ VARIANT Normal);


void __RPC_STUB IAcadCircle_put_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadCircle_get_Thickness_Proxy( 
    IAcadCircle * This,
    /* [retval][out] */ double *Thickness);


void __RPC_STUB IAcadCircle_get_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadCircle_put_Thickness_Proxy( 
    IAcadCircle * This,
    /* [in] */ double Thickness);


void __RPC_STUB IAcadCircle_put_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadCircle_Offset_Proxy( 
    IAcadCircle * This,
    /* [in] */ double Distance,
    /* [retval][out] */ VARIANT *pOffsetCurves);


void __RPC_STUB IAcadCircle_Offset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadCircle_INTERFACE_DEFINED__ */


#ifndef __IAcadDimension_INTERFACE_DEFINED__
#define __IAcadDimension_INTERFACE_DEFINED__

/* interface IAcadDimension */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadDimension;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AAE1E267-581B-4FA8-AD3C-FE8C8A8503C6")
    IAcadDimension : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *Normal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT Normal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
            /* [retval][out] */ ACAD_ANGLE *rotAngle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
            /* [in] */ ACAD_ANGLE rotAngle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextPosition( 
            /* [retval][out] */ VARIANT *textPos) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextPosition( 
            /* [in] */ VARIANT textPos) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextRotation( 
            /* [retval][out] */ ACAD_ANGLE *rotAngle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextRotation( 
            /* [in] */ ACAD_ANGLE rotAngle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextOverride( 
            /* [retval][out] */ BSTR *bstrText) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextOverride( 
            /* [in] */ BSTR bstrText) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_StyleName( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_StyleName( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextColor( 
            /* [retval][out] */ ACAD_COLOR *color) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextColor( 
            /* [in] */ ACAD_COLOR color) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DecimalSeparator( 
            /* [retval][out] */ BSTR *character) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DecimalSeparator( 
            /* [in] */ BSTR character) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextGap( 
            /* [retval][out] */ double *Offset) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextGap( 
            /* [in] */ double Offset) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextPrefix( 
            /* [retval][out] */ BSTR *prefix) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextPrefix( 
            /* [in] */ BSTR prefix) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextSuffix( 
            /* [retval][out] */ BSTR *suffix) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextSuffix( 
            /* [in] */ BSTR suffix) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ScaleFactor( 
            /* [retval][out] */ ACAD_NOUNITS *factor) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ScaleFactor( 
            /* [in] */ ACAD_NOUNITS factor) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_VerticalTextPosition( 
            /* [retval][out] */ AcDimVerticalJustification *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_VerticalTextPosition( 
            /* [in] */ AcDimVerticalJustification Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TolerancePrecision( 
            /* [retval][out] */ AcDimPrecision *precision) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TolerancePrecision( 
            /* [in] */ AcDimPrecision precision) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToleranceHeightScale( 
            /* [retval][out] */ ACAD_NOUNITS *scale) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToleranceHeightScale( 
            /* [in] */ ACAD_NOUNITS scale) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToleranceLowerLimit( 
            /* [retval][out] */ double *lower) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToleranceLowerLimit( 
            /* [in] */ double lower) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextMovement( 
            /* [retval][out] */ AcDimTextMovement *Move) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextMovement( 
            /* [in] */ AcDimTextMovement Move) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToleranceDisplay( 
            /* [retval][out] */ AcDimToleranceMethod *method) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToleranceDisplay( 
            /* [in] */ AcDimToleranceMethod method) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToleranceJustification( 
            /* [retval][out] */ AcDimToleranceJustify *method) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToleranceJustification( 
            /* [in] */ AcDimToleranceJustify method) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToleranceUpperLimit( 
            /* [retval][out] */ double *upper) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToleranceUpperLimit( 
            /* [in] */ double upper) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextStyle( 
            /* [retval][out] */ BSTR *style) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextStyle( 
            /* [in] */ BSTR style) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextHeight( 
            /* [retval][out] */ double *Height) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextHeight( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToleranceSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToleranceSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToleranceSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToleranceSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadDimensionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadDimension * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadDimension * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadDimension * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadDimension * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadDimension * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadDimension * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadDimension * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadDimension * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadDimension * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadDimension * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadDimension * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadDimension * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadDimension * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadDimension * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadDimension * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadDimension * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadDimension * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadDimension * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadDimension * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadDimension * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadDimension * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadDimension * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadDimension * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadDimension * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadDimension * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadDimension * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadDimension * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadDimension * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadDimension * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadDimension * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadDimension * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadDimension * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadDimension * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadDimension * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadDimension * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadDimension * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadDimension * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadDimension * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadDimension * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadDimension * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadDimension * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadDimension * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadDimension * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadDimension * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadDimension * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadDimension * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadDimension * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadDimension * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadDimension * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadDimension * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadDimension * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadDimension * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadDimension * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadDimension * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadDimension * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IAcadDimension * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IAcadDimension * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextPosition )( 
            IAcadDimension * This,
            /* [retval][out] */ VARIANT *textPos);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextPosition )( 
            IAcadDimension * This,
            /* [in] */ VARIANT textPos);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextRotation )( 
            IAcadDimension * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextRotation )( 
            IAcadDimension * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextOverride )( 
            IAcadDimension * This,
            /* [retval][out] */ BSTR *bstrText);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextOverride )( 
            IAcadDimension * This,
            /* [in] */ BSTR bstrText);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IAcadDimension * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IAcadDimension * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextColor )( 
            IAcadDimension * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextColor )( 
            IAcadDimension * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DecimalSeparator )( 
            IAcadDimension * This,
            /* [retval][out] */ BSTR *character);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DecimalSeparator )( 
            IAcadDimension * This,
            /* [in] */ BSTR character);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextGap )( 
            IAcadDimension * This,
            /* [retval][out] */ double *Offset);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextGap )( 
            IAcadDimension * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrefix )( 
            IAcadDimension * This,
            /* [retval][out] */ BSTR *prefix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrefix )( 
            IAcadDimension * This,
            /* [in] */ BSTR prefix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextSuffix )( 
            IAcadDimension * This,
            /* [retval][out] */ BSTR *suffix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextSuffix )( 
            IAcadDimension * This,
            /* [in] */ BSTR suffix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IAcadDimension * This,
            /* [retval][out] */ ACAD_NOUNITS *factor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IAcadDimension * This,
            /* [in] */ ACAD_NOUNITS factor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalTextPosition )( 
            IAcadDimension * This,
            /* [retval][out] */ AcDimVerticalJustification *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalTextPosition )( 
            IAcadDimension * This,
            /* [in] */ AcDimVerticalJustification Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TolerancePrecision )( 
            IAcadDimension * This,
            /* [retval][out] */ AcDimPrecision *precision);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TolerancePrecision )( 
            IAcadDimension * This,
            /* [in] */ AcDimPrecision precision);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceHeightScale )( 
            IAcadDimension * This,
            /* [retval][out] */ ACAD_NOUNITS *scale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceHeightScale )( 
            IAcadDimension * This,
            /* [in] */ ACAD_NOUNITS scale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceLowerLimit )( 
            IAcadDimension * This,
            /* [retval][out] */ double *lower);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceLowerLimit )( 
            IAcadDimension * This,
            /* [in] */ double lower);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextMovement )( 
            IAcadDimension * This,
            /* [retval][out] */ AcDimTextMovement *Move);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextMovement )( 
            IAcadDimension * This,
            /* [in] */ AcDimTextMovement Move);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceDisplay )( 
            IAcadDimension * This,
            /* [retval][out] */ AcDimToleranceMethod *method);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceDisplay )( 
            IAcadDimension * This,
            /* [in] */ AcDimToleranceMethod method);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceJustification )( 
            IAcadDimension * This,
            /* [retval][out] */ AcDimToleranceJustify *method);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceJustification )( 
            IAcadDimension * This,
            /* [in] */ AcDimToleranceJustify method);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceUpperLimit )( 
            IAcadDimension * This,
            /* [retval][out] */ double *upper);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceUpperLimit )( 
            IAcadDimension * This,
            /* [in] */ double upper);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextStyle )( 
            IAcadDimension * This,
            /* [retval][out] */ BSTR *style);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextStyle )( 
            IAcadDimension * This,
            /* [in] */ BSTR style);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextHeight )( 
            IAcadDimension * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextHeight )( 
            IAcadDimension * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressLeadingZeros )( 
            IAcadDimension * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressLeadingZeros )( 
            IAcadDimension * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressTrailingZeros )( 
            IAcadDimension * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressTrailingZeros )( 
            IAcadDimension * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressLeadingZeros )( 
            IAcadDimension * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressLeadingZeros )( 
            IAcadDimension * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressTrailingZeros )( 
            IAcadDimension * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressTrailingZeros )( 
            IAcadDimension * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        END_INTERFACE
    } IAcadDimensionVtbl;

    interface IAcadDimension
    {
        CONST_VTBL struct IAcadDimensionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadDimension_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadDimension_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadDimension_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadDimension_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadDimension_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadDimension_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadDimension_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadDimension_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadDimension_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadDimension_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadDimension_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadDimension_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadDimension_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadDimension_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadDimension_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadDimension_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadDimension_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadDimension_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadDimension_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadDimension_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadDimension_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadDimension_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadDimension_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadDimension_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadDimension_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadDimension_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadDimension_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadDimension_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadDimension_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadDimension_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadDimension_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadDimension_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadDimension_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadDimension_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadDimension_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadDimension_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadDimension_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadDimension_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadDimension_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadDimension_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadDimension_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadDimension_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadDimension_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadDimension_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadDimension_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadDimension_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadDimension_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadDimension_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadDimension_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadDimension_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadDimension_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadDimension_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadDimension_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadDimension_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadDimension_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadDimension_get_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> get_Rotation(This,rotAngle)

#define IAcadDimension_put_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> put_Rotation(This,rotAngle)

#define IAcadDimension_get_TextPosition(This,textPos)	\
    (This)->lpVtbl -> get_TextPosition(This,textPos)

#define IAcadDimension_put_TextPosition(This,textPos)	\
    (This)->lpVtbl -> put_TextPosition(This,textPos)

#define IAcadDimension_get_TextRotation(This,rotAngle)	\
    (This)->lpVtbl -> get_TextRotation(This,rotAngle)

#define IAcadDimension_put_TextRotation(This,rotAngle)	\
    (This)->lpVtbl -> put_TextRotation(This,rotAngle)

#define IAcadDimension_get_TextOverride(This,bstrText)	\
    (This)->lpVtbl -> get_TextOverride(This,bstrText)

#define IAcadDimension_put_TextOverride(This,bstrText)	\
    (This)->lpVtbl -> put_TextOverride(This,bstrText)

#define IAcadDimension_get_StyleName(This,bstrName)	\
    (This)->lpVtbl -> get_StyleName(This,bstrName)

#define IAcadDimension_put_StyleName(This,bstrName)	\
    (This)->lpVtbl -> put_StyleName(This,bstrName)

#define IAcadDimension_get_TextColor(This,color)	\
    (This)->lpVtbl -> get_TextColor(This,color)

#define IAcadDimension_put_TextColor(This,color)	\
    (This)->lpVtbl -> put_TextColor(This,color)

#define IAcadDimension_get_DecimalSeparator(This,character)	\
    (This)->lpVtbl -> get_DecimalSeparator(This,character)

#define IAcadDimension_put_DecimalSeparator(This,character)	\
    (This)->lpVtbl -> put_DecimalSeparator(This,character)

#define IAcadDimension_get_TextGap(This,Offset)	\
    (This)->lpVtbl -> get_TextGap(This,Offset)

#define IAcadDimension_put_TextGap(This,Offset)	\
    (This)->lpVtbl -> put_TextGap(This,Offset)

#define IAcadDimension_get_TextPrefix(This,prefix)	\
    (This)->lpVtbl -> get_TextPrefix(This,prefix)

#define IAcadDimension_put_TextPrefix(This,prefix)	\
    (This)->lpVtbl -> put_TextPrefix(This,prefix)

#define IAcadDimension_get_TextSuffix(This,suffix)	\
    (This)->lpVtbl -> get_TextSuffix(This,suffix)

#define IAcadDimension_put_TextSuffix(This,suffix)	\
    (This)->lpVtbl -> put_TextSuffix(This,suffix)

#define IAcadDimension_get_ScaleFactor(This,factor)	\
    (This)->lpVtbl -> get_ScaleFactor(This,factor)

#define IAcadDimension_put_ScaleFactor(This,factor)	\
    (This)->lpVtbl -> put_ScaleFactor(This,factor)

#define IAcadDimension_get_VerticalTextPosition(This,Type)	\
    (This)->lpVtbl -> get_VerticalTextPosition(This,Type)

#define IAcadDimension_put_VerticalTextPosition(This,Type)	\
    (This)->lpVtbl -> put_VerticalTextPosition(This,Type)

#define IAcadDimension_get_TolerancePrecision(This,precision)	\
    (This)->lpVtbl -> get_TolerancePrecision(This,precision)

#define IAcadDimension_put_TolerancePrecision(This,precision)	\
    (This)->lpVtbl -> put_TolerancePrecision(This,precision)

#define IAcadDimension_get_ToleranceHeightScale(This,scale)	\
    (This)->lpVtbl -> get_ToleranceHeightScale(This,scale)

#define IAcadDimension_put_ToleranceHeightScale(This,scale)	\
    (This)->lpVtbl -> put_ToleranceHeightScale(This,scale)

#define IAcadDimension_get_ToleranceLowerLimit(This,lower)	\
    (This)->lpVtbl -> get_ToleranceLowerLimit(This,lower)

#define IAcadDimension_put_ToleranceLowerLimit(This,lower)	\
    (This)->lpVtbl -> put_ToleranceLowerLimit(This,lower)

#define IAcadDimension_get_TextMovement(This,Move)	\
    (This)->lpVtbl -> get_TextMovement(This,Move)

#define IAcadDimension_put_TextMovement(This,Move)	\
    (This)->lpVtbl -> put_TextMovement(This,Move)

#define IAcadDimension_get_ToleranceDisplay(This,method)	\
    (This)->lpVtbl -> get_ToleranceDisplay(This,method)

#define IAcadDimension_put_ToleranceDisplay(This,method)	\
    (This)->lpVtbl -> put_ToleranceDisplay(This,method)

#define IAcadDimension_get_ToleranceJustification(This,method)	\
    (This)->lpVtbl -> get_ToleranceJustification(This,method)

#define IAcadDimension_put_ToleranceJustification(This,method)	\
    (This)->lpVtbl -> put_ToleranceJustification(This,method)

#define IAcadDimension_get_ToleranceUpperLimit(This,upper)	\
    (This)->lpVtbl -> get_ToleranceUpperLimit(This,upper)

#define IAcadDimension_put_ToleranceUpperLimit(This,upper)	\
    (This)->lpVtbl -> put_ToleranceUpperLimit(This,upper)

#define IAcadDimension_get_TextStyle(This,style)	\
    (This)->lpVtbl -> get_TextStyle(This,style)

#define IAcadDimension_put_TextStyle(This,style)	\
    (This)->lpVtbl -> put_TextStyle(This,style)

#define IAcadDimension_get_TextHeight(This,Height)	\
    (This)->lpVtbl -> get_TextHeight(This,Height)

#define IAcadDimension_put_TextHeight(This,Height)	\
    (This)->lpVtbl -> put_TextHeight(This,Height)

#define IAcadDimension_get_SuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_SuppressLeadingZeros(This,bVal)

#define IAcadDimension_put_SuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_SuppressLeadingZeros(This,bVal)

#define IAcadDimension_get_SuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_SuppressTrailingZeros(This,bVal)

#define IAcadDimension_put_SuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_SuppressTrailingZeros(This,bVal)

#define IAcadDimension_get_ToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimension_put_ToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimension_get_ToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressTrailingZeros(This,bVal)

#define IAcadDimension_put_ToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressTrailingZeros(This,bVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_Normal_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ VARIANT *Normal);


void __RPC_STUB IAcadDimension_get_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_Normal_Proxy( 
    IAcadDimension * This,
    /* [in] */ VARIANT Normal);


void __RPC_STUB IAcadDimension_put_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_Rotation_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ ACAD_ANGLE *rotAngle);


void __RPC_STUB IAcadDimension_get_Rotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_Rotation_Proxy( 
    IAcadDimension * This,
    /* [in] */ ACAD_ANGLE rotAngle);


void __RPC_STUB IAcadDimension_put_Rotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_TextPosition_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ VARIANT *textPos);


void __RPC_STUB IAcadDimension_get_TextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_TextPosition_Proxy( 
    IAcadDimension * This,
    /* [in] */ VARIANT textPos);


void __RPC_STUB IAcadDimension_put_TextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_TextRotation_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ ACAD_ANGLE *rotAngle);


void __RPC_STUB IAcadDimension_get_TextRotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_TextRotation_Proxy( 
    IAcadDimension * This,
    /* [in] */ ACAD_ANGLE rotAngle);


void __RPC_STUB IAcadDimension_put_TextRotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_TextOverride_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ BSTR *bstrText);


void __RPC_STUB IAcadDimension_get_TextOverride_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_TextOverride_Proxy( 
    IAcadDimension * This,
    /* [in] */ BSTR bstrText);


void __RPC_STUB IAcadDimension_put_TextOverride_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_StyleName_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadDimension_get_StyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_StyleName_Proxy( 
    IAcadDimension * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadDimension_put_StyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_TextColor_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ ACAD_COLOR *color);


void __RPC_STUB IAcadDimension_get_TextColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_TextColor_Proxy( 
    IAcadDimension * This,
    /* [in] */ ACAD_COLOR color);


void __RPC_STUB IAcadDimension_put_TextColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_DecimalSeparator_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ BSTR *character);


void __RPC_STUB IAcadDimension_get_DecimalSeparator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_DecimalSeparator_Proxy( 
    IAcadDimension * This,
    /* [in] */ BSTR character);


void __RPC_STUB IAcadDimension_put_DecimalSeparator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_TextGap_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ double *Offset);


void __RPC_STUB IAcadDimension_get_TextGap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_TextGap_Proxy( 
    IAcadDimension * This,
    /* [in] */ double Offset);


void __RPC_STUB IAcadDimension_put_TextGap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_TextPrefix_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ BSTR *prefix);


void __RPC_STUB IAcadDimension_get_TextPrefix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_TextPrefix_Proxy( 
    IAcadDimension * This,
    /* [in] */ BSTR prefix);


void __RPC_STUB IAcadDimension_put_TextPrefix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_TextSuffix_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ BSTR *suffix);


void __RPC_STUB IAcadDimension_get_TextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_TextSuffix_Proxy( 
    IAcadDimension * This,
    /* [in] */ BSTR suffix);


void __RPC_STUB IAcadDimension_put_TextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_ScaleFactor_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ ACAD_NOUNITS *factor);


void __RPC_STUB IAcadDimension_get_ScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_ScaleFactor_Proxy( 
    IAcadDimension * This,
    /* [in] */ ACAD_NOUNITS factor);


void __RPC_STUB IAcadDimension_put_ScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_VerticalTextPosition_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ AcDimVerticalJustification *Type);


void __RPC_STUB IAcadDimension_get_VerticalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_VerticalTextPosition_Proxy( 
    IAcadDimension * This,
    /* [in] */ AcDimVerticalJustification Type);


void __RPC_STUB IAcadDimension_put_VerticalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_TolerancePrecision_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ AcDimPrecision *precision);


void __RPC_STUB IAcadDimension_get_TolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_TolerancePrecision_Proxy( 
    IAcadDimension * This,
    /* [in] */ AcDimPrecision precision);


void __RPC_STUB IAcadDimension_put_TolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_ToleranceHeightScale_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ ACAD_NOUNITS *scale);


void __RPC_STUB IAcadDimension_get_ToleranceHeightScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_ToleranceHeightScale_Proxy( 
    IAcadDimension * This,
    /* [in] */ ACAD_NOUNITS scale);


void __RPC_STUB IAcadDimension_put_ToleranceHeightScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_ToleranceLowerLimit_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ double *lower);


void __RPC_STUB IAcadDimension_get_ToleranceLowerLimit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_ToleranceLowerLimit_Proxy( 
    IAcadDimension * This,
    /* [in] */ double lower);


void __RPC_STUB IAcadDimension_put_ToleranceLowerLimit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_TextMovement_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ AcDimTextMovement *Move);


void __RPC_STUB IAcadDimension_get_TextMovement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_TextMovement_Proxy( 
    IAcadDimension * This,
    /* [in] */ AcDimTextMovement Move);


void __RPC_STUB IAcadDimension_put_TextMovement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_ToleranceDisplay_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ AcDimToleranceMethod *method);


void __RPC_STUB IAcadDimension_get_ToleranceDisplay_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_ToleranceDisplay_Proxy( 
    IAcadDimension * This,
    /* [in] */ AcDimToleranceMethod method);


void __RPC_STUB IAcadDimension_put_ToleranceDisplay_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_ToleranceJustification_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ AcDimToleranceJustify *method);


void __RPC_STUB IAcadDimension_get_ToleranceJustification_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_ToleranceJustification_Proxy( 
    IAcadDimension * This,
    /* [in] */ AcDimToleranceJustify method);


void __RPC_STUB IAcadDimension_put_ToleranceJustification_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_ToleranceUpperLimit_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ double *upper);


void __RPC_STUB IAcadDimension_get_ToleranceUpperLimit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_ToleranceUpperLimit_Proxy( 
    IAcadDimension * This,
    /* [in] */ double upper);


void __RPC_STUB IAcadDimension_put_ToleranceUpperLimit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_TextStyle_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ BSTR *style);


void __RPC_STUB IAcadDimension_get_TextStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_TextStyle_Proxy( 
    IAcadDimension * This,
    /* [in] */ BSTR style);


void __RPC_STUB IAcadDimension_put_TextStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_TextHeight_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ double *Height);


void __RPC_STUB IAcadDimension_get_TextHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_TextHeight_Proxy( 
    IAcadDimension * This,
    /* [in] */ double Height);


void __RPC_STUB IAcadDimension_put_TextHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_SuppressLeadingZeros_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimension_get_SuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_SuppressLeadingZeros_Proxy( 
    IAcadDimension * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimension_put_SuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_SuppressTrailingZeros_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimension_get_SuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_SuppressTrailingZeros_Proxy( 
    IAcadDimension * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimension_put_SuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_ToleranceSuppressLeadingZeros_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimension_get_ToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_ToleranceSuppressLeadingZeros_Proxy( 
    IAcadDimension * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimension_put_ToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_get_ToleranceSuppressTrailingZeros_Proxy( 
    IAcadDimension * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimension_get_ToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimension_put_ToleranceSuppressTrailingZeros_Proxy( 
    IAcadDimension * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimension_put_ToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadDimension_INTERFACE_DEFINED__ */


#ifndef __IAcadDimAligned_INTERFACE_DEFINED__
#define __IAcadDimAligned_INTERFACE_DEFINED__

/* interface IAcadDimAligned */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadDimAligned;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A450E3EF-F121-426B-88CA-1A927382C79D")
    IAcadDimAligned : public IAcadDimension
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtLine1Point( 
            /* [retval][out] */ VARIANT *xLine1Point) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtLine1Point( 
            /* [in] */ VARIANT xLine1Point) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtLine2Point( 
            /* [retval][out] */ VARIANT *xLine2Point) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtLine2Point( 
            /* [in] */ VARIANT xLine2Point) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltUnits( 
            /* [retval][out] */ VARIANT_BOOL *bAlternate) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltUnits( 
            /* [in] */ VARIANT_BOOL bAlternate) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltUnitsPrecision( 
            /* [retval][out] */ AcDimPrecision *precision) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltUnitsPrecision( 
            /* [in] */ AcDimPrecision precision) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltUnitsScale( 
            /* [retval][out] */ ACAD_NOUNITS *scale) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltUnitsScale( 
            /* [in] */ ACAD_NOUNITS scale) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltRoundDistance( 
            /* [retval][out] */ double *Distance) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltRoundDistance( 
            /* [in] */ double Distance) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltTolerancePrecision( 
            /* [retval][out] */ AcDimPrecision *Distance) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltTolerancePrecision( 
            /* [in] */ AcDimPrecision Distance) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltUnitsFormat( 
            /* [retval][out] */ AcDimUnits *Units) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltUnitsFormat( 
            /* [in] */ AcDimUnits Units) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltTextPrefix( 
            /* [retval][out] */ BSTR *prefix) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltTextPrefix( 
            /* [in] */ BSTR prefix) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltTextSuffix( 
            /* [retval][out] */ BSTR *suffix) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltTextSuffix( 
            /* [in] */ BSTR suffix) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimensionLineColor( 
            /* [retval][out] */ ACAD_COLOR *color) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimensionLineColor( 
            /* [in] */ ACAD_COLOR color) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineColor( 
            /* [retval][out] */ ACAD_COLOR *color) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineColor( 
            /* [in] */ ACAD_COLOR color) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PrimaryUnitsPrecision( 
            /* [retval][out] */ AcDimPrecision *Prec) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PrimaryUnitsPrecision( 
            /* [in] */ AcDimPrecision Prec) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimensionLineExtend( 
            /* [retval][out] */ double *extend) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimensionLineExtend( 
            /* [in] */ double extend) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineExtend( 
            /* [retval][out] */ double *extend) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineExtend( 
            /* [in] */ double extend) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Fit( 
            /* [retval][out] */ AcDimFit *fittype) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Fit( 
            /* [in] */ AcDimFit fittype) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_FractionFormat( 
            /* [retval][out] */ AcDimFractionType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_FractionFormat( 
            /* [in] */ AcDimFractionType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HorizontalTextPosition( 
            /* [retval][out] */ AcDimHorizontalJustification *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_HorizontalTextPosition( 
            /* [in] */ AcDimHorizontalJustification Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LinearScaleFactor( 
            /* [retval][out] */ ACAD_NOUNITS *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LinearScaleFactor( 
            /* [in] */ ACAD_NOUNITS Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnitsFormat( 
            /* [retval][out] */ AcDimLUnits *format) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnitsFormat( 
            /* [in] */ AcDimLUnits format) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineWeight( 
            /* [retval][out] */ ACAD_LWEIGHT *lweight) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineWeight( 
            /* [in] */ ACAD_LWEIGHT lweight) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_RoundDistance( 
            /* [retval][out] */ double *Distance) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_RoundDistance( 
            /* [in] */ double Distance) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimLine1Suppress( 
            /* [retval][out] */ VARIANT_BOOL *bSuppress) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimLine1Suppress( 
            /* [in] */ VARIANT_BOOL bSuppress) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimLine2Suppress( 
            /* [retval][out] */ VARIANT_BOOL *bSuppress) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimLine2Suppress( 
            /* [in] */ VARIANT_BOOL bSuppress) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtLine1Suppress( 
            /* [retval][out] */ VARIANT_BOOL *bSuppress) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtLine1Suppress( 
            /* [in] */ VARIANT_BOOL bSuppress) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtLine2Suppress( 
            /* [retval][out] */ VARIANT_BOOL *bSuppress) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtLine2Suppress( 
            /* [in] */ VARIANT_BOOL bSuppress) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimLineInside( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimLineInside( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextInsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextInsideAlign( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextInside( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextInside( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ForceLineInside( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ForceLineInside( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextOutsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextOutsideAlign( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineOffset( 
            /* [retval][out] */ double *Offset) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineOffset( 
            /* [in] */ double Offset) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SuppressZeroInches( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToleranceSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToleranceSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToleranceSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToleranceSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimensionLineWeight( 
            /* [retval][out] */ ACAD_LWEIGHT *weight) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimensionLineWeight( 
            /* [in] */ ACAD_LWEIGHT weight) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ArrowheadSize( 
            /* [retval][out] */ double *size) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ArrowheadSize( 
            /* [in] */ double size) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arrowhead1Type( 
            /* [retval][out] */ AcDimArrowheadType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Arrowhead1Type( 
            /* [in] */ AcDimArrowheadType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arrowhead2Type( 
            /* [retval][out] */ AcDimArrowheadType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Arrowhead2Type( 
            /* [in] */ AcDimArrowheadType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Measurement( 
            /* [retval][out] */ double *bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arrowhead1Block( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Arrowhead1Block( 
            /* [in] */ BSTR BlockName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arrowhead2Block( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Arrowhead2Block( 
            /* [in] */ BSTR BlockName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadDimAlignedVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadDimAligned * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadDimAligned * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadDimAligned * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadDimAligned * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadDimAligned * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadDimAligned * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadDimAligned * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadDimAligned * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadDimAligned * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadDimAligned * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadDimAligned * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadDimAligned * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadDimAligned * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadDimAligned * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadDimAligned * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadDimAligned * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadDimAligned * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadDimAligned * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadDimAligned * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadDimAligned * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadDimAligned * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadDimAligned * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadDimAligned * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadDimAligned * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadDimAligned * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadDimAligned * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadDimAligned * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadDimAligned * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadDimAligned * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadDimAligned * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadDimAligned * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadDimAligned * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadDimAligned * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadDimAligned * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadDimAligned * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadDimAligned * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadDimAligned * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadDimAligned * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadDimAligned * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadDimAligned * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadDimAligned * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IAcadDimAligned * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IAcadDimAligned * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextPosition )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT *textPos);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextPosition )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT textPos);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextRotation )( 
            IAcadDimAligned * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextRotation )( 
            IAcadDimAligned * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextOverride )( 
            IAcadDimAligned * This,
            /* [retval][out] */ BSTR *bstrText);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextOverride )( 
            IAcadDimAligned * This,
            /* [in] */ BSTR bstrText);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IAcadDimAligned * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IAcadDimAligned * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextColor )( 
            IAcadDimAligned * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextColor )( 
            IAcadDimAligned * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DecimalSeparator )( 
            IAcadDimAligned * This,
            /* [retval][out] */ BSTR *character);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DecimalSeparator )( 
            IAcadDimAligned * This,
            /* [in] */ BSTR character);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextGap )( 
            IAcadDimAligned * This,
            /* [retval][out] */ double *Offset);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextGap )( 
            IAcadDimAligned * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrefix )( 
            IAcadDimAligned * This,
            /* [retval][out] */ BSTR *prefix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrefix )( 
            IAcadDimAligned * This,
            /* [in] */ BSTR prefix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextSuffix )( 
            IAcadDimAligned * This,
            /* [retval][out] */ BSTR *suffix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextSuffix )( 
            IAcadDimAligned * This,
            /* [in] */ BSTR suffix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IAcadDimAligned * This,
            /* [retval][out] */ ACAD_NOUNITS *factor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IAcadDimAligned * This,
            /* [in] */ ACAD_NOUNITS factor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalTextPosition )( 
            IAcadDimAligned * This,
            /* [retval][out] */ AcDimVerticalJustification *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalTextPosition )( 
            IAcadDimAligned * This,
            /* [in] */ AcDimVerticalJustification Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TolerancePrecision )( 
            IAcadDimAligned * This,
            /* [retval][out] */ AcDimPrecision *precision);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TolerancePrecision )( 
            IAcadDimAligned * This,
            /* [in] */ AcDimPrecision precision);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceHeightScale )( 
            IAcadDimAligned * This,
            /* [retval][out] */ ACAD_NOUNITS *scale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceHeightScale )( 
            IAcadDimAligned * This,
            /* [in] */ ACAD_NOUNITS scale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceLowerLimit )( 
            IAcadDimAligned * This,
            /* [retval][out] */ double *lower);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceLowerLimit )( 
            IAcadDimAligned * This,
            /* [in] */ double lower);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextMovement )( 
            IAcadDimAligned * This,
            /* [retval][out] */ AcDimTextMovement *Move);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextMovement )( 
            IAcadDimAligned * This,
            /* [in] */ AcDimTextMovement Move);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceDisplay )( 
            IAcadDimAligned * This,
            /* [retval][out] */ AcDimToleranceMethod *method);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceDisplay )( 
            IAcadDimAligned * This,
            /* [in] */ AcDimToleranceMethod method);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceJustification )( 
            IAcadDimAligned * This,
            /* [retval][out] */ AcDimToleranceJustify *method);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceJustification )( 
            IAcadDimAligned * This,
            /* [in] */ AcDimToleranceJustify method);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceUpperLimit )( 
            IAcadDimAligned * This,
            /* [retval][out] */ double *upper);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceUpperLimit )( 
            IAcadDimAligned * This,
            /* [in] */ double upper);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextStyle )( 
            IAcadDimAligned * This,
            /* [retval][out] */ BSTR *style);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextStyle )( 
            IAcadDimAligned * This,
            /* [in] */ BSTR style);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextHeight )( 
            IAcadDimAligned * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextHeight )( 
            IAcadDimAligned * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressLeadingZeros )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressLeadingZeros )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressTrailingZeros )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressTrailingZeros )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressLeadingZeros )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressLeadingZeros )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressTrailingZeros )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressTrailingZeros )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine1Point )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT *xLine1Point);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine1Point )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT xLine1Point);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine2Point )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT *xLine2Point);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine2Point )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT xLine2Point);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnits )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bAlternate);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnits )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bAlternate);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsPrecision )( 
            IAcadDimAligned * This,
            /* [retval][out] */ AcDimPrecision *precision);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsPrecision )( 
            IAcadDimAligned * This,
            /* [in] */ AcDimPrecision precision);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsScale )( 
            IAcadDimAligned * This,
            /* [retval][out] */ ACAD_NOUNITS *scale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsScale )( 
            IAcadDimAligned * This,
            /* [in] */ ACAD_NOUNITS scale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltRoundDistance )( 
            IAcadDimAligned * This,
            /* [retval][out] */ double *Distance);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltRoundDistance )( 
            IAcadDimAligned * This,
            /* [in] */ double Distance);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltTolerancePrecision )( 
            IAcadDimAligned * This,
            /* [retval][out] */ AcDimPrecision *Distance);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltTolerancePrecision )( 
            IAcadDimAligned * This,
            /* [in] */ AcDimPrecision Distance);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsFormat )( 
            IAcadDimAligned * This,
            /* [retval][out] */ AcDimUnits *Units);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsFormat )( 
            IAcadDimAligned * This,
            /* [in] */ AcDimUnits Units);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltTextPrefix )( 
            IAcadDimAligned * This,
            /* [retval][out] */ BSTR *prefix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltTextPrefix )( 
            IAcadDimAligned * This,
            /* [in] */ BSTR prefix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltTextSuffix )( 
            IAcadDimAligned * This,
            /* [retval][out] */ BSTR *suffix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltTextSuffix )( 
            IAcadDimAligned * This,
            /* [in] */ BSTR suffix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineColor )( 
            IAcadDimAligned * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineColor )( 
            IAcadDimAligned * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineColor )( 
            IAcadDimAligned * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineColor )( 
            IAcadDimAligned * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PrimaryUnitsPrecision )( 
            IAcadDimAligned * This,
            /* [retval][out] */ AcDimPrecision *Prec);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PrimaryUnitsPrecision )( 
            IAcadDimAligned * This,
            /* [in] */ AcDimPrecision Prec);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineExtend )( 
            IAcadDimAligned * This,
            /* [retval][out] */ double *extend);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineExtend )( 
            IAcadDimAligned * This,
            /* [in] */ double extend);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineExtend )( 
            IAcadDimAligned * This,
            /* [retval][out] */ double *extend);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineExtend )( 
            IAcadDimAligned * This,
            /* [in] */ double extend);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Fit )( 
            IAcadDimAligned * This,
            /* [retval][out] */ AcDimFit *fittype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Fit )( 
            IAcadDimAligned * This,
            /* [in] */ AcDimFit fittype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FractionFormat )( 
            IAcadDimAligned * This,
            /* [retval][out] */ AcDimFractionType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FractionFormat )( 
            IAcadDimAligned * This,
            /* [in] */ AcDimFractionType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalTextPosition )( 
            IAcadDimAligned * This,
            /* [retval][out] */ AcDimHorizontalJustification *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalTextPosition )( 
            IAcadDimAligned * This,
            /* [in] */ AcDimHorizontalJustification Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinearScaleFactor )( 
            IAcadDimAligned * This,
            /* [retval][out] */ ACAD_NOUNITS *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinearScaleFactor )( 
            IAcadDimAligned * This,
            /* [in] */ ACAD_NOUNITS Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnitsFormat )( 
            IAcadDimAligned * This,
            /* [retval][out] */ AcDimLUnits *format);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnitsFormat )( 
            IAcadDimAligned * This,
            /* [in] */ AcDimLUnits format);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineWeight )( 
            IAcadDimAligned * This,
            /* [retval][out] */ ACAD_LWEIGHT *lweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineWeight )( 
            IAcadDimAligned * This,
            /* [in] */ ACAD_LWEIGHT lweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RoundDistance )( 
            IAcadDimAligned * This,
            /* [retval][out] */ double *Distance);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RoundDistance )( 
            IAcadDimAligned * This,
            /* [in] */ double Distance);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimLine1Suppress )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bSuppress);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimLine1Suppress )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bSuppress);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimLine2Suppress )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bSuppress);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimLine2Suppress )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bSuppress);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine1Suppress )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bSuppress);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine1Suppress )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bSuppress);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine2Suppress )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bSuppress);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine2Suppress )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bSuppress);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimLineInside )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimLineInside )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextInsideAlign )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextInsideAlign )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextInside )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextInside )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForceLineInside )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForceLineInside )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextOutsideAlign )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextOutsideAlign )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineOffset )( 
            IAcadDimAligned * This,
            /* [retval][out] */ double *Offset);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineOffset )( 
            IAcadDimAligned * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressLeadingZeros )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressLeadingZeros )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressTrailingZeros )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressTrailingZeros )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressZeroFeet )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressZeroFeet )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressZeroInches )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressZeroInches )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressLeadingZeros )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressLeadingZeros )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressTrailingZeros )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressTrailingZeros )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressZeroFeet )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressZeroFeet )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressZeroInches )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressZeroInches )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressZeroFeet )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressZeroFeet )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressZeroInches )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressZeroInches )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroFeet )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroFeet )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroInches )( 
            IAcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroInches )( 
            IAcadDimAligned * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineWeight )( 
            IAcadDimAligned * This,
            /* [retval][out] */ ACAD_LWEIGHT *weight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineWeight )( 
            IAcadDimAligned * This,
            /* [in] */ ACAD_LWEIGHT weight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadSize )( 
            IAcadDimAligned * This,
            /* [retval][out] */ double *size);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadSize )( 
            IAcadDimAligned * This,
            /* [in] */ double size);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead1Type )( 
            IAcadDimAligned * This,
            /* [retval][out] */ AcDimArrowheadType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead1Type )( 
            IAcadDimAligned * This,
            /* [in] */ AcDimArrowheadType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead2Type )( 
            IAcadDimAligned * This,
            /* [retval][out] */ AcDimArrowheadType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead2Type )( 
            IAcadDimAligned * This,
            /* [in] */ AcDimArrowheadType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Measurement )( 
            IAcadDimAligned * This,
            /* [retval][out] */ double *bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead1Block )( 
            IAcadDimAligned * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead1Block )( 
            IAcadDimAligned * This,
            /* [in] */ BSTR BlockName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead2Block )( 
            IAcadDimAligned * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead2Block )( 
            IAcadDimAligned * This,
            /* [in] */ BSTR BlockName);
        
        END_INTERFACE
    } IAcadDimAlignedVtbl;

    interface IAcadDimAligned
    {
        CONST_VTBL struct IAcadDimAlignedVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadDimAligned_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadDimAligned_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadDimAligned_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadDimAligned_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadDimAligned_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadDimAligned_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadDimAligned_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadDimAligned_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadDimAligned_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadDimAligned_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadDimAligned_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadDimAligned_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadDimAligned_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadDimAligned_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadDimAligned_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadDimAligned_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadDimAligned_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadDimAligned_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadDimAligned_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadDimAligned_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadDimAligned_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadDimAligned_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadDimAligned_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadDimAligned_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadDimAligned_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadDimAligned_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadDimAligned_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadDimAligned_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadDimAligned_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadDimAligned_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadDimAligned_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadDimAligned_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadDimAligned_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadDimAligned_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadDimAligned_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadDimAligned_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadDimAligned_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadDimAligned_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadDimAligned_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadDimAligned_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadDimAligned_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadDimAligned_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadDimAligned_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadDimAligned_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadDimAligned_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadDimAligned_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadDimAligned_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadDimAligned_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadDimAligned_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadDimAligned_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadDimAligned_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadDimAligned_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadDimAligned_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadDimAligned_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadDimAligned_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadDimAligned_get_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> get_Rotation(This,rotAngle)

#define IAcadDimAligned_put_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> put_Rotation(This,rotAngle)

#define IAcadDimAligned_get_TextPosition(This,textPos)	\
    (This)->lpVtbl -> get_TextPosition(This,textPos)

#define IAcadDimAligned_put_TextPosition(This,textPos)	\
    (This)->lpVtbl -> put_TextPosition(This,textPos)

#define IAcadDimAligned_get_TextRotation(This,rotAngle)	\
    (This)->lpVtbl -> get_TextRotation(This,rotAngle)

#define IAcadDimAligned_put_TextRotation(This,rotAngle)	\
    (This)->lpVtbl -> put_TextRotation(This,rotAngle)

#define IAcadDimAligned_get_TextOverride(This,bstrText)	\
    (This)->lpVtbl -> get_TextOverride(This,bstrText)

#define IAcadDimAligned_put_TextOverride(This,bstrText)	\
    (This)->lpVtbl -> put_TextOverride(This,bstrText)

#define IAcadDimAligned_get_StyleName(This,bstrName)	\
    (This)->lpVtbl -> get_StyleName(This,bstrName)

#define IAcadDimAligned_put_StyleName(This,bstrName)	\
    (This)->lpVtbl -> put_StyleName(This,bstrName)

#define IAcadDimAligned_get_TextColor(This,color)	\
    (This)->lpVtbl -> get_TextColor(This,color)

#define IAcadDimAligned_put_TextColor(This,color)	\
    (This)->lpVtbl -> put_TextColor(This,color)

#define IAcadDimAligned_get_DecimalSeparator(This,character)	\
    (This)->lpVtbl -> get_DecimalSeparator(This,character)

#define IAcadDimAligned_put_DecimalSeparator(This,character)	\
    (This)->lpVtbl -> put_DecimalSeparator(This,character)

#define IAcadDimAligned_get_TextGap(This,Offset)	\
    (This)->lpVtbl -> get_TextGap(This,Offset)

#define IAcadDimAligned_put_TextGap(This,Offset)	\
    (This)->lpVtbl -> put_TextGap(This,Offset)

#define IAcadDimAligned_get_TextPrefix(This,prefix)	\
    (This)->lpVtbl -> get_TextPrefix(This,prefix)

#define IAcadDimAligned_put_TextPrefix(This,prefix)	\
    (This)->lpVtbl -> put_TextPrefix(This,prefix)

#define IAcadDimAligned_get_TextSuffix(This,suffix)	\
    (This)->lpVtbl -> get_TextSuffix(This,suffix)

#define IAcadDimAligned_put_TextSuffix(This,suffix)	\
    (This)->lpVtbl -> put_TextSuffix(This,suffix)

#define IAcadDimAligned_get_ScaleFactor(This,factor)	\
    (This)->lpVtbl -> get_ScaleFactor(This,factor)

#define IAcadDimAligned_put_ScaleFactor(This,factor)	\
    (This)->lpVtbl -> put_ScaleFactor(This,factor)

#define IAcadDimAligned_get_VerticalTextPosition(This,Type)	\
    (This)->lpVtbl -> get_VerticalTextPosition(This,Type)

#define IAcadDimAligned_put_VerticalTextPosition(This,Type)	\
    (This)->lpVtbl -> put_VerticalTextPosition(This,Type)

#define IAcadDimAligned_get_TolerancePrecision(This,precision)	\
    (This)->lpVtbl -> get_TolerancePrecision(This,precision)

#define IAcadDimAligned_put_TolerancePrecision(This,precision)	\
    (This)->lpVtbl -> put_TolerancePrecision(This,precision)

#define IAcadDimAligned_get_ToleranceHeightScale(This,scale)	\
    (This)->lpVtbl -> get_ToleranceHeightScale(This,scale)

#define IAcadDimAligned_put_ToleranceHeightScale(This,scale)	\
    (This)->lpVtbl -> put_ToleranceHeightScale(This,scale)

#define IAcadDimAligned_get_ToleranceLowerLimit(This,lower)	\
    (This)->lpVtbl -> get_ToleranceLowerLimit(This,lower)

#define IAcadDimAligned_put_ToleranceLowerLimit(This,lower)	\
    (This)->lpVtbl -> put_ToleranceLowerLimit(This,lower)

#define IAcadDimAligned_get_TextMovement(This,Move)	\
    (This)->lpVtbl -> get_TextMovement(This,Move)

#define IAcadDimAligned_put_TextMovement(This,Move)	\
    (This)->lpVtbl -> put_TextMovement(This,Move)

#define IAcadDimAligned_get_ToleranceDisplay(This,method)	\
    (This)->lpVtbl -> get_ToleranceDisplay(This,method)

#define IAcadDimAligned_put_ToleranceDisplay(This,method)	\
    (This)->lpVtbl -> put_ToleranceDisplay(This,method)

#define IAcadDimAligned_get_ToleranceJustification(This,method)	\
    (This)->lpVtbl -> get_ToleranceJustification(This,method)

#define IAcadDimAligned_put_ToleranceJustification(This,method)	\
    (This)->lpVtbl -> put_ToleranceJustification(This,method)

#define IAcadDimAligned_get_ToleranceUpperLimit(This,upper)	\
    (This)->lpVtbl -> get_ToleranceUpperLimit(This,upper)

#define IAcadDimAligned_put_ToleranceUpperLimit(This,upper)	\
    (This)->lpVtbl -> put_ToleranceUpperLimit(This,upper)

#define IAcadDimAligned_get_TextStyle(This,style)	\
    (This)->lpVtbl -> get_TextStyle(This,style)

#define IAcadDimAligned_put_TextStyle(This,style)	\
    (This)->lpVtbl -> put_TextStyle(This,style)

#define IAcadDimAligned_get_TextHeight(This,Height)	\
    (This)->lpVtbl -> get_TextHeight(This,Height)

#define IAcadDimAligned_put_TextHeight(This,Height)	\
    (This)->lpVtbl -> put_TextHeight(This,Height)

#define IAcadDimAligned_get_SuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_SuppressLeadingZeros(This,bVal)

#define IAcadDimAligned_put_SuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_SuppressLeadingZeros(This,bVal)

#define IAcadDimAligned_get_SuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_SuppressTrailingZeros(This,bVal)

#define IAcadDimAligned_put_SuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_SuppressTrailingZeros(This,bVal)

#define IAcadDimAligned_get_ToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimAligned_put_ToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimAligned_get_ToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressTrailingZeros(This,bVal)

#define IAcadDimAligned_put_ToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressTrailingZeros(This,bVal)


#define IAcadDimAligned_get_ExtLine1Point(This,xLine1Point)	\
    (This)->lpVtbl -> get_ExtLine1Point(This,xLine1Point)

#define IAcadDimAligned_put_ExtLine1Point(This,xLine1Point)	\
    (This)->lpVtbl -> put_ExtLine1Point(This,xLine1Point)

#define IAcadDimAligned_get_ExtLine2Point(This,xLine2Point)	\
    (This)->lpVtbl -> get_ExtLine2Point(This,xLine2Point)

#define IAcadDimAligned_put_ExtLine2Point(This,xLine2Point)	\
    (This)->lpVtbl -> put_ExtLine2Point(This,xLine2Point)

#define IAcadDimAligned_get_AltUnits(This,bAlternate)	\
    (This)->lpVtbl -> get_AltUnits(This,bAlternate)

#define IAcadDimAligned_put_AltUnits(This,bAlternate)	\
    (This)->lpVtbl -> put_AltUnits(This,bAlternate)

#define IAcadDimAligned_get_AltUnitsPrecision(This,precision)	\
    (This)->lpVtbl -> get_AltUnitsPrecision(This,precision)

#define IAcadDimAligned_put_AltUnitsPrecision(This,precision)	\
    (This)->lpVtbl -> put_AltUnitsPrecision(This,precision)

#define IAcadDimAligned_get_AltUnitsScale(This,scale)	\
    (This)->lpVtbl -> get_AltUnitsScale(This,scale)

#define IAcadDimAligned_put_AltUnitsScale(This,scale)	\
    (This)->lpVtbl -> put_AltUnitsScale(This,scale)

#define IAcadDimAligned_get_AltRoundDistance(This,Distance)	\
    (This)->lpVtbl -> get_AltRoundDistance(This,Distance)

#define IAcadDimAligned_put_AltRoundDistance(This,Distance)	\
    (This)->lpVtbl -> put_AltRoundDistance(This,Distance)

#define IAcadDimAligned_get_AltTolerancePrecision(This,Distance)	\
    (This)->lpVtbl -> get_AltTolerancePrecision(This,Distance)

#define IAcadDimAligned_put_AltTolerancePrecision(This,Distance)	\
    (This)->lpVtbl -> put_AltTolerancePrecision(This,Distance)

#define IAcadDimAligned_get_AltUnitsFormat(This,Units)	\
    (This)->lpVtbl -> get_AltUnitsFormat(This,Units)

#define IAcadDimAligned_put_AltUnitsFormat(This,Units)	\
    (This)->lpVtbl -> put_AltUnitsFormat(This,Units)

#define IAcadDimAligned_get_AltTextPrefix(This,prefix)	\
    (This)->lpVtbl -> get_AltTextPrefix(This,prefix)

#define IAcadDimAligned_put_AltTextPrefix(This,prefix)	\
    (This)->lpVtbl -> put_AltTextPrefix(This,prefix)

#define IAcadDimAligned_get_AltTextSuffix(This,suffix)	\
    (This)->lpVtbl -> get_AltTextSuffix(This,suffix)

#define IAcadDimAligned_put_AltTextSuffix(This,suffix)	\
    (This)->lpVtbl -> put_AltTextSuffix(This,suffix)

#define IAcadDimAligned_get_DimensionLineColor(This,color)	\
    (This)->lpVtbl -> get_DimensionLineColor(This,color)

#define IAcadDimAligned_put_DimensionLineColor(This,color)	\
    (This)->lpVtbl -> put_DimensionLineColor(This,color)

#define IAcadDimAligned_get_ExtensionLineColor(This,color)	\
    (This)->lpVtbl -> get_ExtensionLineColor(This,color)

#define IAcadDimAligned_put_ExtensionLineColor(This,color)	\
    (This)->lpVtbl -> put_ExtensionLineColor(This,color)

#define IAcadDimAligned_get_PrimaryUnitsPrecision(This,Prec)	\
    (This)->lpVtbl -> get_PrimaryUnitsPrecision(This,Prec)

#define IAcadDimAligned_put_PrimaryUnitsPrecision(This,Prec)	\
    (This)->lpVtbl -> put_PrimaryUnitsPrecision(This,Prec)

#define IAcadDimAligned_get_DimensionLineExtend(This,extend)	\
    (This)->lpVtbl -> get_DimensionLineExtend(This,extend)

#define IAcadDimAligned_put_DimensionLineExtend(This,extend)	\
    (This)->lpVtbl -> put_DimensionLineExtend(This,extend)

#define IAcadDimAligned_get_ExtensionLineExtend(This,extend)	\
    (This)->lpVtbl -> get_ExtensionLineExtend(This,extend)

#define IAcadDimAligned_put_ExtensionLineExtend(This,extend)	\
    (This)->lpVtbl -> put_ExtensionLineExtend(This,extend)

#define IAcadDimAligned_get_Fit(This,fittype)	\
    (This)->lpVtbl -> get_Fit(This,fittype)

#define IAcadDimAligned_put_Fit(This,fittype)	\
    (This)->lpVtbl -> put_Fit(This,fittype)

#define IAcadDimAligned_get_FractionFormat(This,Type)	\
    (This)->lpVtbl -> get_FractionFormat(This,Type)

#define IAcadDimAligned_put_FractionFormat(This,Type)	\
    (This)->lpVtbl -> put_FractionFormat(This,Type)

#define IAcadDimAligned_get_HorizontalTextPosition(This,Type)	\
    (This)->lpVtbl -> get_HorizontalTextPosition(This,Type)

#define IAcadDimAligned_put_HorizontalTextPosition(This,Type)	\
    (This)->lpVtbl -> put_HorizontalTextPosition(This,Type)

#define IAcadDimAligned_get_LinearScaleFactor(This,Type)	\
    (This)->lpVtbl -> get_LinearScaleFactor(This,Type)

#define IAcadDimAligned_put_LinearScaleFactor(This,Type)	\
    (This)->lpVtbl -> put_LinearScaleFactor(This,Type)

#define IAcadDimAligned_get_UnitsFormat(This,format)	\
    (This)->lpVtbl -> get_UnitsFormat(This,format)

#define IAcadDimAligned_put_UnitsFormat(This,format)	\
    (This)->lpVtbl -> put_UnitsFormat(This,format)

#define IAcadDimAligned_get_ExtensionLineWeight(This,lweight)	\
    (This)->lpVtbl -> get_ExtensionLineWeight(This,lweight)

#define IAcadDimAligned_put_ExtensionLineWeight(This,lweight)	\
    (This)->lpVtbl -> put_ExtensionLineWeight(This,lweight)

#define IAcadDimAligned_get_RoundDistance(This,Distance)	\
    (This)->lpVtbl -> get_RoundDistance(This,Distance)

#define IAcadDimAligned_put_RoundDistance(This,Distance)	\
    (This)->lpVtbl -> put_RoundDistance(This,Distance)

#define IAcadDimAligned_get_DimLine1Suppress(This,bSuppress)	\
    (This)->lpVtbl -> get_DimLine1Suppress(This,bSuppress)

#define IAcadDimAligned_put_DimLine1Suppress(This,bSuppress)	\
    (This)->lpVtbl -> put_DimLine1Suppress(This,bSuppress)

#define IAcadDimAligned_get_DimLine2Suppress(This,bSuppress)	\
    (This)->lpVtbl -> get_DimLine2Suppress(This,bSuppress)

#define IAcadDimAligned_put_DimLine2Suppress(This,bSuppress)	\
    (This)->lpVtbl -> put_DimLine2Suppress(This,bSuppress)

#define IAcadDimAligned_get_ExtLine1Suppress(This,bSuppress)	\
    (This)->lpVtbl -> get_ExtLine1Suppress(This,bSuppress)

#define IAcadDimAligned_put_ExtLine1Suppress(This,bSuppress)	\
    (This)->lpVtbl -> put_ExtLine1Suppress(This,bSuppress)

#define IAcadDimAligned_get_ExtLine2Suppress(This,bSuppress)	\
    (This)->lpVtbl -> get_ExtLine2Suppress(This,bSuppress)

#define IAcadDimAligned_put_ExtLine2Suppress(This,bSuppress)	\
    (This)->lpVtbl -> put_ExtLine2Suppress(This,bSuppress)

#define IAcadDimAligned_get_DimLineInside(This,bInside)	\
    (This)->lpVtbl -> get_DimLineInside(This,bInside)

#define IAcadDimAligned_put_DimLineInside(This,bInside)	\
    (This)->lpVtbl -> put_DimLineInside(This,bInside)

#define IAcadDimAligned_get_TextInsideAlign(This,bInside)	\
    (This)->lpVtbl -> get_TextInsideAlign(This,bInside)

#define IAcadDimAligned_put_TextInsideAlign(This,bInside)	\
    (This)->lpVtbl -> put_TextInsideAlign(This,bInside)

#define IAcadDimAligned_get_TextInside(This,bInside)	\
    (This)->lpVtbl -> get_TextInside(This,bInside)

#define IAcadDimAligned_put_TextInside(This,bInside)	\
    (This)->lpVtbl -> put_TextInside(This,bInside)

#define IAcadDimAligned_get_ForceLineInside(This,bInside)	\
    (This)->lpVtbl -> get_ForceLineInside(This,bInside)

#define IAcadDimAligned_put_ForceLineInside(This,bInside)	\
    (This)->lpVtbl -> put_ForceLineInside(This,bInside)

#define IAcadDimAligned_get_TextOutsideAlign(This,bInside)	\
    (This)->lpVtbl -> get_TextOutsideAlign(This,bInside)

#define IAcadDimAligned_put_TextOutsideAlign(This,bInside)	\
    (This)->lpVtbl -> put_TextOutsideAlign(This,bInside)

#define IAcadDimAligned_get_ExtensionLineOffset(This,Offset)	\
    (This)->lpVtbl -> get_ExtensionLineOffset(This,Offset)

#define IAcadDimAligned_put_ExtensionLineOffset(This,Offset)	\
    (This)->lpVtbl -> put_ExtensionLineOffset(This,Offset)

#define IAcadDimAligned_get_AltSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_AltSuppressLeadingZeros(This,bVal)

#define IAcadDimAligned_put_AltSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_AltSuppressLeadingZeros(This,bVal)

#define IAcadDimAligned_get_AltSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_AltSuppressTrailingZeros(This,bVal)

#define IAcadDimAligned_put_AltSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_AltSuppressTrailingZeros(This,bVal)

#define IAcadDimAligned_get_AltSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> get_AltSuppressZeroFeet(This,bVal)

#define IAcadDimAligned_put_AltSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> put_AltSuppressZeroFeet(This,bVal)

#define IAcadDimAligned_get_AltSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> get_AltSuppressZeroInches(This,bVal)

#define IAcadDimAligned_put_AltSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> put_AltSuppressZeroInches(This,bVal)

#define IAcadDimAligned_get_AltToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_AltToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimAligned_put_AltToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_AltToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimAligned_get_AltToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_AltToleranceSuppressTrailingZeros(This,bVal)

#define IAcadDimAligned_put_AltToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_AltToleranceSuppressTrailingZeros(This,bVal)

#define IAcadDimAligned_get_AltToleranceSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> get_AltToleranceSuppressZeroFeet(This,bVal)

#define IAcadDimAligned_put_AltToleranceSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> put_AltToleranceSuppressZeroFeet(This,bVal)

#define IAcadDimAligned_get_AltToleranceSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> get_AltToleranceSuppressZeroInches(This,bVal)

#define IAcadDimAligned_put_AltToleranceSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> put_AltToleranceSuppressZeroInches(This,bVal)

#define IAcadDimAligned_get_SuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> get_SuppressZeroFeet(This,bVal)

#define IAcadDimAligned_put_SuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> put_SuppressZeroFeet(This,bVal)

#define IAcadDimAligned_get_SuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> get_SuppressZeroInches(This,bVal)

#define IAcadDimAligned_put_SuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> put_SuppressZeroInches(This,bVal)

#define IAcadDimAligned_get_ToleranceSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressZeroFeet(This,bVal)

#define IAcadDimAligned_put_ToleranceSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressZeroFeet(This,bVal)

#define IAcadDimAligned_get_ToleranceSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressZeroInches(This,bVal)

#define IAcadDimAligned_put_ToleranceSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressZeroInches(This,bVal)

#define IAcadDimAligned_get_DimensionLineWeight(This,weight)	\
    (This)->lpVtbl -> get_DimensionLineWeight(This,weight)

#define IAcadDimAligned_put_DimensionLineWeight(This,weight)	\
    (This)->lpVtbl -> put_DimensionLineWeight(This,weight)

#define IAcadDimAligned_get_ArrowheadSize(This,size)	\
    (This)->lpVtbl -> get_ArrowheadSize(This,size)

#define IAcadDimAligned_put_ArrowheadSize(This,size)	\
    (This)->lpVtbl -> put_ArrowheadSize(This,size)

#define IAcadDimAligned_get_Arrowhead1Type(This,Type)	\
    (This)->lpVtbl -> get_Arrowhead1Type(This,Type)

#define IAcadDimAligned_put_Arrowhead1Type(This,Type)	\
    (This)->lpVtbl -> put_Arrowhead1Type(This,Type)

#define IAcadDimAligned_get_Arrowhead2Type(This,Type)	\
    (This)->lpVtbl -> get_Arrowhead2Type(This,Type)

#define IAcadDimAligned_put_Arrowhead2Type(This,Type)	\
    (This)->lpVtbl -> put_Arrowhead2Type(This,Type)

#define IAcadDimAligned_get_Measurement(This,bVal)	\
    (This)->lpVtbl -> get_Measurement(This,bVal)

#define IAcadDimAligned_get_Arrowhead1Block(This,BlockName)	\
    (This)->lpVtbl -> get_Arrowhead1Block(This,BlockName)

#define IAcadDimAligned_put_Arrowhead1Block(This,BlockName)	\
    (This)->lpVtbl -> put_Arrowhead1Block(This,BlockName)

#define IAcadDimAligned_get_Arrowhead2Block(This,BlockName)	\
    (This)->lpVtbl -> get_Arrowhead2Block(This,BlockName)

#define IAcadDimAligned_put_Arrowhead2Block(This,BlockName)	\
    (This)->lpVtbl -> put_Arrowhead2Block(This,BlockName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_ExtLine1Point_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT *xLine1Point);


void __RPC_STUB IAcadDimAligned_get_ExtLine1Point_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_ExtLine1Point_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT xLine1Point);


void __RPC_STUB IAcadDimAligned_put_ExtLine1Point_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_ExtLine2Point_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT *xLine2Point);


void __RPC_STUB IAcadDimAligned_get_ExtLine2Point_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_ExtLine2Point_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT xLine2Point);


void __RPC_STUB IAcadDimAligned_put_ExtLine2Point_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_AltUnits_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bAlternate);


void __RPC_STUB IAcadDimAligned_get_AltUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_AltUnits_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bAlternate);


void __RPC_STUB IAcadDimAligned_put_AltUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_AltUnitsPrecision_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ AcDimPrecision *precision);


void __RPC_STUB IAcadDimAligned_get_AltUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_AltUnitsPrecision_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ AcDimPrecision precision);


void __RPC_STUB IAcadDimAligned_put_AltUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_AltUnitsScale_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ ACAD_NOUNITS *scale);


void __RPC_STUB IAcadDimAligned_get_AltUnitsScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_AltUnitsScale_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ ACAD_NOUNITS scale);


void __RPC_STUB IAcadDimAligned_put_AltUnitsScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_AltRoundDistance_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ double *Distance);


void __RPC_STUB IAcadDimAligned_get_AltRoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_AltRoundDistance_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ double Distance);


void __RPC_STUB IAcadDimAligned_put_AltRoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_AltTolerancePrecision_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ AcDimPrecision *Distance);


void __RPC_STUB IAcadDimAligned_get_AltTolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_AltTolerancePrecision_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ AcDimPrecision Distance);


void __RPC_STUB IAcadDimAligned_put_AltTolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_AltUnitsFormat_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ AcDimUnits *Units);


void __RPC_STUB IAcadDimAligned_get_AltUnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_AltUnitsFormat_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ AcDimUnits Units);


void __RPC_STUB IAcadDimAligned_put_AltUnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_AltTextPrefix_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ BSTR *prefix);


void __RPC_STUB IAcadDimAligned_get_AltTextPrefix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_AltTextPrefix_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ BSTR prefix);


void __RPC_STUB IAcadDimAligned_put_AltTextPrefix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_AltTextSuffix_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ BSTR *suffix);


void __RPC_STUB IAcadDimAligned_get_AltTextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_AltTextSuffix_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ BSTR suffix);


void __RPC_STUB IAcadDimAligned_put_AltTextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_DimensionLineColor_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ ACAD_COLOR *color);


void __RPC_STUB IAcadDimAligned_get_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_DimensionLineColor_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ ACAD_COLOR color);


void __RPC_STUB IAcadDimAligned_put_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_ExtensionLineColor_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ ACAD_COLOR *color);


void __RPC_STUB IAcadDimAligned_get_ExtensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_ExtensionLineColor_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ ACAD_COLOR color);


void __RPC_STUB IAcadDimAligned_put_ExtensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_PrimaryUnitsPrecision_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ AcDimPrecision *Prec);


void __RPC_STUB IAcadDimAligned_get_PrimaryUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_PrimaryUnitsPrecision_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ AcDimPrecision Prec);


void __RPC_STUB IAcadDimAligned_put_PrimaryUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_DimensionLineExtend_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ double *extend);


void __RPC_STUB IAcadDimAligned_get_DimensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_DimensionLineExtend_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ double extend);


void __RPC_STUB IAcadDimAligned_put_DimensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_ExtensionLineExtend_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ double *extend);


void __RPC_STUB IAcadDimAligned_get_ExtensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_ExtensionLineExtend_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ double extend);


void __RPC_STUB IAcadDimAligned_put_ExtensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_Fit_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ AcDimFit *fittype);


void __RPC_STUB IAcadDimAligned_get_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_Fit_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ AcDimFit fittype);


void __RPC_STUB IAcadDimAligned_put_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_FractionFormat_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ AcDimFractionType *Type);


void __RPC_STUB IAcadDimAligned_get_FractionFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_FractionFormat_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ AcDimFractionType Type);


void __RPC_STUB IAcadDimAligned_put_FractionFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_HorizontalTextPosition_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ AcDimHorizontalJustification *Type);


void __RPC_STUB IAcadDimAligned_get_HorizontalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_HorizontalTextPosition_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ AcDimHorizontalJustification Type);


void __RPC_STUB IAcadDimAligned_put_HorizontalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_LinearScaleFactor_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ ACAD_NOUNITS *Type);


void __RPC_STUB IAcadDimAligned_get_LinearScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_LinearScaleFactor_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ ACAD_NOUNITS Type);


void __RPC_STUB IAcadDimAligned_put_LinearScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_UnitsFormat_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ AcDimLUnits *format);


void __RPC_STUB IAcadDimAligned_get_UnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_UnitsFormat_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ AcDimLUnits format);


void __RPC_STUB IAcadDimAligned_put_UnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_ExtensionLineWeight_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ ACAD_LWEIGHT *lweight);


void __RPC_STUB IAcadDimAligned_get_ExtensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_ExtensionLineWeight_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ ACAD_LWEIGHT lweight);


void __RPC_STUB IAcadDimAligned_put_ExtensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_RoundDistance_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ double *Distance);


void __RPC_STUB IAcadDimAligned_get_RoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_RoundDistance_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ double Distance);


void __RPC_STUB IAcadDimAligned_put_RoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_DimLine1Suppress_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bSuppress);


void __RPC_STUB IAcadDimAligned_get_DimLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_DimLine1Suppress_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bSuppress);


void __RPC_STUB IAcadDimAligned_put_DimLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_DimLine2Suppress_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bSuppress);


void __RPC_STUB IAcadDimAligned_get_DimLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_DimLine2Suppress_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bSuppress);


void __RPC_STUB IAcadDimAligned_put_DimLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_ExtLine1Suppress_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bSuppress);


void __RPC_STUB IAcadDimAligned_get_ExtLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_ExtLine1Suppress_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bSuppress);


void __RPC_STUB IAcadDimAligned_put_ExtLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_ExtLine2Suppress_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bSuppress);


void __RPC_STUB IAcadDimAligned_get_ExtLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_ExtLine2Suppress_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bSuppress);


void __RPC_STUB IAcadDimAligned_put_ExtLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_DimLineInside_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimAligned_get_DimLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_DimLineInside_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimAligned_put_DimLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_TextInsideAlign_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimAligned_get_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_TextInsideAlign_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimAligned_put_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_TextInside_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimAligned_get_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_TextInside_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimAligned_put_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_ForceLineInside_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimAligned_get_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_ForceLineInside_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimAligned_put_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_TextOutsideAlign_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimAligned_get_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_TextOutsideAlign_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimAligned_put_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_ExtensionLineOffset_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ double *Offset);


void __RPC_STUB IAcadDimAligned_get_ExtensionLineOffset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_ExtensionLineOffset_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ double Offset);


void __RPC_STUB IAcadDimAligned_put_ExtensionLineOffset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_AltSuppressLeadingZeros_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimAligned_get_AltSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_AltSuppressLeadingZeros_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimAligned_put_AltSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_AltSuppressTrailingZeros_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimAligned_get_AltSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_AltSuppressTrailingZeros_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimAligned_put_AltSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_AltSuppressZeroFeet_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimAligned_get_AltSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_AltSuppressZeroFeet_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimAligned_put_AltSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_AltSuppressZeroInches_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimAligned_get_AltSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_AltSuppressZeroInches_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimAligned_put_AltSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_AltToleranceSuppressLeadingZeros_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimAligned_get_AltToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_AltToleranceSuppressLeadingZeros_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimAligned_put_AltToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_AltToleranceSuppressTrailingZeros_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimAligned_get_AltToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_AltToleranceSuppressTrailingZeros_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimAligned_put_AltToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_AltToleranceSuppressZeroFeet_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimAligned_get_AltToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_AltToleranceSuppressZeroFeet_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimAligned_put_AltToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_AltToleranceSuppressZeroInches_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimAligned_get_AltToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_AltToleranceSuppressZeroInches_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimAligned_put_AltToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_SuppressZeroFeet_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimAligned_get_SuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_SuppressZeroFeet_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimAligned_put_SuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_SuppressZeroInches_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimAligned_get_SuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_SuppressZeroInches_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimAligned_put_SuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_ToleranceSuppressZeroFeet_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimAligned_get_ToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_ToleranceSuppressZeroFeet_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimAligned_put_ToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_ToleranceSuppressZeroInches_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimAligned_get_ToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_ToleranceSuppressZeroInches_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimAligned_put_ToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_DimensionLineWeight_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ ACAD_LWEIGHT *weight);


void __RPC_STUB IAcadDimAligned_get_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_DimensionLineWeight_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ ACAD_LWEIGHT weight);


void __RPC_STUB IAcadDimAligned_put_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_ArrowheadSize_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ double *size);


void __RPC_STUB IAcadDimAligned_get_ArrowheadSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_ArrowheadSize_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ double size);


void __RPC_STUB IAcadDimAligned_put_ArrowheadSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_Arrowhead1Type_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ AcDimArrowheadType *Type);


void __RPC_STUB IAcadDimAligned_get_Arrowhead1Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_Arrowhead1Type_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ AcDimArrowheadType Type);


void __RPC_STUB IAcadDimAligned_put_Arrowhead1Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_Arrowhead2Type_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ AcDimArrowheadType *Type);


void __RPC_STUB IAcadDimAligned_get_Arrowhead2Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_Arrowhead2Type_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ AcDimArrowheadType Type);


void __RPC_STUB IAcadDimAligned_put_Arrowhead2Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_Measurement_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ double *bVal);


void __RPC_STUB IAcadDimAligned_get_Measurement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_Arrowhead1Block_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ BSTR *BlockName);


void __RPC_STUB IAcadDimAligned_get_Arrowhead1Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_Arrowhead1Block_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ BSTR BlockName);


void __RPC_STUB IAcadDimAligned_put_Arrowhead1Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_get_Arrowhead2Block_Proxy( 
    IAcadDimAligned * This,
    /* [retval][out] */ BSTR *BlockName);


void __RPC_STUB IAcadDimAligned_get_Arrowhead2Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAligned_put_Arrowhead2Block_Proxy( 
    IAcadDimAligned * This,
    /* [in] */ BSTR BlockName);


void __RPC_STUB IAcadDimAligned_put_Arrowhead2Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadDimAligned_INTERFACE_DEFINED__ */


#ifndef __IAcadDimAngular_INTERFACE_DEFINED__
#define __IAcadDimAngular_INTERFACE_DEFINED__

/* interface IAcadDimAngular */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadDimAngular;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FFECCD63-F821-457C-89F7-EF697BD9E7E5")
    IAcadDimAngular : public IAcadDimension
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtLine1StartPoint( 
            /* [retval][out] */ VARIANT *xLine1Point) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtLine1StartPoint( 
            /* [in] */ VARIANT xLine1Point) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtLine1EndPoint( 
            /* [retval][out] */ VARIANT *xLine1Point) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtLine1EndPoint( 
            /* [in] */ VARIANT xLine1Point) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtLine2StartPoint( 
            /* [retval][out] */ VARIANT *xLine2Point) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtLine2StartPoint( 
            /* [in] */ VARIANT xLine2Point) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtLine2EndPoint( 
            /* [retval][out] */ VARIANT *xLine2Point) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtLine2EndPoint( 
            /* [in] */ VARIANT xLine2Point) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AngleFormat( 
            /* [retval][out] */ AcAngleUnits *format) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AngleFormat( 
            /* [in] */ AcAngleUnits format) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimensionLineColor( 
            /* [retval][out] */ ACAD_COLOR *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimensionLineColor( 
            /* [in] */ ACAD_COLOR Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineColor( 
            /* [retval][out] */ ACAD_COLOR *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineColor( 
            /* [in] */ ACAD_COLOR Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineExtend( 
            /* [retval][out] */ double *extend) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineExtend( 
            /* [in] */ double extend) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Fit( 
            /* [retval][out] */ AcDimFit *fittype) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Fit( 
            /* [in] */ AcDimFit fittype) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HorizontalTextPosition( 
            /* [retval][out] */ AcDimHorizontalJustification *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_HorizontalTextPosition( 
            /* [in] */ AcDimHorizontalJustification Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineWeight( 
            /* [retval][out] */ ACAD_LWEIGHT *lweight) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineWeight( 
            /* [in] */ ACAD_LWEIGHT lweight) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimLine1Suppress( 
            /* [retval][out] */ VARIANT_BOOL *bSuppress) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimLine1Suppress( 
            /* [in] */ VARIANT_BOOL bSuppress) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimLine2Suppress( 
            /* [retval][out] */ VARIANT_BOOL *bSuppress) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimLine2Suppress( 
            /* [in] */ VARIANT_BOOL bSuppress) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtLine1Suppress( 
            /* [retval][out] */ VARIANT_BOOL *bSuppress) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtLine1Suppress( 
            /* [in] */ VARIANT_BOOL bSuppress) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtLine2Suppress( 
            /* [retval][out] */ VARIANT_BOOL *bSuppress) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtLine2Suppress( 
            /* [in] */ VARIANT_BOOL bSuppress) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimLineInside( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimLineInside( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextInsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextInsideAlign( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextInside( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextInside( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ForceLineInside( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ForceLineInside( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextOutsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextOutsideAlign( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextPrecision( 
            /* [retval][out] */ AcDimPrecision *precision) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextPrecision( 
            /* [in] */ AcDimPrecision precision) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineOffset( 
            /* [retval][out] */ double *Offset) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineOffset( 
            /* [in] */ double Offset) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimensionLineWeight( 
            /* [retval][out] */ ACAD_LWEIGHT *weight) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimensionLineWeight( 
            /* [in] */ ACAD_LWEIGHT weight) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ArrowheadSize( 
            /* [retval][out] */ double *size) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ArrowheadSize( 
            /* [in] */ double size) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arrowhead1Type( 
            /* [retval][out] */ AcDimArrowheadType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Arrowhead1Type( 
            /* [in] */ AcDimArrowheadType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arrowhead2Type( 
            /* [retval][out] */ AcDimArrowheadType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Arrowhead2Type( 
            /* [in] */ AcDimArrowheadType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Measurement( 
            /* [retval][out] */ ACAD_ANGLE *bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arrowhead1Block( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Arrowhead1Block( 
            /* [in] */ BSTR BlockName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arrowhead2Block( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Arrowhead2Block( 
            /* [in] */ BSTR BlockName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadDimAngularVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadDimAngular * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadDimAngular * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadDimAngular * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadDimAngular * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadDimAngular * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadDimAngular * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadDimAngular * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadDimAngular * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadDimAngular * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadDimAngular * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadDimAngular * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadDimAngular * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadDimAngular * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadDimAngular * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadDimAngular * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadDimAngular * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadDimAngular * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadDimAngular * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadDimAngular * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadDimAngular * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadDimAngular * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadDimAngular * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadDimAngular * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadDimAngular * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadDimAngular * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadDimAngular * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadDimAngular * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadDimAngular * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadDimAngular * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadDimAngular * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadDimAngular * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadDimAngular * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadDimAngular * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadDimAngular * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadDimAngular * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadDimAngular * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadDimAngular * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadDimAngular * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadDimAngular * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadDimAngular * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadDimAngular * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IAcadDimAngular * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IAcadDimAngular * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextPosition )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT *textPos);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextPosition )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT textPos);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextRotation )( 
            IAcadDimAngular * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextRotation )( 
            IAcadDimAngular * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextOverride )( 
            IAcadDimAngular * This,
            /* [retval][out] */ BSTR *bstrText);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextOverride )( 
            IAcadDimAngular * This,
            /* [in] */ BSTR bstrText);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IAcadDimAngular * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IAcadDimAngular * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextColor )( 
            IAcadDimAngular * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextColor )( 
            IAcadDimAngular * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DecimalSeparator )( 
            IAcadDimAngular * This,
            /* [retval][out] */ BSTR *character);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DecimalSeparator )( 
            IAcadDimAngular * This,
            /* [in] */ BSTR character);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextGap )( 
            IAcadDimAngular * This,
            /* [retval][out] */ double *Offset);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextGap )( 
            IAcadDimAngular * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrefix )( 
            IAcadDimAngular * This,
            /* [retval][out] */ BSTR *prefix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrefix )( 
            IAcadDimAngular * This,
            /* [in] */ BSTR prefix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextSuffix )( 
            IAcadDimAngular * This,
            /* [retval][out] */ BSTR *suffix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextSuffix )( 
            IAcadDimAngular * This,
            /* [in] */ BSTR suffix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IAcadDimAngular * This,
            /* [retval][out] */ ACAD_NOUNITS *factor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IAcadDimAngular * This,
            /* [in] */ ACAD_NOUNITS factor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalTextPosition )( 
            IAcadDimAngular * This,
            /* [retval][out] */ AcDimVerticalJustification *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalTextPosition )( 
            IAcadDimAngular * This,
            /* [in] */ AcDimVerticalJustification Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TolerancePrecision )( 
            IAcadDimAngular * This,
            /* [retval][out] */ AcDimPrecision *precision);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TolerancePrecision )( 
            IAcadDimAngular * This,
            /* [in] */ AcDimPrecision precision);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceHeightScale )( 
            IAcadDimAngular * This,
            /* [retval][out] */ ACAD_NOUNITS *scale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceHeightScale )( 
            IAcadDimAngular * This,
            /* [in] */ ACAD_NOUNITS scale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceLowerLimit )( 
            IAcadDimAngular * This,
            /* [retval][out] */ double *lower);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceLowerLimit )( 
            IAcadDimAngular * This,
            /* [in] */ double lower);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextMovement )( 
            IAcadDimAngular * This,
            /* [retval][out] */ AcDimTextMovement *Move);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextMovement )( 
            IAcadDimAngular * This,
            /* [in] */ AcDimTextMovement Move);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceDisplay )( 
            IAcadDimAngular * This,
            /* [retval][out] */ AcDimToleranceMethod *method);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceDisplay )( 
            IAcadDimAngular * This,
            /* [in] */ AcDimToleranceMethod method);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceJustification )( 
            IAcadDimAngular * This,
            /* [retval][out] */ AcDimToleranceJustify *method);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceJustification )( 
            IAcadDimAngular * This,
            /* [in] */ AcDimToleranceJustify method);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceUpperLimit )( 
            IAcadDimAngular * This,
            /* [retval][out] */ double *upper);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceUpperLimit )( 
            IAcadDimAngular * This,
            /* [in] */ double upper);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextStyle )( 
            IAcadDimAngular * This,
            /* [retval][out] */ BSTR *style);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextStyle )( 
            IAcadDimAngular * This,
            /* [in] */ BSTR style);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextHeight )( 
            IAcadDimAngular * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextHeight )( 
            IAcadDimAngular * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressLeadingZeros )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressLeadingZeros )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressTrailingZeros )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressTrailingZeros )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressLeadingZeros )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressLeadingZeros )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressTrailingZeros )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressTrailingZeros )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine1StartPoint )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT *xLine1Point);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine1StartPoint )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT xLine1Point);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine1EndPoint )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT *xLine1Point);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine1EndPoint )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT xLine1Point);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine2StartPoint )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT *xLine2Point);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine2StartPoint )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT xLine2Point);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine2EndPoint )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT *xLine2Point);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine2EndPoint )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT xLine2Point);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AngleFormat )( 
            IAcadDimAngular * This,
            /* [retval][out] */ AcAngleUnits *format);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AngleFormat )( 
            IAcadDimAngular * This,
            /* [in] */ AcAngleUnits format);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineColor )( 
            IAcadDimAngular * This,
            /* [retval][out] */ ACAD_COLOR *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineColor )( 
            IAcadDimAngular * This,
            /* [in] */ ACAD_COLOR Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineColor )( 
            IAcadDimAngular * This,
            /* [retval][out] */ ACAD_COLOR *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineColor )( 
            IAcadDimAngular * This,
            /* [in] */ ACAD_COLOR Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineExtend )( 
            IAcadDimAngular * This,
            /* [retval][out] */ double *extend);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineExtend )( 
            IAcadDimAngular * This,
            /* [in] */ double extend);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Fit )( 
            IAcadDimAngular * This,
            /* [retval][out] */ AcDimFit *fittype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Fit )( 
            IAcadDimAngular * This,
            /* [in] */ AcDimFit fittype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalTextPosition )( 
            IAcadDimAngular * This,
            /* [retval][out] */ AcDimHorizontalJustification *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalTextPosition )( 
            IAcadDimAngular * This,
            /* [in] */ AcDimHorizontalJustification Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineWeight )( 
            IAcadDimAngular * This,
            /* [retval][out] */ ACAD_LWEIGHT *lweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineWeight )( 
            IAcadDimAngular * This,
            /* [in] */ ACAD_LWEIGHT lweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimLine1Suppress )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bSuppress);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimLine1Suppress )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT_BOOL bSuppress);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimLine2Suppress )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bSuppress);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimLine2Suppress )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT_BOOL bSuppress);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine1Suppress )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bSuppress);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine1Suppress )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT_BOOL bSuppress);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine2Suppress )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bSuppress);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine2Suppress )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT_BOOL bSuppress);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimLineInside )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimLineInside )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextInsideAlign )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextInsideAlign )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextInside )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextInside )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForceLineInside )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForceLineInside )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextOutsideAlign )( 
            IAcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextOutsideAlign )( 
            IAcadDimAngular * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrecision )( 
            IAcadDimAngular * This,
            /* [retval][out] */ AcDimPrecision *precision);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrecision )( 
            IAcadDimAngular * This,
            /* [in] */ AcDimPrecision precision);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineOffset )( 
            IAcadDimAngular * This,
            /* [retval][out] */ double *Offset);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineOffset )( 
            IAcadDimAngular * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineWeight )( 
            IAcadDimAngular * This,
            /* [retval][out] */ ACAD_LWEIGHT *weight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineWeight )( 
            IAcadDimAngular * This,
            /* [in] */ ACAD_LWEIGHT weight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadSize )( 
            IAcadDimAngular * This,
            /* [retval][out] */ double *size);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadSize )( 
            IAcadDimAngular * This,
            /* [in] */ double size);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead1Type )( 
            IAcadDimAngular * This,
            /* [retval][out] */ AcDimArrowheadType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead1Type )( 
            IAcadDimAngular * This,
            /* [in] */ AcDimArrowheadType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead2Type )( 
            IAcadDimAngular * This,
            /* [retval][out] */ AcDimArrowheadType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead2Type )( 
            IAcadDimAngular * This,
            /* [in] */ AcDimArrowheadType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Measurement )( 
            IAcadDimAngular * This,
            /* [retval][out] */ ACAD_ANGLE *bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead1Block )( 
            IAcadDimAngular * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead1Block )( 
            IAcadDimAngular * This,
            /* [in] */ BSTR BlockName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead2Block )( 
            IAcadDimAngular * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead2Block )( 
            IAcadDimAngular * This,
            /* [in] */ BSTR BlockName);
        
        END_INTERFACE
    } IAcadDimAngularVtbl;

    interface IAcadDimAngular
    {
        CONST_VTBL struct IAcadDimAngularVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadDimAngular_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadDimAngular_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadDimAngular_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadDimAngular_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadDimAngular_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadDimAngular_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadDimAngular_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadDimAngular_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadDimAngular_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadDimAngular_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadDimAngular_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadDimAngular_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadDimAngular_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadDimAngular_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadDimAngular_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadDimAngular_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadDimAngular_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadDimAngular_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadDimAngular_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadDimAngular_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadDimAngular_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadDimAngular_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadDimAngular_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadDimAngular_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadDimAngular_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadDimAngular_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadDimAngular_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadDimAngular_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadDimAngular_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadDimAngular_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadDimAngular_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadDimAngular_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadDimAngular_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadDimAngular_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadDimAngular_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadDimAngular_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadDimAngular_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadDimAngular_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadDimAngular_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadDimAngular_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadDimAngular_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadDimAngular_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadDimAngular_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadDimAngular_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadDimAngular_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadDimAngular_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadDimAngular_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadDimAngular_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadDimAngular_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadDimAngular_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadDimAngular_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadDimAngular_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadDimAngular_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadDimAngular_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadDimAngular_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadDimAngular_get_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> get_Rotation(This,rotAngle)

#define IAcadDimAngular_put_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> put_Rotation(This,rotAngle)

#define IAcadDimAngular_get_TextPosition(This,textPos)	\
    (This)->lpVtbl -> get_TextPosition(This,textPos)

#define IAcadDimAngular_put_TextPosition(This,textPos)	\
    (This)->lpVtbl -> put_TextPosition(This,textPos)

#define IAcadDimAngular_get_TextRotation(This,rotAngle)	\
    (This)->lpVtbl -> get_TextRotation(This,rotAngle)

#define IAcadDimAngular_put_TextRotation(This,rotAngle)	\
    (This)->lpVtbl -> put_TextRotation(This,rotAngle)

#define IAcadDimAngular_get_TextOverride(This,bstrText)	\
    (This)->lpVtbl -> get_TextOverride(This,bstrText)

#define IAcadDimAngular_put_TextOverride(This,bstrText)	\
    (This)->lpVtbl -> put_TextOverride(This,bstrText)

#define IAcadDimAngular_get_StyleName(This,bstrName)	\
    (This)->lpVtbl -> get_StyleName(This,bstrName)

#define IAcadDimAngular_put_StyleName(This,bstrName)	\
    (This)->lpVtbl -> put_StyleName(This,bstrName)

#define IAcadDimAngular_get_TextColor(This,color)	\
    (This)->lpVtbl -> get_TextColor(This,color)

#define IAcadDimAngular_put_TextColor(This,color)	\
    (This)->lpVtbl -> put_TextColor(This,color)

#define IAcadDimAngular_get_DecimalSeparator(This,character)	\
    (This)->lpVtbl -> get_DecimalSeparator(This,character)

#define IAcadDimAngular_put_DecimalSeparator(This,character)	\
    (This)->lpVtbl -> put_DecimalSeparator(This,character)

#define IAcadDimAngular_get_TextGap(This,Offset)	\
    (This)->lpVtbl -> get_TextGap(This,Offset)

#define IAcadDimAngular_put_TextGap(This,Offset)	\
    (This)->lpVtbl -> put_TextGap(This,Offset)

#define IAcadDimAngular_get_TextPrefix(This,prefix)	\
    (This)->lpVtbl -> get_TextPrefix(This,prefix)

#define IAcadDimAngular_put_TextPrefix(This,prefix)	\
    (This)->lpVtbl -> put_TextPrefix(This,prefix)

#define IAcadDimAngular_get_TextSuffix(This,suffix)	\
    (This)->lpVtbl -> get_TextSuffix(This,suffix)

#define IAcadDimAngular_put_TextSuffix(This,suffix)	\
    (This)->lpVtbl -> put_TextSuffix(This,suffix)

#define IAcadDimAngular_get_ScaleFactor(This,factor)	\
    (This)->lpVtbl -> get_ScaleFactor(This,factor)

#define IAcadDimAngular_put_ScaleFactor(This,factor)	\
    (This)->lpVtbl -> put_ScaleFactor(This,factor)

#define IAcadDimAngular_get_VerticalTextPosition(This,Type)	\
    (This)->lpVtbl -> get_VerticalTextPosition(This,Type)

#define IAcadDimAngular_put_VerticalTextPosition(This,Type)	\
    (This)->lpVtbl -> put_VerticalTextPosition(This,Type)

#define IAcadDimAngular_get_TolerancePrecision(This,precision)	\
    (This)->lpVtbl -> get_TolerancePrecision(This,precision)

#define IAcadDimAngular_put_TolerancePrecision(This,precision)	\
    (This)->lpVtbl -> put_TolerancePrecision(This,precision)

#define IAcadDimAngular_get_ToleranceHeightScale(This,scale)	\
    (This)->lpVtbl -> get_ToleranceHeightScale(This,scale)

#define IAcadDimAngular_put_ToleranceHeightScale(This,scale)	\
    (This)->lpVtbl -> put_ToleranceHeightScale(This,scale)

#define IAcadDimAngular_get_ToleranceLowerLimit(This,lower)	\
    (This)->lpVtbl -> get_ToleranceLowerLimit(This,lower)

#define IAcadDimAngular_put_ToleranceLowerLimit(This,lower)	\
    (This)->lpVtbl -> put_ToleranceLowerLimit(This,lower)

#define IAcadDimAngular_get_TextMovement(This,Move)	\
    (This)->lpVtbl -> get_TextMovement(This,Move)

#define IAcadDimAngular_put_TextMovement(This,Move)	\
    (This)->lpVtbl -> put_TextMovement(This,Move)

#define IAcadDimAngular_get_ToleranceDisplay(This,method)	\
    (This)->lpVtbl -> get_ToleranceDisplay(This,method)

#define IAcadDimAngular_put_ToleranceDisplay(This,method)	\
    (This)->lpVtbl -> put_ToleranceDisplay(This,method)

#define IAcadDimAngular_get_ToleranceJustification(This,method)	\
    (This)->lpVtbl -> get_ToleranceJustification(This,method)

#define IAcadDimAngular_put_ToleranceJustification(This,method)	\
    (This)->lpVtbl -> put_ToleranceJustification(This,method)

#define IAcadDimAngular_get_ToleranceUpperLimit(This,upper)	\
    (This)->lpVtbl -> get_ToleranceUpperLimit(This,upper)

#define IAcadDimAngular_put_ToleranceUpperLimit(This,upper)	\
    (This)->lpVtbl -> put_ToleranceUpperLimit(This,upper)

#define IAcadDimAngular_get_TextStyle(This,style)	\
    (This)->lpVtbl -> get_TextStyle(This,style)

#define IAcadDimAngular_put_TextStyle(This,style)	\
    (This)->lpVtbl -> put_TextStyle(This,style)

#define IAcadDimAngular_get_TextHeight(This,Height)	\
    (This)->lpVtbl -> get_TextHeight(This,Height)

#define IAcadDimAngular_put_TextHeight(This,Height)	\
    (This)->lpVtbl -> put_TextHeight(This,Height)

#define IAcadDimAngular_get_SuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_SuppressLeadingZeros(This,bVal)

#define IAcadDimAngular_put_SuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_SuppressLeadingZeros(This,bVal)

#define IAcadDimAngular_get_SuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_SuppressTrailingZeros(This,bVal)

#define IAcadDimAngular_put_SuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_SuppressTrailingZeros(This,bVal)

#define IAcadDimAngular_get_ToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimAngular_put_ToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimAngular_get_ToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressTrailingZeros(This,bVal)

#define IAcadDimAngular_put_ToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressTrailingZeros(This,bVal)


#define IAcadDimAngular_get_ExtLine1StartPoint(This,xLine1Point)	\
    (This)->lpVtbl -> get_ExtLine1StartPoint(This,xLine1Point)

#define IAcadDimAngular_put_ExtLine1StartPoint(This,xLine1Point)	\
    (This)->lpVtbl -> put_ExtLine1StartPoint(This,xLine1Point)

#define IAcadDimAngular_get_ExtLine1EndPoint(This,xLine1Point)	\
    (This)->lpVtbl -> get_ExtLine1EndPoint(This,xLine1Point)

#define IAcadDimAngular_put_ExtLine1EndPoint(This,xLine1Point)	\
    (This)->lpVtbl -> put_ExtLine1EndPoint(This,xLine1Point)

#define IAcadDimAngular_get_ExtLine2StartPoint(This,xLine2Point)	\
    (This)->lpVtbl -> get_ExtLine2StartPoint(This,xLine2Point)

#define IAcadDimAngular_put_ExtLine2StartPoint(This,xLine2Point)	\
    (This)->lpVtbl -> put_ExtLine2StartPoint(This,xLine2Point)

#define IAcadDimAngular_get_ExtLine2EndPoint(This,xLine2Point)	\
    (This)->lpVtbl -> get_ExtLine2EndPoint(This,xLine2Point)

#define IAcadDimAngular_put_ExtLine2EndPoint(This,xLine2Point)	\
    (This)->lpVtbl -> put_ExtLine2EndPoint(This,xLine2Point)

#define IAcadDimAngular_get_AngleFormat(This,format)	\
    (This)->lpVtbl -> get_AngleFormat(This,format)

#define IAcadDimAngular_put_AngleFormat(This,format)	\
    (This)->lpVtbl -> put_AngleFormat(This,format)

#define IAcadDimAngular_get_DimensionLineColor(This,Type)	\
    (This)->lpVtbl -> get_DimensionLineColor(This,Type)

#define IAcadDimAngular_put_DimensionLineColor(This,Type)	\
    (This)->lpVtbl -> put_DimensionLineColor(This,Type)

#define IAcadDimAngular_get_ExtensionLineColor(This,Type)	\
    (This)->lpVtbl -> get_ExtensionLineColor(This,Type)

#define IAcadDimAngular_put_ExtensionLineColor(This,Type)	\
    (This)->lpVtbl -> put_ExtensionLineColor(This,Type)

#define IAcadDimAngular_get_ExtensionLineExtend(This,extend)	\
    (This)->lpVtbl -> get_ExtensionLineExtend(This,extend)

#define IAcadDimAngular_put_ExtensionLineExtend(This,extend)	\
    (This)->lpVtbl -> put_ExtensionLineExtend(This,extend)

#define IAcadDimAngular_get_Fit(This,fittype)	\
    (This)->lpVtbl -> get_Fit(This,fittype)

#define IAcadDimAngular_put_Fit(This,fittype)	\
    (This)->lpVtbl -> put_Fit(This,fittype)

#define IAcadDimAngular_get_HorizontalTextPosition(This,Type)	\
    (This)->lpVtbl -> get_HorizontalTextPosition(This,Type)

#define IAcadDimAngular_put_HorizontalTextPosition(This,Type)	\
    (This)->lpVtbl -> put_HorizontalTextPosition(This,Type)

#define IAcadDimAngular_get_ExtensionLineWeight(This,lweight)	\
    (This)->lpVtbl -> get_ExtensionLineWeight(This,lweight)

#define IAcadDimAngular_put_ExtensionLineWeight(This,lweight)	\
    (This)->lpVtbl -> put_ExtensionLineWeight(This,lweight)

#define IAcadDimAngular_get_DimLine1Suppress(This,bSuppress)	\
    (This)->lpVtbl -> get_DimLine1Suppress(This,bSuppress)

#define IAcadDimAngular_put_DimLine1Suppress(This,bSuppress)	\
    (This)->lpVtbl -> put_DimLine1Suppress(This,bSuppress)

#define IAcadDimAngular_get_DimLine2Suppress(This,bSuppress)	\
    (This)->lpVtbl -> get_DimLine2Suppress(This,bSuppress)

#define IAcadDimAngular_put_DimLine2Suppress(This,bSuppress)	\
    (This)->lpVtbl -> put_DimLine2Suppress(This,bSuppress)

#define IAcadDimAngular_get_ExtLine1Suppress(This,bSuppress)	\
    (This)->lpVtbl -> get_ExtLine1Suppress(This,bSuppress)

#define IAcadDimAngular_put_ExtLine1Suppress(This,bSuppress)	\
    (This)->lpVtbl -> put_ExtLine1Suppress(This,bSuppress)

#define IAcadDimAngular_get_ExtLine2Suppress(This,bSuppress)	\
    (This)->lpVtbl -> get_ExtLine2Suppress(This,bSuppress)

#define IAcadDimAngular_put_ExtLine2Suppress(This,bSuppress)	\
    (This)->lpVtbl -> put_ExtLine2Suppress(This,bSuppress)

#define IAcadDimAngular_get_DimLineInside(This,bInside)	\
    (This)->lpVtbl -> get_DimLineInside(This,bInside)

#define IAcadDimAngular_put_DimLineInside(This,bInside)	\
    (This)->lpVtbl -> put_DimLineInside(This,bInside)

#define IAcadDimAngular_get_TextInsideAlign(This,bInside)	\
    (This)->lpVtbl -> get_TextInsideAlign(This,bInside)

#define IAcadDimAngular_put_TextInsideAlign(This,bInside)	\
    (This)->lpVtbl -> put_TextInsideAlign(This,bInside)

#define IAcadDimAngular_get_TextInside(This,bInside)	\
    (This)->lpVtbl -> get_TextInside(This,bInside)

#define IAcadDimAngular_put_TextInside(This,bInside)	\
    (This)->lpVtbl -> put_TextInside(This,bInside)

#define IAcadDimAngular_get_ForceLineInside(This,bInside)	\
    (This)->lpVtbl -> get_ForceLineInside(This,bInside)

#define IAcadDimAngular_put_ForceLineInside(This,bInside)	\
    (This)->lpVtbl -> put_ForceLineInside(This,bInside)

#define IAcadDimAngular_get_TextOutsideAlign(This,bInside)	\
    (This)->lpVtbl -> get_TextOutsideAlign(This,bInside)

#define IAcadDimAngular_put_TextOutsideAlign(This,bInside)	\
    (This)->lpVtbl -> put_TextOutsideAlign(This,bInside)

#define IAcadDimAngular_get_TextPrecision(This,precision)	\
    (This)->lpVtbl -> get_TextPrecision(This,precision)

#define IAcadDimAngular_put_TextPrecision(This,precision)	\
    (This)->lpVtbl -> put_TextPrecision(This,precision)

#define IAcadDimAngular_get_ExtensionLineOffset(This,Offset)	\
    (This)->lpVtbl -> get_ExtensionLineOffset(This,Offset)

#define IAcadDimAngular_put_ExtensionLineOffset(This,Offset)	\
    (This)->lpVtbl -> put_ExtensionLineOffset(This,Offset)

#define IAcadDimAngular_get_DimensionLineWeight(This,weight)	\
    (This)->lpVtbl -> get_DimensionLineWeight(This,weight)

#define IAcadDimAngular_put_DimensionLineWeight(This,weight)	\
    (This)->lpVtbl -> put_DimensionLineWeight(This,weight)

#define IAcadDimAngular_get_ArrowheadSize(This,size)	\
    (This)->lpVtbl -> get_ArrowheadSize(This,size)

#define IAcadDimAngular_put_ArrowheadSize(This,size)	\
    (This)->lpVtbl -> put_ArrowheadSize(This,size)

#define IAcadDimAngular_get_Arrowhead1Type(This,Type)	\
    (This)->lpVtbl -> get_Arrowhead1Type(This,Type)

#define IAcadDimAngular_put_Arrowhead1Type(This,Type)	\
    (This)->lpVtbl -> put_Arrowhead1Type(This,Type)

#define IAcadDimAngular_get_Arrowhead2Type(This,Type)	\
    (This)->lpVtbl -> get_Arrowhead2Type(This,Type)

#define IAcadDimAngular_put_Arrowhead2Type(This,Type)	\
    (This)->lpVtbl -> put_Arrowhead2Type(This,Type)

#define IAcadDimAngular_get_Measurement(This,bVal)	\
    (This)->lpVtbl -> get_Measurement(This,bVal)

#define IAcadDimAngular_get_Arrowhead1Block(This,BlockName)	\
    (This)->lpVtbl -> get_Arrowhead1Block(This,BlockName)

#define IAcadDimAngular_put_Arrowhead1Block(This,BlockName)	\
    (This)->lpVtbl -> put_Arrowhead1Block(This,BlockName)

#define IAcadDimAngular_get_Arrowhead2Block(This,BlockName)	\
    (This)->lpVtbl -> get_Arrowhead2Block(This,BlockName)

#define IAcadDimAngular_put_Arrowhead2Block(This,BlockName)	\
    (This)->lpVtbl -> put_Arrowhead2Block(This,BlockName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_ExtLine1StartPoint_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ VARIANT *xLine1Point);


void __RPC_STUB IAcadDimAngular_get_ExtLine1StartPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_ExtLine1StartPoint_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ VARIANT xLine1Point);


void __RPC_STUB IAcadDimAngular_put_ExtLine1StartPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_ExtLine1EndPoint_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ VARIANT *xLine1Point);


void __RPC_STUB IAcadDimAngular_get_ExtLine1EndPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_ExtLine1EndPoint_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ VARIANT xLine1Point);


void __RPC_STUB IAcadDimAngular_put_ExtLine1EndPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_ExtLine2StartPoint_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ VARIANT *xLine2Point);


void __RPC_STUB IAcadDimAngular_get_ExtLine2StartPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_ExtLine2StartPoint_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ VARIANT xLine2Point);


void __RPC_STUB IAcadDimAngular_put_ExtLine2StartPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_ExtLine2EndPoint_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ VARIANT *xLine2Point);


void __RPC_STUB IAcadDimAngular_get_ExtLine2EndPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_ExtLine2EndPoint_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ VARIANT xLine2Point);


void __RPC_STUB IAcadDimAngular_put_ExtLine2EndPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_AngleFormat_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ AcAngleUnits *format);


void __RPC_STUB IAcadDimAngular_get_AngleFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_AngleFormat_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ AcAngleUnits format);


void __RPC_STUB IAcadDimAngular_put_AngleFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_DimensionLineColor_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ ACAD_COLOR *Type);


void __RPC_STUB IAcadDimAngular_get_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_DimensionLineColor_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ ACAD_COLOR Type);


void __RPC_STUB IAcadDimAngular_put_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_ExtensionLineColor_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ ACAD_COLOR *Type);


void __RPC_STUB IAcadDimAngular_get_ExtensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_ExtensionLineColor_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ ACAD_COLOR Type);


void __RPC_STUB IAcadDimAngular_put_ExtensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_ExtensionLineExtend_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ double *extend);


void __RPC_STUB IAcadDimAngular_get_ExtensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_ExtensionLineExtend_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ double extend);


void __RPC_STUB IAcadDimAngular_put_ExtensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_Fit_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ AcDimFit *fittype);


void __RPC_STUB IAcadDimAngular_get_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_Fit_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ AcDimFit fittype);


void __RPC_STUB IAcadDimAngular_put_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_HorizontalTextPosition_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ AcDimHorizontalJustification *Type);


void __RPC_STUB IAcadDimAngular_get_HorizontalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_HorizontalTextPosition_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ AcDimHorizontalJustification Type);


void __RPC_STUB IAcadDimAngular_put_HorizontalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_ExtensionLineWeight_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ ACAD_LWEIGHT *lweight);


void __RPC_STUB IAcadDimAngular_get_ExtensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_ExtensionLineWeight_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ ACAD_LWEIGHT lweight);


void __RPC_STUB IAcadDimAngular_put_ExtensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_DimLine1Suppress_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ VARIANT_BOOL *bSuppress);


void __RPC_STUB IAcadDimAngular_get_DimLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_DimLine1Suppress_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ VARIANT_BOOL bSuppress);


void __RPC_STUB IAcadDimAngular_put_DimLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_DimLine2Suppress_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ VARIANT_BOOL *bSuppress);


void __RPC_STUB IAcadDimAngular_get_DimLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_DimLine2Suppress_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ VARIANT_BOOL bSuppress);


void __RPC_STUB IAcadDimAngular_put_DimLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_ExtLine1Suppress_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ VARIANT_BOOL *bSuppress);


void __RPC_STUB IAcadDimAngular_get_ExtLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_ExtLine1Suppress_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ VARIANT_BOOL bSuppress);


void __RPC_STUB IAcadDimAngular_put_ExtLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_ExtLine2Suppress_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ VARIANT_BOOL *bSuppress);


void __RPC_STUB IAcadDimAngular_get_ExtLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_ExtLine2Suppress_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ VARIANT_BOOL bSuppress);


void __RPC_STUB IAcadDimAngular_put_ExtLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_DimLineInside_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimAngular_get_DimLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_DimLineInside_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimAngular_put_DimLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_TextInsideAlign_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimAngular_get_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_TextInsideAlign_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimAngular_put_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_TextInside_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimAngular_get_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_TextInside_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimAngular_put_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_ForceLineInside_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimAngular_get_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_ForceLineInside_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimAngular_put_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_TextOutsideAlign_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimAngular_get_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_TextOutsideAlign_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimAngular_put_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_TextPrecision_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ AcDimPrecision *precision);


void __RPC_STUB IAcadDimAngular_get_TextPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_TextPrecision_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ AcDimPrecision precision);


void __RPC_STUB IAcadDimAngular_put_TextPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_ExtensionLineOffset_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ double *Offset);


void __RPC_STUB IAcadDimAngular_get_ExtensionLineOffset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_ExtensionLineOffset_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ double Offset);


void __RPC_STUB IAcadDimAngular_put_ExtensionLineOffset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_DimensionLineWeight_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ ACAD_LWEIGHT *weight);


void __RPC_STUB IAcadDimAngular_get_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_DimensionLineWeight_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ ACAD_LWEIGHT weight);


void __RPC_STUB IAcadDimAngular_put_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_ArrowheadSize_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ double *size);


void __RPC_STUB IAcadDimAngular_get_ArrowheadSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_ArrowheadSize_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ double size);


void __RPC_STUB IAcadDimAngular_put_ArrowheadSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_Arrowhead1Type_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ AcDimArrowheadType *Type);


void __RPC_STUB IAcadDimAngular_get_Arrowhead1Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_Arrowhead1Type_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ AcDimArrowheadType Type);


void __RPC_STUB IAcadDimAngular_put_Arrowhead1Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_Arrowhead2Type_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ AcDimArrowheadType *Type);


void __RPC_STUB IAcadDimAngular_get_Arrowhead2Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_Arrowhead2Type_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ AcDimArrowheadType Type);


void __RPC_STUB IAcadDimAngular_put_Arrowhead2Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_Measurement_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ ACAD_ANGLE *bVal);


void __RPC_STUB IAcadDimAngular_get_Measurement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_Arrowhead1Block_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ BSTR *BlockName);


void __RPC_STUB IAcadDimAngular_get_Arrowhead1Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_Arrowhead1Block_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ BSTR BlockName);


void __RPC_STUB IAcadDimAngular_put_Arrowhead1Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_get_Arrowhead2Block_Proxy( 
    IAcadDimAngular * This,
    /* [retval][out] */ BSTR *BlockName);


void __RPC_STUB IAcadDimAngular_get_Arrowhead2Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimAngular_put_Arrowhead2Block_Proxy( 
    IAcadDimAngular * This,
    /* [in] */ BSTR BlockName);


void __RPC_STUB IAcadDimAngular_put_Arrowhead2Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadDimAngular_INTERFACE_DEFINED__ */


#ifndef __IAcadDimDiametric_INTERFACE_DEFINED__
#define __IAcadDimDiametric_INTERFACE_DEFINED__

/* interface IAcadDimDiametric */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadDimDiametric;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5EAAEE84-7B80-4902-9CE6-020E6FA1079E")
    IAcadDimDiametric : public IAcadDimension
    {
    public:
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LeaderLength( 
            /* [in] */ double rhs) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltUnits( 
            /* [retval][out] */ VARIANT_BOOL *bAlternate) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltUnits( 
            /* [in] */ VARIANT_BOOL bAlternate) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltUnitsPrecision( 
            /* [retval][out] */ AcDimPrecision *precision) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltUnitsPrecision( 
            /* [in] */ AcDimPrecision precision) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltUnitsScale( 
            /* [retval][out] */ ACAD_NOUNITS *scale) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltUnitsScale( 
            /* [in] */ ACAD_NOUNITS scale) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltRoundDistance( 
            /* [retval][out] */ double *Distance) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltRoundDistance( 
            /* [in] */ double Distance) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltTolerancePrecision( 
            /* [retval][out] */ AcDimPrecision *Distance) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltTolerancePrecision( 
            /* [in] */ AcDimPrecision Distance) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltUnitsFormat( 
            /* [retval][out] */ AcDimUnits *Units) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltUnitsFormat( 
            /* [in] */ AcDimUnits Units) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltTextPrefix( 
            /* [retval][out] */ BSTR *prefix) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltTextPrefix( 
            /* [in] */ BSTR prefix) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltTextSuffix( 
            /* [retval][out] */ BSTR *prefix) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltTextSuffix( 
            /* [in] */ BSTR prefix) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimensionLineColor( 
            /* [retval][out] */ ACAD_COLOR *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimensionLineColor( 
            /* [in] */ ACAD_COLOR Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PrimaryUnitsPrecision( 
            /* [retval][out] */ AcDimPrecision *Prec) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PrimaryUnitsPrecision( 
            /* [in] */ AcDimPrecision Prec) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_FractionFormat( 
            /* [retval][out] */ AcDimFractionType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_FractionFormat( 
            /* [in] */ AcDimFractionType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Fit( 
            /* [retval][out] */ AcDimFit *fittype) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Fit( 
            /* [in] */ AcDimFit fittype) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LinearScaleFactor( 
            /* [retval][out] */ ACAD_NOUNITS *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LinearScaleFactor( 
            /* [in] */ ACAD_NOUNITS Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnitsFormat( 
            /* [retval][out] */ AcDimLUnits *format) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnitsFormat( 
            /* [in] */ AcDimLUnits format) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_RoundDistance( 
            /* [retval][out] */ double *Distance) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_RoundDistance( 
            /* [in] */ double Distance) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimLine1Suppress( 
            /* [retval][out] */ VARIANT_BOOL *bSuppress) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimLine1Suppress( 
            /* [in] */ VARIANT_BOOL bSuppress) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimLine2Suppress( 
            /* [retval][out] */ VARIANT_BOOL *bSuppress) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimLine2Suppress( 
            /* [in] */ VARIANT_BOOL bSuppress) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextInsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextInsideAlign( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextInside( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextInside( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ForceLineInside( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ForceLineInside( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextOutsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextOutsideAlign( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_CenterType( 
            /* [retval][out] */ AcDimCenterType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_CenterType( 
            /* [in] */ AcDimCenterType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_CenterMarkSize( 
            /* [retval][out] */ double *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_CenterMarkSize( 
            /* [in] */ double Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SuppressZeroInches( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToleranceSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToleranceSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToleranceSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToleranceSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimensionLineWeight( 
            /* [retval][out] */ ACAD_LWEIGHT *weight) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimensionLineWeight( 
            /* [in] */ ACAD_LWEIGHT weight) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ArrowheadSize( 
            /* [retval][out] */ double *size) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ArrowheadSize( 
            /* [in] */ double size) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arrowhead1Type( 
            /* [retval][out] */ AcDimArrowheadType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Arrowhead1Type( 
            /* [in] */ AcDimArrowheadType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arrowhead2Type( 
            /* [retval][out] */ AcDimArrowheadType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Arrowhead2Type( 
            /* [in] */ AcDimArrowheadType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Measurement( 
            /* [retval][out] */ double *bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arrowhead1Block( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Arrowhead1Block( 
            /* [in] */ BSTR BlockName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arrowhead2Block( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Arrowhead2Block( 
            /* [in] */ BSTR BlockName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadDimDiametricVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadDimDiametric * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadDimDiametric * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadDimDiametric * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadDimDiametric * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadDimDiametric * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadDimDiametric * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadDimDiametric * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadDimDiametric * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadDimDiametric * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadDimDiametric * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadDimDiametric * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadDimDiametric * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadDimDiametric * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadDimDiametric * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadDimDiametric * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadDimDiametric * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadDimDiametric * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadDimDiametric * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadDimDiametric * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadDimDiametric * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadDimDiametric * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadDimDiametric * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IAcadDimDiametric * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextPosition )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT *textPos);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextPosition )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT textPos);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextRotation )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextRotation )( 
            IAcadDimDiametric * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextOverride )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ BSTR *bstrText);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextOverride )( 
            IAcadDimDiametric * This,
            /* [in] */ BSTR bstrText);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IAcadDimDiametric * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextColor )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextColor )( 
            IAcadDimDiametric * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DecimalSeparator )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ BSTR *character);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DecimalSeparator )( 
            IAcadDimDiametric * This,
            /* [in] */ BSTR character);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextGap )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ double *Offset);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextGap )( 
            IAcadDimDiametric * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrefix )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ BSTR *prefix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrefix )( 
            IAcadDimDiametric * This,
            /* [in] */ BSTR prefix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextSuffix )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ BSTR *suffix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextSuffix )( 
            IAcadDimDiametric * This,
            /* [in] */ BSTR suffix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ ACAD_NOUNITS *factor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IAcadDimDiametric * This,
            /* [in] */ ACAD_NOUNITS factor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalTextPosition )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ AcDimVerticalJustification *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalTextPosition )( 
            IAcadDimDiametric * This,
            /* [in] */ AcDimVerticalJustification Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TolerancePrecision )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ AcDimPrecision *precision);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TolerancePrecision )( 
            IAcadDimDiametric * This,
            /* [in] */ AcDimPrecision precision);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceHeightScale )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ ACAD_NOUNITS *scale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceHeightScale )( 
            IAcadDimDiametric * This,
            /* [in] */ ACAD_NOUNITS scale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceLowerLimit )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ double *lower);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceLowerLimit )( 
            IAcadDimDiametric * This,
            /* [in] */ double lower);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextMovement )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ AcDimTextMovement *Move);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextMovement )( 
            IAcadDimDiametric * This,
            /* [in] */ AcDimTextMovement Move);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceDisplay )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ AcDimToleranceMethod *method);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceDisplay )( 
            IAcadDimDiametric * This,
            /* [in] */ AcDimToleranceMethod method);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceJustification )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ AcDimToleranceJustify *method);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceJustification )( 
            IAcadDimDiametric * This,
            /* [in] */ AcDimToleranceJustify method);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceUpperLimit )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ double *upper);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceUpperLimit )( 
            IAcadDimDiametric * This,
            /* [in] */ double upper);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextStyle )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ BSTR *style);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextStyle )( 
            IAcadDimDiametric * This,
            /* [in] */ BSTR style);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextHeight )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextHeight )( 
            IAcadDimDiametric * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressLeadingZeros )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressLeadingZeros )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressTrailingZeros )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressTrailingZeros )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressLeadingZeros )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressLeadingZeros )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressTrailingZeros )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressTrailingZeros )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LeaderLength )( 
            IAcadDimDiametric * This,
            /* [in] */ double rhs);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnits )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bAlternate);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnits )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bAlternate);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsPrecision )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ AcDimPrecision *precision);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsPrecision )( 
            IAcadDimDiametric * This,
            /* [in] */ AcDimPrecision precision);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsScale )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ ACAD_NOUNITS *scale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsScale )( 
            IAcadDimDiametric * This,
            /* [in] */ ACAD_NOUNITS scale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltRoundDistance )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ double *Distance);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltRoundDistance )( 
            IAcadDimDiametric * This,
            /* [in] */ double Distance);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltTolerancePrecision )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ AcDimPrecision *Distance);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltTolerancePrecision )( 
            IAcadDimDiametric * This,
            /* [in] */ AcDimPrecision Distance);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsFormat )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ AcDimUnits *Units);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsFormat )( 
            IAcadDimDiametric * This,
            /* [in] */ AcDimUnits Units);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltTextPrefix )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ BSTR *prefix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltTextPrefix )( 
            IAcadDimDiametric * This,
            /* [in] */ BSTR prefix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltTextSuffix )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ BSTR *prefix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltTextSuffix )( 
            IAcadDimDiametric * This,
            /* [in] */ BSTR prefix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineColor )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ ACAD_COLOR *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineColor )( 
            IAcadDimDiametric * This,
            /* [in] */ ACAD_COLOR Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PrimaryUnitsPrecision )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ AcDimPrecision *Prec);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PrimaryUnitsPrecision )( 
            IAcadDimDiametric * This,
            /* [in] */ AcDimPrecision Prec);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FractionFormat )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ AcDimFractionType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FractionFormat )( 
            IAcadDimDiametric * This,
            /* [in] */ AcDimFractionType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Fit )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ AcDimFit *fittype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Fit )( 
            IAcadDimDiametric * This,
            /* [in] */ AcDimFit fittype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinearScaleFactor )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ ACAD_NOUNITS *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinearScaleFactor )( 
            IAcadDimDiametric * This,
            /* [in] */ ACAD_NOUNITS Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnitsFormat )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ AcDimLUnits *format);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnitsFormat )( 
            IAcadDimDiametric * This,
            /* [in] */ AcDimLUnits format);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RoundDistance )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ double *Distance);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RoundDistance )( 
            IAcadDimDiametric * This,
            /* [in] */ double Distance);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimLine1Suppress )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bSuppress);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimLine1Suppress )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bSuppress);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimLine2Suppress )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bSuppress);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimLine2Suppress )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bSuppress);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextInsideAlign )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextInsideAlign )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextInside )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextInside )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForceLineInside )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForceLineInside )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextOutsideAlign )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextOutsideAlign )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CenterType )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ AcDimCenterType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CenterType )( 
            IAcadDimDiametric * This,
            /* [in] */ AcDimCenterType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CenterMarkSize )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ double *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CenterMarkSize )( 
            IAcadDimDiametric * This,
            /* [in] */ double Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressLeadingZeros )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressLeadingZeros )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressTrailingZeros )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressTrailingZeros )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressZeroFeet )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressZeroFeet )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressZeroInches )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressZeroInches )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressLeadingZeros )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressLeadingZeros )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressTrailingZeros )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressTrailingZeros )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressZeroFeet )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressZeroFeet )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressZeroInches )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressZeroInches )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressZeroFeet )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressZeroFeet )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressZeroInches )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressZeroInches )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroFeet )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroFeet )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroInches )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroInches )( 
            IAcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineWeight )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ ACAD_LWEIGHT *weight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineWeight )( 
            IAcadDimDiametric * This,
            /* [in] */ ACAD_LWEIGHT weight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadSize )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ double *size);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadSize )( 
            IAcadDimDiametric * This,
            /* [in] */ double size);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead1Type )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ AcDimArrowheadType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead1Type )( 
            IAcadDimDiametric * This,
            /* [in] */ AcDimArrowheadType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead2Type )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ AcDimArrowheadType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead2Type )( 
            IAcadDimDiametric * This,
            /* [in] */ AcDimArrowheadType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Measurement )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ double *bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead1Block )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead1Block )( 
            IAcadDimDiametric * This,
            /* [in] */ BSTR BlockName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead2Block )( 
            IAcadDimDiametric * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead2Block )( 
            IAcadDimDiametric * This,
            /* [in] */ BSTR BlockName);
        
        END_INTERFACE
    } IAcadDimDiametricVtbl;

    interface IAcadDimDiametric
    {
        CONST_VTBL struct IAcadDimDiametricVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadDimDiametric_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadDimDiametric_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadDimDiametric_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadDimDiametric_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadDimDiametric_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadDimDiametric_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadDimDiametric_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadDimDiametric_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadDimDiametric_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadDimDiametric_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadDimDiametric_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadDimDiametric_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadDimDiametric_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadDimDiametric_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadDimDiametric_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadDimDiametric_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadDimDiametric_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadDimDiametric_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadDimDiametric_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadDimDiametric_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadDimDiametric_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadDimDiametric_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadDimDiametric_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadDimDiametric_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadDimDiametric_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadDimDiametric_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadDimDiametric_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadDimDiametric_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadDimDiametric_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadDimDiametric_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadDimDiametric_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadDimDiametric_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadDimDiametric_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadDimDiametric_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadDimDiametric_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadDimDiametric_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadDimDiametric_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadDimDiametric_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadDimDiametric_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadDimDiametric_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadDimDiametric_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadDimDiametric_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadDimDiametric_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadDimDiametric_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadDimDiametric_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadDimDiametric_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadDimDiametric_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadDimDiametric_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadDimDiametric_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadDimDiametric_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadDimDiametric_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadDimDiametric_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadDimDiametric_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadDimDiametric_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadDimDiametric_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadDimDiametric_get_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> get_Rotation(This,rotAngle)

#define IAcadDimDiametric_put_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> put_Rotation(This,rotAngle)

#define IAcadDimDiametric_get_TextPosition(This,textPos)	\
    (This)->lpVtbl -> get_TextPosition(This,textPos)

#define IAcadDimDiametric_put_TextPosition(This,textPos)	\
    (This)->lpVtbl -> put_TextPosition(This,textPos)

#define IAcadDimDiametric_get_TextRotation(This,rotAngle)	\
    (This)->lpVtbl -> get_TextRotation(This,rotAngle)

#define IAcadDimDiametric_put_TextRotation(This,rotAngle)	\
    (This)->lpVtbl -> put_TextRotation(This,rotAngle)

#define IAcadDimDiametric_get_TextOverride(This,bstrText)	\
    (This)->lpVtbl -> get_TextOverride(This,bstrText)

#define IAcadDimDiametric_put_TextOverride(This,bstrText)	\
    (This)->lpVtbl -> put_TextOverride(This,bstrText)

#define IAcadDimDiametric_get_StyleName(This,bstrName)	\
    (This)->lpVtbl -> get_StyleName(This,bstrName)

#define IAcadDimDiametric_put_StyleName(This,bstrName)	\
    (This)->lpVtbl -> put_StyleName(This,bstrName)

#define IAcadDimDiametric_get_TextColor(This,color)	\
    (This)->lpVtbl -> get_TextColor(This,color)

#define IAcadDimDiametric_put_TextColor(This,color)	\
    (This)->lpVtbl -> put_TextColor(This,color)

#define IAcadDimDiametric_get_DecimalSeparator(This,character)	\
    (This)->lpVtbl -> get_DecimalSeparator(This,character)

#define IAcadDimDiametric_put_DecimalSeparator(This,character)	\
    (This)->lpVtbl -> put_DecimalSeparator(This,character)

#define IAcadDimDiametric_get_TextGap(This,Offset)	\
    (This)->lpVtbl -> get_TextGap(This,Offset)

#define IAcadDimDiametric_put_TextGap(This,Offset)	\
    (This)->lpVtbl -> put_TextGap(This,Offset)

#define IAcadDimDiametric_get_TextPrefix(This,prefix)	\
    (This)->lpVtbl -> get_TextPrefix(This,prefix)

#define IAcadDimDiametric_put_TextPrefix(This,prefix)	\
    (This)->lpVtbl -> put_TextPrefix(This,prefix)

#define IAcadDimDiametric_get_TextSuffix(This,suffix)	\
    (This)->lpVtbl -> get_TextSuffix(This,suffix)

#define IAcadDimDiametric_put_TextSuffix(This,suffix)	\
    (This)->lpVtbl -> put_TextSuffix(This,suffix)

#define IAcadDimDiametric_get_ScaleFactor(This,factor)	\
    (This)->lpVtbl -> get_ScaleFactor(This,factor)

#define IAcadDimDiametric_put_ScaleFactor(This,factor)	\
    (This)->lpVtbl -> put_ScaleFactor(This,factor)

#define IAcadDimDiametric_get_VerticalTextPosition(This,Type)	\
    (This)->lpVtbl -> get_VerticalTextPosition(This,Type)

#define IAcadDimDiametric_put_VerticalTextPosition(This,Type)	\
    (This)->lpVtbl -> put_VerticalTextPosition(This,Type)

#define IAcadDimDiametric_get_TolerancePrecision(This,precision)	\
    (This)->lpVtbl -> get_TolerancePrecision(This,precision)

#define IAcadDimDiametric_put_TolerancePrecision(This,precision)	\
    (This)->lpVtbl -> put_TolerancePrecision(This,precision)

#define IAcadDimDiametric_get_ToleranceHeightScale(This,scale)	\
    (This)->lpVtbl -> get_ToleranceHeightScale(This,scale)

#define IAcadDimDiametric_put_ToleranceHeightScale(This,scale)	\
    (This)->lpVtbl -> put_ToleranceHeightScale(This,scale)

#define IAcadDimDiametric_get_ToleranceLowerLimit(This,lower)	\
    (This)->lpVtbl -> get_ToleranceLowerLimit(This,lower)

#define IAcadDimDiametric_put_ToleranceLowerLimit(This,lower)	\
    (This)->lpVtbl -> put_ToleranceLowerLimit(This,lower)

#define IAcadDimDiametric_get_TextMovement(This,Move)	\
    (This)->lpVtbl -> get_TextMovement(This,Move)

#define IAcadDimDiametric_put_TextMovement(This,Move)	\
    (This)->lpVtbl -> put_TextMovement(This,Move)

#define IAcadDimDiametric_get_ToleranceDisplay(This,method)	\
    (This)->lpVtbl -> get_ToleranceDisplay(This,method)

#define IAcadDimDiametric_put_ToleranceDisplay(This,method)	\
    (This)->lpVtbl -> put_ToleranceDisplay(This,method)

#define IAcadDimDiametric_get_ToleranceJustification(This,method)	\
    (This)->lpVtbl -> get_ToleranceJustification(This,method)

#define IAcadDimDiametric_put_ToleranceJustification(This,method)	\
    (This)->lpVtbl -> put_ToleranceJustification(This,method)

#define IAcadDimDiametric_get_ToleranceUpperLimit(This,upper)	\
    (This)->lpVtbl -> get_ToleranceUpperLimit(This,upper)

#define IAcadDimDiametric_put_ToleranceUpperLimit(This,upper)	\
    (This)->lpVtbl -> put_ToleranceUpperLimit(This,upper)

#define IAcadDimDiametric_get_TextStyle(This,style)	\
    (This)->lpVtbl -> get_TextStyle(This,style)

#define IAcadDimDiametric_put_TextStyle(This,style)	\
    (This)->lpVtbl -> put_TextStyle(This,style)

#define IAcadDimDiametric_get_TextHeight(This,Height)	\
    (This)->lpVtbl -> get_TextHeight(This,Height)

#define IAcadDimDiametric_put_TextHeight(This,Height)	\
    (This)->lpVtbl -> put_TextHeight(This,Height)

#define IAcadDimDiametric_get_SuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_SuppressLeadingZeros(This,bVal)

#define IAcadDimDiametric_put_SuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_SuppressLeadingZeros(This,bVal)

#define IAcadDimDiametric_get_SuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_SuppressTrailingZeros(This,bVal)

#define IAcadDimDiametric_put_SuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_SuppressTrailingZeros(This,bVal)

#define IAcadDimDiametric_get_ToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimDiametric_put_ToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimDiametric_get_ToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressTrailingZeros(This,bVal)

#define IAcadDimDiametric_put_ToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressTrailingZeros(This,bVal)


#define IAcadDimDiametric_put_LeaderLength(This,rhs)	\
    (This)->lpVtbl -> put_LeaderLength(This,rhs)

#define IAcadDimDiametric_get_AltUnits(This,bAlternate)	\
    (This)->lpVtbl -> get_AltUnits(This,bAlternate)

#define IAcadDimDiametric_put_AltUnits(This,bAlternate)	\
    (This)->lpVtbl -> put_AltUnits(This,bAlternate)

#define IAcadDimDiametric_get_AltUnitsPrecision(This,precision)	\
    (This)->lpVtbl -> get_AltUnitsPrecision(This,precision)

#define IAcadDimDiametric_put_AltUnitsPrecision(This,precision)	\
    (This)->lpVtbl -> put_AltUnitsPrecision(This,precision)

#define IAcadDimDiametric_get_AltUnitsScale(This,scale)	\
    (This)->lpVtbl -> get_AltUnitsScale(This,scale)

#define IAcadDimDiametric_put_AltUnitsScale(This,scale)	\
    (This)->lpVtbl -> put_AltUnitsScale(This,scale)

#define IAcadDimDiametric_get_AltRoundDistance(This,Distance)	\
    (This)->lpVtbl -> get_AltRoundDistance(This,Distance)

#define IAcadDimDiametric_put_AltRoundDistance(This,Distance)	\
    (This)->lpVtbl -> put_AltRoundDistance(This,Distance)

#define IAcadDimDiametric_get_AltTolerancePrecision(This,Distance)	\
    (This)->lpVtbl -> get_AltTolerancePrecision(This,Distance)

#define IAcadDimDiametric_put_AltTolerancePrecision(This,Distance)	\
    (This)->lpVtbl -> put_AltTolerancePrecision(This,Distance)

#define IAcadDimDiametric_get_AltUnitsFormat(This,Units)	\
    (This)->lpVtbl -> get_AltUnitsFormat(This,Units)

#define IAcadDimDiametric_put_AltUnitsFormat(This,Units)	\
    (This)->lpVtbl -> put_AltUnitsFormat(This,Units)

#define IAcadDimDiametric_get_AltTextPrefix(This,prefix)	\
    (This)->lpVtbl -> get_AltTextPrefix(This,prefix)

#define IAcadDimDiametric_put_AltTextPrefix(This,prefix)	\
    (This)->lpVtbl -> put_AltTextPrefix(This,prefix)

#define IAcadDimDiametric_get_AltTextSuffix(This,prefix)	\
    (This)->lpVtbl -> get_AltTextSuffix(This,prefix)

#define IAcadDimDiametric_put_AltTextSuffix(This,prefix)	\
    (This)->lpVtbl -> put_AltTextSuffix(This,prefix)

#define IAcadDimDiametric_get_DimensionLineColor(This,Type)	\
    (This)->lpVtbl -> get_DimensionLineColor(This,Type)

#define IAcadDimDiametric_put_DimensionLineColor(This,Type)	\
    (This)->lpVtbl -> put_DimensionLineColor(This,Type)

#define IAcadDimDiametric_get_PrimaryUnitsPrecision(This,Prec)	\
    (This)->lpVtbl -> get_PrimaryUnitsPrecision(This,Prec)

#define IAcadDimDiametric_put_PrimaryUnitsPrecision(This,Prec)	\
    (This)->lpVtbl -> put_PrimaryUnitsPrecision(This,Prec)

#define IAcadDimDiametric_get_FractionFormat(This,Type)	\
    (This)->lpVtbl -> get_FractionFormat(This,Type)

#define IAcadDimDiametric_put_FractionFormat(This,Type)	\
    (This)->lpVtbl -> put_FractionFormat(This,Type)

#define IAcadDimDiametric_get_Fit(This,fittype)	\
    (This)->lpVtbl -> get_Fit(This,fittype)

#define IAcadDimDiametric_put_Fit(This,fittype)	\
    (This)->lpVtbl -> put_Fit(This,fittype)

#define IAcadDimDiametric_get_LinearScaleFactor(This,Type)	\
    (This)->lpVtbl -> get_LinearScaleFactor(This,Type)

#define IAcadDimDiametric_put_LinearScaleFactor(This,Type)	\
    (This)->lpVtbl -> put_LinearScaleFactor(This,Type)

#define IAcadDimDiametric_get_UnitsFormat(This,format)	\
    (This)->lpVtbl -> get_UnitsFormat(This,format)

#define IAcadDimDiametric_put_UnitsFormat(This,format)	\
    (This)->lpVtbl -> put_UnitsFormat(This,format)

#define IAcadDimDiametric_get_RoundDistance(This,Distance)	\
    (This)->lpVtbl -> get_RoundDistance(This,Distance)

#define IAcadDimDiametric_put_RoundDistance(This,Distance)	\
    (This)->lpVtbl -> put_RoundDistance(This,Distance)

#define IAcadDimDiametric_get_DimLine1Suppress(This,bSuppress)	\
    (This)->lpVtbl -> get_DimLine1Suppress(This,bSuppress)

#define IAcadDimDiametric_put_DimLine1Suppress(This,bSuppress)	\
    (This)->lpVtbl -> put_DimLine1Suppress(This,bSuppress)

#define IAcadDimDiametric_get_DimLine2Suppress(This,bSuppress)	\
    (This)->lpVtbl -> get_DimLine2Suppress(This,bSuppress)

#define IAcadDimDiametric_put_DimLine2Suppress(This,bSuppress)	\
    (This)->lpVtbl -> put_DimLine2Suppress(This,bSuppress)

#define IAcadDimDiametric_get_TextInsideAlign(This,bInside)	\
    (This)->lpVtbl -> get_TextInsideAlign(This,bInside)

#define IAcadDimDiametric_put_TextInsideAlign(This,bInside)	\
    (This)->lpVtbl -> put_TextInsideAlign(This,bInside)

#define IAcadDimDiametric_get_TextInside(This,bInside)	\
    (This)->lpVtbl -> get_TextInside(This,bInside)

#define IAcadDimDiametric_put_TextInside(This,bInside)	\
    (This)->lpVtbl -> put_TextInside(This,bInside)

#define IAcadDimDiametric_get_ForceLineInside(This,bInside)	\
    (This)->lpVtbl -> get_ForceLineInside(This,bInside)

#define IAcadDimDiametric_put_ForceLineInside(This,bInside)	\
    (This)->lpVtbl -> put_ForceLineInside(This,bInside)

#define IAcadDimDiametric_get_TextOutsideAlign(This,bInside)	\
    (This)->lpVtbl -> get_TextOutsideAlign(This,bInside)

#define IAcadDimDiametric_put_TextOutsideAlign(This,bInside)	\
    (This)->lpVtbl -> put_TextOutsideAlign(This,bInside)

#define IAcadDimDiametric_get_CenterType(This,Type)	\
    (This)->lpVtbl -> get_CenterType(This,Type)

#define IAcadDimDiametric_put_CenterType(This,Type)	\
    (This)->lpVtbl -> put_CenterType(This,Type)

#define IAcadDimDiametric_get_CenterMarkSize(This,Type)	\
    (This)->lpVtbl -> get_CenterMarkSize(This,Type)

#define IAcadDimDiametric_put_CenterMarkSize(This,Type)	\
    (This)->lpVtbl -> put_CenterMarkSize(This,Type)

#define IAcadDimDiametric_get_AltSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_AltSuppressLeadingZeros(This,bVal)

#define IAcadDimDiametric_put_AltSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_AltSuppressLeadingZeros(This,bVal)

#define IAcadDimDiametric_get_AltSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_AltSuppressTrailingZeros(This,bVal)

#define IAcadDimDiametric_put_AltSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_AltSuppressTrailingZeros(This,bVal)

#define IAcadDimDiametric_get_AltSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> get_AltSuppressZeroFeet(This,bVal)

#define IAcadDimDiametric_put_AltSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> put_AltSuppressZeroFeet(This,bVal)

#define IAcadDimDiametric_get_AltSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> get_AltSuppressZeroInches(This,bVal)

#define IAcadDimDiametric_put_AltSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> put_AltSuppressZeroInches(This,bVal)

#define IAcadDimDiametric_get_AltToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_AltToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimDiametric_put_AltToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_AltToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimDiametric_get_AltToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_AltToleranceSuppressTrailingZeros(This,bVal)

#define IAcadDimDiametric_put_AltToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_AltToleranceSuppressTrailingZeros(This,bVal)

#define IAcadDimDiametric_get_AltToleranceSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> get_AltToleranceSuppressZeroFeet(This,bVal)

#define IAcadDimDiametric_put_AltToleranceSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> put_AltToleranceSuppressZeroFeet(This,bVal)

#define IAcadDimDiametric_get_AltToleranceSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> get_AltToleranceSuppressZeroInches(This,bVal)

#define IAcadDimDiametric_put_AltToleranceSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> put_AltToleranceSuppressZeroInches(This,bVal)

#define IAcadDimDiametric_get_SuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> get_SuppressZeroFeet(This,bVal)

#define IAcadDimDiametric_put_SuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> put_SuppressZeroFeet(This,bVal)

#define IAcadDimDiametric_get_SuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> get_SuppressZeroInches(This,bVal)

#define IAcadDimDiametric_put_SuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> put_SuppressZeroInches(This,bVal)

#define IAcadDimDiametric_get_ToleranceSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressZeroFeet(This,bVal)

#define IAcadDimDiametric_put_ToleranceSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressZeroFeet(This,bVal)

#define IAcadDimDiametric_get_ToleranceSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressZeroInches(This,bVal)

#define IAcadDimDiametric_put_ToleranceSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressZeroInches(This,bVal)

#define IAcadDimDiametric_get_DimensionLineWeight(This,weight)	\
    (This)->lpVtbl -> get_DimensionLineWeight(This,weight)

#define IAcadDimDiametric_put_DimensionLineWeight(This,weight)	\
    (This)->lpVtbl -> put_DimensionLineWeight(This,weight)

#define IAcadDimDiametric_get_ArrowheadSize(This,size)	\
    (This)->lpVtbl -> get_ArrowheadSize(This,size)

#define IAcadDimDiametric_put_ArrowheadSize(This,size)	\
    (This)->lpVtbl -> put_ArrowheadSize(This,size)

#define IAcadDimDiametric_get_Arrowhead1Type(This,Type)	\
    (This)->lpVtbl -> get_Arrowhead1Type(This,Type)

#define IAcadDimDiametric_put_Arrowhead1Type(This,Type)	\
    (This)->lpVtbl -> put_Arrowhead1Type(This,Type)

#define IAcadDimDiametric_get_Arrowhead2Type(This,Type)	\
    (This)->lpVtbl -> get_Arrowhead2Type(This,Type)

#define IAcadDimDiametric_put_Arrowhead2Type(This,Type)	\
    (This)->lpVtbl -> put_Arrowhead2Type(This,Type)

#define IAcadDimDiametric_get_Measurement(This,bVal)	\
    (This)->lpVtbl -> get_Measurement(This,bVal)

#define IAcadDimDiametric_get_Arrowhead1Block(This,BlockName)	\
    (This)->lpVtbl -> get_Arrowhead1Block(This,BlockName)

#define IAcadDimDiametric_put_Arrowhead1Block(This,BlockName)	\
    (This)->lpVtbl -> put_Arrowhead1Block(This,BlockName)

#define IAcadDimDiametric_get_Arrowhead2Block(This,BlockName)	\
    (This)->lpVtbl -> get_Arrowhead2Block(This,BlockName)

#define IAcadDimDiametric_put_Arrowhead2Block(This,BlockName)	\
    (This)->lpVtbl -> put_Arrowhead2Block(This,BlockName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_LeaderLength_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ double rhs);


void __RPC_STUB IAcadDimDiametric_put_LeaderLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_AltUnits_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *bAlternate);


void __RPC_STUB IAcadDimDiametric_get_AltUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_AltUnits_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL bAlternate);


void __RPC_STUB IAcadDimDiametric_put_AltUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_AltUnitsPrecision_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ AcDimPrecision *precision);


void __RPC_STUB IAcadDimDiametric_get_AltUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_AltUnitsPrecision_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ AcDimPrecision precision);


void __RPC_STUB IAcadDimDiametric_put_AltUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_AltUnitsScale_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ ACAD_NOUNITS *scale);


void __RPC_STUB IAcadDimDiametric_get_AltUnitsScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_AltUnitsScale_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ ACAD_NOUNITS scale);


void __RPC_STUB IAcadDimDiametric_put_AltUnitsScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_AltRoundDistance_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ double *Distance);


void __RPC_STUB IAcadDimDiametric_get_AltRoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_AltRoundDistance_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ double Distance);


void __RPC_STUB IAcadDimDiametric_put_AltRoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_AltTolerancePrecision_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ AcDimPrecision *Distance);


void __RPC_STUB IAcadDimDiametric_get_AltTolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_AltTolerancePrecision_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ AcDimPrecision Distance);


void __RPC_STUB IAcadDimDiametric_put_AltTolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_AltUnitsFormat_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ AcDimUnits *Units);


void __RPC_STUB IAcadDimDiametric_get_AltUnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_AltUnitsFormat_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ AcDimUnits Units);


void __RPC_STUB IAcadDimDiametric_put_AltUnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_AltTextPrefix_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ BSTR *prefix);


void __RPC_STUB IAcadDimDiametric_get_AltTextPrefix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_AltTextPrefix_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ BSTR prefix);


void __RPC_STUB IAcadDimDiametric_put_AltTextPrefix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_AltTextSuffix_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ BSTR *prefix);


void __RPC_STUB IAcadDimDiametric_get_AltTextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_AltTextSuffix_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ BSTR prefix);


void __RPC_STUB IAcadDimDiametric_put_AltTextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_DimensionLineColor_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ ACAD_COLOR *Type);


void __RPC_STUB IAcadDimDiametric_get_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_DimensionLineColor_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ ACAD_COLOR Type);


void __RPC_STUB IAcadDimDiametric_put_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_PrimaryUnitsPrecision_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ AcDimPrecision *Prec);


void __RPC_STUB IAcadDimDiametric_get_PrimaryUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_PrimaryUnitsPrecision_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ AcDimPrecision Prec);


void __RPC_STUB IAcadDimDiametric_put_PrimaryUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_FractionFormat_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ AcDimFractionType *Type);


void __RPC_STUB IAcadDimDiametric_get_FractionFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_FractionFormat_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ AcDimFractionType Type);


void __RPC_STUB IAcadDimDiametric_put_FractionFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_Fit_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ AcDimFit *fittype);


void __RPC_STUB IAcadDimDiametric_get_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_Fit_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ AcDimFit fittype);


void __RPC_STUB IAcadDimDiametric_put_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_LinearScaleFactor_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ ACAD_NOUNITS *Type);


void __RPC_STUB IAcadDimDiametric_get_LinearScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_LinearScaleFactor_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ ACAD_NOUNITS Type);


void __RPC_STUB IAcadDimDiametric_put_LinearScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_UnitsFormat_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ AcDimLUnits *format);


void __RPC_STUB IAcadDimDiametric_get_UnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_UnitsFormat_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ AcDimLUnits format);


void __RPC_STUB IAcadDimDiametric_put_UnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_RoundDistance_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ double *Distance);


void __RPC_STUB IAcadDimDiametric_get_RoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_RoundDistance_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ double Distance);


void __RPC_STUB IAcadDimDiametric_put_RoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_DimLine1Suppress_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *bSuppress);


void __RPC_STUB IAcadDimDiametric_get_DimLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_DimLine1Suppress_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL bSuppress);


void __RPC_STUB IAcadDimDiametric_put_DimLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_DimLine2Suppress_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *bSuppress);


void __RPC_STUB IAcadDimDiametric_get_DimLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_DimLine2Suppress_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL bSuppress);


void __RPC_STUB IAcadDimDiametric_put_DimLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_TextInsideAlign_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimDiametric_get_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_TextInsideAlign_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimDiametric_put_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_TextInside_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimDiametric_get_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_TextInside_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimDiametric_put_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_ForceLineInside_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimDiametric_get_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_ForceLineInside_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimDiametric_put_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_TextOutsideAlign_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimDiametric_get_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_TextOutsideAlign_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimDiametric_put_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_CenterType_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ AcDimCenterType *Type);


void __RPC_STUB IAcadDimDiametric_get_CenterType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_CenterType_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ AcDimCenterType Type);


void __RPC_STUB IAcadDimDiametric_put_CenterType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_CenterMarkSize_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ double *Type);


void __RPC_STUB IAcadDimDiametric_get_CenterMarkSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_CenterMarkSize_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ double Type);


void __RPC_STUB IAcadDimDiametric_put_CenterMarkSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_AltSuppressLeadingZeros_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimDiametric_get_AltSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_AltSuppressLeadingZeros_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimDiametric_put_AltSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_AltSuppressTrailingZeros_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimDiametric_get_AltSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_AltSuppressTrailingZeros_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimDiametric_put_AltSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_AltSuppressZeroFeet_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimDiametric_get_AltSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_AltSuppressZeroFeet_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimDiametric_put_AltSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_AltSuppressZeroInches_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimDiametric_get_AltSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_AltSuppressZeroInches_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimDiametric_put_AltSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_AltToleranceSuppressLeadingZeros_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimDiametric_get_AltToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_AltToleranceSuppressLeadingZeros_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimDiametric_put_AltToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_AltToleranceSuppressTrailingZeros_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimDiametric_get_AltToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_AltToleranceSuppressTrailingZeros_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimDiametric_put_AltToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_AltToleranceSuppressZeroFeet_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimDiametric_get_AltToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_AltToleranceSuppressZeroFeet_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimDiametric_put_AltToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_AltToleranceSuppressZeroInches_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimDiametric_get_AltToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_AltToleranceSuppressZeroInches_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimDiametric_put_AltToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_SuppressZeroFeet_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimDiametric_get_SuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_SuppressZeroFeet_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimDiametric_put_SuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_SuppressZeroInches_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimDiametric_get_SuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_SuppressZeroInches_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimDiametric_put_SuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_ToleranceSuppressZeroFeet_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimDiametric_get_ToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_ToleranceSuppressZeroFeet_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimDiametric_put_ToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_ToleranceSuppressZeroInches_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimDiametric_get_ToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_ToleranceSuppressZeroInches_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimDiametric_put_ToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_DimensionLineWeight_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ ACAD_LWEIGHT *weight);


void __RPC_STUB IAcadDimDiametric_get_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_DimensionLineWeight_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ ACAD_LWEIGHT weight);


void __RPC_STUB IAcadDimDiametric_put_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_ArrowheadSize_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ double *size);


void __RPC_STUB IAcadDimDiametric_get_ArrowheadSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_ArrowheadSize_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ double size);


void __RPC_STUB IAcadDimDiametric_put_ArrowheadSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_Arrowhead1Type_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ AcDimArrowheadType *Type);


void __RPC_STUB IAcadDimDiametric_get_Arrowhead1Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_Arrowhead1Type_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ AcDimArrowheadType Type);


void __RPC_STUB IAcadDimDiametric_put_Arrowhead1Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_Arrowhead2Type_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ AcDimArrowheadType *Type);


void __RPC_STUB IAcadDimDiametric_get_Arrowhead2Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_Arrowhead2Type_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ AcDimArrowheadType Type);


void __RPC_STUB IAcadDimDiametric_put_Arrowhead2Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_Measurement_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ double *bVal);


void __RPC_STUB IAcadDimDiametric_get_Measurement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_Arrowhead1Block_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ BSTR *BlockName);


void __RPC_STUB IAcadDimDiametric_get_Arrowhead1Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_Arrowhead1Block_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ BSTR BlockName);


void __RPC_STUB IAcadDimDiametric_put_Arrowhead1Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_get_Arrowhead2Block_Proxy( 
    IAcadDimDiametric * This,
    /* [retval][out] */ BSTR *BlockName);


void __RPC_STUB IAcadDimDiametric_get_Arrowhead2Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimDiametric_put_Arrowhead2Block_Proxy( 
    IAcadDimDiametric * This,
    /* [in] */ BSTR BlockName);


void __RPC_STUB IAcadDimDiametric_put_Arrowhead2Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadDimDiametric_INTERFACE_DEFINED__ */


#ifndef __IAcadDimRotated_INTERFACE_DEFINED__
#define __IAcadDimRotated_INTERFACE_DEFINED__

/* interface IAcadDimRotated */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadDimRotated;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("95825190-0F94-4A6E-A550-2BC788CB2A6D")
    IAcadDimRotated : public IAcadDimension
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltUnits( 
            /* [retval][out] */ VARIANT_BOOL *bAlternate) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltUnits( 
            /* [in] */ VARIANT_BOOL bAlternate) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltUnitsPrecision( 
            /* [retval][out] */ AcDimPrecision *precision) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltUnitsPrecision( 
            /* [in] */ AcDimPrecision precision) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltUnitsScale( 
            /* [retval][out] */ ACAD_NOUNITS *scale) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltUnitsScale( 
            /* [in] */ ACAD_NOUNITS scale) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltRoundDistance( 
            /* [retval][out] */ double *Distance) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltRoundDistance( 
            /* [in] */ double Distance) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltTolerancePrecision( 
            /* [retval][out] */ AcDimPrecision *Distance) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltTolerancePrecision( 
            /* [in] */ AcDimPrecision Distance) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltUnitsFormat( 
            /* [retval][out] */ AcDimUnits *Units) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltUnitsFormat( 
            /* [in] */ AcDimUnits Units) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltTextPrefix( 
            /* [retval][out] */ BSTR *prefix) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltTextPrefix( 
            /* [in] */ BSTR prefix) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltTextSuffix( 
            /* [retval][out] */ BSTR *prefix) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltTextSuffix( 
            /* [in] */ BSTR prefix) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimensionLineColor( 
            /* [retval][out] */ ACAD_COLOR *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimensionLineColor( 
            /* [in] */ ACAD_COLOR Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineColor( 
            /* [retval][out] */ ACAD_COLOR *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineColor( 
            /* [in] */ ACAD_COLOR Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PrimaryUnitsPrecision( 
            /* [retval][out] */ AcDimPrecision *Prec) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PrimaryUnitsPrecision( 
            /* [in] */ AcDimPrecision Prec) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimensionLineExtend( 
            /* [retval][out] */ double *extend) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimensionLineExtend( 
            /* [in] */ double extend) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineExtend( 
            /* [retval][out] */ double *extend) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineExtend( 
            /* [in] */ double extend) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Fit( 
            /* [retval][out] */ AcDimFit *fittype) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Fit( 
            /* [in] */ AcDimFit fittype) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_FractionFormat( 
            /* [retval][out] */ AcDimFractionType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_FractionFormat( 
            /* [in] */ AcDimFractionType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HorizontalTextPosition( 
            /* [retval][out] */ AcDimHorizontalJustification *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_HorizontalTextPosition( 
            /* [in] */ AcDimHorizontalJustification Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LinearScaleFactor( 
            /* [retval][out] */ ACAD_NOUNITS *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LinearScaleFactor( 
            /* [in] */ ACAD_NOUNITS Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnitsFormat( 
            /* [retval][out] */ AcDimLUnits *format) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnitsFormat( 
            /* [in] */ AcDimLUnits format) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineWeight( 
            /* [retval][out] */ ACAD_LWEIGHT *lweight) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineWeight( 
            /* [in] */ ACAD_LWEIGHT lweight) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_RoundDistance( 
            /* [retval][out] */ double *Distance) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_RoundDistance( 
            /* [in] */ double Distance) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimLine1Suppress( 
            /* [retval][out] */ VARIANT_BOOL *bSuppress) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimLine1Suppress( 
            /* [in] */ VARIANT_BOOL bSuppress) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimLine2Suppress( 
            /* [retval][out] */ VARIANT_BOOL *bSuppress) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimLine2Suppress( 
            /* [in] */ VARIANT_BOOL bSuppress) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtLine1Suppress( 
            /* [retval][out] */ VARIANT_BOOL *bSuppress) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtLine1Suppress( 
            /* [in] */ VARIANT_BOOL bSuppress) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtLine2Suppress( 
            /* [retval][out] */ VARIANT_BOOL *bSuppress) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtLine2Suppress( 
            /* [in] */ VARIANT_BOOL bSuppress) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimLineInside( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimLineInside( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextInsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextInsideAlign( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextInside( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextInside( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ForceLineInside( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ForceLineInside( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextOutsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextOutsideAlign( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineOffset( 
            /* [retval][out] */ double *Offset) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineOffset( 
            /* [in] */ double Offset) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SuppressZeroInches( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToleranceSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToleranceSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToleranceSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToleranceSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimensionLineWeight( 
            /* [retval][out] */ ACAD_LWEIGHT *weight) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimensionLineWeight( 
            /* [in] */ ACAD_LWEIGHT weight) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ArrowheadSize( 
            /* [retval][out] */ double *size) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ArrowheadSize( 
            /* [in] */ double size) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arrowhead1Type( 
            /* [retval][out] */ AcDimArrowheadType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Arrowhead1Type( 
            /* [in] */ AcDimArrowheadType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arrowhead2Type( 
            /* [retval][out] */ AcDimArrowheadType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Arrowhead2Type( 
            /* [in] */ AcDimArrowheadType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Measurement( 
            /* [retval][out] */ double *bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arrowhead1Block( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Arrowhead1Block( 
            /* [in] */ BSTR BlockName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arrowhead2Block( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Arrowhead2Block( 
            /* [in] */ BSTR BlockName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadDimRotatedVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadDimRotated * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadDimRotated * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadDimRotated * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadDimRotated * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadDimRotated * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadDimRotated * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadDimRotated * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadDimRotated * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadDimRotated * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadDimRotated * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadDimRotated * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadDimRotated * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadDimRotated * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadDimRotated * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadDimRotated * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadDimRotated * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadDimRotated * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadDimRotated * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadDimRotated * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadDimRotated * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadDimRotated * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadDimRotated * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadDimRotated * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadDimRotated * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadDimRotated * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadDimRotated * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadDimRotated * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadDimRotated * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadDimRotated * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadDimRotated * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadDimRotated * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadDimRotated * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadDimRotated * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadDimRotated * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadDimRotated * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadDimRotated * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadDimRotated * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadDimRotated * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadDimRotated * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadDimRotated * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadDimRotated * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IAcadDimRotated * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IAcadDimRotated * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextPosition )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT *textPos);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextPosition )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT textPos);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextRotation )( 
            IAcadDimRotated * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextRotation )( 
            IAcadDimRotated * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextOverride )( 
            IAcadDimRotated * This,
            /* [retval][out] */ BSTR *bstrText);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextOverride )( 
            IAcadDimRotated * This,
            /* [in] */ BSTR bstrText);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IAcadDimRotated * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IAcadDimRotated * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextColor )( 
            IAcadDimRotated * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextColor )( 
            IAcadDimRotated * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DecimalSeparator )( 
            IAcadDimRotated * This,
            /* [retval][out] */ BSTR *character);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DecimalSeparator )( 
            IAcadDimRotated * This,
            /* [in] */ BSTR character);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextGap )( 
            IAcadDimRotated * This,
            /* [retval][out] */ double *Offset);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextGap )( 
            IAcadDimRotated * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrefix )( 
            IAcadDimRotated * This,
            /* [retval][out] */ BSTR *prefix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrefix )( 
            IAcadDimRotated * This,
            /* [in] */ BSTR prefix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextSuffix )( 
            IAcadDimRotated * This,
            /* [retval][out] */ BSTR *suffix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextSuffix )( 
            IAcadDimRotated * This,
            /* [in] */ BSTR suffix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IAcadDimRotated * This,
            /* [retval][out] */ ACAD_NOUNITS *factor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IAcadDimRotated * This,
            /* [in] */ ACAD_NOUNITS factor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalTextPosition )( 
            IAcadDimRotated * This,
            /* [retval][out] */ AcDimVerticalJustification *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalTextPosition )( 
            IAcadDimRotated * This,
            /* [in] */ AcDimVerticalJustification Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TolerancePrecision )( 
            IAcadDimRotated * This,
            /* [retval][out] */ AcDimPrecision *precision);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TolerancePrecision )( 
            IAcadDimRotated * This,
            /* [in] */ AcDimPrecision precision);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceHeightScale )( 
            IAcadDimRotated * This,
            /* [retval][out] */ ACAD_NOUNITS *scale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceHeightScale )( 
            IAcadDimRotated * This,
            /* [in] */ ACAD_NOUNITS scale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceLowerLimit )( 
            IAcadDimRotated * This,
            /* [retval][out] */ double *lower);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceLowerLimit )( 
            IAcadDimRotated * This,
            /* [in] */ double lower);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextMovement )( 
            IAcadDimRotated * This,
            /* [retval][out] */ AcDimTextMovement *Move);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextMovement )( 
            IAcadDimRotated * This,
            /* [in] */ AcDimTextMovement Move);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceDisplay )( 
            IAcadDimRotated * This,
            /* [retval][out] */ AcDimToleranceMethod *method);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceDisplay )( 
            IAcadDimRotated * This,
            /* [in] */ AcDimToleranceMethod method);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceJustification )( 
            IAcadDimRotated * This,
            /* [retval][out] */ AcDimToleranceJustify *method);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceJustification )( 
            IAcadDimRotated * This,
            /* [in] */ AcDimToleranceJustify method);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceUpperLimit )( 
            IAcadDimRotated * This,
            /* [retval][out] */ double *upper);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceUpperLimit )( 
            IAcadDimRotated * This,
            /* [in] */ double upper);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextStyle )( 
            IAcadDimRotated * This,
            /* [retval][out] */ BSTR *style);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextStyle )( 
            IAcadDimRotated * This,
            /* [in] */ BSTR style);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextHeight )( 
            IAcadDimRotated * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextHeight )( 
            IAcadDimRotated * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressLeadingZeros )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressLeadingZeros )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressTrailingZeros )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressTrailingZeros )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressLeadingZeros )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressLeadingZeros )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressTrailingZeros )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressTrailingZeros )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnits )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bAlternate);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnits )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bAlternate);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsPrecision )( 
            IAcadDimRotated * This,
            /* [retval][out] */ AcDimPrecision *precision);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsPrecision )( 
            IAcadDimRotated * This,
            /* [in] */ AcDimPrecision precision);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsScale )( 
            IAcadDimRotated * This,
            /* [retval][out] */ ACAD_NOUNITS *scale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsScale )( 
            IAcadDimRotated * This,
            /* [in] */ ACAD_NOUNITS scale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltRoundDistance )( 
            IAcadDimRotated * This,
            /* [retval][out] */ double *Distance);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltRoundDistance )( 
            IAcadDimRotated * This,
            /* [in] */ double Distance);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltTolerancePrecision )( 
            IAcadDimRotated * This,
            /* [retval][out] */ AcDimPrecision *Distance);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltTolerancePrecision )( 
            IAcadDimRotated * This,
            /* [in] */ AcDimPrecision Distance);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsFormat )( 
            IAcadDimRotated * This,
            /* [retval][out] */ AcDimUnits *Units);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsFormat )( 
            IAcadDimRotated * This,
            /* [in] */ AcDimUnits Units);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltTextPrefix )( 
            IAcadDimRotated * This,
            /* [retval][out] */ BSTR *prefix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltTextPrefix )( 
            IAcadDimRotated * This,
            /* [in] */ BSTR prefix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltTextSuffix )( 
            IAcadDimRotated * This,
            /* [retval][out] */ BSTR *prefix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltTextSuffix )( 
            IAcadDimRotated * This,
            /* [in] */ BSTR prefix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineColor )( 
            IAcadDimRotated * This,
            /* [retval][out] */ ACAD_COLOR *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineColor )( 
            IAcadDimRotated * This,
            /* [in] */ ACAD_COLOR Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineColor )( 
            IAcadDimRotated * This,
            /* [retval][out] */ ACAD_COLOR *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineColor )( 
            IAcadDimRotated * This,
            /* [in] */ ACAD_COLOR Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PrimaryUnitsPrecision )( 
            IAcadDimRotated * This,
            /* [retval][out] */ AcDimPrecision *Prec);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PrimaryUnitsPrecision )( 
            IAcadDimRotated * This,
            /* [in] */ AcDimPrecision Prec);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineExtend )( 
            IAcadDimRotated * This,
            /* [retval][out] */ double *extend);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineExtend )( 
            IAcadDimRotated * This,
            /* [in] */ double extend);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineExtend )( 
            IAcadDimRotated * This,
            /* [retval][out] */ double *extend);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineExtend )( 
            IAcadDimRotated * This,
            /* [in] */ double extend);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Fit )( 
            IAcadDimRotated * This,
            /* [retval][out] */ AcDimFit *fittype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Fit )( 
            IAcadDimRotated * This,
            /* [in] */ AcDimFit fittype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FractionFormat )( 
            IAcadDimRotated * This,
            /* [retval][out] */ AcDimFractionType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FractionFormat )( 
            IAcadDimRotated * This,
            /* [in] */ AcDimFractionType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalTextPosition )( 
            IAcadDimRotated * This,
            /* [retval][out] */ AcDimHorizontalJustification *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalTextPosition )( 
            IAcadDimRotated * This,
            /* [in] */ AcDimHorizontalJustification Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinearScaleFactor )( 
            IAcadDimRotated * This,
            /* [retval][out] */ ACAD_NOUNITS *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinearScaleFactor )( 
            IAcadDimRotated * This,
            /* [in] */ ACAD_NOUNITS Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnitsFormat )( 
            IAcadDimRotated * This,
            /* [retval][out] */ AcDimLUnits *format);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnitsFormat )( 
            IAcadDimRotated * This,
            /* [in] */ AcDimLUnits format);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineWeight )( 
            IAcadDimRotated * This,
            /* [retval][out] */ ACAD_LWEIGHT *lweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineWeight )( 
            IAcadDimRotated * This,
            /* [in] */ ACAD_LWEIGHT lweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RoundDistance )( 
            IAcadDimRotated * This,
            /* [retval][out] */ double *Distance);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RoundDistance )( 
            IAcadDimRotated * This,
            /* [in] */ double Distance);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimLine1Suppress )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bSuppress);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimLine1Suppress )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bSuppress);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimLine2Suppress )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bSuppress);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimLine2Suppress )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bSuppress);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine1Suppress )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bSuppress);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine1Suppress )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bSuppress);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine2Suppress )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bSuppress);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine2Suppress )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bSuppress);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimLineInside )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimLineInside )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextInsideAlign )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextInsideAlign )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextInside )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextInside )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForceLineInside )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForceLineInside )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextOutsideAlign )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextOutsideAlign )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineOffset )( 
            IAcadDimRotated * This,
            /* [retval][out] */ double *Offset);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineOffset )( 
            IAcadDimRotated * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressLeadingZeros )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressLeadingZeros )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressTrailingZeros )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressTrailingZeros )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressZeroFeet )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressZeroFeet )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressZeroInches )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressZeroInches )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressLeadingZeros )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressLeadingZeros )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressTrailingZeros )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressTrailingZeros )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressZeroFeet )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressZeroFeet )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressZeroInches )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressZeroInches )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressZeroFeet )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressZeroFeet )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressZeroInches )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressZeroInches )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroFeet )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroFeet )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroInches )( 
            IAcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroInches )( 
            IAcadDimRotated * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineWeight )( 
            IAcadDimRotated * This,
            /* [retval][out] */ ACAD_LWEIGHT *weight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineWeight )( 
            IAcadDimRotated * This,
            /* [in] */ ACAD_LWEIGHT weight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadSize )( 
            IAcadDimRotated * This,
            /* [retval][out] */ double *size);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadSize )( 
            IAcadDimRotated * This,
            /* [in] */ double size);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead1Type )( 
            IAcadDimRotated * This,
            /* [retval][out] */ AcDimArrowheadType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead1Type )( 
            IAcadDimRotated * This,
            /* [in] */ AcDimArrowheadType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead2Type )( 
            IAcadDimRotated * This,
            /* [retval][out] */ AcDimArrowheadType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead2Type )( 
            IAcadDimRotated * This,
            /* [in] */ AcDimArrowheadType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Measurement )( 
            IAcadDimRotated * This,
            /* [retval][out] */ double *bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead1Block )( 
            IAcadDimRotated * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead1Block )( 
            IAcadDimRotated * This,
            /* [in] */ BSTR BlockName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead2Block )( 
            IAcadDimRotated * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead2Block )( 
            IAcadDimRotated * This,
            /* [in] */ BSTR BlockName);
        
        END_INTERFACE
    } IAcadDimRotatedVtbl;

    interface IAcadDimRotated
    {
        CONST_VTBL struct IAcadDimRotatedVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadDimRotated_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadDimRotated_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadDimRotated_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadDimRotated_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadDimRotated_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadDimRotated_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadDimRotated_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadDimRotated_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadDimRotated_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadDimRotated_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadDimRotated_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadDimRotated_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadDimRotated_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadDimRotated_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadDimRotated_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadDimRotated_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadDimRotated_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadDimRotated_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadDimRotated_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadDimRotated_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadDimRotated_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadDimRotated_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadDimRotated_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadDimRotated_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadDimRotated_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadDimRotated_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadDimRotated_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadDimRotated_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadDimRotated_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadDimRotated_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadDimRotated_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadDimRotated_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadDimRotated_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadDimRotated_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadDimRotated_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadDimRotated_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadDimRotated_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadDimRotated_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadDimRotated_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadDimRotated_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadDimRotated_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadDimRotated_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadDimRotated_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadDimRotated_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadDimRotated_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadDimRotated_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadDimRotated_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadDimRotated_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadDimRotated_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadDimRotated_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadDimRotated_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadDimRotated_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadDimRotated_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadDimRotated_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadDimRotated_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadDimRotated_get_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> get_Rotation(This,rotAngle)

#define IAcadDimRotated_put_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> put_Rotation(This,rotAngle)

#define IAcadDimRotated_get_TextPosition(This,textPos)	\
    (This)->lpVtbl -> get_TextPosition(This,textPos)

#define IAcadDimRotated_put_TextPosition(This,textPos)	\
    (This)->lpVtbl -> put_TextPosition(This,textPos)

#define IAcadDimRotated_get_TextRotation(This,rotAngle)	\
    (This)->lpVtbl -> get_TextRotation(This,rotAngle)

#define IAcadDimRotated_put_TextRotation(This,rotAngle)	\
    (This)->lpVtbl -> put_TextRotation(This,rotAngle)

#define IAcadDimRotated_get_TextOverride(This,bstrText)	\
    (This)->lpVtbl -> get_TextOverride(This,bstrText)

#define IAcadDimRotated_put_TextOverride(This,bstrText)	\
    (This)->lpVtbl -> put_TextOverride(This,bstrText)

#define IAcadDimRotated_get_StyleName(This,bstrName)	\
    (This)->lpVtbl -> get_StyleName(This,bstrName)

#define IAcadDimRotated_put_StyleName(This,bstrName)	\
    (This)->lpVtbl -> put_StyleName(This,bstrName)

#define IAcadDimRotated_get_TextColor(This,color)	\
    (This)->lpVtbl -> get_TextColor(This,color)

#define IAcadDimRotated_put_TextColor(This,color)	\
    (This)->lpVtbl -> put_TextColor(This,color)

#define IAcadDimRotated_get_DecimalSeparator(This,character)	\
    (This)->lpVtbl -> get_DecimalSeparator(This,character)

#define IAcadDimRotated_put_DecimalSeparator(This,character)	\
    (This)->lpVtbl -> put_DecimalSeparator(This,character)

#define IAcadDimRotated_get_TextGap(This,Offset)	\
    (This)->lpVtbl -> get_TextGap(This,Offset)

#define IAcadDimRotated_put_TextGap(This,Offset)	\
    (This)->lpVtbl -> put_TextGap(This,Offset)

#define IAcadDimRotated_get_TextPrefix(This,prefix)	\
    (This)->lpVtbl -> get_TextPrefix(This,prefix)

#define IAcadDimRotated_put_TextPrefix(This,prefix)	\
    (This)->lpVtbl -> put_TextPrefix(This,prefix)

#define IAcadDimRotated_get_TextSuffix(This,suffix)	\
    (This)->lpVtbl -> get_TextSuffix(This,suffix)

#define IAcadDimRotated_put_TextSuffix(This,suffix)	\
    (This)->lpVtbl -> put_TextSuffix(This,suffix)

#define IAcadDimRotated_get_ScaleFactor(This,factor)	\
    (This)->lpVtbl -> get_ScaleFactor(This,factor)

#define IAcadDimRotated_put_ScaleFactor(This,factor)	\
    (This)->lpVtbl -> put_ScaleFactor(This,factor)

#define IAcadDimRotated_get_VerticalTextPosition(This,Type)	\
    (This)->lpVtbl -> get_VerticalTextPosition(This,Type)

#define IAcadDimRotated_put_VerticalTextPosition(This,Type)	\
    (This)->lpVtbl -> put_VerticalTextPosition(This,Type)

#define IAcadDimRotated_get_TolerancePrecision(This,precision)	\
    (This)->lpVtbl -> get_TolerancePrecision(This,precision)

#define IAcadDimRotated_put_TolerancePrecision(This,precision)	\
    (This)->lpVtbl -> put_TolerancePrecision(This,precision)

#define IAcadDimRotated_get_ToleranceHeightScale(This,scale)	\
    (This)->lpVtbl -> get_ToleranceHeightScale(This,scale)

#define IAcadDimRotated_put_ToleranceHeightScale(This,scale)	\
    (This)->lpVtbl -> put_ToleranceHeightScale(This,scale)

#define IAcadDimRotated_get_ToleranceLowerLimit(This,lower)	\
    (This)->lpVtbl -> get_ToleranceLowerLimit(This,lower)

#define IAcadDimRotated_put_ToleranceLowerLimit(This,lower)	\
    (This)->lpVtbl -> put_ToleranceLowerLimit(This,lower)

#define IAcadDimRotated_get_TextMovement(This,Move)	\
    (This)->lpVtbl -> get_TextMovement(This,Move)

#define IAcadDimRotated_put_TextMovement(This,Move)	\
    (This)->lpVtbl -> put_TextMovement(This,Move)

#define IAcadDimRotated_get_ToleranceDisplay(This,method)	\
    (This)->lpVtbl -> get_ToleranceDisplay(This,method)

#define IAcadDimRotated_put_ToleranceDisplay(This,method)	\
    (This)->lpVtbl -> put_ToleranceDisplay(This,method)

#define IAcadDimRotated_get_ToleranceJustification(This,method)	\
    (This)->lpVtbl -> get_ToleranceJustification(This,method)

#define IAcadDimRotated_put_ToleranceJustification(This,method)	\
    (This)->lpVtbl -> put_ToleranceJustification(This,method)

#define IAcadDimRotated_get_ToleranceUpperLimit(This,upper)	\
    (This)->lpVtbl -> get_ToleranceUpperLimit(This,upper)

#define IAcadDimRotated_put_ToleranceUpperLimit(This,upper)	\
    (This)->lpVtbl -> put_ToleranceUpperLimit(This,upper)

#define IAcadDimRotated_get_TextStyle(This,style)	\
    (This)->lpVtbl -> get_TextStyle(This,style)

#define IAcadDimRotated_put_TextStyle(This,style)	\
    (This)->lpVtbl -> put_TextStyle(This,style)

#define IAcadDimRotated_get_TextHeight(This,Height)	\
    (This)->lpVtbl -> get_TextHeight(This,Height)

#define IAcadDimRotated_put_TextHeight(This,Height)	\
    (This)->lpVtbl -> put_TextHeight(This,Height)

#define IAcadDimRotated_get_SuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_SuppressLeadingZeros(This,bVal)

#define IAcadDimRotated_put_SuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_SuppressLeadingZeros(This,bVal)

#define IAcadDimRotated_get_SuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_SuppressTrailingZeros(This,bVal)

#define IAcadDimRotated_put_SuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_SuppressTrailingZeros(This,bVal)

#define IAcadDimRotated_get_ToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimRotated_put_ToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimRotated_get_ToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressTrailingZeros(This,bVal)

#define IAcadDimRotated_put_ToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressTrailingZeros(This,bVal)


#define IAcadDimRotated_get_AltUnits(This,bAlternate)	\
    (This)->lpVtbl -> get_AltUnits(This,bAlternate)

#define IAcadDimRotated_put_AltUnits(This,bAlternate)	\
    (This)->lpVtbl -> put_AltUnits(This,bAlternate)

#define IAcadDimRotated_get_AltUnitsPrecision(This,precision)	\
    (This)->lpVtbl -> get_AltUnitsPrecision(This,precision)

#define IAcadDimRotated_put_AltUnitsPrecision(This,precision)	\
    (This)->lpVtbl -> put_AltUnitsPrecision(This,precision)

#define IAcadDimRotated_get_AltUnitsScale(This,scale)	\
    (This)->lpVtbl -> get_AltUnitsScale(This,scale)

#define IAcadDimRotated_put_AltUnitsScale(This,scale)	\
    (This)->lpVtbl -> put_AltUnitsScale(This,scale)

#define IAcadDimRotated_get_AltRoundDistance(This,Distance)	\
    (This)->lpVtbl -> get_AltRoundDistance(This,Distance)

#define IAcadDimRotated_put_AltRoundDistance(This,Distance)	\
    (This)->lpVtbl -> put_AltRoundDistance(This,Distance)

#define IAcadDimRotated_get_AltTolerancePrecision(This,Distance)	\
    (This)->lpVtbl -> get_AltTolerancePrecision(This,Distance)

#define IAcadDimRotated_put_AltTolerancePrecision(This,Distance)	\
    (This)->lpVtbl -> put_AltTolerancePrecision(This,Distance)

#define IAcadDimRotated_get_AltUnitsFormat(This,Units)	\
    (This)->lpVtbl -> get_AltUnitsFormat(This,Units)

#define IAcadDimRotated_put_AltUnitsFormat(This,Units)	\
    (This)->lpVtbl -> put_AltUnitsFormat(This,Units)

#define IAcadDimRotated_get_AltTextPrefix(This,prefix)	\
    (This)->lpVtbl -> get_AltTextPrefix(This,prefix)

#define IAcadDimRotated_put_AltTextPrefix(This,prefix)	\
    (This)->lpVtbl -> put_AltTextPrefix(This,prefix)

#define IAcadDimRotated_get_AltTextSuffix(This,prefix)	\
    (This)->lpVtbl -> get_AltTextSuffix(This,prefix)

#define IAcadDimRotated_put_AltTextSuffix(This,prefix)	\
    (This)->lpVtbl -> put_AltTextSuffix(This,prefix)

#define IAcadDimRotated_get_DimensionLineColor(This,Type)	\
    (This)->lpVtbl -> get_DimensionLineColor(This,Type)

#define IAcadDimRotated_put_DimensionLineColor(This,Type)	\
    (This)->lpVtbl -> put_DimensionLineColor(This,Type)

#define IAcadDimRotated_get_ExtensionLineColor(This,Type)	\
    (This)->lpVtbl -> get_ExtensionLineColor(This,Type)

#define IAcadDimRotated_put_ExtensionLineColor(This,Type)	\
    (This)->lpVtbl -> put_ExtensionLineColor(This,Type)

#define IAcadDimRotated_get_PrimaryUnitsPrecision(This,Prec)	\
    (This)->lpVtbl -> get_PrimaryUnitsPrecision(This,Prec)

#define IAcadDimRotated_put_PrimaryUnitsPrecision(This,Prec)	\
    (This)->lpVtbl -> put_PrimaryUnitsPrecision(This,Prec)

#define IAcadDimRotated_get_DimensionLineExtend(This,extend)	\
    (This)->lpVtbl -> get_DimensionLineExtend(This,extend)

#define IAcadDimRotated_put_DimensionLineExtend(This,extend)	\
    (This)->lpVtbl -> put_DimensionLineExtend(This,extend)

#define IAcadDimRotated_get_ExtensionLineExtend(This,extend)	\
    (This)->lpVtbl -> get_ExtensionLineExtend(This,extend)

#define IAcadDimRotated_put_ExtensionLineExtend(This,extend)	\
    (This)->lpVtbl -> put_ExtensionLineExtend(This,extend)

#define IAcadDimRotated_get_Fit(This,fittype)	\
    (This)->lpVtbl -> get_Fit(This,fittype)

#define IAcadDimRotated_put_Fit(This,fittype)	\
    (This)->lpVtbl -> put_Fit(This,fittype)

#define IAcadDimRotated_get_FractionFormat(This,Type)	\
    (This)->lpVtbl -> get_FractionFormat(This,Type)

#define IAcadDimRotated_put_FractionFormat(This,Type)	\
    (This)->lpVtbl -> put_FractionFormat(This,Type)

#define IAcadDimRotated_get_HorizontalTextPosition(This,Type)	\
    (This)->lpVtbl -> get_HorizontalTextPosition(This,Type)

#define IAcadDimRotated_put_HorizontalTextPosition(This,Type)	\
    (This)->lpVtbl -> put_HorizontalTextPosition(This,Type)

#define IAcadDimRotated_get_LinearScaleFactor(This,Type)	\
    (This)->lpVtbl -> get_LinearScaleFactor(This,Type)

#define IAcadDimRotated_put_LinearScaleFactor(This,Type)	\
    (This)->lpVtbl -> put_LinearScaleFactor(This,Type)

#define IAcadDimRotated_get_UnitsFormat(This,format)	\
    (This)->lpVtbl -> get_UnitsFormat(This,format)

#define IAcadDimRotated_put_UnitsFormat(This,format)	\
    (This)->lpVtbl -> put_UnitsFormat(This,format)

#define IAcadDimRotated_get_ExtensionLineWeight(This,lweight)	\
    (This)->lpVtbl -> get_ExtensionLineWeight(This,lweight)

#define IAcadDimRotated_put_ExtensionLineWeight(This,lweight)	\
    (This)->lpVtbl -> put_ExtensionLineWeight(This,lweight)

#define IAcadDimRotated_get_RoundDistance(This,Distance)	\
    (This)->lpVtbl -> get_RoundDistance(This,Distance)

#define IAcadDimRotated_put_RoundDistance(This,Distance)	\
    (This)->lpVtbl -> put_RoundDistance(This,Distance)

#define IAcadDimRotated_get_DimLine1Suppress(This,bSuppress)	\
    (This)->lpVtbl -> get_DimLine1Suppress(This,bSuppress)

#define IAcadDimRotated_put_DimLine1Suppress(This,bSuppress)	\
    (This)->lpVtbl -> put_DimLine1Suppress(This,bSuppress)

#define IAcadDimRotated_get_DimLine2Suppress(This,bSuppress)	\
    (This)->lpVtbl -> get_DimLine2Suppress(This,bSuppress)

#define IAcadDimRotated_put_DimLine2Suppress(This,bSuppress)	\
    (This)->lpVtbl -> put_DimLine2Suppress(This,bSuppress)

#define IAcadDimRotated_get_ExtLine1Suppress(This,bSuppress)	\
    (This)->lpVtbl -> get_ExtLine1Suppress(This,bSuppress)

#define IAcadDimRotated_put_ExtLine1Suppress(This,bSuppress)	\
    (This)->lpVtbl -> put_ExtLine1Suppress(This,bSuppress)

#define IAcadDimRotated_get_ExtLine2Suppress(This,bSuppress)	\
    (This)->lpVtbl -> get_ExtLine2Suppress(This,bSuppress)

#define IAcadDimRotated_put_ExtLine2Suppress(This,bSuppress)	\
    (This)->lpVtbl -> put_ExtLine2Suppress(This,bSuppress)

#define IAcadDimRotated_get_DimLineInside(This,bInside)	\
    (This)->lpVtbl -> get_DimLineInside(This,bInside)

#define IAcadDimRotated_put_DimLineInside(This,bInside)	\
    (This)->lpVtbl -> put_DimLineInside(This,bInside)

#define IAcadDimRotated_get_TextInsideAlign(This,bInside)	\
    (This)->lpVtbl -> get_TextInsideAlign(This,bInside)

#define IAcadDimRotated_put_TextInsideAlign(This,bInside)	\
    (This)->lpVtbl -> put_TextInsideAlign(This,bInside)

#define IAcadDimRotated_get_TextInside(This,bInside)	\
    (This)->lpVtbl -> get_TextInside(This,bInside)

#define IAcadDimRotated_put_TextInside(This,bInside)	\
    (This)->lpVtbl -> put_TextInside(This,bInside)

#define IAcadDimRotated_get_ForceLineInside(This,bInside)	\
    (This)->lpVtbl -> get_ForceLineInside(This,bInside)

#define IAcadDimRotated_put_ForceLineInside(This,bInside)	\
    (This)->lpVtbl -> put_ForceLineInside(This,bInside)

#define IAcadDimRotated_get_TextOutsideAlign(This,bInside)	\
    (This)->lpVtbl -> get_TextOutsideAlign(This,bInside)

#define IAcadDimRotated_put_TextOutsideAlign(This,bInside)	\
    (This)->lpVtbl -> put_TextOutsideAlign(This,bInside)

#define IAcadDimRotated_get_ExtensionLineOffset(This,Offset)	\
    (This)->lpVtbl -> get_ExtensionLineOffset(This,Offset)

#define IAcadDimRotated_put_ExtensionLineOffset(This,Offset)	\
    (This)->lpVtbl -> put_ExtensionLineOffset(This,Offset)

#define IAcadDimRotated_get_AltSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_AltSuppressLeadingZeros(This,bVal)

#define IAcadDimRotated_put_AltSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_AltSuppressLeadingZeros(This,bVal)

#define IAcadDimRotated_get_AltSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_AltSuppressTrailingZeros(This,bVal)

#define IAcadDimRotated_put_AltSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_AltSuppressTrailingZeros(This,bVal)

#define IAcadDimRotated_get_AltSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> get_AltSuppressZeroFeet(This,bVal)

#define IAcadDimRotated_put_AltSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> put_AltSuppressZeroFeet(This,bVal)

#define IAcadDimRotated_get_AltSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> get_AltSuppressZeroInches(This,bVal)

#define IAcadDimRotated_put_AltSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> put_AltSuppressZeroInches(This,bVal)

#define IAcadDimRotated_get_AltToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_AltToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimRotated_put_AltToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_AltToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimRotated_get_AltToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_AltToleranceSuppressTrailingZeros(This,bVal)

#define IAcadDimRotated_put_AltToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_AltToleranceSuppressTrailingZeros(This,bVal)

#define IAcadDimRotated_get_AltToleranceSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> get_AltToleranceSuppressZeroFeet(This,bVal)

#define IAcadDimRotated_put_AltToleranceSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> put_AltToleranceSuppressZeroFeet(This,bVal)

#define IAcadDimRotated_get_AltToleranceSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> get_AltToleranceSuppressZeroInches(This,bVal)

#define IAcadDimRotated_put_AltToleranceSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> put_AltToleranceSuppressZeroInches(This,bVal)

#define IAcadDimRotated_get_SuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> get_SuppressZeroFeet(This,bVal)

#define IAcadDimRotated_put_SuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> put_SuppressZeroFeet(This,bVal)

#define IAcadDimRotated_get_SuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> get_SuppressZeroInches(This,bVal)

#define IAcadDimRotated_put_SuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> put_SuppressZeroInches(This,bVal)

#define IAcadDimRotated_get_ToleranceSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressZeroFeet(This,bVal)

#define IAcadDimRotated_put_ToleranceSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressZeroFeet(This,bVal)

#define IAcadDimRotated_get_ToleranceSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressZeroInches(This,bVal)

#define IAcadDimRotated_put_ToleranceSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressZeroInches(This,bVal)

#define IAcadDimRotated_get_DimensionLineWeight(This,weight)	\
    (This)->lpVtbl -> get_DimensionLineWeight(This,weight)

#define IAcadDimRotated_put_DimensionLineWeight(This,weight)	\
    (This)->lpVtbl -> put_DimensionLineWeight(This,weight)

#define IAcadDimRotated_get_ArrowheadSize(This,size)	\
    (This)->lpVtbl -> get_ArrowheadSize(This,size)

#define IAcadDimRotated_put_ArrowheadSize(This,size)	\
    (This)->lpVtbl -> put_ArrowheadSize(This,size)

#define IAcadDimRotated_get_Arrowhead1Type(This,Type)	\
    (This)->lpVtbl -> get_Arrowhead1Type(This,Type)

#define IAcadDimRotated_put_Arrowhead1Type(This,Type)	\
    (This)->lpVtbl -> put_Arrowhead1Type(This,Type)

#define IAcadDimRotated_get_Arrowhead2Type(This,Type)	\
    (This)->lpVtbl -> get_Arrowhead2Type(This,Type)

#define IAcadDimRotated_put_Arrowhead2Type(This,Type)	\
    (This)->lpVtbl -> put_Arrowhead2Type(This,Type)

#define IAcadDimRotated_get_Measurement(This,bVal)	\
    (This)->lpVtbl -> get_Measurement(This,bVal)

#define IAcadDimRotated_get_Arrowhead1Block(This,BlockName)	\
    (This)->lpVtbl -> get_Arrowhead1Block(This,BlockName)

#define IAcadDimRotated_put_Arrowhead1Block(This,BlockName)	\
    (This)->lpVtbl -> put_Arrowhead1Block(This,BlockName)

#define IAcadDimRotated_get_Arrowhead2Block(This,BlockName)	\
    (This)->lpVtbl -> get_Arrowhead2Block(This,BlockName)

#define IAcadDimRotated_put_Arrowhead2Block(This,BlockName)	\
    (This)->lpVtbl -> put_Arrowhead2Block(This,BlockName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_AltUnits_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bAlternate);


void __RPC_STUB IAcadDimRotated_get_AltUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_AltUnits_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bAlternate);


void __RPC_STUB IAcadDimRotated_put_AltUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_AltUnitsPrecision_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ AcDimPrecision *precision);


void __RPC_STUB IAcadDimRotated_get_AltUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_AltUnitsPrecision_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ AcDimPrecision precision);


void __RPC_STUB IAcadDimRotated_put_AltUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_AltUnitsScale_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ ACAD_NOUNITS *scale);


void __RPC_STUB IAcadDimRotated_get_AltUnitsScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_AltUnitsScale_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ ACAD_NOUNITS scale);


void __RPC_STUB IAcadDimRotated_put_AltUnitsScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_AltRoundDistance_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ double *Distance);


void __RPC_STUB IAcadDimRotated_get_AltRoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_AltRoundDistance_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ double Distance);


void __RPC_STUB IAcadDimRotated_put_AltRoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_AltTolerancePrecision_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ AcDimPrecision *Distance);


void __RPC_STUB IAcadDimRotated_get_AltTolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_AltTolerancePrecision_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ AcDimPrecision Distance);


void __RPC_STUB IAcadDimRotated_put_AltTolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_AltUnitsFormat_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ AcDimUnits *Units);


void __RPC_STUB IAcadDimRotated_get_AltUnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_AltUnitsFormat_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ AcDimUnits Units);


void __RPC_STUB IAcadDimRotated_put_AltUnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_AltTextPrefix_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ BSTR *prefix);


void __RPC_STUB IAcadDimRotated_get_AltTextPrefix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_AltTextPrefix_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ BSTR prefix);


void __RPC_STUB IAcadDimRotated_put_AltTextPrefix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_AltTextSuffix_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ BSTR *prefix);


void __RPC_STUB IAcadDimRotated_get_AltTextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_AltTextSuffix_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ BSTR prefix);


void __RPC_STUB IAcadDimRotated_put_AltTextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_DimensionLineColor_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ ACAD_COLOR *Type);


void __RPC_STUB IAcadDimRotated_get_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_DimensionLineColor_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ ACAD_COLOR Type);


void __RPC_STUB IAcadDimRotated_put_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_ExtensionLineColor_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ ACAD_COLOR *Type);


void __RPC_STUB IAcadDimRotated_get_ExtensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_ExtensionLineColor_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ ACAD_COLOR Type);


void __RPC_STUB IAcadDimRotated_put_ExtensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_PrimaryUnitsPrecision_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ AcDimPrecision *Prec);


void __RPC_STUB IAcadDimRotated_get_PrimaryUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_PrimaryUnitsPrecision_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ AcDimPrecision Prec);


void __RPC_STUB IAcadDimRotated_put_PrimaryUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_DimensionLineExtend_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ double *extend);


void __RPC_STUB IAcadDimRotated_get_DimensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_DimensionLineExtend_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ double extend);


void __RPC_STUB IAcadDimRotated_put_DimensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_ExtensionLineExtend_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ double *extend);


void __RPC_STUB IAcadDimRotated_get_ExtensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_ExtensionLineExtend_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ double extend);


void __RPC_STUB IAcadDimRotated_put_ExtensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_Fit_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ AcDimFit *fittype);


void __RPC_STUB IAcadDimRotated_get_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_Fit_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ AcDimFit fittype);


void __RPC_STUB IAcadDimRotated_put_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_FractionFormat_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ AcDimFractionType *Type);


void __RPC_STUB IAcadDimRotated_get_FractionFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_FractionFormat_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ AcDimFractionType Type);


void __RPC_STUB IAcadDimRotated_put_FractionFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_HorizontalTextPosition_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ AcDimHorizontalJustification *Type);


void __RPC_STUB IAcadDimRotated_get_HorizontalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_HorizontalTextPosition_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ AcDimHorizontalJustification Type);


void __RPC_STUB IAcadDimRotated_put_HorizontalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_LinearScaleFactor_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ ACAD_NOUNITS *Type);


void __RPC_STUB IAcadDimRotated_get_LinearScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_LinearScaleFactor_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ ACAD_NOUNITS Type);


void __RPC_STUB IAcadDimRotated_put_LinearScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_UnitsFormat_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ AcDimLUnits *format);


void __RPC_STUB IAcadDimRotated_get_UnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_UnitsFormat_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ AcDimLUnits format);


void __RPC_STUB IAcadDimRotated_put_UnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_ExtensionLineWeight_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ ACAD_LWEIGHT *lweight);


void __RPC_STUB IAcadDimRotated_get_ExtensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_ExtensionLineWeight_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ ACAD_LWEIGHT lweight);


void __RPC_STUB IAcadDimRotated_put_ExtensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_RoundDistance_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ double *Distance);


void __RPC_STUB IAcadDimRotated_get_RoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_RoundDistance_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ double Distance);


void __RPC_STUB IAcadDimRotated_put_RoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_DimLine1Suppress_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bSuppress);


void __RPC_STUB IAcadDimRotated_get_DimLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_DimLine1Suppress_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bSuppress);


void __RPC_STUB IAcadDimRotated_put_DimLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_DimLine2Suppress_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bSuppress);


void __RPC_STUB IAcadDimRotated_get_DimLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_DimLine2Suppress_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bSuppress);


void __RPC_STUB IAcadDimRotated_put_DimLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_ExtLine1Suppress_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bSuppress);


void __RPC_STUB IAcadDimRotated_get_ExtLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_ExtLine1Suppress_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bSuppress);


void __RPC_STUB IAcadDimRotated_put_ExtLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_ExtLine2Suppress_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bSuppress);


void __RPC_STUB IAcadDimRotated_get_ExtLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_ExtLine2Suppress_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bSuppress);


void __RPC_STUB IAcadDimRotated_put_ExtLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_DimLineInside_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimRotated_get_DimLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_DimLineInside_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimRotated_put_DimLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_TextInsideAlign_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimRotated_get_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_TextInsideAlign_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimRotated_put_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_TextInside_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimRotated_get_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_TextInside_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimRotated_put_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_ForceLineInside_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimRotated_get_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_ForceLineInside_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimRotated_put_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_TextOutsideAlign_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimRotated_get_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_TextOutsideAlign_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimRotated_put_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_ExtensionLineOffset_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ double *Offset);


void __RPC_STUB IAcadDimRotated_get_ExtensionLineOffset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_ExtensionLineOffset_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ double Offset);


void __RPC_STUB IAcadDimRotated_put_ExtensionLineOffset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_AltSuppressLeadingZeros_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRotated_get_AltSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_AltSuppressLeadingZeros_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRotated_put_AltSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_AltSuppressTrailingZeros_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRotated_get_AltSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_AltSuppressTrailingZeros_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRotated_put_AltSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_AltSuppressZeroFeet_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRotated_get_AltSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_AltSuppressZeroFeet_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRotated_put_AltSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_AltSuppressZeroInches_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRotated_get_AltSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_AltSuppressZeroInches_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRotated_put_AltSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_AltToleranceSuppressLeadingZeros_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRotated_get_AltToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_AltToleranceSuppressLeadingZeros_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRotated_put_AltToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_AltToleranceSuppressTrailingZeros_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRotated_get_AltToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_AltToleranceSuppressTrailingZeros_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRotated_put_AltToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_AltToleranceSuppressZeroFeet_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRotated_get_AltToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_AltToleranceSuppressZeroFeet_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRotated_put_AltToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_AltToleranceSuppressZeroInches_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRotated_get_AltToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_AltToleranceSuppressZeroInches_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRotated_put_AltToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_SuppressZeroFeet_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRotated_get_SuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_SuppressZeroFeet_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRotated_put_SuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_SuppressZeroInches_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRotated_get_SuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_SuppressZeroInches_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRotated_put_SuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_ToleranceSuppressZeroFeet_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRotated_get_ToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_ToleranceSuppressZeroFeet_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRotated_put_ToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_ToleranceSuppressZeroInches_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRotated_get_ToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_ToleranceSuppressZeroInches_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRotated_put_ToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_DimensionLineWeight_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ ACAD_LWEIGHT *weight);


void __RPC_STUB IAcadDimRotated_get_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_DimensionLineWeight_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ ACAD_LWEIGHT weight);


void __RPC_STUB IAcadDimRotated_put_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_ArrowheadSize_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ double *size);


void __RPC_STUB IAcadDimRotated_get_ArrowheadSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_ArrowheadSize_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ double size);


void __RPC_STUB IAcadDimRotated_put_ArrowheadSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_Arrowhead1Type_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ AcDimArrowheadType *Type);


void __RPC_STUB IAcadDimRotated_get_Arrowhead1Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_Arrowhead1Type_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ AcDimArrowheadType Type);


void __RPC_STUB IAcadDimRotated_put_Arrowhead1Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_Arrowhead2Type_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ AcDimArrowheadType *Type);


void __RPC_STUB IAcadDimRotated_get_Arrowhead2Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_Arrowhead2Type_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ AcDimArrowheadType Type);


void __RPC_STUB IAcadDimRotated_put_Arrowhead2Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_Measurement_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ double *bVal);


void __RPC_STUB IAcadDimRotated_get_Measurement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_Arrowhead1Block_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ BSTR *BlockName);


void __RPC_STUB IAcadDimRotated_get_Arrowhead1Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_Arrowhead1Block_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ BSTR BlockName);


void __RPC_STUB IAcadDimRotated_put_Arrowhead1Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_get_Arrowhead2Block_Proxy( 
    IAcadDimRotated * This,
    /* [retval][out] */ BSTR *BlockName);


void __RPC_STUB IAcadDimRotated_get_Arrowhead2Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRotated_put_Arrowhead2Block_Proxy( 
    IAcadDimRotated * This,
    /* [in] */ BSTR BlockName);


void __RPC_STUB IAcadDimRotated_put_Arrowhead2Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadDimRotated_INTERFACE_DEFINED__ */


#ifndef __IAcadDimOrdinate_INTERFACE_DEFINED__
#define __IAcadDimOrdinate_INTERFACE_DEFINED__

/* interface IAcadDimOrdinate */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadDimOrdinate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EE43D58E-C456-4880-A7C4-8B9E583C2C1F")
    IAcadDimOrdinate : public IAcadDimension
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltUnits( 
            /* [retval][out] */ VARIANT_BOOL *bAlternate) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltUnits( 
            /* [in] */ VARIANT_BOOL bAlternate) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltUnitsPrecision( 
            /* [retval][out] */ AcDimPrecision *precision) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltUnitsPrecision( 
            /* [in] */ AcDimPrecision precision) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltUnitsScale( 
            /* [retval][out] */ ACAD_NOUNITS *scale) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltUnitsScale( 
            /* [in] */ ACAD_NOUNITS scale) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltRoundDistance( 
            /* [retval][out] */ double *Distance) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltRoundDistance( 
            /* [in] */ double Distance) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltTolerancePrecision( 
            /* [retval][out] */ AcDimPrecision *Distance) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltTolerancePrecision( 
            /* [in] */ AcDimPrecision Distance) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltUnitsFormat( 
            /* [retval][out] */ AcDimUnits *Units) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltUnitsFormat( 
            /* [in] */ AcDimUnits Units) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltTextPrefix( 
            /* [retval][out] */ BSTR *prefix) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltTextPrefix( 
            /* [in] */ BSTR prefix) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltTextSuffix( 
            /* [retval][out] */ BSTR *prefix) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltTextSuffix( 
            /* [in] */ BSTR prefix) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineColor( 
            /* [retval][out] */ ACAD_COLOR *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineColor( 
            /* [in] */ ACAD_COLOR Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PrimaryUnitsPrecision( 
            /* [retval][out] */ AcDimPrecision *Prec) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PrimaryUnitsPrecision( 
            /* [in] */ AcDimPrecision Prec) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_FractionFormat( 
            /* [retval][out] */ AcDimFractionType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_FractionFormat( 
            /* [in] */ AcDimFractionType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LinearScaleFactor( 
            /* [retval][out] */ ACAD_NOUNITS *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LinearScaleFactor( 
            /* [in] */ ACAD_NOUNITS Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnitsFormat( 
            /* [retval][out] */ AcDimLUnits *format) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnitsFormat( 
            /* [in] */ AcDimLUnits format) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineWeight( 
            /* [retval][out] */ ACAD_LWEIGHT *lweight) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineWeight( 
            /* [in] */ ACAD_LWEIGHT lweight) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_RoundDistance( 
            /* [retval][out] */ double *Distance) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_RoundDistance( 
            /* [in] */ double Distance) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineOffset( 
            /* [retval][out] */ double *Offset) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineOffset( 
            /* [in] */ double Offset) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SuppressZeroInches( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToleranceSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToleranceSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToleranceSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToleranceSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ArrowheadSize( 
            /* [retval][out] */ double *size) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ArrowheadSize( 
            /* [in] */ double size) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Measurement( 
            /* [retval][out] */ double *bVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadDimOrdinateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadDimOrdinate * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadDimOrdinate * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadDimOrdinate * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadDimOrdinate * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadDimOrdinate * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadDimOrdinate * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadDimOrdinate * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadDimOrdinate * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadDimOrdinate * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadDimOrdinate * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadDimOrdinate * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadDimOrdinate * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadDimOrdinate * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadDimOrdinate * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadDimOrdinate * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadDimOrdinate * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadDimOrdinate * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadDimOrdinate * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadDimOrdinate * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadDimOrdinate * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadDimOrdinate * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadDimOrdinate * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IAcadDimOrdinate * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextPosition )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT *textPos);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextPosition )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT textPos);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextRotation )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextRotation )( 
            IAcadDimOrdinate * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextOverride )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ BSTR *bstrText);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextOverride )( 
            IAcadDimOrdinate * This,
            /* [in] */ BSTR bstrText);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IAcadDimOrdinate * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextColor )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextColor )( 
            IAcadDimOrdinate * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DecimalSeparator )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ BSTR *character);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DecimalSeparator )( 
            IAcadDimOrdinate * This,
            /* [in] */ BSTR character);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextGap )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ double *Offset);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextGap )( 
            IAcadDimOrdinate * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrefix )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ BSTR *prefix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrefix )( 
            IAcadDimOrdinate * This,
            /* [in] */ BSTR prefix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextSuffix )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ BSTR *suffix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextSuffix )( 
            IAcadDimOrdinate * This,
            /* [in] */ BSTR suffix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ ACAD_NOUNITS *factor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IAcadDimOrdinate * This,
            /* [in] */ ACAD_NOUNITS factor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalTextPosition )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ AcDimVerticalJustification *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalTextPosition )( 
            IAcadDimOrdinate * This,
            /* [in] */ AcDimVerticalJustification Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TolerancePrecision )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ AcDimPrecision *precision);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TolerancePrecision )( 
            IAcadDimOrdinate * This,
            /* [in] */ AcDimPrecision precision);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceHeightScale )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ ACAD_NOUNITS *scale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceHeightScale )( 
            IAcadDimOrdinate * This,
            /* [in] */ ACAD_NOUNITS scale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceLowerLimit )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ double *lower);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceLowerLimit )( 
            IAcadDimOrdinate * This,
            /* [in] */ double lower);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextMovement )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ AcDimTextMovement *Move);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextMovement )( 
            IAcadDimOrdinate * This,
            /* [in] */ AcDimTextMovement Move);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceDisplay )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ AcDimToleranceMethod *method);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceDisplay )( 
            IAcadDimOrdinate * This,
            /* [in] */ AcDimToleranceMethod method);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceJustification )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ AcDimToleranceJustify *method);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceJustification )( 
            IAcadDimOrdinate * This,
            /* [in] */ AcDimToleranceJustify method);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceUpperLimit )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ double *upper);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceUpperLimit )( 
            IAcadDimOrdinate * This,
            /* [in] */ double upper);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextStyle )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ BSTR *style);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextStyle )( 
            IAcadDimOrdinate * This,
            /* [in] */ BSTR style);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextHeight )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextHeight )( 
            IAcadDimOrdinate * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressLeadingZeros )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressLeadingZeros )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressTrailingZeros )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressTrailingZeros )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressLeadingZeros )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressLeadingZeros )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressTrailingZeros )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressTrailingZeros )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnits )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *bAlternate);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnits )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL bAlternate);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsPrecision )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ AcDimPrecision *precision);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsPrecision )( 
            IAcadDimOrdinate * This,
            /* [in] */ AcDimPrecision precision);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsScale )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ ACAD_NOUNITS *scale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsScale )( 
            IAcadDimOrdinate * This,
            /* [in] */ ACAD_NOUNITS scale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltRoundDistance )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ double *Distance);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltRoundDistance )( 
            IAcadDimOrdinate * This,
            /* [in] */ double Distance);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltTolerancePrecision )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ AcDimPrecision *Distance);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltTolerancePrecision )( 
            IAcadDimOrdinate * This,
            /* [in] */ AcDimPrecision Distance);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsFormat )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ AcDimUnits *Units);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsFormat )( 
            IAcadDimOrdinate * This,
            /* [in] */ AcDimUnits Units);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltTextPrefix )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ BSTR *prefix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltTextPrefix )( 
            IAcadDimOrdinate * This,
            /* [in] */ BSTR prefix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltTextSuffix )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ BSTR *prefix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltTextSuffix )( 
            IAcadDimOrdinate * This,
            /* [in] */ BSTR prefix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineColor )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ ACAD_COLOR *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineColor )( 
            IAcadDimOrdinate * This,
            /* [in] */ ACAD_COLOR Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PrimaryUnitsPrecision )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ AcDimPrecision *Prec);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PrimaryUnitsPrecision )( 
            IAcadDimOrdinate * This,
            /* [in] */ AcDimPrecision Prec);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FractionFormat )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ AcDimFractionType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FractionFormat )( 
            IAcadDimOrdinate * This,
            /* [in] */ AcDimFractionType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinearScaleFactor )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ ACAD_NOUNITS *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinearScaleFactor )( 
            IAcadDimOrdinate * This,
            /* [in] */ ACAD_NOUNITS Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnitsFormat )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ AcDimLUnits *format);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnitsFormat )( 
            IAcadDimOrdinate * This,
            /* [in] */ AcDimLUnits format);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineWeight )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ ACAD_LWEIGHT *lweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineWeight )( 
            IAcadDimOrdinate * This,
            /* [in] */ ACAD_LWEIGHT lweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RoundDistance )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ double *Distance);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RoundDistance )( 
            IAcadDimOrdinate * This,
            /* [in] */ double Distance);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineOffset )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ double *Offset);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineOffset )( 
            IAcadDimOrdinate * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressLeadingZeros )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressLeadingZeros )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressTrailingZeros )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressTrailingZeros )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressZeroFeet )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressZeroFeet )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressZeroInches )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressZeroInches )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressLeadingZeros )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressLeadingZeros )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressTrailingZeros )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressTrailingZeros )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressZeroFeet )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressZeroFeet )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressZeroInches )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressZeroInches )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressZeroFeet )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressZeroFeet )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressZeroInches )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressZeroInches )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroFeet )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroFeet )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroInches )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroInches )( 
            IAcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadSize )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ double *size);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadSize )( 
            IAcadDimOrdinate * This,
            /* [in] */ double size);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Measurement )( 
            IAcadDimOrdinate * This,
            /* [retval][out] */ double *bVal);
        
        END_INTERFACE
    } IAcadDimOrdinateVtbl;

    interface IAcadDimOrdinate
    {
        CONST_VTBL struct IAcadDimOrdinateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadDimOrdinate_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadDimOrdinate_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadDimOrdinate_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadDimOrdinate_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadDimOrdinate_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadDimOrdinate_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadDimOrdinate_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadDimOrdinate_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadDimOrdinate_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadDimOrdinate_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadDimOrdinate_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadDimOrdinate_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadDimOrdinate_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadDimOrdinate_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadDimOrdinate_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadDimOrdinate_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadDimOrdinate_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadDimOrdinate_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadDimOrdinate_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadDimOrdinate_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadDimOrdinate_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadDimOrdinate_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadDimOrdinate_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadDimOrdinate_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadDimOrdinate_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadDimOrdinate_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadDimOrdinate_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadDimOrdinate_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadDimOrdinate_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadDimOrdinate_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadDimOrdinate_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadDimOrdinate_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadDimOrdinate_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadDimOrdinate_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadDimOrdinate_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadDimOrdinate_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadDimOrdinate_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadDimOrdinate_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadDimOrdinate_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadDimOrdinate_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadDimOrdinate_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadDimOrdinate_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadDimOrdinate_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadDimOrdinate_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadDimOrdinate_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadDimOrdinate_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadDimOrdinate_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadDimOrdinate_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadDimOrdinate_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadDimOrdinate_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadDimOrdinate_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadDimOrdinate_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadDimOrdinate_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadDimOrdinate_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadDimOrdinate_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadDimOrdinate_get_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> get_Rotation(This,rotAngle)

#define IAcadDimOrdinate_put_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> put_Rotation(This,rotAngle)

#define IAcadDimOrdinate_get_TextPosition(This,textPos)	\
    (This)->lpVtbl -> get_TextPosition(This,textPos)

#define IAcadDimOrdinate_put_TextPosition(This,textPos)	\
    (This)->lpVtbl -> put_TextPosition(This,textPos)

#define IAcadDimOrdinate_get_TextRotation(This,rotAngle)	\
    (This)->lpVtbl -> get_TextRotation(This,rotAngle)

#define IAcadDimOrdinate_put_TextRotation(This,rotAngle)	\
    (This)->lpVtbl -> put_TextRotation(This,rotAngle)

#define IAcadDimOrdinate_get_TextOverride(This,bstrText)	\
    (This)->lpVtbl -> get_TextOverride(This,bstrText)

#define IAcadDimOrdinate_put_TextOverride(This,bstrText)	\
    (This)->lpVtbl -> put_TextOverride(This,bstrText)

#define IAcadDimOrdinate_get_StyleName(This,bstrName)	\
    (This)->lpVtbl -> get_StyleName(This,bstrName)

#define IAcadDimOrdinate_put_StyleName(This,bstrName)	\
    (This)->lpVtbl -> put_StyleName(This,bstrName)

#define IAcadDimOrdinate_get_TextColor(This,color)	\
    (This)->lpVtbl -> get_TextColor(This,color)

#define IAcadDimOrdinate_put_TextColor(This,color)	\
    (This)->lpVtbl -> put_TextColor(This,color)

#define IAcadDimOrdinate_get_DecimalSeparator(This,character)	\
    (This)->lpVtbl -> get_DecimalSeparator(This,character)

#define IAcadDimOrdinate_put_DecimalSeparator(This,character)	\
    (This)->lpVtbl -> put_DecimalSeparator(This,character)

#define IAcadDimOrdinate_get_TextGap(This,Offset)	\
    (This)->lpVtbl -> get_TextGap(This,Offset)

#define IAcadDimOrdinate_put_TextGap(This,Offset)	\
    (This)->lpVtbl -> put_TextGap(This,Offset)

#define IAcadDimOrdinate_get_TextPrefix(This,prefix)	\
    (This)->lpVtbl -> get_TextPrefix(This,prefix)

#define IAcadDimOrdinate_put_TextPrefix(This,prefix)	\
    (This)->lpVtbl -> put_TextPrefix(This,prefix)

#define IAcadDimOrdinate_get_TextSuffix(This,suffix)	\
    (This)->lpVtbl -> get_TextSuffix(This,suffix)

#define IAcadDimOrdinate_put_TextSuffix(This,suffix)	\
    (This)->lpVtbl -> put_TextSuffix(This,suffix)

#define IAcadDimOrdinate_get_ScaleFactor(This,factor)	\
    (This)->lpVtbl -> get_ScaleFactor(This,factor)

#define IAcadDimOrdinate_put_ScaleFactor(This,factor)	\
    (This)->lpVtbl -> put_ScaleFactor(This,factor)

#define IAcadDimOrdinate_get_VerticalTextPosition(This,Type)	\
    (This)->lpVtbl -> get_VerticalTextPosition(This,Type)

#define IAcadDimOrdinate_put_VerticalTextPosition(This,Type)	\
    (This)->lpVtbl -> put_VerticalTextPosition(This,Type)

#define IAcadDimOrdinate_get_TolerancePrecision(This,precision)	\
    (This)->lpVtbl -> get_TolerancePrecision(This,precision)

#define IAcadDimOrdinate_put_TolerancePrecision(This,precision)	\
    (This)->lpVtbl -> put_TolerancePrecision(This,precision)

#define IAcadDimOrdinate_get_ToleranceHeightScale(This,scale)	\
    (This)->lpVtbl -> get_ToleranceHeightScale(This,scale)

#define IAcadDimOrdinate_put_ToleranceHeightScale(This,scale)	\
    (This)->lpVtbl -> put_ToleranceHeightScale(This,scale)

#define IAcadDimOrdinate_get_ToleranceLowerLimit(This,lower)	\
    (This)->lpVtbl -> get_ToleranceLowerLimit(This,lower)

#define IAcadDimOrdinate_put_ToleranceLowerLimit(This,lower)	\
    (This)->lpVtbl -> put_ToleranceLowerLimit(This,lower)

#define IAcadDimOrdinate_get_TextMovement(This,Move)	\
    (This)->lpVtbl -> get_TextMovement(This,Move)

#define IAcadDimOrdinate_put_TextMovement(This,Move)	\
    (This)->lpVtbl -> put_TextMovement(This,Move)

#define IAcadDimOrdinate_get_ToleranceDisplay(This,method)	\
    (This)->lpVtbl -> get_ToleranceDisplay(This,method)

#define IAcadDimOrdinate_put_ToleranceDisplay(This,method)	\
    (This)->lpVtbl -> put_ToleranceDisplay(This,method)

#define IAcadDimOrdinate_get_ToleranceJustification(This,method)	\
    (This)->lpVtbl -> get_ToleranceJustification(This,method)

#define IAcadDimOrdinate_put_ToleranceJustification(This,method)	\
    (This)->lpVtbl -> put_ToleranceJustification(This,method)

#define IAcadDimOrdinate_get_ToleranceUpperLimit(This,upper)	\
    (This)->lpVtbl -> get_ToleranceUpperLimit(This,upper)

#define IAcadDimOrdinate_put_ToleranceUpperLimit(This,upper)	\
    (This)->lpVtbl -> put_ToleranceUpperLimit(This,upper)

#define IAcadDimOrdinate_get_TextStyle(This,style)	\
    (This)->lpVtbl -> get_TextStyle(This,style)

#define IAcadDimOrdinate_put_TextStyle(This,style)	\
    (This)->lpVtbl -> put_TextStyle(This,style)

#define IAcadDimOrdinate_get_TextHeight(This,Height)	\
    (This)->lpVtbl -> get_TextHeight(This,Height)

#define IAcadDimOrdinate_put_TextHeight(This,Height)	\
    (This)->lpVtbl -> put_TextHeight(This,Height)

#define IAcadDimOrdinate_get_SuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_SuppressLeadingZeros(This,bVal)

#define IAcadDimOrdinate_put_SuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_SuppressLeadingZeros(This,bVal)

#define IAcadDimOrdinate_get_SuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_SuppressTrailingZeros(This,bVal)

#define IAcadDimOrdinate_put_SuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_SuppressTrailingZeros(This,bVal)

#define IAcadDimOrdinate_get_ToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimOrdinate_put_ToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimOrdinate_get_ToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressTrailingZeros(This,bVal)

#define IAcadDimOrdinate_put_ToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressTrailingZeros(This,bVal)


#define IAcadDimOrdinate_get_AltUnits(This,bAlternate)	\
    (This)->lpVtbl -> get_AltUnits(This,bAlternate)

#define IAcadDimOrdinate_put_AltUnits(This,bAlternate)	\
    (This)->lpVtbl -> put_AltUnits(This,bAlternate)

#define IAcadDimOrdinate_get_AltUnitsPrecision(This,precision)	\
    (This)->lpVtbl -> get_AltUnitsPrecision(This,precision)

#define IAcadDimOrdinate_put_AltUnitsPrecision(This,precision)	\
    (This)->lpVtbl -> put_AltUnitsPrecision(This,precision)

#define IAcadDimOrdinate_get_AltUnitsScale(This,scale)	\
    (This)->lpVtbl -> get_AltUnitsScale(This,scale)

#define IAcadDimOrdinate_put_AltUnitsScale(This,scale)	\
    (This)->lpVtbl -> put_AltUnitsScale(This,scale)

#define IAcadDimOrdinate_get_AltRoundDistance(This,Distance)	\
    (This)->lpVtbl -> get_AltRoundDistance(This,Distance)

#define IAcadDimOrdinate_put_AltRoundDistance(This,Distance)	\
    (This)->lpVtbl -> put_AltRoundDistance(This,Distance)

#define IAcadDimOrdinate_get_AltTolerancePrecision(This,Distance)	\
    (This)->lpVtbl -> get_AltTolerancePrecision(This,Distance)

#define IAcadDimOrdinate_put_AltTolerancePrecision(This,Distance)	\
    (This)->lpVtbl -> put_AltTolerancePrecision(This,Distance)

#define IAcadDimOrdinate_get_AltUnitsFormat(This,Units)	\
    (This)->lpVtbl -> get_AltUnitsFormat(This,Units)

#define IAcadDimOrdinate_put_AltUnitsFormat(This,Units)	\
    (This)->lpVtbl -> put_AltUnitsFormat(This,Units)

#define IAcadDimOrdinate_get_AltTextPrefix(This,prefix)	\
    (This)->lpVtbl -> get_AltTextPrefix(This,prefix)

#define IAcadDimOrdinate_put_AltTextPrefix(This,prefix)	\
    (This)->lpVtbl -> put_AltTextPrefix(This,prefix)

#define IAcadDimOrdinate_get_AltTextSuffix(This,prefix)	\
    (This)->lpVtbl -> get_AltTextSuffix(This,prefix)

#define IAcadDimOrdinate_put_AltTextSuffix(This,prefix)	\
    (This)->lpVtbl -> put_AltTextSuffix(This,prefix)

#define IAcadDimOrdinate_get_ExtensionLineColor(This,Type)	\
    (This)->lpVtbl -> get_ExtensionLineColor(This,Type)

#define IAcadDimOrdinate_put_ExtensionLineColor(This,Type)	\
    (This)->lpVtbl -> put_ExtensionLineColor(This,Type)

#define IAcadDimOrdinate_get_PrimaryUnitsPrecision(This,Prec)	\
    (This)->lpVtbl -> get_PrimaryUnitsPrecision(This,Prec)

#define IAcadDimOrdinate_put_PrimaryUnitsPrecision(This,Prec)	\
    (This)->lpVtbl -> put_PrimaryUnitsPrecision(This,Prec)

#define IAcadDimOrdinate_get_FractionFormat(This,Type)	\
    (This)->lpVtbl -> get_FractionFormat(This,Type)

#define IAcadDimOrdinate_put_FractionFormat(This,Type)	\
    (This)->lpVtbl -> put_FractionFormat(This,Type)

#define IAcadDimOrdinate_get_LinearScaleFactor(This,Type)	\
    (This)->lpVtbl -> get_LinearScaleFactor(This,Type)

#define IAcadDimOrdinate_put_LinearScaleFactor(This,Type)	\
    (This)->lpVtbl -> put_LinearScaleFactor(This,Type)

#define IAcadDimOrdinate_get_UnitsFormat(This,format)	\
    (This)->lpVtbl -> get_UnitsFormat(This,format)

#define IAcadDimOrdinate_put_UnitsFormat(This,format)	\
    (This)->lpVtbl -> put_UnitsFormat(This,format)

#define IAcadDimOrdinate_get_ExtensionLineWeight(This,lweight)	\
    (This)->lpVtbl -> get_ExtensionLineWeight(This,lweight)

#define IAcadDimOrdinate_put_ExtensionLineWeight(This,lweight)	\
    (This)->lpVtbl -> put_ExtensionLineWeight(This,lweight)

#define IAcadDimOrdinate_get_RoundDistance(This,Distance)	\
    (This)->lpVtbl -> get_RoundDistance(This,Distance)

#define IAcadDimOrdinate_put_RoundDistance(This,Distance)	\
    (This)->lpVtbl -> put_RoundDistance(This,Distance)

#define IAcadDimOrdinate_get_ExtensionLineOffset(This,Offset)	\
    (This)->lpVtbl -> get_ExtensionLineOffset(This,Offset)

#define IAcadDimOrdinate_put_ExtensionLineOffset(This,Offset)	\
    (This)->lpVtbl -> put_ExtensionLineOffset(This,Offset)

#define IAcadDimOrdinate_get_AltSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_AltSuppressLeadingZeros(This,bVal)

#define IAcadDimOrdinate_put_AltSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_AltSuppressLeadingZeros(This,bVal)

#define IAcadDimOrdinate_get_AltSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_AltSuppressTrailingZeros(This,bVal)

#define IAcadDimOrdinate_put_AltSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_AltSuppressTrailingZeros(This,bVal)

#define IAcadDimOrdinate_get_AltSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> get_AltSuppressZeroFeet(This,bVal)

#define IAcadDimOrdinate_put_AltSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> put_AltSuppressZeroFeet(This,bVal)

#define IAcadDimOrdinate_get_AltSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> get_AltSuppressZeroInches(This,bVal)

#define IAcadDimOrdinate_put_AltSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> put_AltSuppressZeroInches(This,bVal)

#define IAcadDimOrdinate_get_AltToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_AltToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimOrdinate_put_AltToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_AltToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimOrdinate_get_AltToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_AltToleranceSuppressTrailingZeros(This,bVal)

#define IAcadDimOrdinate_put_AltToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_AltToleranceSuppressTrailingZeros(This,bVal)

#define IAcadDimOrdinate_get_AltToleranceSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> get_AltToleranceSuppressZeroFeet(This,bVal)

#define IAcadDimOrdinate_put_AltToleranceSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> put_AltToleranceSuppressZeroFeet(This,bVal)

#define IAcadDimOrdinate_get_AltToleranceSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> get_AltToleranceSuppressZeroInches(This,bVal)

#define IAcadDimOrdinate_put_AltToleranceSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> put_AltToleranceSuppressZeroInches(This,bVal)

#define IAcadDimOrdinate_get_SuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> get_SuppressZeroFeet(This,bVal)

#define IAcadDimOrdinate_put_SuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> put_SuppressZeroFeet(This,bVal)

#define IAcadDimOrdinate_get_SuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> get_SuppressZeroInches(This,bVal)

#define IAcadDimOrdinate_put_SuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> put_SuppressZeroInches(This,bVal)

#define IAcadDimOrdinate_get_ToleranceSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressZeroFeet(This,bVal)

#define IAcadDimOrdinate_put_ToleranceSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressZeroFeet(This,bVal)

#define IAcadDimOrdinate_get_ToleranceSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressZeroInches(This,bVal)

#define IAcadDimOrdinate_put_ToleranceSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressZeroInches(This,bVal)

#define IAcadDimOrdinate_get_ArrowheadSize(This,size)	\
    (This)->lpVtbl -> get_ArrowheadSize(This,size)

#define IAcadDimOrdinate_put_ArrowheadSize(This,size)	\
    (This)->lpVtbl -> put_ArrowheadSize(This,size)

#define IAcadDimOrdinate_get_Measurement(This,bVal)	\
    (This)->lpVtbl -> get_Measurement(This,bVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_AltUnits_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ VARIANT_BOOL *bAlternate);


void __RPC_STUB IAcadDimOrdinate_get_AltUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_AltUnits_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ VARIANT_BOOL bAlternate);


void __RPC_STUB IAcadDimOrdinate_put_AltUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_AltUnitsPrecision_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ AcDimPrecision *precision);


void __RPC_STUB IAcadDimOrdinate_get_AltUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_AltUnitsPrecision_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ AcDimPrecision precision);


void __RPC_STUB IAcadDimOrdinate_put_AltUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_AltUnitsScale_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ ACAD_NOUNITS *scale);


void __RPC_STUB IAcadDimOrdinate_get_AltUnitsScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_AltUnitsScale_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ ACAD_NOUNITS scale);


void __RPC_STUB IAcadDimOrdinate_put_AltUnitsScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_AltRoundDistance_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ double *Distance);


void __RPC_STUB IAcadDimOrdinate_get_AltRoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_AltRoundDistance_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ double Distance);


void __RPC_STUB IAcadDimOrdinate_put_AltRoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_AltTolerancePrecision_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ AcDimPrecision *Distance);


void __RPC_STUB IAcadDimOrdinate_get_AltTolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_AltTolerancePrecision_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ AcDimPrecision Distance);


void __RPC_STUB IAcadDimOrdinate_put_AltTolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_AltUnitsFormat_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ AcDimUnits *Units);


void __RPC_STUB IAcadDimOrdinate_get_AltUnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_AltUnitsFormat_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ AcDimUnits Units);


void __RPC_STUB IAcadDimOrdinate_put_AltUnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_AltTextPrefix_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ BSTR *prefix);


void __RPC_STUB IAcadDimOrdinate_get_AltTextPrefix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_AltTextPrefix_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ BSTR prefix);


void __RPC_STUB IAcadDimOrdinate_put_AltTextPrefix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_AltTextSuffix_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ BSTR *prefix);


void __RPC_STUB IAcadDimOrdinate_get_AltTextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_AltTextSuffix_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ BSTR prefix);


void __RPC_STUB IAcadDimOrdinate_put_AltTextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_ExtensionLineColor_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ ACAD_COLOR *Type);


void __RPC_STUB IAcadDimOrdinate_get_ExtensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_ExtensionLineColor_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ ACAD_COLOR Type);


void __RPC_STUB IAcadDimOrdinate_put_ExtensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_PrimaryUnitsPrecision_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ AcDimPrecision *Prec);


void __RPC_STUB IAcadDimOrdinate_get_PrimaryUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_PrimaryUnitsPrecision_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ AcDimPrecision Prec);


void __RPC_STUB IAcadDimOrdinate_put_PrimaryUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_FractionFormat_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ AcDimFractionType *Type);


void __RPC_STUB IAcadDimOrdinate_get_FractionFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_FractionFormat_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ AcDimFractionType Type);


void __RPC_STUB IAcadDimOrdinate_put_FractionFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_LinearScaleFactor_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ ACAD_NOUNITS *Type);


void __RPC_STUB IAcadDimOrdinate_get_LinearScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_LinearScaleFactor_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ ACAD_NOUNITS Type);


void __RPC_STUB IAcadDimOrdinate_put_LinearScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_UnitsFormat_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ AcDimLUnits *format);


void __RPC_STUB IAcadDimOrdinate_get_UnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_UnitsFormat_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ AcDimLUnits format);


void __RPC_STUB IAcadDimOrdinate_put_UnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_ExtensionLineWeight_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ ACAD_LWEIGHT *lweight);


void __RPC_STUB IAcadDimOrdinate_get_ExtensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_ExtensionLineWeight_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ ACAD_LWEIGHT lweight);


void __RPC_STUB IAcadDimOrdinate_put_ExtensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_RoundDistance_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ double *Distance);


void __RPC_STUB IAcadDimOrdinate_get_RoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_RoundDistance_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ double Distance);


void __RPC_STUB IAcadDimOrdinate_put_RoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_ExtensionLineOffset_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ double *Offset);


void __RPC_STUB IAcadDimOrdinate_get_ExtensionLineOffset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_ExtensionLineOffset_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ double Offset);


void __RPC_STUB IAcadDimOrdinate_put_ExtensionLineOffset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_AltSuppressLeadingZeros_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimOrdinate_get_AltSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_AltSuppressLeadingZeros_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimOrdinate_put_AltSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_AltSuppressTrailingZeros_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimOrdinate_get_AltSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_AltSuppressTrailingZeros_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimOrdinate_put_AltSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_AltSuppressZeroFeet_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimOrdinate_get_AltSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_AltSuppressZeroFeet_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimOrdinate_put_AltSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_AltSuppressZeroInches_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimOrdinate_get_AltSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_AltSuppressZeroInches_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimOrdinate_put_AltSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_AltToleranceSuppressLeadingZeros_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimOrdinate_get_AltToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_AltToleranceSuppressLeadingZeros_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimOrdinate_put_AltToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_AltToleranceSuppressTrailingZeros_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimOrdinate_get_AltToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_AltToleranceSuppressTrailingZeros_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimOrdinate_put_AltToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_AltToleranceSuppressZeroFeet_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimOrdinate_get_AltToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_AltToleranceSuppressZeroFeet_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimOrdinate_put_AltToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_AltToleranceSuppressZeroInches_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimOrdinate_get_AltToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_AltToleranceSuppressZeroInches_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimOrdinate_put_AltToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_SuppressZeroFeet_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimOrdinate_get_SuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_SuppressZeroFeet_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimOrdinate_put_SuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_SuppressZeroInches_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimOrdinate_get_SuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_SuppressZeroInches_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimOrdinate_put_SuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_ToleranceSuppressZeroFeet_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimOrdinate_get_ToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_ToleranceSuppressZeroFeet_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimOrdinate_put_ToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_ToleranceSuppressZeroInches_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimOrdinate_get_ToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_ToleranceSuppressZeroInches_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimOrdinate_put_ToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_ArrowheadSize_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ double *size);


void __RPC_STUB IAcadDimOrdinate_get_ArrowheadSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_put_ArrowheadSize_Proxy( 
    IAcadDimOrdinate * This,
    /* [in] */ double size);


void __RPC_STUB IAcadDimOrdinate_put_ArrowheadSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimOrdinate_get_Measurement_Proxy( 
    IAcadDimOrdinate * This,
    /* [retval][out] */ double *bVal);


void __RPC_STUB IAcadDimOrdinate_get_Measurement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadDimOrdinate_INTERFACE_DEFINED__ */


#ifndef __IAcadDimRadial_INTERFACE_DEFINED__
#define __IAcadDimRadial_INTERFACE_DEFINED__

/* interface IAcadDimRadial */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadDimRadial;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1A67DD6D-EA28-4B50-A6B2-10E467668C87")
    IAcadDimRadial : public IAcadDimension
    {
    public:
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LeaderLength( 
            /* [in] */ double rhs) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltUnits( 
            /* [retval][out] */ VARIANT_BOOL *bAlternate) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltUnits( 
            /* [in] */ VARIANT_BOOL bAlternate) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltUnitsPrecision( 
            /* [retval][out] */ AcDimPrecision *precision) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltUnitsPrecision( 
            /* [in] */ AcDimPrecision precision) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltUnitsScale( 
            /* [retval][out] */ ACAD_NOUNITS *scale) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltUnitsScale( 
            /* [in] */ ACAD_NOUNITS scale) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltRoundDistance( 
            /* [retval][out] */ double *Distance) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltRoundDistance( 
            /* [in] */ double Distance) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltTolerancePrecision( 
            /* [retval][out] */ AcDimPrecision *Distance) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltTolerancePrecision( 
            /* [in] */ AcDimPrecision Distance) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltUnitsFormat( 
            /* [retval][out] */ AcDimUnits *Units) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltUnitsFormat( 
            /* [in] */ AcDimUnits Units) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltTextPrefix( 
            /* [retval][out] */ BSTR *prefix) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltTextPrefix( 
            /* [in] */ BSTR prefix) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltTextSuffix( 
            /* [retval][out] */ BSTR *prefix) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltTextSuffix( 
            /* [in] */ BSTR prefix) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_CenterType( 
            /* [retval][out] */ AcDimCenterType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_CenterType( 
            /* [in] */ AcDimCenterType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_CenterMarkSize( 
            /* [retval][out] */ double *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_CenterMarkSize( 
            /* [in] */ double Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimensionLineColor( 
            /* [retval][out] */ ACAD_COLOR *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimensionLineColor( 
            /* [in] */ ACAD_COLOR Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PrimaryUnitsPrecision( 
            /* [retval][out] */ AcDimPrecision *Prec) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PrimaryUnitsPrecision( 
            /* [in] */ AcDimPrecision Prec) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_FractionFormat( 
            /* [retval][out] */ AcDimFractionType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_FractionFormat( 
            /* [in] */ AcDimFractionType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Fit( 
            /* [retval][out] */ AcDimFit *fittype) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Fit( 
            /* [in] */ AcDimFit fittype) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LinearScaleFactor( 
            /* [retval][out] */ ACAD_NOUNITS *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LinearScaleFactor( 
            /* [in] */ ACAD_NOUNITS Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnitsFormat( 
            /* [retval][out] */ AcDimLUnits *format) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnitsFormat( 
            /* [in] */ AcDimLUnits format) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_RoundDistance( 
            /* [retval][out] */ double *Distance) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_RoundDistance( 
            /* [in] */ double Distance) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimLineSuppress( 
            /* [retval][out] */ VARIANT_BOOL *bSuppress) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimLineSuppress( 
            /* [in] */ VARIANT_BOOL bSuppress) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextInsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextInsideAlign( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextInside( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextInside( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ForceLineInside( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ForceLineInside( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextOutsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextOutsideAlign( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SuppressZeroInches( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToleranceSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToleranceSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToleranceSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *bVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToleranceSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimensionLineWeight( 
            /* [retval][out] */ ACAD_LWEIGHT *weight) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimensionLineWeight( 
            /* [in] */ ACAD_LWEIGHT weight) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ArrowheadSize( 
            /* [retval][out] */ double *size) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ArrowheadSize( 
            /* [in] */ double size) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ArrowheadType( 
            /* [retval][out] */ AcDimArrowheadType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ArrowheadType( 
            /* [in] */ AcDimArrowheadType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Measurement( 
            /* [retval][out] */ double *bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ArrowheadBlock( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ArrowheadBlock( 
            /* [in] */ BSTR BlockName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadDimRadialVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadDimRadial * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadDimRadial * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadDimRadial * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadDimRadial * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadDimRadial * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadDimRadial * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadDimRadial * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadDimRadial * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadDimRadial * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadDimRadial * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadDimRadial * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadDimRadial * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadDimRadial * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadDimRadial * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadDimRadial * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadDimRadial * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadDimRadial * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadDimRadial * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadDimRadial * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadDimRadial * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadDimRadial * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadDimRadial * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadDimRadial * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadDimRadial * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadDimRadial * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadDimRadial * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadDimRadial * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadDimRadial * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadDimRadial * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadDimRadial * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadDimRadial * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadDimRadial * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadDimRadial * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadDimRadial * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadDimRadial * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadDimRadial * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadDimRadial * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadDimRadial * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadDimRadial * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadDimRadial * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadDimRadial * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IAcadDimRadial * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IAcadDimRadial * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextPosition )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT *textPos);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextPosition )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT textPos);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextRotation )( 
            IAcadDimRadial * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextRotation )( 
            IAcadDimRadial * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextOverride )( 
            IAcadDimRadial * This,
            /* [retval][out] */ BSTR *bstrText);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextOverride )( 
            IAcadDimRadial * This,
            /* [in] */ BSTR bstrText);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IAcadDimRadial * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IAcadDimRadial * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextColor )( 
            IAcadDimRadial * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextColor )( 
            IAcadDimRadial * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DecimalSeparator )( 
            IAcadDimRadial * This,
            /* [retval][out] */ BSTR *character);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DecimalSeparator )( 
            IAcadDimRadial * This,
            /* [in] */ BSTR character);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextGap )( 
            IAcadDimRadial * This,
            /* [retval][out] */ double *Offset);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextGap )( 
            IAcadDimRadial * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrefix )( 
            IAcadDimRadial * This,
            /* [retval][out] */ BSTR *prefix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrefix )( 
            IAcadDimRadial * This,
            /* [in] */ BSTR prefix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextSuffix )( 
            IAcadDimRadial * This,
            /* [retval][out] */ BSTR *suffix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextSuffix )( 
            IAcadDimRadial * This,
            /* [in] */ BSTR suffix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IAcadDimRadial * This,
            /* [retval][out] */ ACAD_NOUNITS *factor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IAcadDimRadial * This,
            /* [in] */ ACAD_NOUNITS factor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalTextPosition )( 
            IAcadDimRadial * This,
            /* [retval][out] */ AcDimVerticalJustification *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalTextPosition )( 
            IAcadDimRadial * This,
            /* [in] */ AcDimVerticalJustification Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TolerancePrecision )( 
            IAcadDimRadial * This,
            /* [retval][out] */ AcDimPrecision *precision);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TolerancePrecision )( 
            IAcadDimRadial * This,
            /* [in] */ AcDimPrecision precision);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceHeightScale )( 
            IAcadDimRadial * This,
            /* [retval][out] */ ACAD_NOUNITS *scale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceHeightScale )( 
            IAcadDimRadial * This,
            /* [in] */ ACAD_NOUNITS scale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceLowerLimit )( 
            IAcadDimRadial * This,
            /* [retval][out] */ double *lower);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceLowerLimit )( 
            IAcadDimRadial * This,
            /* [in] */ double lower);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextMovement )( 
            IAcadDimRadial * This,
            /* [retval][out] */ AcDimTextMovement *Move);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextMovement )( 
            IAcadDimRadial * This,
            /* [in] */ AcDimTextMovement Move);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceDisplay )( 
            IAcadDimRadial * This,
            /* [retval][out] */ AcDimToleranceMethod *method);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceDisplay )( 
            IAcadDimRadial * This,
            /* [in] */ AcDimToleranceMethod method);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceJustification )( 
            IAcadDimRadial * This,
            /* [retval][out] */ AcDimToleranceJustify *method);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceJustification )( 
            IAcadDimRadial * This,
            /* [in] */ AcDimToleranceJustify method);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceUpperLimit )( 
            IAcadDimRadial * This,
            /* [retval][out] */ double *upper);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceUpperLimit )( 
            IAcadDimRadial * This,
            /* [in] */ double upper);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextStyle )( 
            IAcadDimRadial * This,
            /* [retval][out] */ BSTR *style);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextStyle )( 
            IAcadDimRadial * This,
            /* [in] */ BSTR style);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextHeight )( 
            IAcadDimRadial * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextHeight )( 
            IAcadDimRadial * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressLeadingZeros )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressLeadingZeros )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressTrailingZeros )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressTrailingZeros )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressLeadingZeros )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressLeadingZeros )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressTrailingZeros )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressTrailingZeros )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LeaderLength )( 
            IAcadDimRadial * This,
            /* [in] */ double rhs);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnits )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bAlternate);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnits )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bAlternate);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsPrecision )( 
            IAcadDimRadial * This,
            /* [retval][out] */ AcDimPrecision *precision);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsPrecision )( 
            IAcadDimRadial * This,
            /* [in] */ AcDimPrecision precision);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsScale )( 
            IAcadDimRadial * This,
            /* [retval][out] */ ACAD_NOUNITS *scale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsScale )( 
            IAcadDimRadial * This,
            /* [in] */ ACAD_NOUNITS scale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltRoundDistance )( 
            IAcadDimRadial * This,
            /* [retval][out] */ double *Distance);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltRoundDistance )( 
            IAcadDimRadial * This,
            /* [in] */ double Distance);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltTolerancePrecision )( 
            IAcadDimRadial * This,
            /* [retval][out] */ AcDimPrecision *Distance);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltTolerancePrecision )( 
            IAcadDimRadial * This,
            /* [in] */ AcDimPrecision Distance);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsFormat )( 
            IAcadDimRadial * This,
            /* [retval][out] */ AcDimUnits *Units);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsFormat )( 
            IAcadDimRadial * This,
            /* [in] */ AcDimUnits Units);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltTextPrefix )( 
            IAcadDimRadial * This,
            /* [retval][out] */ BSTR *prefix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltTextPrefix )( 
            IAcadDimRadial * This,
            /* [in] */ BSTR prefix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltTextSuffix )( 
            IAcadDimRadial * This,
            /* [retval][out] */ BSTR *prefix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltTextSuffix )( 
            IAcadDimRadial * This,
            /* [in] */ BSTR prefix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CenterType )( 
            IAcadDimRadial * This,
            /* [retval][out] */ AcDimCenterType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CenterType )( 
            IAcadDimRadial * This,
            /* [in] */ AcDimCenterType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CenterMarkSize )( 
            IAcadDimRadial * This,
            /* [retval][out] */ double *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CenterMarkSize )( 
            IAcadDimRadial * This,
            /* [in] */ double Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineColor )( 
            IAcadDimRadial * This,
            /* [retval][out] */ ACAD_COLOR *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineColor )( 
            IAcadDimRadial * This,
            /* [in] */ ACAD_COLOR Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PrimaryUnitsPrecision )( 
            IAcadDimRadial * This,
            /* [retval][out] */ AcDimPrecision *Prec);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PrimaryUnitsPrecision )( 
            IAcadDimRadial * This,
            /* [in] */ AcDimPrecision Prec);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FractionFormat )( 
            IAcadDimRadial * This,
            /* [retval][out] */ AcDimFractionType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FractionFormat )( 
            IAcadDimRadial * This,
            /* [in] */ AcDimFractionType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Fit )( 
            IAcadDimRadial * This,
            /* [retval][out] */ AcDimFit *fittype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Fit )( 
            IAcadDimRadial * This,
            /* [in] */ AcDimFit fittype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinearScaleFactor )( 
            IAcadDimRadial * This,
            /* [retval][out] */ ACAD_NOUNITS *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinearScaleFactor )( 
            IAcadDimRadial * This,
            /* [in] */ ACAD_NOUNITS Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnitsFormat )( 
            IAcadDimRadial * This,
            /* [retval][out] */ AcDimLUnits *format);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnitsFormat )( 
            IAcadDimRadial * This,
            /* [in] */ AcDimLUnits format);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RoundDistance )( 
            IAcadDimRadial * This,
            /* [retval][out] */ double *Distance);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RoundDistance )( 
            IAcadDimRadial * This,
            /* [in] */ double Distance);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimLineSuppress )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bSuppress);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimLineSuppress )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bSuppress);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextInsideAlign )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextInsideAlign )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextInside )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextInside )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForceLineInside )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForceLineInside )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextOutsideAlign )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextOutsideAlign )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressLeadingZeros )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressLeadingZeros )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressTrailingZeros )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressTrailingZeros )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressZeroFeet )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressZeroFeet )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressZeroInches )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressZeroInches )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressLeadingZeros )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressLeadingZeros )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressTrailingZeros )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressTrailingZeros )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressZeroFeet )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressZeroFeet )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressZeroInches )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressZeroInches )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressZeroFeet )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressZeroFeet )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressZeroInches )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressZeroInches )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroFeet )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroFeet )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroInches )( 
            IAcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroInches )( 
            IAcadDimRadial * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineWeight )( 
            IAcadDimRadial * This,
            /* [retval][out] */ ACAD_LWEIGHT *weight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineWeight )( 
            IAcadDimRadial * This,
            /* [in] */ ACAD_LWEIGHT weight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadSize )( 
            IAcadDimRadial * This,
            /* [retval][out] */ double *size);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadSize )( 
            IAcadDimRadial * This,
            /* [in] */ double size);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadType )( 
            IAcadDimRadial * This,
            /* [retval][out] */ AcDimArrowheadType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadType )( 
            IAcadDimRadial * This,
            /* [in] */ AcDimArrowheadType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Measurement )( 
            IAcadDimRadial * This,
            /* [retval][out] */ double *bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadBlock )( 
            IAcadDimRadial * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadBlock )( 
            IAcadDimRadial * This,
            /* [in] */ BSTR BlockName);
        
        END_INTERFACE
    } IAcadDimRadialVtbl;

    interface IAcadDimRadial
    {
        CONST_VTBL struct IAcadDimRadialVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadDimRadial_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadDimRadial_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadDimRadial_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadDimRadial_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadDimRadial_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadDimRadial_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadDimRadial_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadDimRadial_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadDimRadial_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadDimRadial_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadDimRadial_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadDimRadial_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadDimRadial_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadDimRadial_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadDimRadial_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadDimRadial_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadDimRadial_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadDimRadial_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadDimRadial_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadDimRadial_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadDimRadial_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadDimRadial_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadDimRadial_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadDimRadial_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadDimRadial_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadDimRadial_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadDimRadial_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadDimRadial_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadDimRadial_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadDimRadial_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadDimRadial_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadDimRadial_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadDimRadial_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadDimRadial_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadDimRadial_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadDimRadial_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadDimRadial_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadDimRadial_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadDimRadial_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadDimRadial_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadDimRadial_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadDimRadial_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadDimRadial_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadDimRadial_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadDimRadial_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadDimRadial_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadDimRadial_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadDimRadial_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadDimRadial_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadDimRadial_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadDimRadial_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadDimRadial_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadDimRadial_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadDimRadial_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadDimRadial_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadDimRadial_get_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> get_Rotation(This,rotAngle)

#define IAcadDimRadial_put_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> put_Rotation(This,rotAngle)

#define IAcadDimRadial_get_TextPosition(This,textPos)	\
    (This)->lpVtbl -> get_TextPosition(This,textPos)

#define IAcadDimRadial_put_TextPosition(This,textPos)	\
    (This)->lpVtbl -> put_TextPosition(This,textPos)

#define IAcadDimRadial_get_TextRotation(This,rotAngle)	\
    (This)->lpVtbl -> get_TextRotation(This,rotAngle)

#define IAcadDimRadial_put_TextRotation(This,rotAngle)	\
    (This)->lpVtbl -> put_TextRotation(This,rotAngle)

#define IAcadDimRadial_get_TextOverride(This,bstrText)	\
    (This)->lpVtbl -> get_TextOverride(This,bstrText)

#define IAcadDimRadial_put_TextOverride(This,bstrText)	\
    (This)->lpVtbl -> put_TextOverride(This,bstrText)

#define IAcadDimRadial_get_StyleName(This,bstrName)	\
    (This)->lpVtbl -> get_StyleName(This,bstrName)

#define IAcadDimRadial_put_StyleName(This,bstrName)	\
    (This)->lpVtbl -> put_StyleName(This,bstrName)

#define IAcadDimRadial_get_TextColor(This,color)	\
    (This)->lpVtbl -> get_TextColor(This,color)

#define IAcadDimRadial_put_TextColor(This,color)	\
    (This)->lpVtbl -> put_TextColor(This,color)

#define IAcadDimRadial_get_DecimalSeparator(This,character)	\
    (This)->lpVtbl -> get_DecimalSeparator(This,character)

#define IAcadDimRadial_put_DecimalSeparator(This,character)	\
    (This)->lpVtbl -> put_DecimalSeparator(This,character)

#define IAcadDimRadial_get_TextGap(This,Offset)	\
    (This)->lpVtbl -> get_TextGap(This,Offset)

#define IAcadDimRadial_put_TextGap(This,Offset)	\
    (This)->lpVtbl -> put_TextGap(This,Offset)

#define IAcadDimRadial_get_TextPrefix(This,prefix)	\
    (This)->lpVtbl -> get_TextPrefix(This,prefix)

#define IAcadDimRadial_put_TextPrefix(This,prefix)	\
    (This)->lpVtbl -> put_TextPrefix(This,prefix)

#define IAcadDimRadial_get_TextSuffix(This,suffix)	\
    (This)->lpVtbl -> get_TextSuffix(This,suffix)

#define IAcadDimRadial_put_TextSuffix(This,suffix)	\
    (This)->lpVtbl -> put_TextSuffix(This,suffix)

#define IAcadDimRadial_get_ScaleFactor(This,factor)	\
    (This)->lpVtbl -> get_ScaleFactor(This,factor)

#define IAcadDimRadial_put_ScaleFactor(This,factor)	\
    (This)->lpVtbl -> put_ScaleFactor(This,factor)

#define IAcadDimRadial_get_VerticalTextPosition(This,Type)	\
    (This)->lpVtbl -> get_VerticalTextPosition(This,Type)

#define IAcadDimRadial_put_VerticalTextPosition(This,Type)	\
    (This)->lpVtbl -> put_VerticalTextPosition(This,Type)

#define IAcadDimRadial_get_TolerancePrecision(This,precision)	\
    (This)->lpVtbl -> get_TolerancePrecision(This,precision)

#define IAcadDimRadial_put_TolerancePrecision(This,precision)	\
    (This)->lpVtbl -> put_TolerancePrecision(This,precision)

#define IAcadDimRadial_get_ToleranceHeightScale(This,scale)	\
    (This)->lpVtbl -> get_ToleranceHeightScale(This,scale)

#define IAcadDimRadial_put_ToleranceHeightScale(This,scale)	\
    (This)->lpVtbl -> put_ToleranceHeightScale(This,scale)

#define IAcadDimRadial_get_ToleranceLowerLimit(This,lower)	\
    (This)->lpVtbl -> get_ToleranceLowerLimit(This,lower)

#define IAcadDimRadial_put_ToleranceLowerLimit(This,lower)	\
    (This)->lpVtbl -> put_ToleranceLowerLimit(This,lower)

#define IAcadDimRadial_get_TextMovement(This,Move)	\
    (This)->lpVtbl -> get_TextMovement(This,Move)

#define IAcadDimRadial_put_TextMovement(This,Move)	\
    (This)->lpVtbl -> put_TextMovement(This,Move)

#define IAcadDimRadial_get_ToleranceDisplay(This,method)	\
    (This)->lpVtbl -> get_ToleranceDisplay(This,method)

#define IAcadDimRadial_put_ToleranceDisplay(This,method)	\
    (This)->lpVtbl -> put_ToleranceDisplay(This,method)

#define IAcadDimRadial_get_ToleranceJustification(This,method)	\
    (This)->lpVtbl -> get_ToleranceJustification(This,method)

#define IAcadDimRadial_put_ToleranceJustification(This,method)	\
    (This)->lpVtbl -> put_ToleranceJustification(This,method)

#define IAcadDimRadial_get_ToleranceUpperLimit(This,upper)	\
    (This)->lpVtbl -> get_ToleranceUpperLimit(This,upper)

#define IAcadDimRadial_put_ToleranceUpperLimit(This,upper)	\
    (This)->lpVtbl -> put_ToleranceUpperLimit(This,upper)

#define IAcadDimRadial_get_TextStyle(This,style)	\
    (This)->lpVtbl -> get_TextStyle(This,style)

#define IAcadDimRadial_put_TextStyle(This,style)	\
    (This)->lpVtbl -> put_TextStyle(This,style)

#define IAcadDimRadial_get_TextHeight(This,Height)	\
    (This)->lpVtbl -> get_TextHeight(This,Height)

#define IAcadDimRadial_put_TextHeight(This,Height)	\
    (This)->lpVtbl -> put_TextHeight(This,Height)

#define IAcadDimRadial_get_SuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_SuppressLeadingZeros(This,bVal)

#define IAcadDimRadial_put_SuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_SuppressLeadingZeros(This,bVal)

#define IAcadDimRadial_get_SuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_SuppressTrailingZeros(This,bVal)

#define IAcadDimRadial_put_SuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_SuppressTrailingZeros(This,bVal)

#define IAcadDimRadial_get_ToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimRadial_put_ToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimRadial_get_ToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressTrailingZeros(This,bVal)

#define IAcadDimRadial_put_ToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressTrailingZeros(This,bVal)


#define IAcadDimRadial_put_LeaderLength(This,rhs)	\
    (This)->lpVtbl -> put_LeaderLength(This,rhs)

#define IAcadDimRadial_get_AltUnits(This,bAlternate)	\
    (This)->lpVtbl -> get_AltUnits(This,bAlternate)

#define IAcadDimRadial_put_AltUnits(This,bAlternate)	\
    (This)->lpVtbl -> put_AltUnits(This,bAlternate)

#define IAcadDimRadial_get_AltUnitsPrecision(This,precision)	\
    (This)->lpVtbl -> get_AltUnitsPrecision(This,precision)

#define IAcadDimRadial_put_AltUnitsPrecision(This,precision)	\
    (This)->lpVtbl -> put_AltUnitsPrecision(This,precision)

#define IAcadDimRadial_get_AltUnitsScale(This,scale)	\
    (This)->lpVtbl -> get_AltUnitsScale(This,scale)

#define IAcadDimRadial_put_AltUnitsScale(This,scale)	\
    (This)->lpVtbl -> put_AltUnitsScale(This,scale)

#define IAcadDimRadial_get_AltRoundDistance(This,Distance)	\
    (This)->lpVtbl -> get_AltRoundDistance(This,Distance)

#define IAcadDimRadial_put_AltRoundDistance(This,Distance)	\
    (This)->lpVtbl -> put_AltRoundDistance(This,Distance)

#define IAcadDimRadial_get_AltTolerancePrecision(This,Distance)	\
    (This)->lpVtbl -> get_AltTolerancePrecision(This,Distance)

#define IAcadDimRadial_put_AltTolerancePrecision(This,Distance)	\
    (This)->lpVtbl -> put_AltTolerancePrecision(This,Distance)

#define IAcadDimRadial_get_AltUnitsFormat(This,Units)	\
    (This)->lpVtbl -> get_AltUnitsFormat(This,Units)

#define IAcadDimRadial_put_AltUnitsFormat(This,Units)	\
    (This)->lpVtbl -> put_AltUnitsFormat(This,Units)

#define IAcadDimRadial_get_AltTextPrefix(This,prefix)	\
    (This)->lpVtbl -> get_AltTextPrefix(This,prefix)

#define IAcadDimRadial_put_AltTextPrefix(This,prefix)	\
    (This)->lpVtbl -> put_AltTextPrefix(This,prefix)

#define IAcadDimRadial_get_AltTextSuffix(This,prefix)	\
    (This)->lpVtbl -> get_AltTextSuffix(This,prefix)

#define IAcadDimRadial_put_AltTextSuffix(This,prefix)	\
    (This)->lpVtbl -> put_AltTextSuffix(This,prefix)

#define IAcadDimRadial_get_CenterType(This,Type)	\
    (This)->lpVtbl -> get_CenterType(This,Type)

#define IAcadDimRadial_put_CenterType(This,Type)	\
    (This)->lpVtbl -> put_CenterType(This,Type)

#define IAcadDimRadial_get_CenterMarkSize(This,Type)	\
    (This)->lpVtbl -> get_CenterMarkSize(This,Type)

#define IAcadDimRadial_put_CenterMarkSize(This,Type)	\
    (This)->lpVtbl -> put_CenterMarkSize(This,Type)

#define IAcadDimRadial_get_DimensionLineColor(This,Type)	\
    (This)->lpVtbl -> get_DimensionLineColor(This,Type)

#define IAcadDimRadial_put_DimensionLineColor(This,Type)	\
    (This)->lpVtbl -> put_DimensionLineColor(This,Type)

#define IAcadDimRadial_get_PrimaryUnitsPrecision(This,Prec)	\
    (This)->lpVtbl -> get_PrimaryUnitsPrecision(This,Prec)

#define IAcadDimRadial_put_PrimaryUnitsPrecision(This,Prec)	\
    (This)->lpVtbl -> put_PrimaryUnitsPrecision(This,Prec)

#define IAcadDimRadial_get_FractionFormat(This,Type)	\
    (This)->lpVtbl -> get_FractionFormat(This,Type)

#define IAcadDimRadial_put_FractionFormat(This,Type)	\
    (This)->lpVtbl -> put_FractionFormat(This,Type)

#define IAcadDimRadial_get_Fit(This,fittype)	\
    (This)->lpVtbl -> get_Fit(This,fittype)

#define IAcadDimRadial_put_Fit(This,fittype)	\
    (This)->lpVtbl -> put_Fit(This,fittype)

#define IAcadDimRadial_get_LinearScaleFactor(This,Type)	\
    (This)->lpVtbl -> get_LinearScaleFactor(This,Type)

#define IAcadDimRadial_put_LinearScaleFactor(This,Type)	\
    (This)->lpVtbl -> put_LinearScaleFactor(This,Type)

#define IAcadDimRadial_get_UnitsFormat(This,format)	\
    (This)->lpVtbl -> get_UnitsFormat(This,format)

#define IAcadDimRadial_put_UnitsFormat(This,format)	\
    (This)->lpVtbl -> put_UnitsFormat(This,format)

#define IAcadDimRadial_get_RoundDistance(This,Distance)	\
    (This)->lpVtbl -> get_RoundDistance(This,Distance)

#define IAcadDimRadial_put_RoundDistance(This,Distance)	\
    (This)->lpVtbl -> put_RoundDistance(This,Distance)

#define IAcadDimRadial_get_DimLineSuppress(This,bSuppress)	\
    (This)->lpVtbl -> get_DimLineSuppress(This,bSuppress)

#define IAcadDimRadial_put_DimLineSuppress(This,bSuppress)	\
    (This)->lpVtbl -> put_DimLineSuppress(This,bSuppress)

#define IAcadDimRadial_get_TextInsideAlign(This,bInside)	\
    (This)->lpVtbl -> get_TextInsideAlign(This,bInside)

#define IAcadDimRadial_put_TextInsideAlign(This,bInside)	\
    (This)->lpVtbl -> put_TextInsideAlign(This,bInside)

#define IAcadDimRadial_get_TextInside(This,bInside)	\
    (This)->lpVtbl -> get_TextInside(This,bInside)

#define IAcadDimRadial_put_TextInside(This,bInside)	\
    (This)->lpVtbl -> put_TextInside(This,bInside)

#define IAcadDimRadial_get_ForceLineInside(This,bInside)	\
    (This)->lpVtbl -> get_ForceLineInside(This,bInside)

#define IAcadDimRadial_put_ForceLineInside(This,bInside)	\
    (This)->lpVtbl -> put_ForceLineInside(This,bInside)

#define IAcadDimRadial_get_TextOutsideAlign(This,bInside)	\
    (This)->lpVtbl -> get_TextOutsideAlign(This,bInside)

#define IAcadDimRadial_put_TextOutsideAlign(This,bInside)	\
    (This)->lpVtbl -> put_TextOutsideAlign(This,bInside)

#define IAcadDimRadial_get_AltSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_AltSuppressLeadingZeros(This,bVal)

#define IAcadDimRadial_put_AltSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_AltSuppressLeadingZeros(This,bVal)

#define IAcadDimRadial_get_AltSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_AltSuppressTrailingZeros(This,bVal)

#define IAcadDimRadial_put_AltSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_AltSuppressTrailingZeros(This,bVal)

#define IAcadDimRadial_get_AltSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> get_AltSuppressZeroFeet(This,bVal)

#define IAcadDimRadial_put_AltSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> put_AltSuppressZeroFeet(This,bVal)

#define IAcadDimRadial_get_AltSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> get_AltSuppressZeroInches(This,bVal)

#define IAcadDimRadial_put_AltSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> put_AltSuppressZeroInches(This,bVal)

#define IAcadDimRadial_get_AltToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_AltToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimRadial_put_AltToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_AltToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDimRadial_get_AltToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_AltToleranceSuppressTrailingZeros(This,bVal)

#define IAcadDimRadial_put_AltToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_AltToleranceSuppressTrailingZeros(This,bVal)

#define IAcadDimRadial_get_AltToleranceSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> get_AltToleranceSuppressZeroFeet(This,bVal)

#define IAcadDimRadial_put_AltToleranceSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> put_AltToleranceSuppressZeroFeet(This,bVal)

#define IAcadDimRadial_get_AltToleranceSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> get_AltToleranceSuppressZeroInches(This,bVal)

#define IAcadDimRadial_put_AltToleranceSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> put_AltToleranceSuppressZeroInches(This,bVal)

#define IAcadDimRadial_get_SuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> get_SuppressZeroFeet(This,bVal)

#define IAcadDimRadial_put_SuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> put_SuppressZeroFeet(This,bVal)

#define IAcadDimRadial_get_SuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> get_SuppressZeroInches(This,bVal)

#define IAcadDimRadial_put_SuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> put_SuppressZeroInches(This,bVal)

#define IAcadDimRadial_get_ToleranceSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressZeroFeet(This,bVal)

#define IAcadDimRadial_put_ToleranceSuppressZeroFeet(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressZeroFeet(This,bVal)

#define IAcadDimRadial_get_ToleranceSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressZeroInches(This,bVal)

#define IAcadDimRadial_put_ToleranceSuppressZeroInches(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressZeroInches(This,bVal)

#define IAcadDimRadial_get_DimensionLineWeight(This,weight)	\
    (This)->lpVtbl -> get_DimensionLineWeight(This,weight)

#define IAcadDimRadial_put_DimensionLineWeight(This,weight)	\
    (This)->lpVtbl -> put_DimensionLineWeight(This,weight)

#define IAcadDimRadial_get_ArrowheadSize(This,size)	\
    (This)->lpVtbl -> get_ArrowheadSize(This,size)

#define IAcadDimRadial_put_ArrowheadSize(This,size)	\
    (This)->lpVtbl -> put_ArrowheadSize(This,size)

#define IAcadDimRadial_get_ArrowheadType(This,Type)	\
    (This)->lpVtbl -> get_ArrowheadType(This,Type)

#define IAcadDimRadial_put_ArrowheadType(This,Type)	\
    (This)->lpVtbl -> put_ArrowheadType(This,Type)

#define IAcadDimRadial_get_Measurement(This,bVal)	\
    (This)->lpVtbl -> get_Measurement(This,bVal)

#define IAcadDimRadial_get_ArrowheadBlock(This,BlockName)	\
    (This)->lpVtbl -> get_ArrowheadBlock(This,BlockName)

#define IAcadDimRadial_put_ArrowheadBlock(This,BlockName)	\
    (This)->lpVtbl -> put_ArrowheadBlock(This,BlockName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_LeaderLength_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ double rhs);


void __RPC_STUB IAcadDimRadial_put_LeaderLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_AltUnits_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *bAlternate);


void __RPC_STUB IAcadDimRadial_get_AltUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_AltUnits_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ VARIANT_BOOL bAlternate);


void __RPC_STUB IAcadDimRadial_put_AltUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_AltUnitsPrecision_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ AcDimPrecision *precision);


void __RPC_STUB IAcadDimRadial_get_AltUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_AltUnitsPrecision_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ AcDimPrecision precision);


void __RPC_STUB IAcadDimRadial_put_AltUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_AltUnitsScale_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ ACAD_NOUNITS *scale);


void __RPC_STUB IAcadDimRadial_get_AltUnitsScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_AltUnitsScale_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ ACAD_NOUNITS scale);


void __RPC_STUB IAcadDimRadial_put_AltUnitsScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_AltRoundDistance_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ double *Distance);


void __RPC_STUB IAcadDimRadial_get_AltRoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_AltRoundDistance_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ double Distance);


void __RPC_STUB IAcadDimRadial_put_AltRoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_AltTolerancePrecision_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ AcDimPrecision *Distance);


void __RPC_STUB IAcadDimRadial_get_AltTolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_AltTolerancePrecision_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ AcDimPrecision Distance);


void __RPC_STUB IAcadDimRadial_put_AltTolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_AltUnitsFormat_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ AcDimUnits *Units);


void __RPC_STUB IAcadDimRadial_get_AltUnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_AltUnitsFormat_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ AcDimUnits Units);


void __RPC_STUB IAcadDimRadial_put_AltUnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_AltTextPrefix_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ BSTR *prefix);


void __RPC_STUB IAcadDimRadial_get_AltTextPrefix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_AltTextPrefix_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ BSTR prefix);


void __RPC_STUB IAcadDimRadial_put_AltTextPrefix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_AltTextSuffix_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ BSTR *prefix);


void __RPC_STUB IAcadDimRadial_get_AltTextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_AltTextSuffix_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ BSTR prefix);


void __RPC_STUB IAcadDimRadial_put_AltTextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_CenterType_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ AcDimCenterType *Type);


void __RPC_STUB IAcadDimRadial_get_CenterType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_CenterType_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ AcDimCenterType Type);


void __RPC_STUB IAcadDimRadial_put_CenterType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_CenterMarkSize_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ double *Type);


void __RPC_STUB IAcadDimRadial_get_CenterMarkSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_CenterMarkSize_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ double Type);


void __RPC_STUB IAcadDimRadial_put_CenterMarkSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_DimensionLineColor_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ ACAD_COLOR *Type);


void __RPC_STUB IAcadDimRadial_get_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_DimensionLineColor_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ ACAD_COLOR Type);


void __RPC_STUB IAcadDimRadial_put_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_PrimaryUnitsPrecision_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ AcDimPrecision *Prec);


void __RPC_STUB IAcadDimRadial_get_PrimaryUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_PrimaryUnitsPrecision_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ AcDimPrecision Prec);


void __RPC_STUB IAcadDimRadial_put_PrimaryUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_FractionFormat_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ AcDimFractionType *Type);


void __RPC_STUB IAcadDimRadial_get_FractionFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_FractionFormat_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ AcDimFractionType Type);


void __RPC_STUB IAcadDimRadial_put_FractionFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_Fit_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ AcDimFit *fittype);


void __RPC_STUB IAcadDimRadial_get_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_Fit_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ AcDimFit fittype);


void __RPC_STUB IAcadDimRadial_put_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_LinearScaleFactor_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ ACAD_NOUNITS *Type);


void __RPC_STUB IAcadDimRadial_get_LinearScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_LinearScaleFactor_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ ACAD_NOUNITS Type);


void __RPC_STUB IAcadDimRadial_put_LinearScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_UnitsFormat_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ AcDimLUnits *format);


void __RPC_STUB IAcadDimRadial_get_UnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_UnitsFormat_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ AcDimLUnits format);


void __RPC_STUB IAcadDimRadial_put_UnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_RoundDistance_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ double *Distance);


void __RPC_STUB IAcadDimRadial_get_RoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_RoundDistance_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ double Distance);


void __RPC_STUB IAcadDimRadial_put_RoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_DimLineSuppress_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *bSuppress);


void __RPC_STUB IAcadDimRadial_get_DimLineSuppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_DimLineSuppress_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ VARIANT_BOOL bSuppress);


void __RPC_STUB IAcadDimRadial_put_DimLineSuppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_TextInsideAlign_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimRadial_get_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_TextInsideAlign_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimRadial_put_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_TextInside_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimRadial_get_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_TextInside_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimRadial_put_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_ForceLineInside_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimRadial_get_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_ForceLineInside_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimRadial_put_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_TextOutsideAlign_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDimRadial_get_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_TextOutsideAlign_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDimRadial_put_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_AltSuppressLeadingZeros_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRadial_get_AltSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_AltSuppressLeadingZeros_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRadial_put_AltSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_AltSuppressTrailingZeros_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRadial_get_AltSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_AltSuppressTrailingZeros_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRadial_put_AltSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_AltSuppressZeroFeet_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRadial_get_AltSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_AltSuppressZeroFeet_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRadial_put_AltSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_AltSuppressZeroInches_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRadial_get_AltSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_AltSuppressZeroInches_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRadial_put_AltSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_AltToleranceSuppressLeadingZeros_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRadial_get_AltToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_AltToleranceSuppressLeadingZeros_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRadial_put_AltToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_AltToleranceSuppressTrailingZeros_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRadial_get_AltToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_AltToleranceSuppressTrailingZeros_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRadial_put_AltToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_AltToleranceSuppressZeroFeet_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRadial_get_AltToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_AltToleranceSuppressZeroFeet_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRadial_put_AltToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_AltToleranceSuppressZeroInches_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRadial_get_AltToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_AltToleranceSuppressZeroInches_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRadial_put_AltToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_SuppressZeroFeet_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRadial_get_SuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_SuppressZeroFeet_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRadial_put_SuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_SuppressZeroInches_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRadial_get_SuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_SuppressZeroInches_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRadial_put_SuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_ToleranceSuppressZeroFeet_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRadial_get_ToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_ToleranceSuppressZeroFeet_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRadial_put_ToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_ToleranceSuppressZeroInches_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *bVal);


void __RPC_STUB IAcadDimRadial_get_ToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_ToleranceSuppressZeroInches_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ VARIANT_BOOL bVal);


void __RPC_STUB IAcadDimRadial_put_ToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_DimensionLineWeight_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ ACAD_LWEIGHT *weight);


void __RPC_STUB IAcadDimRadial_get_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_DimensionLineWeight_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ ACAD_LWEIGHT weight);


void __RPC_STUB IAcadDimRadial_put_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_ArrowheadSize_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ double *size);


void __RPC_STUB IAcadDimRadial_get_ArrowheadSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_ArrowheadSize_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ double size);


void __RPC_STUB IAcadDimRadial_put_ArrowheadSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_ArrowheadType_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ AcDimArrowheadType *Type);


void __RPC_STUB IAcadDimRadial_get_ArrowheadType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_ArrowheadType_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ AcDimArrowheadType Type);


void __RPC_STUB IAcadDimRadial_put_ArrowheadType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_Measurement_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ double *bVal);


void __RPC_STUB IAcadDimRadial_get_Measurement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_get_ArrowheadBlock_Proxy( 
    IAcadDimRadial * This,
    /* [retval][out] */ BSTR *BlockName);


void __RPC_STUB IAcadDimRadial_get_ArrowheadBlock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimRadial_put_ArrowheadBlock_Proxy( 
    IAcadDimRadial * This,
    /* [in] */ BSTR BlockName);


void __RPC_STUB IAcadDimRadial_put_ArrowheadBlock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadDimRadial_INTERFACE_DEFINED__ */


#ifndef __IAcadEllipse_INTERFACE_DEFINED__
#define __IAcadEllipse_INTERFACE_DEFINED__

/* interface IAcadEllipse */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadEllipse;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("227531A4-6450-4A43-8717-EF636FDAC1BE")
    IAcadEllipse : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [retval][out] */ VARIANT *StartPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Center( 
            /* [retval][out] */ VARIANT *Center) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Center( 
            /* [in] */ VARIANT Center) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
            /* [retval][out] */ VARIANT *EndPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_MajorRadius( 
            /* [retval][out] */ double *MajorRadius) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_MajorRadius( 
            /* [in] */ double MajorRadius) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_MinorRadius( 
            /* [retval][out] */ double *MinorRadius) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_MinorRadius( 
            /* [in] */ double MinorRadius) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_RadiusRatio( 
            /* [retval][out] */ double *RadiusRatio) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_RadiusRatio( 
            /* [in] */ double RadiusRatio) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartAngle( 
            /* [retval][out] */ ACAD_ANGLE *StartAngle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_StartAngle( 
            /* [in] */ ACAD_ANGLE StartAngle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndAngle( 
            /* [retval][out] */ ACAD_ANGLE *EndAngle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_EndAngle( 
            /* [in] */ ACAD_ANGLE EndAngle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartParameter( 
            /* [retval][out] */ double *StartParameter) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_StartParameter( 
            /* [in] */ double StartParameter) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndParameter( 
            /* [retval][out] */ double *EndParameter) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_EndParameter( 
            /* [in] */ double EndParameter) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_MajorAxis( 
            /* [retval][out] */ VARIANT *MajorAxis) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_MajorAxis( 
            /* [in] */ VARIANT MajorAxis) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_MinorAxis( 
            /* [retval][out] */ VARIANT *MinorAxis) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *Normal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT Normal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Area( 
            /* [retval][out] */ double *Area) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Offset( 
            /* [in] */ double Distance,
            /* [retval][out] */ VARIANT *pOffsetCurves) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadEllipseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadEllipse * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadEllipse * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadEllipse * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadEllipse * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadEllipse * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadEllipse * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadEllipse * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadEllipse * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadEllipse * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadEllipse * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadEllipse * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadEllipse * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadEllipse * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadEllipse * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadEllipse * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadEllipse * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadEllipse * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadEllipse * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadEllipse * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadEllipse * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadEllipse * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadEllipse * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadEllipse * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadEllipse * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadEllipse * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadEllipse * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadEllipse * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadEllipse * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadEllipse * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadEllipse * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadEllipse * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadEllipse * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadEllipse * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadEllipse * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadEllipse * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadEllipse * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadEllipse * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadEllipse * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadEllipse * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadEllipse * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadEllipse * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadEllipse * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadEllipse * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadEllipse * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadEllipse * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadEllipse * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadEllipse * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadEllipse * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadEllipse * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadEllipse * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadEllipse * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadEllipse * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadEllipse * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            IAcadEllipse * This,
            /* [retval][out] */ VARIANT *StartPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Center )( 
            IAcadEllipse * This,
            /* [retval][out] */ VARIANT *Center);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Center )( 
            IAcadEllipse * This,
            /* [in] */ VARIANT Center);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            IAcadEllipse * This,
            /* [retval][out] */ VARIANT *EndPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MajorRadius )( 
            IAcadEllipse * This,
            /* [retval][out] */ double *MajorRadius);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MajorRadius )( 
            IAcadEllipse * This,
            /* [in] */ double MajorRadius);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MinorRadius )( 
            IAcadEllipse * This,
            /* [retval][out] */ double *MinorRadius);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MinorRadius )( 
            IAcadEllipse * This,
            /* [in] */ double MinorRadius);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RadiusRatio )( 
            IAcadEllipse * This,
            /* [retval][out] */ double *RadiusRatio);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RadiusRatio )( 
            IAcadEllipse * This,
            /* [in] */ double RadiusRatio);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartAngle )( 
            IAcadEllipse * This,
            /* [retval][out] */ ACAD_ANGLE *StartAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StartAngle )( 
            IAcadEllipse * This,
            /* [in] */ ACAD_ANGLE StartAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndAngle )( 
            IAcadEllipse * This,
            /* [retval][out] */ ACAD_ANGLE *EndAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EndAngle )( 
            IAcadEllipse * This,
            /* [in] */ ACAD_ANGLE EndAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartParameter )( 
            IAcadEllipse * This,
            /* [retval][out] */ double *StartParameter);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StartParameter )( 
            IAcadEllipse * This,
            /* [in] */ double StartParameter);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndParameter )( 
            IAcadEllipse * This,
            /* [retval][out] */ double *EndParameter);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EndParameter )( 
            IAcadEllipse * This,
            /* [in] */ double EndParameter);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MajorAxis )( 
            IAcadEllipse * This,
            /* [retval][out] */ VARIANT *MajorAxis);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MajorAxis )( 
            IAcadEllipse * This,
            /* [in] */ VARIANT MajorAxis);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MinorAxis )( 
            IAcadEllipse * This,
            /* [retval][out] */ VARIANT *MinorAxis);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadEllipse * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadEllipse * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Area )( 
            IAcadEllipse * This,
            /* [retval][out] */ double *Area);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Offset )( 
            IAcadEllipse * This,
            /* [in] */ double Distance,
            /* [retval][out] */ VARIANT *pOffsetCurves);
        
        END_INTERFACE
    } IAcadEllipseVtbl;

    interface IAcadEllipse
    {
        CONST_VTBL struct IAcadEllipseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadEllipse_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadEllipse_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadEllipse_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadEllipse_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadEllipse_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadEllipse_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadEllipse_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadEllipse_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadEllipse_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadEllipse_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadEllipse_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadEllipse_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadEllipse_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadEllipse_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadEllipse_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadEllipse_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadEllipse_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadEllipse_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadEllipse_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadEllipse_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadEllipse_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadEllipse_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadEllipse_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadEllipse_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadEllipse_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadEllipse_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadEllipse_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadEllipse_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadEllipse_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadEllipse_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadEllipse_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadEllipse_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadEllipse_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadEllipse_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadEllipse_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadEllipse_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadEllipse_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadEllipse_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadEllipse_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadEllipse_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadEllipse_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadEllipse_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadEllipse_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadEllipse_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadEllipse_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadEllipse_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadEllipse_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadEllipse_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadEllipse_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadEllipse_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadEllipse_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadEllipse_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadEllipse_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadEllipse_get_StartPoint(This,StartPoint)	\
    (This)->lpVtbl -> get_StartPoint(This,StartPoint)

#define IAcadEllipse_get_Center(This,Center)	\
    (This)->lpVtbl -> get_Center(This,Center)

#define IAcadEllipse_put_Center(This,Center)	\
    (This)->lpVtbl -> put_Center(This,Center)

#define IAcadEllipse_get_EndPoint(This,EndPoint)	\
    (This)->lpVtbl -> get_EndPoint(This,EndPoint)

#define IAcadEllipse_get_MajorRadius(This,MajorRadius)	\
    (This)->lpVtbl -> get_MajorRadius(This,MajorRadius)

#define IAcadEllipse_put_MajorRadius(This,MajorRadius)	\
    (This)->lpVtbl -> put_MajorRadius(This,MajorRadius)

#define IAcadEllipse_get_MinorRadius(This,MinorRadius)	\
    (This)->lpVtbl -> get_MinorRadius(This,MinorRadius)

#define IAcadEllipse_put_MinorRadius(This,MinorRadius)	\
    (This)->lpVtbl -> put_MinorRadius(This,MinorRadius)

#define IAcadEllipse_get_RadiusRatio(This,RadiusRatio)	\
    (This)->lpVtbl -> get_RadiusRatio(This,RadiusRatio)

#define IAcadEllipse_put_RadiusRatio(This,RadiusRatio)	\
    (This)->lpVtbl -> put_RadiusRatio(This,RadiusRatio)

#define IAcadEllipse_get_StartAngle(This,StartAngle)	\
    (This)->lpVtbl -> get_StartAngle(This,StartAngle)

#define IAcadEllipse_put_StartAngle(This,StartAngle)	\
    (This)->lpVtbl -> put_StartAngle(This,StartAngle)

#define IAcadEllipse_get_EndAngle(This,EndAngle)	\
    (This)->lpVtbl -> get_EndAngle(This,EndAngle)

#define IAcadEllipse_put_EndAngle(This,EndAngle)	\
    (This)->lpVtbl -> put_EndAngle(This,EndAngle)

#define IAcadEllipse_get_StartParameter(This,StartParameter)	\
    (This)->lpVtbl -> get_StartParameter(This,StartParameter)

#define IAcadEllipse_put_StartParameter(This,StartParameter)	\
    (This)->lpVtbl -> put_StartParameter(This,StartParameter)

#define IAcadEllipse_get_EndParameter(This,EndParameter)	\
    (This)->lpVtbl -> get_EndParameter(This,EndParameter)

#define IAcadEllipse_put_EndParameter(This,EndParameter)	\
    (This)->lpVtbl -> put_EndParameter(This,EndParameter)

#define IAcadEllipse_get_MajorAxis(This,MajorAxis)	\
    (This)->lpVtbl -> get_MajorAxis(This,MajorAxis)

#define IAcadEllipse_put_MajorAxis(This,MajorAxis)	\
    (This)->lpVtbl -> put_MajorAxis(This,MajorAxis)

#define IAcadEllipse_get_MinorAxis(This,MinorAxis)	\
    (This)->lpVtbl -> get_MinorAxis(This,MinorAxis)

#define IAcadEllipse_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadEllipse_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadEllipse_get_Area(This,Area)	\
    (This)->lpVtbl -> get_Area(This,Area)

#define IAcadEllipse_Offset(This,Distance,pOffsetCurves)	\
    (This)->lpVtbl -> Offset(This,Distance,pOffsetCurves)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_get_StartPoint_Proxy( 
    IAcadEllipse * This,
    /* [retval][out] */ VARIANT *StartPoint);


void __RPC_STUB IAcadEllipse_get_StartPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_get_Center_Proxy( 
    IAcadEllipse * This,
    /* [retval][out] */ VARIANT *Center);


void __RPC_STUB IAcadEllipse_get_Center_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_put_Center_Proxy( 
    IAcadEllipse * This,
    /* [in] */ VARIANT Center);


void __RPC_STUB IAcadEllipse_put_Center_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_get_EndPoint_Proxy( 
    IAcadEllipse * This,
    /* [retval][out] */ VARIANT *EndPoint);


void __RPC_STUB IAcadEllipse_get_EndPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_get_MajorRadius_Proxy( 
    IAcadEllipse * This,
    /* [retval][out] */ double *MajorRadius);


void __RPC_STUB IAcadEllipse_get_MajorRadius_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_put_MajorRadius_Proxy( 
    IAcadEllipse * This,
    /* [in] */ double MajorRadius);


void __RPC_STUB IAcadEllipse_put_MajorRadius_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_get_MinorRadius_Proxy( 
    IAcadEllipse * This,
    /* [retval][out] */ double *MinorRadius);


void __RPC_STUB IAcadEllipse_get_MinorRadius_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_put_MinorRadius_Proxy( 
    IAcadEllipse * This,
    /* [in] */ double MinorRadius);


void __RPC_STUB IAcadEllipse_put_MinorRadius_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_get_RadiusRatio_Proxy( 
    IAcadEllipse * This,
    /* [retval][out] */ double *RadiusRatio);


void __RPC_STUB IAcadEllipse_get_RadiusRatio_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_put_RadiusRatio_Proxy( 
    IAcadEllipse * This,
    /* [in] */ double RadiusRatio);


void __RPC_STUB IAcadEllipse_put_RadiusRatio_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_get_StartAngle_Proxy( 
    IAcadEllipse * This,
    /* [retval][out] */ ACAD_ANGLE *StartAngle);


void __RPC_STUB IAcadEllipse_get_StartAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_put_StartAngle_Proxy( 
    IAcadEllipse * This,
    /* [in] */ ACAD_ANGLE StartAngle);


void __RPC_STUB IAcadEllipse_put_StartAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_get_EndAngle_Proxy( 
    IAcadEllipse * This,
    /* [retval][out] */ ACAD_ANGLE *EndAngle);


void __RPC_STUB IAcadEllipse_get_EndAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_put_EndAngle_Proxy( 
    IAcadEllipse * This,
    /* [in] */ ACAD_ANGLE EndAngle);


void __RPC_STUB IAcadEllipse_put_EndAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_get_StartParameter_Proxy( 
    IAcadEllipse * This,
    /* [retval][out] */ double *StartParameter);


void __RPC_STUB IAcadEllipse_get_StartParameter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_put_StartParameter_Proxy( 
    IAcadEllipse * This,
    /* [in] */ double StartParameter);


void __RPC_STUB IAcadEllipse_put_StartParameter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_get_EndParameter_Proxy( 
    IAcadEllipse * This,
    /* [retval][out] */ double *EndParameter);


void __RPC_STUB IAcadEllipse_get_EndParameter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_put_EndParameter_Proxy( 
    IAcadEllipse * This,
    /* [in] */ double EndParameter);


void __RPC_STUB IAcadEllipse_put_EndParameter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_get_MajorAxis_Proxy( 
    IAcadEllipse * This,
    /* [retval][out] */ VARIANT *MajorAxis);


void __RPC_STUB IAcadEllipse_get_MajorAxis_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_put_MajorAxis_Proxy( 
    IAcadEllipse * This,
    /* [in] */ VARIANT MajorAxis);


void __RPC_STUB IAcadEllipse_put_MajorAxis_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_get_MinorAxis_Proxy( 
    IAcadEllipse * This,
    /* [retval][out] */ VARIANT *MinorAxis);


void __RPC_STUB IAcadEllipse_get_MinorAxis_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_get_Normal_Proxy( 
    IAcadEllipse * This,
    /* [retval][out] */ VARIANT *Normal);


void __RPC_STUB IAcadEllipse_get_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_put_Normal_Proxy( 
    IAcadEllipse * This,
    /* [in] */ VARIANT Normal);


void __RPC_STUB IAcadEllipse_put_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_get_Area_Proxy( 
    IAcadEllipse * This,
    /* [retval][out] */ double *Area);


void __RPC_STUB IAcadEllipse_get_Area_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadEllipse_Offset_Proxy( 
    IAcadEllipse * This,
    /* [in] */ double Distance,
    /* [retval][out] */ VARIANT *pOffsetCurves);


void __RPC_STUB IAcadEllipse_Offset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadEllipse_INTERFACE_DEFINED__ */


#ifndef __IAcadLeader_INTERFACE_DEFINED__
#define __IAcadLeader_INTERFACE_DEFINED__

/* interface IAcadLeader */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadLeader;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F7426830-9601-411D-86EC-92D865368837")
    IAcadLeader : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *Coordinates) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT Coordinates) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *Normal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_StyleName( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_StyleName( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ AcLeaderType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ AcLeaderType Type) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Evaluate( void) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Coordinate( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Coordinate( 
            /* [in] */ int Index,
            /* [in] */ VARIANT pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Annotation( 
            /* [retval][out] */ IAcadEntity **pVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Annotation( 
            /* [in] */ IAcadEntity *pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ArrowheadSize( 
            /* [retval][out] */ double *size) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ArrowheadSize( 
            /* [in] */ double size) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ArrowheadType( 
            /* [retval][out] */ AcDimArrowheadType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ArrowheadType( 
            /* [in] */ AcDimArrowheadType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimensionLineColor( 
            /* [retval][out] */ ACAD_COLOR *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimensionLineColor( 
            /* [in] */ ACAD_COLOR Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimensionLineWeight( 
            /* [retval][out] */ ACAD_LWEIGHT *weight) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimensionLineWeight( 
            /* [in] */ ACAD_LWEIGHT weight) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ScaleFactor( 
            /* [retval][out] */ ACAD_NOUNITS *factor) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ScaleFactor( 
            /* [in] */ ACAD_NOUNITS factor) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_VerticalTextPosition( 
            /* [retval][out] */ AcDimVerticalJustification *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_VerticalTextPosition( 
            /* [in] */ AcDimVerticalJustification Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextGap( 
            /* [retval][out] */ double *Offset) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextGap( 
            /* [in] */ double Offset) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ArrowheadBlock( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ArrowheadBlock( 
            /* [in] */ BSTR BlockName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadLeaderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadLeader * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadLeader * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadLeader * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadLeader * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadLeader * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadLeader * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadLeader * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadLeader * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadLeader * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadLeader * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadLeader * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadLeader * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadLeader * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadLeader * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadLeader * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadLeader * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadLeader * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadLeader * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadLeader * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadLeader * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadLeader * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadLeader * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadLeader * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadLeader * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadLeader * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadLeader * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadLeader * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadLeader * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadLeader * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadLeader * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadLeader * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadLeader * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadLeader * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadLeader * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadLeader * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadLeader * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadLeader * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadLeader * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadLeader * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadLeader * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadLeader * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadLeader * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadLeader * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadLeader * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadLeader * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadLeader * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadLeader * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadLeader * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadLeader * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadLeader * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadLeader * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadLeader * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadLeader * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IAcadLeader * This,
            /* [retval][out] */ VARIANT *Coordinates);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IAcadLeader * This,
            /* [in] */ VARIANT Coordinates);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadLeader * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IAcadLeader * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IAcadLeader * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IAcadLeader * This,
            /* [retval][out] */ AcLeaderType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            IAcadLeader * This,
            /* [in] */ AcLeaderType Type);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Evaluate )( 
            IAcadLeader * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinate )( 
            IAcadLeader * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinate )( 
            IAcadLeader * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Annotation )( 
            IAcadLeader * This,
            /* [retval][out] */ IAcadEntity **pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Annotation )( 
            IAcadLeader * This,
            /* [in] */ IAcadEntity *pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadSize )( 
            IAcadLeader * This,
            /* [retval][out] */ double *size);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadSize )( 
            IAcadLeader * This,
            /* [in] */ double size);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadType )( 
            IAcadLeader * This,
            /* [retval][out] */ AcDimArrowheadType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadType )( 
            IAcadLeader * This,
            /* [in] */ AcDimArrowheadType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineColor )( 
            IAcadLeader * This,
            /* [retval][out] */ ACAD_COLOR *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineColor )( 
            IAcadLeader * This,
            /* [in] */ ACAD_COLOR Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineWeight )( 
            IAcadLeader * This,
            /* [retval][out] */ ACAD_LWEIGHT *weight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineWeight )( 
            IAcadLeader * This,
            /* [in] */ ACAD_LWEIGHT weight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IAcadLeader * This,
            /* [retval][out] */ ACAD_NOUNITS *factor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IAcadLeader * This,
            /* [in] */ ACAD_NOUNITS factor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalTextPosition )( 
            IAcadLeader * This,
            /* [retval][out] */ AcDimVerticalJustification *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalTextPosition )( 
            IAcadLeader * This,
            /* [in] */ AcDimVerticalJustification Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextGap )( 
            IAcadLeader * This,
            /* [retval][out] */ double *Offset);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextGap )( 
            IAcadLeader * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadBlock )( 
            IAcadLeader * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadBlock )( 
            IAcadLeader * This,
            /* [in] */ BSTR BlockName);
        
        END_INTERFACE
    } IAcadLeaderVtbl;

    interface IAcadLeader
    {
        CONST_VTBL struct IAcadLeaderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadLeader_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadLeader_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadLeader_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadLeader_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadLeader_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadLeader_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadLeader_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadLeader_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadLeader_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadLeader_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadLeader_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadLeader_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadLeader_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadLeader_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadLeader_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadLeader_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadLeader_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadLeader_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadLeader_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadLeader_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadLeader_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadLeader_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadLeader_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadLeader_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadLeader_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadLeader_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadLeader_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadLeader_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadLeader_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadLeader_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadLeader_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadLeader_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadLeader_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadLeader_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadLeader_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadLeader_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadLeader_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadLeader_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadLeader_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadLeader_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadLeader_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadLeader_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadLeader_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadLeader_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadLeader_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadLeader_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadLeader_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadLeader_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadLeader_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadLeader_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadLeader_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadLeader_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadLeader_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadLeader_get_Coordinates(This,Coordinates)	\
    (This)->lpVtbl -> get_Coordinates(This,Coordinates)

#define IAcadLeader_put_Coordinates(This,Coordinates)	\
    (This)->lpVtbl -> put_Coordinates(This,Coordinates)

#define IAcadLeader_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadLeader_get_StyleName(This,bstrName)	\
    (This)->lpVtbl -> get_StyleName(This,bstrName)

#define IAcadLeader_put_StyleName(This,bstrName)	\
    (This)->lpVtbl -> put_StyleName(This,bstrName)

#define IAcadLeader_get_Type(This,Type)	\
    (This)->lpVtbl -> get_Type(This,Type)

#define IAcadLeader_put_Type(This,Type)	\
    (This)->lpVtbl -> put_Type(This,Type)

#define IAcadLeader_Evaluate(This)	\
    (This)->lpVtbl -> Evaluate(This)

#define IAcadLeader_get_Coordinate(This,Index,pVal)	\
    (This)->lpVtbl -> get_Coordinate(This,Index,pVal)

#define IAcadLeader_put_Coordinate(This,Index,pVal)	\
    (This)->lpVtbl -> put_Coordinate(This,Index,pVal)

#define IAcadLeader_get_Annotation(This,pVal)	\
    (This)->lpVtbl -> get_Annotation(This,pVal)

#define IAcadLeader_put_Annotation(This,pVal)	\
    (This)->lpVtbl -> put_Annotation(This,pVal)

#define IAcadLeader_get_ArrowheadSize(This,size)	\
    (This)->lpVtbl -> get_ArrowheadSize(This,size)

#define IAcadLeader_put_ArrowheadSize(This,size)	\
    (This)->lpVtbl -> put_ArrowheadSize(This,size)

#define IAcadLeader_get_ArrowheadType(This,Type)	\
    (This)->lpVtbl -> get_ArrowheadType(This,Type)

#define IAcadLeader_put_ArrowheadType(This,Type)	\
    (This)->lpVtbl -> put_ArrowheadType(This,Type)

#define IAcadLeader_get_DimensionLineColor(This,Type)	\
    (This)->lpVtbl -> get_DimensionLineColor(This,Type)

#define IAcadLeader_put_DimensionLineColor(This,Type)	\
    (This)->lpVtbl -> put_DimensionLineColor(This,Type)

#define IAcadLeader_get_DimensionLineWeight(This,weight)	\
    (This)->lpVtbl -> get_DimensionLineWeight(This,weight)

#define IAcadLeader_put_DimensionLineWeight(This,weight)	\
    (This)->lpVtbl -> put_DimensionLineWeight(This,weight)

#define IAcadLeader_get_ScaleFactor(This,factor)	\
    (This)->lpVtbl -> get_ScaleFactor(This,factor)

#define IAcadLeader_put_ScaleFactor(This,factor)	\
    (This)->lpVtbl -> put_ScaleFactor(This,factor)

#define IAcadLeader_get_VerticalTextPosition(This,Type)	\
    (This)->lpVtbl -> get_VerticalTextPosition(This,Type)

#define IAcadLeader_put_VerticalTextPosition(This,Type)	\
    (This)->lpVtbl -> put_VerticalTextPosition(This,Type)

#define IAcadLeader_get_TextGap(This,Offset)	\
    (This)->lpVtbl -> get_TextGap(This,Offset)

#define IAcadLeader_put_TextGap(This,Offset)	\
    (This)->lpVtbl -> put_TextGap(This,Offset)

#define IAcadLeader_get_ArrowheadBlock(This,BlockName)	\
    (This)->lpVtbl -> get_ArrowheadBlock(This,BlockName)

#define IAcadLeader_put_ArrowheadBlock(This,BlockName)	\
    (This)->lpVtbl -> put_ArrowheadBlock(This,BlockName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_get_Coordinates_Proxy( 
    IAcadLeader * This,
    /* [retval][out] */ VARIANT *Coordinates);


void __RPC_STUB IAcadLeader_get_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_put_Coordinates_Proxy( 
    IAcadLeader * This,
    /* [in] */ VARIANT Coordinates);


void __RPC_STUB IAcadLeader_put_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_get_Normal_Proxy( 
    IAcadLeader * This,
    /* [retval][out] */ VARIANT *Normal);


void __RPC_STUB IAcadLeader_get_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_get_StyleName_Proxy( 
    IAcadLeader * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadLeader_get_StyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_put_StyleName_Proxy( 
    IAcadLeader * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadLeader_put_StyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_get_Type_Proxy( 
    IAcadLeader * This,
    /* [retval][out] */ AcLeaderType *Type);


void __RPC_STUB IAcadLeader_get_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_put_Type_Proxy( 
    IAcadLeader * This,
    /* [in] */ AcLeaderType Type);


void __RPC_STUB IAcadLeader_put_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_Evaluate_Proxy( 
    IAcadLeader * This);


void __RPC_STUB IAcadLeader_Evaluate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_get_Coordinate_Proxy( 
    IAcadLeader * This,
    /* [in] */ int Index,
    /* [retval][out] */ VARIANT *pVal);


void __RPC_STUB IAcadLeader_get_Coordinate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_put_Coordinate_Proxy( 
    IAcadLeader * This,
    /* [in] */ int Index,
    /* [in] */ VARIANT pVal);


void __RPC_STUB IAcadLeader_put_Coordinate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_get_Annotation_Proxy( 
    IAcadLeader * This,
    /* [retval][out] */ IAcadEntity **pVal);


void __RPC_STUB IAcadLeader_get_Annotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_put_Annotation_Proxy( 
    IAcadLeader * This,
    /* [in] */ IAcadEntity *pVal);


void __RPC_STUB IAcadLeader_put_Annotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_get_ArrowheadSize_Proxy( 
    IAcadLeader * This,
    /* [retval][out] */ double *size);


void __RPC_STUB IAcadLeader_get_ArrowheadSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_put_ArrowheadSize_Proxy( 
    IAcadLeader * This,
    /* [in] */ double size);


void __RPC_STUB IAcadLeader_put_ArrowheadSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_get_ArrowheadType_Proxy( 
    IAcadLeader * This,
    /* [retval][out] */ AcDimArrowheadType *Type);


void __RPC_STUB IAcadLeader_get_ArrowheadType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_put_ArrowheadType_Proxy( 
    IAcadLeader * This,
    /* [in] */ AcDimArrowheadType Type);


void __RPC_STUB IAcadLeader_put_ArrowheadType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_get_DimensionLineColor_Proxy( 
    IAcadLeader * This,
    /* [retval][out] */ ACAD_COLOR *Type);


void __RPC_STUB IAcadLeader_get_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_put_DimensionLineColor_Proxy( 
    IAcadLeader * This,
    /* [in] */ ACAD_COLOR Type);


void __RPC_STUB IAcadLeader_put_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_get_DimensionLineWeight_Proxy( 
    IAcadLeader * This,
    /* [retval][out] */ ACAD_LWEIGHT *weight);


void __RPC_STUB IAcadLeader_get_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_put_DimensionLineWeight_Proxy( 
    IAcadLeader * This,
    /* [in] */ ACAD_LWEIGHT weight);


void __RPC_STUB IAcadLeader_put_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_get_ScaleFactor_Proxy( 
    IAcadLeader * This,
    /* [retval][out] */ ACAD_NOUNITS *factor);


void __RPC_STUB IAcadLeader_get_ScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_put_ScaleFactor_Proxy( 
    IAcadLeader * This,
    /* [in] */ ACAD_NOUNITS factor);


void __RPC_STUB IAcadLeader_put_ScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_get_VerticalTextPosition_Proxy( 
    IAcadLeader * This,
    /* [retval][out] */ AcDimVerticalJustification *Type);


void __RPC_STUB IAcadLeader_get_VerticalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_put_VerticalTextPosition_Proxy( 
    IAcadLeader * This,
    /* [in] */ AcDimVerticalJustification Type);


void __RPC_STUB IAcadLeader_put_VerticalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_get_TextGap_Proxy( 
    IAcadLeader * This,
    /* [retval][out] */ double *Offset);


void __RPC_STUB IAcadLeader_get_TextGap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_put_TextGap_Proxy( 
    IAcadLeader * This,
    /* [in] */ double Offset);


void __RPC_STUB IAcadLeader_put_TextGap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_get_ArrowheadBlock_Proxy( 
    IAcadLeader * This,
    /* [retval][out] */ BSTR *BlockName);


void __RPC_STUB IAcadLeader_get_ArrowheadBlock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLeader_put_ArrowheadBlock_Proxy( 
    IAcadLeader * This,
    /* [in] */ BSTR BlockName);


void __RPC_STUB IAcadLeader_put_ArrowheadBlock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadLeader_INTERFACE_DEFINED__ */


#ifndef __IAcadMText_INTERFACE_DEFINED__
#define __IAcadMText_INTERFACE_DEFINED__

/* interface IAcadMText */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadMText;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BF56989B-A903-4BD1-BC12-619CCDD67B47")
    IAcadMText : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextString( 
            /* [retval][out] */ BSTR *bstrText) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextString( 
            /* [in] */ BSTR bstrText) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_StyleName( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_StyleName( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AttachmentPoint( 
            /* [retval][out] */ AcAttachmentPoint *attPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AttachmentPoint( 
            /* [in] */ AcAttachmentPoint attPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DrawingDirection( 
            /* [retval][out] */ AcDrawingDirection *drawDir) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DrawingDirection( 
            /* [in] */ AcDrawingDirection drawDir) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ double *Width) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ double Width) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *Height) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
            /* [retval][out] */ ACAD_ANGLE *rotAngle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
            /* [in] */ ACAD_ANGLE rotAngle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_InsertionPoint( 
            /* [retval][out] */ VARIANT *insPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_InsertionPoint( 
            /* [in] */ VARIANT insPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *Normal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT Normal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LineSpacingFactor( 
            /* [retval][out] */ double *factor) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LineSpacingFactor( 
            /* [in] */ double factor) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LineSpacingStyle( 
            /* [retval][out] */ AcLineSpacingStyle *style) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LineSpacingStyle( 
            /* [in] */ AcLineSpacingStyle style) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LineSpacingDistance( 
            /* [retval][out] */ double *Value) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LineSpacingDistance( 
            /* [in] */ double Value) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadMTextVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadMText * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadMText * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadMText * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadMText * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadMText * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadMText * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadMText * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadMText * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadMText * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadMText * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadMText * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadMText * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadMText * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadMText * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadMText * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadMText * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadMText * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadMText * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadMText * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadMText * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadMText * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadMText * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadMText * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadMText * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadMText * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadMText * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadMText * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadMText * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadMText * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadMText * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadMText * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadMText * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadMText * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadMText * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadMText * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadMText * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadMText * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadMText * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadMText * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadMText * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadMText * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadMText * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadMText * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadMText * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadMText * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadMText * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadMText * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadMText * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadMText * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadMText * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadMText * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadMText * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadMText * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextString )( 
            IAcadMText * This,
            /* [retval][out] */ BSTR *bstrText);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextString )( 
            IAcadMText * This,
            /* [in] */ BSTR bstrText);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IAcadMText * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IAcadMText * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AttachmentPoint )( 
            IAcadMText * This,
            /* [retval][out] */ AcAttachmentPoint *attPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AttachmentPoint )( 
            IAcadMText * This,
            /* [in] */ AcAttachmentPoint attPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DrawingDirection )( 
            IAcadMText * This,
            /* [retval][out] */ AcDrawingDirection *drawDir);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DrawingDirection )( 
            IAcadMText * This,
            /* [in] */ AcDrawingDirection drawDir);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IAcadMText * This,
            /* [retval][out] */ double *Width);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            IAcadMText * This,
            /* [in] */ double Width);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IAcadMText * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IAcadMText * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IAcadMText * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IAcadMText * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IAcadMText * This,
            /* [retval][out] */ VARIANT *insPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IAcadMText * This,
            /* [in] */ VARIANT insPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadMText * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadMText * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LineSpacingFactor )( 
            IAcadMText * This,
            /* [retval][out] */ double *factor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LineSpacingFactor )( 
            IAcadMText * This,
            /* [in] */ double factor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LineSpacingStyle )( 
            IAcadMText * This,
            /* [retval][out] */ AcLineSpacingStyle *style);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LineSpacingStyle )( 
            IAcadMText * This,
            /* [in] */ AcLineSpacingStyle style);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LineSpacingDistance )( 
            IAcadMText * This,
            /* [retval][out] */ double *Value);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LineSpacingDistance )( 
            IAcadMText * This,
            /* [in] */ double Value);
        
        END_INTERFACE
    } IAcadMTextVtbl;

    interface IAcadMText
    {
        CONST_VTBL struct IAcadMTextVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadMText_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadMText_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadMText_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadMText_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadMText_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadMText_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadMText_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadMText_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadMText_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadMText_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadMText_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadMText_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadMText_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadMText_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadMText_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadMText_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadMText_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadMText_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadMText_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadMText_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadMText_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadMText_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadMText_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadMText_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadMText_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadMText_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadMText_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadMText_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadMText_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadMText_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadMText_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadMText_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadMText_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadMText_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadMText_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadMText_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadMText_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadMText_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadMText_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadMText_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadMText_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadMText_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadMText_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadMText_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadMText_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadMText_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadMText_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadMText_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadMText_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadMText_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadMText_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadMText_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadMText_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadMText_get_TextString(This,bstrText)	\
    (This)->lpVtbl -> get_TextString(This,bstrText)

#define IAcadMText_put_TextString(This,bstrText)	\
    (This)->lpVtbl -> put_TextString(This,bstrText)

#define IAcadMText_get_StyleName(This,bstrName)	\
    (This)->lpVtbl -> get_StyleName(This,bstrName)

#define IAcadMText_put_StyleName(This,bstrName)	\
    (This)->lpVtbl -> put_StyleName(This,bstrName)

#define IAcadMText_get_AttachmentPoint(This,attPoint)	\
    (This)->lpVtbl -> get_AttachmentPoint(This,attPoint)

#define IAcadMText_put_AttachmentPoint(This,attPoint)	\
    (This)->lpVtbl -> put_AttachmentPoint(This,attPoint)

#define IAcadMText_get_DrawingDirection(This,drawDir)	\
    (This)->lpVtbl -> get_DrawingDirection(This,drawDir)

#define IAcadMText_put_DrawingDirection(This,drawDir)	\
    (This)->lpVtbl -> put_DrawingDirection(This,drawDir)

#define IAcadMText_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAcadMText_put_Width(This,Width)	\
    (This)->lpVtbl -> put_Width(This,Width)

#define IAcadMText_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAcadMText_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAcadMText_get_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> get_Rotation(This,rotAngle)

#define IAcadMText_put_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> put_Rotation(This,rotAngle)

#define IAcadMText_get_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> get_InsertionPoint(This,insPoint)

#define IAcadMText_put_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> put_InsertionPoint(This,insPoint)

#define IAcadMText_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadMText_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadMText_get_LineSpacingFactor(This,factor)	\
    (This)->lpVtbl -> get_LineSpacingFactor(This,factor)

#define IAcadMText_put_LineSpacingFactor(This,factor)	\
    (This)->lpVtbl -> put_LineSpacingFactor(This,factor)

#define IAcadMText_get_LineSpacingStyle(This,style)	\
    (This)->lpVtbl -> get_LineSpacingStyle(This,style)

#define IAcadMText_put_LineSpacingStyle(This,style)	\
    (This)->lpVtbl -> put_LineSpacingStyle(This,style)

#define IAcadMText_get_LineSpacingDistance(This,Value)	\
    (This)->lpVtbl -> get_LineSpacingDistance(This,Value)

#define IAcadMText_put_LineSpacingDistance(This,Value)	\
    (This)->lpVtbl -> put_LineSpacingDistance(This,Value)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_get_TextString_Proxy( 
    IAcadMText * This,
    /* [retval][out] */ BSTR *bstrText);


void __RPC_STUB IAcadMText_get_TextString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_put_TextString_Proxy( 
    IAcadMText * This,
    /* [in] */ BSTR bstrText);


void __RPC_STUB IAcadMText_put_TextString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_get_StyleName_Proxy( 
    IAcadMText * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadMText_get_StyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_put_StyleName_Proxy( 
    IAcadMText * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadMText_put_StyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_get_AttachmentPoint_Proxy( 
    IAcadMText * This,
    /* [retval][out] */ AcAttachmentPoint *attPoint);


void __RPC_STUB IAcadMText_get_AttachmentPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_put_AttachmentPoint_Proxy( 
    IAcadMText * This,
    /* [in] */ AcAttachmentPoint attPoint);


void __RPC_STUB IAcadMText_put_AttachmentPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_get_DrawingDirection_Proxy( 
    IAcadMText * This,
    /* [retval][out] */ AcDrawingDirection *drawDir);


void __RPC_STUB IAcadMText_get_DrawingDirection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_put_DrawingDirection_Proxy( 
    IAcadMText * This,
    /* [in] */ AcDrawingDirection drawDir);


void __RPC_STUB IAcadMText_put_DrawingDirection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_get_Width_Proxy( 
    IAcadMText * This,
    /* [retval][out] */ double *Width);


void __RPC_STUB IAcadMText_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_put_Width_Proxy( 
    IAcadMText * This,
    /* [in] */ double Width);


void __RPC_STUB IAcadMText_put_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_get_Height_Proxy( 
    IAcadMText * This,
    /* [retval][out] */ double *Height);


void __RPC_STUB IAcadMText_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_put_Height_Proxy( 
    IAcadMText * This,
    /* [in] */ double Height);


void __RPC_STUB IAcadMText_put_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_get_Rotation_Proxy( 
    IAcadMText * This,
    /* [retval][out] */ ACAD_ANGLE *rotAngle);


void __RPC_STUB IAcadMText_get_Rotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_put_Rotation_Proxy( 
    IAcadMText * This,
    /* [in] */ ACAD_ANGLE rotAngle);


void __RPC_STUB IAcadMText_put_Rotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_get_InsertionPoint_Proxy( 
    IAcadMText * This,
    /* [retval][out] */ VARIANT *insPoint);


void __RPC_STUB IAcadMText_get_InsertionPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_put_InsertionPoint_Proxy( 
    IAcadMText * This,
    /* [in] */ VARIANT insPoint);


void __RPC_STUB IAcadMText_put_InsertionPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_get_Normal_Proxy( 
    IAcadMText * This,
    /* [retval][out] */ VARIANT *Normal);


void __RPC_STUB IAcadMText_get_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_put_Normal_Proxy( 
    IAcadMText * This,
    /* [in] */ VARIANT Normal);


void __RPC_STUB IAcadMText_put_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_get_LineSpacingFactor_Proxy( 
    IAcadMText * This,
    /* [retval][out] */ double *factor);


void __RPC_STUB IAcadMText_get_LineSpacingFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_put_LineSpacingFactor_Proxy( 
    IAcadMText * This,
    /* [in] */ double factor);


void __RPC_STUB IAcadMText_put_LineSpacingFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_get_LineSpacingStyle_Proxy( 
    IAcadMText * This,
    /* [retval][out] */ AcLineSpacingStyle *style);


void __RPC_STUB IAcadMText_get_LineSpacingStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_put_LineSpacingStyle_Proxy( 
    IAcadMText * This,
    /* [in] */ AcLineSpacingStyle style);


void __RPC_STUB IAcadMText_put_LineSpacingStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_get_LineSpacingDistance_Proxy( 
    IAcadMText * This,
    /* [retval][out] */ double *Value);


void __RPC_STUB IAcadMText_get_LineSpacingDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadMText_put_LineSpacingDistance_Proxy( 
    IAcadMText * This,
    /* [in] */ double Value);


void __RPC_STUB IAcadMText_put_LineSpacingDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadMText_INTERFACE_DEFINED__ */


#ifndef __IAcadPoint_INTERFACE_DEFINED__
#define __IAcadPoint_INTERFACE_DEFINED__

/* interface IAcadPoint */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadPoint;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("35AF3AB5-755E-4AC9-8BAF-31B532870751")
    IAcadPoint : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *Coordinates) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT Coordinates) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *Normal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT Normal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *Thickness) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thickness) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadPointVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadPoint * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadPoint * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadPoint * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadPoint * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadPoint * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadPoint * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadPoint * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadPoint * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadPoint * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadPoint * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadPoint * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadPoint * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadPoint * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadPoint * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadPoint * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadPoint * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadPoint * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadPoint * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadPoint * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadPoint * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadPoint * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadPoint * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadPoint * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadPoint * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadPoint * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadPoint * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadPoint * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadPoint * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadPoint * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadPoint * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadPoint * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadPoint * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadPoint * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadPoint * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadPoint * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadPoint * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadPoint * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadPoint * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadPoint * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadPoint * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadPoint * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadPoint * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadPoint * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadPoint * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadPoint * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadPoint * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadPoint * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadPoint * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadPoint * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadPoint * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadPoint * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadPoint * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadPoint * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IAcadPoint * This,
            /* [retval][out] */ VARIANT *Coordinates);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IAcadPoint * This,
            /* [in] */ VARIANT Coordinates);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadPoint * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadPoint * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IAcadPoint * This,
            /* [retval][out] */ double *Thickness);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IAcadPoint * This,
            /* [in] */ double Thickness);
        
        END_INTERFACE
    } IAcadPointVtbl;

    interface IAcadPoint
    {
        CONST_VTBL struct IAcadPointVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadPoint_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadPoint_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadPoint_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadPoint_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadPoint_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadPoint_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadPoint_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadPoint_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadPoint_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadPoint_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadPoint_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadPoint_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadPoint_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadPoint_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadPoint_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadPoint_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadPoint_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadPoint_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadPoint_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadPoint_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadPoint_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadPoint_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadPoint_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadPoint_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadPoint_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadPoint_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadPoint_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadPoint_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadPoint_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadPoint_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadPoint_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadPoint_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadPoint_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadPoint_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadPoint_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadPoint_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadPoint_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadPoint_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadPoint_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadPoint_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadPoint_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadPoint_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadPoint_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadPoint_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadPoint_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadPoint_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadPoint_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadPoint_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadPoint_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadPoint_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadPoint_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadPoint_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadPoint_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadPoint_get_Coordinates(This,Coordinates)	\
    (This)->lpVtbl -> get_Coordinates(This,Coordinates)

#define IAcadPoint_put_Coordinates(This,Coordinates)	\
    (This)->lpVtbl -> put_Coordinates(This,Coordinates)

#define IAcadPoint_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadPoint_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadPoint_get_Thickness(This,Thickness)	\
    (This)->lpVtbl -> get_Thickness(This,Thickness)

#define IAcadPoint_put_Thickness(This,Thickness)	\
    (This)->lpVtbl -> put_Thickness(This,Thickness)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPoint_get_Coordinates_Proxy( 
    IAcadPoint * This,
    /* [retval][out] */ VARIANT *Coordinates);


void __RPC_STUB IAcadPoint_get_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPoint_put_Coordinates_Proxy( 
    IAcadPoint * This,
    /* [in] */ VARIANT Coordinates);


void __RPC_STUB IAcadPoint_put_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPoint_get_Normal_Proxy( 
    IAcadPoint * This,
    /* [retval][out] */ VARIANT *Normal);


void __RPC_STUB IAcadPoint_get_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPoint_put_Normal_Proxy( 
    IAcadPoint * This,
    /* [in] */ VARIANT Normal);


void __RPC_STUB IAcadPoint_put_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPoint_get_Thickness_Proxy( 
    IAcadPoint * This,
    /* [retval][out] */ double *Thickness);


void __RPC_STUB IAcadPoint_get_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPoint_put_Thickness_Proxy( 
    IAcadPoint * This,
    /* [in] */ double Thickness);


void __RPC_STUB IAcadPoint_put_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadPoint_INTERFACE_DEFINED__ */


#ifndef __IAcadLWPolyline_INTERFACE_DEFINED__
#define __IAcadLWPolyline_INTERFACE_DEFINED__

/* interface IAcadLWPolyline */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadLWPolyline;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DA06170C-DB48-4F07-A5FB-DF33F9D086E4")
    IAcadLWPolyline : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *Coordinates) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT Coordinates) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *Normal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT Normal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *Thickness) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thickness) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddVertex( 
            /* [in] */ int Index,
            /* [in] */ VARIANT vertex) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Explode( 
            /* [retval][out] */ VARIANT *pArrayObjs) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBulge( 
            /* [in] */ int Index,
            /* [retval][out] */ double *bulge) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetBulge( 
            /* [in] */ int Index,
            /* [in] */ double bulge) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetWidth( 
            /* [in] */ int Index,
            /* [out] */ double *StartWidth,
            /* [out] */ double *EndWidth) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetWidth( 
            /* [in] */ int Index,
            /* [in] */ double StartWidth,
            /* [in] */ double EndWidth) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConstantWidth( 
            /* [retval][out] */ double *Width) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ConstantWidth( 
            /* [in] */ double Width) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Offset( 
            /* [in] */ double Distance,
            /* [retval][out] */ VARIANT *pOffsetCurves) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Elevation( 
            /* [retval][out] */ double *Elevation) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Elevation( 
            /* [in] */ double Elevation) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Area( 
            /* [retval][out] */ double *Area) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Coordinate( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Coordinate( 
            /* [in] */ int Index,
            /* [in] */ VARIANT pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Closed( 
            /* [retval][out] */ VARIANT_BOOL *fClose) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Closed( 
            /* [in] */ VARIANT_BOOL fClose) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LinetypeGeneration( 
            /* [retval][out] */ VARIANT_BOOL *bLinetypeGen) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LinetypeGeneration( 
            /* [in] */ VARIANT_BOOL bLinetypeGen) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Length( 
            /* [retval][out] */ double *Length) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadLWPolylineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadLWPolyline * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadLWPolyline * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadLWPolyline * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadLWPolyline * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadLWPolyline * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadLWPolyline * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadLWPolyline * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadLWPolyline * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadLWPolyline * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadLWPolyline * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadLWPolyline * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadLWPolyline * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadLWPolyline * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadLWPolyline * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadLWPolyline * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadLWPolyline * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadLWPolyline * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadLWPolyline * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadLWPolyline * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadLWPolyline * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadLWPolyline * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadLWPolyline * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadLWPolyline * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadLWPolyline * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadLWPolyline * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadLWPolyline * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadLWPolyline * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadLWPolyline * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadLWPolyline * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadLWPolyline * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadLWPolyline * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadLWPolyline * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ VARIANT *Coordinates);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IAcadLWPolyline * This,
            /* [in] */ VARIANT Coordinates);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadLWPolyline * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ double *Thickness);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IAcadLWPolyline * This,
            /* [in] */ double Thickness);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddVertex )( 
            IAcadLWPolyline * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT vertex);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Explode )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBulge )( 
            IAcadLWPolyline * This,
            /* [in] */ int Index,
            /* [retval][out] */ double *bulge);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetBulge )( 
            IAcadLWPolyline * This,
            /* [in] */ int Index,
            /* [in] */ double bulge);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetWidth )( 
            IAcadLWPolyline * This,
            /* [in] */ int Index,
            /* [out] */ double *StartWidth,
            /* [out] */ double *EndWidth);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetWidth )( 
            IAcadLWPolyline * This,
            /* [in] */ int Index,
            /* [in] */ double StartWidth,
            /* [in] */ double EndWidth);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConstantWidth )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ double *Width);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ConstantWidth )( 
            IAcadLWPolyline * This,
            /* [in] */ double Width);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Offset )( 
            IAcadLWPolyline * This,
            /* [in] */ double Distance,
            /* [retval][out] */ VARIANT *pOffsetCurves);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Elevation )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ double *Elevation);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Elevation )( 
            IAcadLWPolyline * This,
            /* [in] */ double Elevation);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Area )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ double *Area);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinate )( 
            IAcadLWPolyline * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinate )( 
            IAcadLWPolyline * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Closed )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ VARIANT_BOOL *fClose);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Closed )( 
            IAcadLWPolyline * This,
            /* [in] */ VARIANT_BOOL fClose);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeGeneration )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ VARIANT_BOOL *bLinetypeGen);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeGeneration )( 
            IAcadLWPolyline * This,
            /* [in] */ VARIANT_BOOL bLinetypeGen);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Length )( 
            IAcadLWPolyline * This,
            /* [retval][out] */ double *Length);
        
        END_INTERFACE
    } IAcadLWPolylineVtbl;

    interface IAcadLWPolyline
    {
        CONST_VTBL struct IAcadLWPolylineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadLWPolyline_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadLWPolyline_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadLWPolyline_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadLWPolyline_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadLWPolyline_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadLWPolyline_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadLWPolyline_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadLWPolyline_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadLWPolyline_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadLWPolyline_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadLWPolyline_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadLWPolyline_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadLWPolyline_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadLWPolyline_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadLWPolyline_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadLWPolyline_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadLWPolyline_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadLWPolyline_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadLWPolyline_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadLWPolyline_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadLWPolyline_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadLWPolyline_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadLWPolyline_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadLWPolyline_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadLWPolyline_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadLWPolyline_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadLWPolyline_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadLWPolyline_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadLWPolyline_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadLWPolyline_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadLWPolyline_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadLWPolyline_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadLWPolyline_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadLWPolyline_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadLWPolyline_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadLWPolyline_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadLWPolyline_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadLWPolyline_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadLWPolyline_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadLWPolyline_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadLWPolyline_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadLWPolyline_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadLWPolyline_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadLWPolyline_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadLWPolyline_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadLWPolyline_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadLWPolyline_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadLWPolyline_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadLWPolyline_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadLWPolyline_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadLWPolyline_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadLWPolyline_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadLWPolyline_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadLWPolyline_get_Coordinates(This,Coordinates)	\
    (This)->lpVtbl -> get_Coordinates(This,Coordinates)

#define IAcadLWPolyline_put_Coordinates(This,Coordinates)	\
    (This)->lpVtbl -> put_Coordinates(This,Coordinates)

#define IAcadLWPolyline_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadLWPolyline_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadLWPolyline_get_Thickness(This,Thickness)	\
    (This)->lpVtbl -> get_Thickness(This,Thickness)

#define IAcadLWPolyline_put_Thickness(This,Thickness)	\
    (This)->lpVtbl -> put_Thickness(This,Thickness)

#define IAcadLWPolyline_AddVertex(This,Index,vertex)	\
    (This)->lpVtbl -> AddVertex(This,Index,vertex)

#define IAcadLWPolyline_Explode(This,pArrayObjs)	\
    (This)->lpVtbl -> Explode(This,pArrayObjs)

#define IAcadLWPolyline_GetBulge(This,Index,bulge)	\
    (This)->lpVtbl -> GetBulge(This,Index,bulge)

#define IAcadLWPolyline_SetBulge(This,Index,bulge)	\
    (This)->lpVtbl -> SetBulge(This,Index,bulge)

#define IAcadLWPolyline_GetWidth(This,Index,StartWidth,EndWidth)	\
    (This)->lpVtbl -> GetWidth(This,Index,StartWidth,EndWidth)

#define IAcadLWPolyline_SetWidth(This,Index,StartWidth,EndWidth)	\
    (This)->lpVtbl -> SetWidth(This,Index,StartWidth,EndWidth)

#define IAcadLWPolyline_get_ConstantWidth(This,Width)	\
    (This)->lpVtbl -> get_ConstantWidth(This,Width)

#define IAcadLWPolyline_put_ConstantWidth(This,Width)	\
    (This)->lpVtbl -> put_ConstantWidth(This,Width)

#define IAcadLWPolyline_Offset(This,Distance,pOffsetCurves)	\
    (This)->lpVtbl -> Offset(This,Distance,pOffsetCurves)

#define IAcadLWPolyline_get_Elevation(This,Elevation)	\
    (This)->lpVtbl -> get_Elevation(This,Elevation)

#define IAcadLWPolyline_put_Elevation(This,Elevation)	\
    (This)->lpVtbl -> put_Elevation(This,Elevation)

#define IAcadLWPolyline_get_Area(This,Area)	\
    (This)->lpVtbl -> get_Area(This,Area)

#define IAcadLWPolyline_get_Coordinate(This,Index,pVal)	\
    (This)->lpVtbl -> get_Coordinate(This,Index,pVal)

#define IAcadLWPolyline_put_Coordinate(This,Index,pVal)	\
    (This)->lpVtbl -> put_Coordinate(This,Index,pVal)

#define IAcadLWPolyline_get_Closed(This,fClose)	\
    (This)->lpVtbl -> get_Closed(This,fClose)

#define IAcadLWPolyline_put_Closed(This,fClose)	\
    (This)->lpVtbl -> put_Closed(This,fClose)

#define IAcadLWPolyline_get_LinetypeGeneration(This,bLinetypeGen)	\
    (This)->lpVtbl -> get_LinetypeGeneration(This,bLinetypeGen)

#define IAcadLWPolyline_put_LinetypeGeneration(This,bLinetypeGen)	\
    (This)->lpVtbl -> put_LinetypeGeneration(This,bLinetypeGen)

#define IAcadLWPolyline_get_Length(This,Length)	\
    (This)->lpVtbl -> get_Length(This,Length)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_get_Coordinates_Proxy( 
    IAcadLWPolyline * This,
    /* [retval][out] */ VARIANT *Coordinates);


void __RPC_STUB IAcadLWPolyline_get_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_put_Coordinates_Proxy( 
    IAcadLWPolyline * This,
    /* [in] */ VARIANT Coordinates);


void __RPC_STUB IAcadLWPolyline_put_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_get_Normal_Proxy( 
    IAcadLWPolyline * This,
    /* [retval][out] */ VARIANT *Normal);


void __RPC_STUB IAcadLWPolyline_get_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_put_Normal_Proxy( 
    IAcadLWPolyline * This,
    /* [in] */ VARIANT Normal);


void __RPC_STUB IAcadLWPolyline_put_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_get_Thickness_Proxy( 
    IAcadLWPolyline * This,
    /* [retval][out] */ double *Thickness);


void __RPC_STUB IAcadLWPolyline_get_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_put_Thickness_Proxy( 
    IAcadLWPolyline * This,
    /* [in] */ double Thickness);


void __RPC_STUB IAcadLWPolyline_put_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_AddVertex_Proxy( 
    IAcadLWPolyline * This,
    /* [in] */ int Index,
    /* [in] */ VARIANT vertex);


void __RPC_STUB IAcadLWPolyline_AddVertex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_Explode_Proxy( 
    IAcadLWPolyline * This,
    /* [retval][out] */ VARIANT *pArrayObjs);


void __RPC_STUB IAcadLWPolyline_Explode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_GetBulge_Proxy( 
    IAcadLWPolyline * This,
    /* [in] */ int Index,
    /* [retval][out] */ double *bulge);


void __RPC_STUB IAcadLWPolyline_GetBulge_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_SetBulge_Proxy( 
    IAcadLWPolyline * This,
    /* [in] */ int Index,
    /* [in] */ double bulge);


void __RPC_STUB IAcadLWPolyline_SetBulge_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_GetWidth_Proxy( 
    IAcadLWPolyline * This,
    /* [in] */ int Index,
    /* [out] */ double *StartWidth,
    /* [out] */ double *EndWidth);


void __RPC_STUB IAcadLWPolyline_GetWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_SetWidth_Proxy( 
    IAcadLWPolyline * This,
    /* [in] */ int Index,
    /* [in] */ double StartWidth,
    /* [in] */ double EndWidth);


void __RPC_STUB IAcadLWPolyline_SetWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_get_ConstantWidth_Proxy( 
    IAcadLWPolyline * This,
    /* [retval][out] */ double *Width);


void __RPC_STUB IAcadLWPolyline_get_ConstantWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_put_ConstantWidth_Proxy( 
    IAcadLWPolyline * This,
    /* [in] */ double Width);


void __RPC_STUB IAcadLWPolyline_put_ConstantWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_Offset_Proxy( 
    IAcadLWPolyline * This,
    /* [in] */ double Distance,
    /* [retval][out] */ VARIANT *pOffsetCurves);


void __RPC_STUB IAcadLWPolyline_Offset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_get_Elevation_Proxy( 
    IAcadLWPolyline * This,
    /* [retval][out] */ double *Elevation);


void __RPC_STUB IAcadLWPolyline_get_Elevation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_put_Elevation_Proxy( 
    IAcadLWPolyline * This,
    /* [in] */ double Elevation);


void __RPC_STUB IAcadLWPolyline_put_Elevation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_get_Area_Proxy( 
    IAcadLWPolyline * This,
    /* [retval][out] */ double *Area);


void __RPC_STUB IAcadLWPolyline_get_Area_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_get_Coordinate_Proxy( 
    IAcadLWPolyline * This,
    /* [in] */ int Index,
    /* [retval][out] */ VARIANT *pVal);


void __RPC_STUB IAcadLWPolyline_get_Coordinate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_put_Coordinate_Proxy( 
    IAcadLWPolyline * This,
    /* [in] */ int Index,
    /* [in] */ VARIANT pVal);


void __RPC_STUB IAcadLWPolyline_put_Coordinate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_get_Closed_Proxy( 
    IAcadLWPolyline * This,
    /* [retval][out] */ VARIANT_BOOL *fClose);


void __RPC_STUB IAcadLWPolyline_get_Closed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_put_Closed_Proxy( 
    IAcadLWPolyline * This,
    /* [in] */ VARIANT_BOOL fClose);


void __RPC_STUB IAcadLWPolyline_put_Closed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_get_LinetypeGeneration_Proxy( 
    IAcadLWPolyline * This,
    /* [retval][out] */ VARIANT_BOOL *bLinetypeGen);


void __RPC_STUB IAcadLWPolyline_get_LinetypeGeneration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_put_LinetypeGeneration_Proxy( 
    IAcadLWPolyline * This,
    /* [in] */ VARIANT_BOOL bLinetypeGen);


void __RPC_STUB IAcadLWPolyline_put_LinetypeGeneration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLWPolyline_get_Length_Proxy( 
    IAcadLWPolyline * This,
    /* [retval][out] */ double *Length);


void __RPC_STUB IAcadLWPolyline_get_Length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadLWPolyline_INTERFACE_DEFINED__ */


#ifndef __IAcadPolyline_INTERFACE_DEFINED__
#define __IAcadPolyline_INTERFACE_DEFINED__

/* interface IAcadPolyline */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadPolyline;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4D07B3DA-1D65-4D58-967A-E3A02E255EE0")
    IAcadPolyline : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *Coordinates) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT Coordinates) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *Normal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT Normal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *Thickness) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thickness) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AppendVertex( 
            /* [in] */ VARIANT vertex) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Explode( 
            /* [retval][out] */ VARIANT *pArrayObjs) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBulge( 
            /* [in] */ int Index,
            /* [retval][out] */ double *bulge) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetBulge( 
            /* [in] */ int Index,
            /* [in] */ double bulge) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetWidth( 
            /* [in] */ int Index,
            /* [out] */ double *StartWidth,
            double *EndWidth) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetWidth( 
            /* [in] */ int Index,
            /* [in] */ double StartWidth,
            double EndWidth) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConstantWidth( 
            /* [retval][out] */ double *Width) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ConstantWidth( 
            /* [in] */ double Width) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Offset( 
            /* [in] */ double Distance,
            /* [retval][out] */ VARIANT *pOffsetCurves) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Elevation( 
            /* [retval][out] */ double *Elevation) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Elevation( 
            /* [in] */ double Elevation) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ AcPolylineType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ AcPolylineType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Closed( 
            /* [retval][out] */ VARIANT_BOOL *fClose) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Closed( 
            /* [in] */ VARIANT_BOOL fClose) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LinetypeGeneration( 
            /* [retval][out] */ VARIANT_BOOL *bLinetypeGen) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LinetypeGeneration( 
            /* [in] */ VARIANT_BOOL bLinetypeGen) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Area( 
            /* [retval][out] */ double *Area) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Coordinate( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Coordinate( 
            /* [in] */ int Index,
            /* [in] */ VARIANT pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Length( 
            /* [retval][out] */ double *Length) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadPolylineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadPolyline * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadPolyline * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadPolyline * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadPolyline * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadPolyline * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadPolyline * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadPolyline * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadPolyline * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadPolyline * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadPolyline * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadPolyline * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadPolyline * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadPolyline * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadPolyline * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadPolyline * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadPolyline * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadPolyline * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadPolyline * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadPolyline * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadPolyline * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadPolyline * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadPolyline * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadPolyline * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadPolyline * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadPolyline * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadPolyline * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadPolyline * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadPolyline * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadPolyline * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadPolyline * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadPolyline * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadPolyline * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadPolyline * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadPolyline * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadPolyline * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadPolyline * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadPolyline * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadPolyline * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadPolyline * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadPolyline * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadPolyline * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadPolyline * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadPolyline * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadPolyline * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadPolyline * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadPolyline * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadPolyline * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadPolyline * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadPolyline * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadPolyline * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadPolyline * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadPolyline * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadPolyline * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IAcadPolyline * This,
            /* [retval][out] */ VARIANT *Coordinates);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IAcadPolyline * This,
            /* [in] */ VARIANT Coordinates);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadPolyline * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadPolyline * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IAcadPolyline * This,
            /* [retval][out] */ double *Thickness);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IAcadPolyline * This,
            /* [in] */ double Thickness);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AppendVertex )( 
            IAcadPolyline * This,
            /* [in] */ VARIANT vertex);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Explode )( 
            IAcadPolyline * This,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBulge )( 
            IAcadPolyline * This,
            /* [in] */ int Index,
            /* [retval][out] */ double *bulge);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetBulge )( 
            IAcadPolyline * This,
            /* [in] */ int Index,
            /* [in] */ double bulge);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetWidth )( 
            IAcadPolyline * This,
            /* [in] */ int Index,
            /* [out] */ double *StartWidth,
            double *EndWidth);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetWidth )( 
            IAcadPolyline * This,
            /* [in] */ int Index,
            /* [in] */ double StartWidth,
            double EndWidth);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConstantWidth )( 
            IAcadPolyline * This,
            /* [retval][out] */ double *Width);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ConstantWidth )( 
            IAcadPolyline * This,
            /* [in] */ double Width);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Offset )( 
            IAcadPolyline * This,
            /* [in] */ double Distance,
            /* [retval][out] */ VARIANT *pOffsetCurves);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Elevation )( 
            IAcadPolyline * This,
            /* [retval][out] */ double *Elevation);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Elevation )( 
            IAcadPolyline * This,
            /* [in] */ double Elevation);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IAcadPolyline * This,
            /* [retval][out] */ AcPolylineType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            IAcadPolyline * This,
            /* [in] */ AcPolylineType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Closed )( 
            IAcadPolyline * This,
            /* [retval][out] */ VARIANT_BOOL *fClose);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Closed )( 
            IAcadPolyline * This,
            /* [in] */ VARIANT_BOOL fClose);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeGeneration )( 
            IAcadPolyline * This,
            /* [retval][out] */ VARIANT_BOOL *bLinetypeGen);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeGeneration )( 
            IAcadPolyline * This,
            /* [in] */ VARIANT_BOOL bLinetypeGen);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Area )( 
            IAcadPolyline * This,
            /* [retval][out] */ double *Area);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinate )( 
            IAcadPolyline * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinate )( 
            IAcadPolyline * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Length )( 
            IAcadPolyline * This,
            /* [retval][out] */ double *Length);
        
        END_INTERFACE
    } IAcadPolylineVtbl;

    interface IAcadPolyline
    {
        CONST_VTBL struct IAcadPolylineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadPolyline_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadPolyline_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadPolyline_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadPolyline_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadPolyline_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadPolyline_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadPolyline_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadPolyline_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadPolyline_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadPolyline_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadPolyline_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadPolyline_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadPolyline_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadPolyline_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadPolyline_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadPolyline_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadPolyline_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadPolyline_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadPolyline_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadPolyline_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadPolyline_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadPolyline_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadPolyline_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadPolyline_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadPolyline_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadPolyline_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadPolyline_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadPolyline_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadPolyline_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadPolyline_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadPolyline_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadPolyline_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadPolyline_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadPolyline_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadPolyline_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadPolyline_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadPolyline_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadPolyline_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadPolyline_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadPolyline_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadPolyline_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadPolyline_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadPolyline_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadPolyline_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadPolyline_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadPolyline_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadPolyline_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadPolyline_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadPolyline_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadPolyline_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadPolyline_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadPolyline_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadPolyline_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadPolyline_get_Coordinates(This,Coordinates)	\
    (This)->lpVtbl -> get_Coordinates(This,Coordinates)

#define IAcadPolyline_put_Coordinates(This,Coordinates)	\
    (This)->lpVtbl -> put_Coordinates(This,Coordinates)

#define IAcadPolyline_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadPolyline_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadPolyline_get_Thickness(This,Thickness)	\
    (This)->lpVtbl -> get_Thickness(This,Thickness)

#define IAcadPolyline_put_Thickness(This,Thickness)	\
    (This)->lpVtbl -> put_Thickness(This,Thickness)

#define IAcadPolyline_AppendVertex(This,vertex)	\
    (This)->lpVtbl -> AppendVertex(This,vertex)

#define IAcadPolyline_Explode(This,pArrayObjs)	\
    (This)->lpVtbl -> Explode(This,pArrayObjs)

#define IAcadPolyline_GetBulge(This,Index,bulge)	\
    (This)->lpVtbl -> GetBulge(This,Index,bulge)

#define IAcadPolyline_SetBulge(This,Index,bulge)	\
    (This)->lpVtbl -> SetBulge(This,Index,bulge)

#define IAcadPolyline_GetWidth(This,Index,StartWidth,EndWidth)	\
    (This)->lpVtbl -> GetWidth(This,Index,StartWidth,EndWidth)

#define IAcadPolyline_SetWidth(This,Index,StartWidth,EndWidth)	\
    (This)->lpVtbl -> SetWidth(This,Index,StartWidth,EndWidth)

#define IAcadPolyline_get_ConstantWidth(This,Width)	\
    (This)->lpVtbl -> get_ConstantWidth(This,Width)

#define IAcadPolyline_put_ConstantWidth(This,Width)	\
    (This)->lpVtbl -> put_ConstantWidth(This,Width)

#define IAcadPolyline_Offset(This,Distance,pOffsetCurves)	\
    (This)->lpVtbl -> Offset(This,Distance,pOffsetCurves)

#define IAcadPolyline_get_Elevation(This,Elevation)	\
    (This)->lpVtbl -> get_Elevation(This,Elevation)

#define IAcadPolyline_put_Elevation(This,Elevation)	\
    (This)->lpVtbl -> put_Elevation(This,Elevation)

#define IAcadPolyline_get_Type(This,Type)	\
    (This)->lpVtbl -> get_Type(This,Type)

#define IAcadPolyline_put_Type(This,Type)	\
    (This)->lpVtbl -> put_Type(This,Type)

#define IAcadPolyline_get_Closed(This,fClose)	\
    (This)->lpVtbl -> get_Closed(This,fClose)

#define IAcadPolyline_put_Closed(This,fClose)	\
    (This)->lpVtbl -> put_Closed(This,fClose)

#define IAcadPolyline_get_LinetypeGeneration(This,bLinetypeGen)	\
    (This)->lpVtbl -> get_LinetypeGeneration(This,bLinetypeGen)

#define IAcadPolyline_put_LinetypeGeneration(This,bLinetypeGen)	\
    (This)->lpVtbl -> put_LinetypeGeneration(This,bLinetypeGen)

#define IAcadPolyline_get_Area(This,Area)	\
    (This)->lpVtbl -> get_Area(This,Area)

#define IAcadPolyline_get_Coordinate(This,Index,pVal)	\
    (This)->lpVtbl -> get_Coordinate(This,Index,pVal)

#define IAcadPolyline_put_Coordinate(This,Index,pVal)	\
    (This)->lpVtbl -> put_Coordinate(This,Index,pVal)

#define IAcadPolyline_get_Length(This,Length)	\
    (This)->lpVtbl -> get_Length(This,Length)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_get_Coordinates_Proxy( 
    IAcadPolyline * This,
    /* [retval][out] */ VARIANT *Coordinates);


void __RPC_STUB IAcadPolyline_get_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_put_Coordinates_Proxy( 
    IAcadPolyline * This,
    /* [in] */ VARIANT Coordinates);


void __RPC_STUB IAcadPolyline_put_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_get_Normal_Proxy( 
    IAcadPolyline * This,
    /* [retval][out] */ VARIANT *Normal);


void __RPC_STUB IAcadPolyline_get_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_put_Normal_Proxy( 
    IAcadPolyline * This,
    /* [in] */ VARIANT Normal);


void __RPC_STUB IAcadPolyline_put_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_get_Thickness_Proxy( 
    IAcadPolyline * This,
    /* [retval][out] */ double *Thickness);


void __RPC_STUB IAcadPolyline_get_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_put_Thickness_Proxy( 
    IAcadPolyline * This,
    /* [in] */ double Thickness);


void __RPC_STUB IAcadPolyline_put_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_AppendVertex_Proxy( 
    IAcadPolyline * This,
    /* [in] */ VARIANT vertex);


void __RPC_STUB IAcadPolyline_AppendVertex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_Explode_Proxy( 
    IAcadPolyline * This,
    /* [retval][out] */ VARIANT *pArrayObjs);


void __RPC_STUB IAcadPolyline_Explode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_GetBulge_Proxy( 
    IAcadPolyline * This,
    /* [in] */ int Index,
    /* [retval][out] */ double *bulge);


void __RPC_STUB IAcadPolyline_GetBulge_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_SetBulge_Proxy( 
    IAcadPolyline * This,
    /* [in] */ int Index,
    /* [in] */ double bulge);


void __RPC_STUB IAcadPolyline_SetBulge_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_GetWidth_Proxy( 
    IAcadPolyline * This,
    /* [in] */ int Index,
    /* [out] */ double *StartWidth,
    double *EndWidth);


void __RPC_STUB IAcadPolyline_GetWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_SetWidth_Proxy( 
    IAcadPolyline * This,
    /* [in] */ int Index,
    /* [in] */ double StartWidth,
    double EndWidth);


void __RPC_STUB IAcadPolyline_SetWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_get_ConstantWidth_Proxy( 
    IAcadPolyline * This,
    /* [retval][out] */ double *Width);


void __RPC_STUB IAcadPolyline_get_ConstantWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_put_ConstantWidth_Proxy( 
    IAcadPolyline * This,
    /* [in] */ double Width);


void __RPC_STUB IAcadPolyline_put_ConstantWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_Offset_Proxy( 
    IAcadPolyline * This,
    /* [in] */ double Distance,
    /* [retval][out] */ VARIANT *pOffsetCurves);


void __RPC_STUB IAcadPolyline_Offset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_get_Elevation_Proxy( 
    IAcadPolyline * This,
    /* [retval][out] */ double *Elevation);


void __RPC_STUB IAcadPolyline_get_Elevation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_put_Elevation_Proxy( 
    IAcadPolyline * This,
    /* [in] */ double Elevation);


void __RPC_STUB IAcadPolyline_put_Elevation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_get_Type_Proxy( 
    IAcadPolyline * This,
    /* [retval][out] */ AcPolylineType *Type);


void __RPC_STUB IAcadPolyline_get_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_put_Type_Proxy( 
    IAcadPolyline * This,
    /* [in] */ AcPolylineType Type);


void __RPC_STUB IAcadPolyline_put_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_get_Closed_Proxy( 
    IAcadPolyline * This,
    /* [retval][out] */ VARIANT_BOOL *fClose);


void __RPC_STUB IAcadPolyline_get_Closed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_put_Closed_Proxy( 
    IAcadPolyline * This,
    /* [in] */ VARIANT_BOOL fClose);


void __RPC_STUB IAcadPolyline_put_Closed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_get_LinetypeGeneration_Proxy( 
    IAcadPolyline * This,
    /* [retval][out] */ VARIANT_BOOL *bLinetypeGen);


void __RPC_STUB IAcadPolyline_get_LinetypeGeneration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_put_LinetypeGeneration_Proxy( 
    IAcadPolyline * This,
    /* [in] */ VARIANT_BOOL bLinetypeGen);


void __RPC_STUB IAcadPolyline_put_LinetypeGeneration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_get_Area_Proxy( 
    IAcadPolyline * This,
    /* [retval][out] */ double *Area);


void __RPC_STUB IAcadPolyline_get_Area_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_get_Coordinate_Proxy( 
    IAcadPolyline * This,
    /* [in] */ int Index,
    /* [retval][out] */ VARIANT *pVal);


void __RPC_STUB IAcadPolyline_get_Coordinate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_put_Coordinate_Proxy( 
    IAcadPolyline * This,
    /* [in] */ int Index,
    /* [in] */ VARIANT pVal);


void __RPC_STUB IAcadPolyline_put_Coordinate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyline_get_Length_Proxy( 
    IAcadPolyline * This,
    /* [retval][out] */ double *Length);


void __RPC_STUB IAcadPolyline_get_Length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadPolyline_INTERFACE_DEFINED__ */


#ifndef __IAcadRay_INTERFACE_DEFINED__
#define __IAcadRay_INTERFACE_DEFINED__

/* interface IAcadRay */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadRay;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5B8581A5-35DB-4AD5-BB54-7997D2650B85")
    IAcadRay : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_BasePoint( 
            /* [retval][out] */ VARIANT *BasePoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_BasePoint( 
            /* [in] */ VARIANT BasePoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SecondPoint( 
            /* [retval][out] */ VARIANT *SecondPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SecondPoint( 
            /* [in] */ VARIANT SecondPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DirectionVector( 
            /* [retval][out] */ VARIANT *dirVector) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DirectionVector( 
            /* [in] */ VARIANT dirVector) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadRayVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadRay * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadRay * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadRay * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadRay * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadRay * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadRay * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadRay * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadRay * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadRay * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadRay * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadRay * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadRay * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadRay * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadRay * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadRay * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadRay * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadRay * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadRay * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadRay * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadRay * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadRay * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadRay * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadRay * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadRay * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadRay * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadRay * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadRay * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadRay * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadRay * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadRay * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadRay * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadRay * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadRay * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadRay * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadRay * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadRay * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadRay * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadRay * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadRay * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadRay * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadRay * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadRay * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadRay * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadRay * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadRay * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadRay * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadRay * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadRay * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadRay * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadRay * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadRay * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadRay * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadRay * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BasePoint )( 
            IAcadRay * This,
            /* [retval][out] */ VARIANT *BasePoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BasePoint )( 
            IAcadRay * This,
            /* [in] */ VARIANT BasePoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SecondPoint )( 
            IAcadRay * This,
            /* [retval][out] */ VARIANT *SecondPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SecondPoint )( 
            IAcadRay * This,
            /* [in] */ VARIANT SecondPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DirectionVector )( 
            IAcadRay * This,
            /* [retval][out] */ VARIANT *dirVector);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DirectionVector )( 
            IAcadRay * This,
            /* [in] */ VARIANT dirVector);
        
        END_INTERFACE
    } IAcadRayVtbl;

    interface IAcadRay
    {
        CONST_VTBL struct IAcadRayVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadRay_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadRay_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadRay_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadRay_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadRay_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadRay_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadRay_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadRay_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadRay_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadRay_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadRay_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadRay_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadRay_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadRay_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadRay_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadRay_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadRay_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadRay_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadRay_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadRay_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadRay_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadRay_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadRay_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadRay_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadRay_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadRay_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadRay_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadRay_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadRay_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadRay_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadRay_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadRay_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadRay_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadRay_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadRay_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadRay_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadRay_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadRay_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadRay_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadRay_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadRay_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadRay_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadRay_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadRay_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadRay_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadRay_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadRay_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadRay_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadRay_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadRay_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadRay_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadRay_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadRay_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadRay_get_BasePoint(This,BasePoint)	\
    (This)->lpVtbl -> get_BasePoint(This,BasePoint)

#define IAcadRay_put_BasePoint(This,BasePoint)	\
    (This)->lpVtbl -> put_BasePoint(This,BasePoint)

#define IAcadRay_get_SecondPoint(This,SecondPoint)	\
    (This)->lpVtbl -> get_SecondPoint(This,SecondPoint)

#define IAcadRay_put_SecondPoint(This,SecondPoint)	\
    (This)->lpVtbl -> put_SecondPoint(This,SecondPoint)

#define IAcadRay_get_DirectionVector(This,dirVector)	\
    (This)->lpVtbl -> get_DirectionVector(This,dirVector)

#define IAcadRay_put_DirectionVector(This,dirVector)	\
    (This)->lpVtbl -> put_DirectionVector(This,dirVector)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRay_get_BasePoint_Proxy( 
    IAcadRay * This,
    /* [retval][out] */ VARIANT *BasePoint);


void __RPC_STUB IAcadRay_get_BasePoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadRay_put_BasePoint_Proxy( 
    IAcadRay * This,
    /* [in] */ VARIANT BasePoint);


void __RPC_STUB IAcadRay_put_BasePoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRay_get_SecondPoint_Proxy( 
    IAcadRay * This,
    /* [retval][out] */ VARIANT *SecondPoint);


void __RPC_STUB IAcadRay_get_SecondPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadRay_put_SecondPoint_Proxy( 
    IAcadRay * This,
    /* [in] */ VARIANT SecondPoint);


void __RPC_STUB IAcadRay_put_SecondPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRay_get_DirectionVector_Proxy( 
    IAcadRay * This,
    /* [retval][out] */ VARIANT *dirVector);


void __RPC_STUB IAcadRay_get_DirectionVector_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadRay_put_DirectionVector_Proxy( 
    IAcadRay * This,
    /* [in] */ VARIANT dirVector);


void __RPC_STUB IAcadRay_put_DirectionVector_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadRay_INTERFACE_DEFINED__ */


#ifndef __IAcadShape_INTERFACE_DEFINED__
#define __IAcadShape_INTERFACE_DEFINED__

/* interface IAcadShape */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadShape;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2AE0C4D6-131F-483A-BFBE-2C2AD27BBDD3")
    IAcadShape : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_InsertionPoint( 
            /* [retval][out] */ VARIANT *insPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_InsertionPoint( 
            /* [in] */ VARIANT insPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *Height) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
            /* [retval][out] */ ACAD_ANGLE *rotAngle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
            /* [in] */ ACAD_ANGLE rotAngle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ScaleFactor( 
            /* [retval][out] */ ACAD_NOUNITS *scalFactor) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ScaleFactor( 
            /* [in] */ ACAD_NOUNITS scalFactor) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ObliqueAngle( 
            /* [retval][out] */ ACAD_ANGLE *obliAngle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ObliqueAngle( 
            /* [in] */ ACAD_ANGLE obliAngle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *Normal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT Normal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *Thickness) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thickness) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadShapeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadShape * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadShape * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadShape * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadShape * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadShape * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadShape * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadShape * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadShape * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadShape * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadShape * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadShape * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadShape * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadShape * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadShape * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadShape * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadShape * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadShape * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadShape * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadShape * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadShape * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadShape * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadShape * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadShape * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadShape * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadShape * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadShape * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadShape * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadShape * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadShape * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadShape * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadShape * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadShape * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadShape * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadShape * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadShape * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadShape * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadShape * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadShape * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadShape * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadShape * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadShape * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadShape * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadShape * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadShape * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadShape * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadShape * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadShape * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadShape * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadShape * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadShape * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadShape * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadShape * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadShape * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IAcadShape * This,
            /* [retval][out] */ VARIANT *insPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IAcadShape * This,
            /* [in] */ VARIANT insPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadShape * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadShape * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IAcadShape * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IAcadShape * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IAcadShape * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IAcadShape * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IAcadShape * This,
            /* [retval][out] */ ACAD_NOUNITS *scalFactor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IAcadShape * This,
            /* [in] */ ACAD_NOUNITS scalFactor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObliqueAngle )( 
            IAcadShape * This,
            /* [retval][out] */ ACAD_ANGLE *obliAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ObliqueAngle )( 
            IAcadShape * This,
            /* [in] */ ACAD_ANGLE obliAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadShape * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadShape * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IAcadShape * This,
            /* [retval][out] */ double *Thickness);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IAcadShape * This,
            /* [in] */ double Thickness);
        
        END_INTERFACE
    } IAcadShapeVtbl;

    interface IAcadShape
    {
        CONST_VTBL struct IAcadShapeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadShape_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadShape_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadShape_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadShape_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadShape_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadShape_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadShape_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadShape_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadShape_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadShape_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadShape_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadShape_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadShape_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadShape_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadShape_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadShape_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadShape_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadShape_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadShape_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadShape_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadShape_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadShape_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadShape_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadShape_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadShape_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadShape_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadShape_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadShape_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadShape_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadShape_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadShape_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadShape_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadShape_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadShape_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadShape_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadShape_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadShape_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadShape_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadShape_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadShape_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadShape_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadShape_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadShape_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadShape_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadShape_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadShape_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadShape_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadShape_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadShape_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadShape_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadShape_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadShape_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadShape_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadShape_get_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> get_InsertionPoint(This,insPoint)

#define IAcadShape_put_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> put_InsertionPoint(This,insPoint)

#define IAcadShape_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadShape_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#define IAcadShape_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAcadShape_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAcadShape_get_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> get_Rotation(This,rotAngle)

#define IAcadShape_put_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> put_Rotation(This,rotAngle)

#define IAcadShape_get_ScaleFactor(This,scalFactor)	\
    (This)->lpVtbl -> get_ScaleFactor(This,scalFactor)

#define IAcadShape_put_ScaleFactor(This,scalFactor)	\
    (This)->lpVtbl -> put_ScaleFactor(This,scalFactor)

#define IAcadShape_get_ObliqueAngle(This,obliAngle)	\
    (This)->lpVtbl -> get_ObliqueAngle(This,obliAngle)

#define IAcadShape_put_ObliqueAngle(This,obliAngle)	\
    (This)->lpVtbl -> put_ObliqueAngle(This,obliAngle)

#define IAcadShape_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadShape_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadShape_get_Thickness(This,Thickness)	\
    (This)->lpVtbl -> get_Thickness(This,Thickness)

#define IAcadShape_put_Thickness(This,Thickness)	\
    (This)->lpVtbl -> put_Thickness(This,Thickness)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadShape_get_InsertionPoint_Proxy( 
    IAcadShape * This,
    /* [retval][out] */ VARIANT *insPoint);


void __RPC_STUB IAcadShape_get_InsertionPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadShape_put_InsertionPoint_Proxy( 
    IAcadShape * This,
    /* [in] */ VARIANT insPoint);


void __RPC_STUB IAcadShape_put_InsertionPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadShape_get_Name_Proxy( 
    IAcadShape * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadShape_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadShape_put_Name_Proxy( 
    IAcadShape * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadShape_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadShape_get_Height_Proxy( 
    IAcadShape * This,
    /* [retval][out] */ double *Height);


void __RPC_STUB IAcadShape_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadShape_put_Height_Proxy( 
    IAcadShape * This,
    /* [in] */ double Height);


void __RPC_STUB IAcadShape_put_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadShape_get_Rotation_Proxy( 
    IAcadShape * This,
    /* [retval][out] */ ACAD_ANGLE *rotAngle);


void __RPC_STUB IAcadShape_get_Rotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadShape_put_Rotation_Proxy( 
    IAcadShape * This,
    /* [in] */ ACAD_ANGLE rotAngle);


void __RPC_STUB IAcadShape_put_Rotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadShape_get_ScaleFactor_Proxy( 
    IAcadShape * This,
    /* [retval][out] */ ACAD_NOUNITS *scalFactor);


void __RPC_STUB IAcadShape_get_ScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadShape_put_ScaleFactor_Proxy( 
    IAcadShape * This,
    /* [in] */ ACAD_NOUNITS scalFactor);


void __RPC_STUB IAcadShape_put_ScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadShape_get_ObliqueAngle_Proxy( 
    IAcadShape * This,
    /* [retval][out] */ ACAD_ANGLE *obliAngle);


void __RPC_STUB IAcadShape_get_ObliqueAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadShape_put_ObliqueAngle_Proxy( 
    IAcadShape * This,
    /* [in] */ ACAD_ANGLE obliAngle);


void __RPC_STUB IAcadShape_put_ObliqueAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadShape_get_Normal_Proxy( 
    IAcadShape * This,
    /* [retval][out] */ VARIANT *Normal);


void __RPC_STUB IAcadShape_get_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadShape_put_Normal_Proxy( 
    IAcadShape * This,
    /* [in] */ VARIANT Normal);


void __RPC_STUB IAcadShape_put_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadShape_get_Thickness_Proxy( 
    IAcadShape * This,
    /* [retval][out] */ double *Thickness);


void __RPC_STUB IAcadShape_get_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadShape_put_Thickness_Proxy( 
    IAcadShape * This,
    /* [in] */ double Thickness);


void __RPC_STUB IAcadShape_put_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadShape_INTERFACE_DEFINED__ */


#ifndef __IAcadSolid_INTERFACE_DEFINED__
#define __IAcadSolid_INTERFACE_DEFINED__

/* interface IAcadSolid */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadSolid;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("96757FD8-8159-4BA8-85A9-F37B34433081")
    IAcadSolid : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *corners) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT corners) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *Normal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT Normal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *Thickness) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thickness) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Coordinate( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Coordinate( 
            /* [in] */ int Index,
            /* [in] */ VARIANT pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadSolidVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadSolid * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadSolid * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadSolid * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadSolid * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadSolid * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadSolid * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadSolid * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadSolid * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadSolid * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadSolid * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadSolid * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadSolid * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadSolid * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadSolid * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadSolid * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadSolid * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadSolid * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadSolid * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadSolid * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadSolid * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadSolid * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadSolid * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadSolid * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadSolid * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadSolid * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadSolid * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadSolid * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadSolid * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadSolid * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadSolid * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadSolid * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadSolid * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadSolid * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadSolid * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadSolid * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadSolid * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadSolid * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadSolid * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadSolid * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadSolid * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadSolid * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadSolid * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadSolid * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadSolid * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadSolid * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadSolid * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadSolid * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadSolid * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadSolid * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadSolid * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadSolid * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadSolid * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadSolid * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IAcadSolid * This,
            /* [retval][out] */ VARIANT *corners);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IAcadSolid * This,
            /* [in] */ VARIANT corners);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadSolid * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadSolid * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IAcadSolid * This,
            /* [retval][out] */ double *Thickness);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IAcadSolid * This,
            /* [in] */ double Thickness);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinate )( 
            IAcadSolid * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinate )( 
            IAcadSolid * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT pVal);
        
        END_INTERFACE
    } IAcadSolidVtbl;

    interface IAcadSolid
    {
        CONST_VTBL struct IAcadSolidVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadSolid_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadSolid_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadSolid_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadSolid_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadSolid_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadSolid_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadSolid_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadSolid_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadSolid_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadSolid_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadSolid_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadSolid_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadSolid_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadSolid_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadSolid_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadSolid_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadSolid_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadSolid_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadSolid_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadSolid_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadSolid_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadSolid_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadSolid_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadSolid_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadSolid_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadSolid_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadSolid_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadSolid_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadSolid_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadSolid_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadSolid_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadSolid_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadSolid_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadSolid_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadSolid_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadSolid_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadSolid_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadSolid_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadSolid_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadSolid_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadSolid_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadSolid_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadSolid_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadSolid_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadSolid_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadSolid_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadSolid_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadSolid_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadSolid_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadSolid_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadSolid_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadSolid_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadSolid_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadSolid_get_Coordinates(This,corners)	\
    (This)->lpVtbl -> get_Coordinates(This,corners)

#define IAcadSolid_put_Coordinates(This,corners)	\
    (This)->lpVtbl -> put_Coordinates(This,corners)

#define IAcadSolid_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadSolid_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadSolid_get_Thickness(This,Thickness)	\
    (This)->lpVtbl -> get_Thickness(This,Thickness)

#define IAcadSolid_put_Thickness(This,Thickness)	\
    (This)->lpVtbl -> put_Thickness(This,Thickness)

#define IAcadSolid_get_Coordinate(This,Index,pVal)	\
    (This)->lpVtbl -> get_Coordinate(This,Index,pVal)

#define IAcadSolid_put_Coordinate(This,Index,pVal)	\
    (This)->lpVtbl -> put_Coordinate(This,Index,pVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSolid_get_Coordinates_Proxy( 
    IAcadSolid * This,
    /* [retval][out] */ VARIANT *corners);


void __RPC_STUB IAcadSolid_get_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadSolid_put_Coordinates_Proxy( 
    IAcadSolid * This,
    /* [in] */ VARIANT corners);


void __RPC_STUB IAcadSolid_put_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSolid_get_Normal_Proxy( 
    IAcadSolid * This,
    /* [retval][out] */ VARIANT *Normal);


void __RPC_STUB IAcadSolid_get_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadSolid_put_Normal_Proxy( 
    IAcadSolid * This,
    /* [in] */ VARIANT Normal);


void __RPC_STUB IAcadSolid_put_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSolid_get_Thickness_Proxy( 
    IAcadSolid * This,
    /* [retval][out] */ double *Thickness);


void __RPC_STUB IAcadSolid_get_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadSolid_put_Thickness_Proxy( 
    IAcadSolid * This,
    /* [in] */ double Thickness);


void __RPC_STUB IAcadSolid_put_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSolid_get_Coordinate_Proxy( 
    IAcadSolid * This,
    /* [in] */ int Index,
    /* [retval][out] */ VARIANT *pVal);


void __RPC_STUB IAcadSolid_get_Coordinate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadSolid_put_Coordinate_Proxy( 
    IAcadSolid * This,
    /* [in] */ int Index,
    /* [in] */ VARIANT pVal);


void __RPC_STUB IAcadSolid_put_Coordinate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadSolid_INTERFACE_DEFINED__ */


#ifndef __IAcadSpline_INTERFACE_DEFINED__
#define __IAcadSpline_INTERFACE_DEFINED__

/* interface IAcadSpline */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadSpline;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("975097AB-170F-434E-B6A5-012F28F7749A")
    IAcadSpline : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_NumberOfControlPoints( 
            /* [retval][out] */ long *numCtrlPoints) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ControlPoints( 
            /* [retval][out] */ VARIANT *controlPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ControlPoints( 
            /* [in] */ VARIANT controlPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_NumberOfFitPoints( 
            /* [retval][out] */ long *numFitPoints) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_FitPoints( 
            /* [retval][out] */ VARIANT *fitPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_FitPoints( 
            /* [in] */ VARIANT fitPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Degree( 
            /* [retval][out] */ long *Degree) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Closed( 
            /* [retval][out] */ VARIANT_BOOL *fClose) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsPlanar( 
            /* [retval][out] */ VARIANT_BOOL *fPlanar) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsRational( 
            /* [retval][out] */ VARIANT_BOOL *fRational) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsPeriodic( 
            /* [retval][out] */ VARIANT_BOOL *fPeriodic) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartTangent( 
            /* [retval][out] */ VARIANT *StartTangent) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_StartTangent( 
            /* [in] */ VARIANT StartTangent) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndTangent( 
            /* [retval][out] */ VARIANT *EndTangent) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_EndTangent( 
            /* [in] */ VARIANT EndTangent) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_FitTolerance( 
            /* [retval][out] */ double *fitTol) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_FitTolerance( 
            /* [in] */ double fitTol) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Area( 
            /* [retval][out] */ double *Area) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetControlPoint( 
            /* [in] */ int Index,
            /* [in] */ VARIANT controlPoint) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetControlPoint( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *controlPoint) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetFitPoint( 
            /* [in] */ int Index,
            /* [in] */ VARIANT fitPoint) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetFitPoint( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *fitPoint) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetWeight( 
            /* [in] */ int Index,
            /* [in] */ double weight) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetWeight( 
            /* [in] */ int Index,
            /* [retval][out] */ double *weight) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddFitPoint( 
            /* [in] */ int Index,
            /* [in] */ VARIANT fitPoint) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DeleteFitPoint( 
            /* [in] */ int Index) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ElevateOrder( 
            /* [in] */ int Order) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Offset( 
            /* [in] */ double Distance,
            /* [retval][out] */ VARIANT *pOffsetCurves) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE PurgeFitData( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Reverse( void) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Knots( 
            /* [retval][out] */ VARIANT *KnotValues) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Knots( 
            /* [in] */ VARIANT KnotValues) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Weights( 
            /* [retval][out] */ VARIANT *WeightValues) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Weights( 
            /* [in] */ VARIANT WeightValues) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadSplineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadSpline * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadSpline * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadSpline * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadSpline * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadSpline * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadSpline * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadSpline * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadSpline * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadSpline * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadSpline * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadSpline * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadSpline * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadSpline * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadSpline * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadSpline * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadSpline * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadSpline * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadSpline * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadSpline * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadSpline * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadSpline * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadSpline * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadSpline * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadSpline * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadSpline * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadSpline * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadSpline * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadSpline * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadSpline * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadSpline * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadSpline * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadSpline * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadSpline * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadSpline * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadSpline * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadSpline * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadSpline * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadSpline * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadSpline * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadSpline * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadSpline * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadSpline * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadSpline * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadSpline * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadSpline * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadSpline * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadSpline * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadSpline * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadSpline * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadSpline * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadSpline * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadSpline * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadSpline * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NumberOfControlPoints )( 
            IAcadSpline * This,
            /* [retval][out] */ long *numCtrlPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ControlPoints )( 
            IAcadSpline * This,
            /* [retval][out] */ VARIANT *controlPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ControlPoints )( 
            IAcadSpline * This,
            /* [in] */ VARIANT controlPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NumberOfFitPoints )( 
            IAcadSpline * This,
            /* [retval][out] */ long *numFitPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FitPoints )( 
            IAcadSpline * This,
            /* [retval][out] */ VARIANT *fitPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FitPoints )( 
            IAcadSpline * This,
            /* [in] */ VARIANT fitPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Degree )( 
            IAcadSpline * This,
            /* [retval][out] */ long *Degree);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Closed )( 
            IAcadSpline * This,
            /* [retval][out] */ VARIANT_BOOL *fClose);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsPlanar )( 
            IAcadSpline * This,
            /* [retval][out] */ VARIANT_BOOL *fPlanar);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsRational )( 
            IAcadSpline * This,
            /* [retval][out] */ VARIANT_BOOL *fRational);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsPeriodic )( 
            IAcadSpline * This,
            /* [retval][out] */ VARIANT_BOOL *fPeriodic);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartTangent )( 
            IAcadSpline * This,
            /* [retval][out] */ VARIANT *StartTangent);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StartTangent )( 
            IAcadSpline * This,
            /* [in] */ VARIANT StartTangent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndTangent )( 
            IAcadSpline * This,
            /* [retval][out] */ VARIANT *EndTangent);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EndTangent )( 
            IAcadSpline * This,
            /* [in] */ VARIANT EndTangent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FitTolerance )( 
            IAcadSpline * This,
            /* [retval][out] */ double *fitTol);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FitTolerance )( 
            IAcadSpline * This,
            /* [in] */ double fitTol);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Area )( 
            IAcadSpline * This,
            /* [retval][out] */ double *Area);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetControlPoint )( 
            IAcadSpline * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT controlPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetControlPoint )( 
            IAcadSpline * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *controlPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetFitPoint )( 
            IAcadSpline * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT fitPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetFitPoint )( 
            IAcadSpline * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *fitPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetWeight )( 
            IAcadSpline * This,
            /* [in] */ int Index,
            /* [in] */ double weight);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetWeight )( 
            IAcadSpline * This,
            /* [in] */ int Index,
            /* [retval][out] */ double *weight);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddFitPoint )( 
            IAcadSpline * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT fitPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteFitPoint )( 
            IAcadSpline * This,
            /* [in] */ int Index);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ElevateOrder )( 
            IAcadSpline * This,
            /* [in] */ int Order);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Offset )( 
            IAcadSpline * This,
            /* [in] */ double Distance,
            /* [retval][out] */ VARIANT *pOffsetCurves);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PurgeFitData )( 
            IAcadSpline * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Reverse )( 
            IAcadSpline * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Knots )( 
            IAcadSpline * This,
            /* [retval][out] */ VARIANT *KnotValues);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Knots )( 
            IAcadSpline * This,
            /* [in] */ VARIANT KnotValues);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Weights )( 
            IAcadSpline * This,
            /* [retval][out] */ VARIANT *WeightValues);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Weights )( 
            IAcadSpline * This,
            /* [in] */ VARIANT WeightValues);
        
        END_INTERFACE
    } IAcadSplineVtbl;

    interface IAcadSpline
    {
        CONST_VTBL struct IAcadSplineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadSpline_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadSpline_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadSpline_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadSpline_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadSpline_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadSpline_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadSpline_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadSpline_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadSpline_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadSpline_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadSpline_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadSpline_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadSpline_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadSpline_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadSpline_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadSpline_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadSpline_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadSpline_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadSpline_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadSpline_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadSpline_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadSpline_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadSpline_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadSpline_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadSpline_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadSpline_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadSpline_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadSpline_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadSpline_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadSpline_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadSpline_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadSpline_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadSpline_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadSpline_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadSpline_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadSpline_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadSpline_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadSpline_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadSpline_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadSpline_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadSpline_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadSpline_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadSpline_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadSpline_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadSpline_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadSpline_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadSpline_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadSpline_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadSpline_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadSpline_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadSpline_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadSpline_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadSpline_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadSpline_get_NumberOfControlPoints(This,numCtrlPoints)	\
    (This)->lpVtbl -> get_NumberOfControlPoints(This,numCtrlPoints)

#define IAcadSpline_get_ControlPoints(This,controlPoint)	\
    (This)->lpVtbl -> get_ControlPoints(This,controlPoint)

#define IAcadSpline_put_ControlPoints(This,controlPoint)	\
    (This)->lpVtbl -> put_ControlPoints(This,controlPoint)

#define IAcadSpline_get_NumberOfFitPoints(This,numFitPoints)	\
    (This)->lpVtbl -> get_NumberOfFitPoints(This,numFitPoints)

#define IAcadSpline_get_FitPoints(This,fitPoint)	\
    (This)->lpVtbl -> get_FitPoints(This,fitPoint)

#define IAcadSpline_put_FitPoints(This,fitPoint)	\
    (This)->lpVtbl -> put_FitPoints(This,fitPoint)

#define IAcadSpline_get_Degree(This,Degree)	\
    (This)->lpVtbl -> get_Degree(This,Degree)

#define IAcadSpline_get_Closed(This,fClose)	\
    (This)->lpVtbl -> get_Closed(This,fClose)

#define IAcadSpline_get_IsPlanar(This,fPlanar)	\
    (This)->lpVtbl -> get_IsPlanar(This,fPlanar)

#define IAcadSpline_get_IsRational(This,fRational)	\
    (This)->lpVtbl -> get_IsRational(This,fRational)

#define IAcadSpline_get_IsPeriodic(This,fPeriodic)	\
    (This)->lpVtbl -> get_IsPeriodic(This,fPeriodic)

#define IAcadSpline_get_StartTangent(This,StartTangent)	\
    (This)->lpVtbl -> get_StartTangent(This,StartTangent)

#define IAcadSpline_put_StartTangent(This,StartTangent)	\
    (This)->lpVtbl -> put_StartTangent(This,StartTangent)

#define IAcadSpline_get_EndTangent(This,EndTangent)	\
    (This)->lpVtbl -> get_EndTangent(This,EndTangent)

#define IAcadSpline_put_EndTangent(This,EndTangent)	\
    (This)->lpVtbl -> put_EndTangent(This,EndTangent)

#define IAcadSpline_get_FitTolerance(This,fitTol)	\
    (This)->lpVtbl -> get_FitTolerance(This,fitTol)

#define IAcadSpline_put_FitTolerance(This,fitTol)	\
    (This)->lpVtbl -> put_FitTolerance(This,fitTol)

#define IAcadSpline_get_Area(This,Area)	\
    (This)->lpVtbl -> get_Area(This,Area)

#define IAcadSpline_SetControlPoint(This,Index,controlPoint)	\
    (This)->lpVtbl -> SetControlPoint(This,Index,controlPoint)

#define IAcadSpline_GetControlPoint(This,Index,controlPoint)	\
    (This)->lpVtbl -> GetControlPoint(This,Index,controlPoint)

#define IAcadSpline_SetFitPoint(This,Index,fitPoint)	\
    (This)->lpVtbl -> SetFitPoint(This,Index,fitPoint)

#define IAcadSpline_GetFitPoint(This,Index,fitPoint)	\
    (This)->lpVtbl -> GetFitPoint(This,Index,fitPoint)

#define IAcadSpline_SetWeight(This,Index,weight)	\
    (This)->lpVtbl -> SetWeight(This,Index,weight)

#define IAcadSpline_GetWeight(This,Index,weight)	\
    (This)->lpVtbl -> GetWeight(This,Index,weight)

#define IAcadSpline_AddFitPoint(This,Index,fitPoint)	\
    (This)->lpVtbl -> AddFitPoint(This,Index,fitPoint)

#define IAcadSpline_DeleteFitPoint(This,Index)	\
    (This)->lpVtbl -> DeleteFitPoint(This,Index)

#define IAcadSpline_ElevateOrder(This,Order)	\
    (This)->lpVtbl -> ElevateOrder(This,Order)

#define IAcadSpline_Offset(This,Distance,pOffsetCurves)	\
    (This)->lpVtbl -> Offset(This,Distance,pOffsetCurves)

#define IAcadSpline_PurgeFitData(This)	\
    (This)->lpVtbl -> PurgeFitData(This)

#define IAcadSpline_Reverse(This)	\
    (This)->lpVtbl -> Reverse(This)

#define IAcadSpline_get_Knots(This,KnotValues)	\
    (This)->lpVtbl -> get_Knots(This,KnotValues)

#define IAcadSpline_put_Knots(This,KnotValues)	\
    (This)->lpVtbl -> put_Knots(This,KnotValues)

#define IAcadSpline_get_Weights(This,WeightValues)	\
    (This)->lpVtbl -> get_Weights(This,WeightValues)

#define IAcadSpline_put_Weights(This,WeightValues)	\
    (This)->lpVtbl -> put_Weights(This,WeightValues)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_get_NumberOfControlPoints_Proxy( 
    IAcadSpline * This,
    /* [retval][out] */ long *numCtrlPoints);


void __RPC_STUB IAcadSpline_get_NumberOfControlPoints_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_get_ControlPoints_Proxy( 
    IAcadSpline * This,
    /* [retval][out] */ VARIANT *controlPoint);


void __RPC_STUB IAcadSpline_get_ControlPoints_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_put_ControlPoints_Proxy( 
    IAcadSpline * This,
    /* [in] */ VARIANT controlPoint);


void __RPC_STUB IAcadSpline_put_ControlPoints_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_get_NumberOfFitPoints_Proxy( 
    IAcadSpline * This,
    /* [retval][out] */ long *numFitPoints);


void __RPC_STUB IAcadSpline_get_NumberOfFitPoints_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_get_FitPoints_Proxy( 
    IAcadSpline * This,
    /* [retval][out] */ VARIANT *fitPoint);


void __RPC_STUB IAcadSpline_get_FitPoints_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_put_FitPoints_Proxy( 
    IAcadSpline * This,
    /* [in] */ VARIANT fitPoint);


void __RPC_STUB IAcadSpline_put_FitPoints_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_get_Degree_Proxy( 
    IAcadSpline * This,
    /* [retval][out] */ long *Degree);


void __RPC_STUB IAcadSpline_get_Degree_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_get_Closed_Proxy( 
    IAcadSpline * This,
    /* [retval][out] */ VARIANT_BOOL *fClose);


void __RPC_STUB IAcadSpline_get_Closed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_get_IsPlanar_Proxy( 
    IAcadSpline * This,
    /* [retval][out] */ VARIANT_BOOL *fPlanar);


void __RPC_STUB IAcadSpline_get_IsPlanar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_get_IsRational_Proxy( 
    IAcadSpline * This,
    /* [retval][out] */ VARIANT_BOOL *fRational);


void __RPC_STUB IAcadSpline_get_IsRational_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_get_IsPeriodic_Proxy( 
    IAcadSpline * This,
    /* [retval][out] */ VARIANT_BOOL *fPeriodic);


void __RPC_STUB IAcadSpline_get_IsPeriodic_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_get_StartTangent_Proxy( 
    IAcadSpline * This,
    /* [retval][out] */ VARIANT *StartTangent);


void __RPC_STUB IAcadSpline_get_StartTangent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_put_StartTangent_Proxy( 
    IAcadSpline * This,
    /* [in] */ VARIANT StartTangent);


void __RPC_STUB IAcadSpline_put_StartTangent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_get_EndTangent_Proxy( 
    IAcadSpline * This,
    /* [retval][out] */ VARIANT *EndTangent);


void __RPC_STUB IAcadSpline_get_EndTangent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_put_EndTangent_Proxy( 
    IAcadSpline * This,
    /* [in] */ VARIANT EndTangent);


void __RPC_STUB IAcadSpline_put_EndTangent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_get_FitTolerance_Proxy( 
    IAcadSpline * This,
    /* [retval][out] */ double *fitTol);


void __RPC_STUB IAcadSpline_get_FitTolerance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_put_FitTolerance_Proxy( 
    IAcadSpline * This,
    /* [in] */ double fitTol);


void __RPC_STUB IAcadSpline_put_FitTolerance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_get_Area_Proxy( 
    IAcadSpline * This,
    /* [retval][out] */ double *Area);


void __RPC_STUB IAcadSpline_get_Area_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_SetControlPoint_Proxy( 
    IAcadSpline * This,
    /* [in] */ int Index,
    /* [in] */ VARIANT controlPoint);


void __RPC_STUB IAcadSpline_SetControlPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_GetControlPoint_Proxy( 
    IAcadSpline * This,
    /* [in] */ int Index,
    /* [retval][out] */ VARIANT *controlPoint);


void __RPC_STUB IAcadSpline_GetControlPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_SetFitPoint_Proxy( 
    IAcadSpline * This,
    /* [in] */ int Index,
    /* [in] */ VARIANT fitPoint);


void __RPC_STUB IAcadSpline_SetFitPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_GetFitPoint_Proxy( 
    IAcadSpline * This,
    /* [in] */ int Index,
    /* [retval][out] */ VARIANT *fitPoint);


void __RPC_STUB IAcadSpline_GetFitPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_SetWeight_Proxy( 
    IAcadSpline * This,
    /* [in] */ int Index,
    /* [in] */ double weight);


void __RPC_STUB IAcadSpline_SetWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_GetWeight_Proxy( 
    IAcadSpline * This,
    /* [in] */ int Index,
    /* [retval][out] */ double *weight);


void __RPC_STUB IAcadSpline_GetWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_AddFitPoint_Proxy( 
    IAcadSpline * This,
    /* [in] */ int Index,
    /* [in] */ VARIANT fitPoint);


void __RPC_STUB IAcadSpline_AddFitPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_DeleteFitPoint_Proxy( 
    IAcadSpline * This,
    /* [in] */ int Index);


void __RPC_STUB IAcadSpline_DeleteFitPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_ElevateOrder_Proxy( 
    IAcadSpline * This,
    /* [in] */ int Order);


void __RPC_STUB IAcadSpline_ElevateOrder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_Offset_Proxy( 
    IAcadSpline * This,
    /* [in] */ double Distance,
    /* [retval][out] */ VARIANT *pOffsetCurves);


void __RPC_STUB IAcadSpline_Offset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_PurgeFitData_Proxy( 
    IAcadSpline * This);


void __RPC_STUB IAcadSpline_PurgeFitData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_Reverse_Proxy( 
    IAcadSpline * This);


void __RPC_STUB IAcadSpline_Reverse_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_get_Knots_Proxy( 
    IAcadSpline * This,
    /* [retval][out] */ VARIANT *KnotValues);


void __RPC_STUB IAcadSpline_get_Knots_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_put_Knots_Proxy( 
    IAcadSpline * This,
    /* [in] */ VARIANT KnotValues);


void __RPC_STUB IAcadSpline_put_Knots_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_get_Weights_Proxy( 
    IAcadSpline * This,
    /* [retval][out] */ VARIANT *WeightValues);


void __RPC_STUB IAcadSpline_get_Weights_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadSpline_put_Weights_Proxy( 
    IAcadSpline * This,
    /* [in] */ VARIANT WeightValues);


void __RPC_STUB IAcadSpline_put_Weights_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadSpline_INTERFACE_DEFINED__ */


#ifndef __IAcadText_INTERFACE_DEFINED__
#define __IAcadText_INTERFACE_DEFINED__

/* interface IAcadText */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadText;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E3FD8511-58AF-43D4-9B16-C6941F7B245F")
    IAcadText : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextString( 
            /* [retval][out] */ BSTR *bstrText) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextString( 
            /* [in] */ BSTR bstrText) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_StyleName( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_StyleName( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Alignment( 
            /* [retval][out] */ AcAlignment *align) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Alignment( 
            /* [in] */ AcAlignment align) = 0;
        
        virtual /* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_HorizontalAlignment( 
            /* [retval][out] */ AcHorizontalAlignment *horizAlign) = 0;
        
        virtual /* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_HorizontalAlignment( 
            /* [in] */ AcHorizontalAlignment horizAlign) = 0;
        
        virtual /* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_VerticalAlignment( 
            /* [retval][out] */ AcVerticalAlignment *vertiAlign) = 0;
        
        virtual /* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_VerticalAlignment( 
            /* [in] */ AcVerticalAlignment vertiAlign) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *Height) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
            /* [retval][out] */ ACAD_ANGLE *rotAngle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
            /* [in] */ ACAD_ANGLE rotAngle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ScaleFactor( 
            /* [retval][out] */ ACAD_NOUNITS *scalFactor) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ScaleFactor( 
            /* [in] */ ACAD_NOUNITS scalFactor) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ObliqueAngle( 
            /* [retval][out] */ ACAD_ANGLE *obliAngle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ObliqueAngle( 
            /* [in] */ ACAD_ANGLE obliAngle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextAlignmentPoint( 
            /* [retval][out] */ VARIANT *alignPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextAlignmentPoint( 
            /* [in] */ VARIANT alignPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_InsertionPoint( 
            /* [retval][out] */ VARIANT *insPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_InsertionPoint( 
            /* [in] */ VARIANT insPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *Normal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT Normal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextGenerationFlag( 
            /* [retval][out] */ long *textGenFlag) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextGenerationFlag( 
            /* [in] */ long textGenFlag) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *Thickness) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thickness) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_UpsideDown( 
            /* [retval][out] */ VARIANT_BOOL *UpsideDown) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_UpsideDown( 
            /* [in] */ VARIANT_BOOL UpsideDown) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Backward( 
            /* [retval][out] */ VARIANT_BOOL *Backward) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Backward( 
            /* [in] */ VARIANT_BOOL Backward) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadTextVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadText * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadText * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadText * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadText * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadText * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadText * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadText * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadText * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadText * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadText * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadText * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadText * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadText * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadText * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadText * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadText * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadText * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadText * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadText * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadText * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadText * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadText * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadText * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadText * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadText * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadText * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadText * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadText * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadText * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadText * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadText * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadText * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadText * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadText * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadText * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadText * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadText * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadText * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadText * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadText * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadText * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadText * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadText * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadText * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadText * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadText * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadText * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadText * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadText * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadText * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadText * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadText * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadText * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextString )( 
            IAcadText * This,
            /* [retval][out] */ BSTR *bstrText);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextString )( 
            IAcadText * This,
            /* [in] */ BSTR bstrText);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IAcadText * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IAcadText * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Alignment )( 
            IAcadText * This,
            /* [retval][out] */ AcAlignment *align);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Alignment )( 
            IAcadText * This,
            /* [in] */ AcAlignment align);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalAlignment )( 
            IAcadText * This,
            /* [retval][out] */ AcHorizontalAlignment *horizAlign);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalAlignment )( 
            IAcadText * This,
            /* [in] */ AcHorizontalAlignment horizAlign);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalAlignment )( 
            IAcadText * This,
            /* [retval][out] */ AcVerticalAlignment *vertiAlign);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalAlignment )( 
            IAcadText * This,
            /* [in] */ AcVerticalAlignment vertiAlign);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IAcadText * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IAcadText * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IAcadText * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IAcadText * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IAcadText * This,
            /* [retval][out] */ ACAD_NOUNITS *scalFactor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IAcadText * This,
            /* [in] */ ACAD_NOUNITS scalFactor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObliqueAngle )( 
            IAcadText * This,
            /* [retval][out] */ ACAD_ANGLE *obliAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ObliqueAngle )( 
            IAcadText * This,
            /* [in] */ ACAD_ANGLE obliAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlignmentPoint )( 
            IAcadText * This,
            /* [retval][out] */ VARIANT *alignPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextAlignmentPoint )( 
            IAcadText * This,
            /* [in] */ VARIANT alignPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IAcadText * This,
            /* [retval][out] */ VARIANT *insPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IAcadText * This,
            /* [in] */ VARIANT insPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadText * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadText * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextGenerationFlag )( 
            IAcadText * This,
            /* [retval][out] */ long *textGenFlag);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextGenerationFlag )( 
            IAcadText * This,
            /* [in] */ long textGenFlag);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IAcadText * This,
            /* [retval][out] */ double *Thickness);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IAcadText * This,
            /* [in] */ double Thickness);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UpsideDown )( 
            IAcadText * This,
            /* [retval][out] */ VARIANT_BOOL *UpsideDown);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UpsideDown )( 
            IAcadText * This,
            /* [in] */ VARIANT_BOOL UpsideDown);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Backward )( 
            IAcadText * This,
            /* [retval][out] */ VARIANT_BOOL *Backward);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Backward )( 
            IAcadText * This,
            /* [in] */ VARIANT_BOOL Backward);
        
        END_INTERFACE
    } IAcadTextVtbl;

    interface IAcadText
    {
        CONST_VTBL struct IAcadTextVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadText_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadText_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadText_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadText_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadText_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadText_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadText_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadText_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadText_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadText_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadText_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadText_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadText_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadText_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadText_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadText_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadText_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadText_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadText_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadText_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadText_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadText_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadText_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadText_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadText_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadText_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadText_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadText_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadText_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadText_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadText_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadText_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadText_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadText_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadText_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadText_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadText_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadText_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadText_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadText_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadText_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadText_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadText_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadText_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadText_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadText_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadText_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadText_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadText_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadText_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadText_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadText_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadText_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadText_get_TextString(This,bstrText)	\
    (This)->lpVtbl -> get_TextString(This,bstrText)

#define IAcadText_put_TextString(This,bstrText)	\
    (This)->lpVtbl -> put_TextString(This,bstrText)

#define IAcadText_get_StyleName(This,bstrName)	\
    (This)->lpVtbl -> get_StyleName(This,bstrName)

#define IAcadText_put_StyleName(This,bstrName)	\
    (This)->lpVtbl -> put_StyleName(This,bstrName)

#define IAcadText_get_Alignment(This,align)	\
    (This)->lpVtbl -> get_Alignment(This,align)

#define IAcadText_put_Alignment(This,align)	\
    (This)->lpVtbl -> put_Alignment(This,align)

#define IAcadText_get_HorizontalAlignment(This,horizAlign)	\
    (This)->lpVtbl -> get_HorizontalAlignment(This,horizAlign)

#define IAcadText_put_HorizontalAlignment(This,horizAlign)	\
    (This)->lpVtbl -> put_HorizontalAlignment(This,horizAlign)

#define IAcadText_get_VerticalAlignment(This,vertiAlign)	\
    (This)->lpVtbl -> get_VerticalAlignment(This,vertiAlign)

#define IAcadText_put_VerticalAlignment(This,vertiAlign)	\
    (This)->lpVtbl -> put_VerticalAlignment(This,vertiAlign)

#define IAcadText_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAcadText_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAcadText_get_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> get_Rotation(This,rotAngle)

#define IAcadText_put_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> put_Rotation(This,rotAngle)

#define IAcadText_get_ScaleFactor(This,scalFactor)	\
    (This)->lpVtbl -> get_ScaleFactor(This,scalFactor)

#define IAcadText_put_ScaleFactor(This,scalFactor)	\
    (This)->lpVtbl -> put_ScaleFactor(This,scalFactor)

#define IAcadText_get_ObliqueAngle(This,obliAngle)	\
    (This)->lpVtbl -> get_ObliqueAngle(This,obliAngle)

#define IAcadText_put_ObliqueAngle(This,obliAngle)	\
    (This)->lpVtbl -> put_ObliqueAngle(This,obliAngle)

#define IAcadText_get_TextAlignmentPoint(This,alignPoint)	\
    (This)->lpVtbl -> get_TextAlignmentPoint(This,alignPoint)

#define IAcadText_put_TextAlignmentPoint(This,alignPoint)	\
    (This)->lpVtbl -> put_TextAlignmentPoint(This,alignPoint)

#define IAcadText_get_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> get_InsertionPoint(This,insPoint)

#define IAcadText_put_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> put_InsertionPoint(This,insPoint)

#define IAcadText_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadText_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadText_get_TextGenerationFlag(This,textGenFlag)	\
    (This)->lpVtbl -> get_TextGenerationFlag(This,textGenFlag)

#define IAcadText_put_TextGenerationFlag(This,textGenFlag)	\
    (This)->lpVtbl -> put_TextGenerationFlag(This,textGenFlag)

#define IAcadText_get_Thickness(This,Thickness)	\
    (This)->lpVtbl -> get_Thickness(This,Thickness)

#define IAcadText_put_Thickness(This,Thickness)	\
    (This)->lpVtbl -> put_Thickness(This,Thickness)

#define IAcadText_get_UpsideDown(This,UpsideDown)	\
    (This)->lpVtbl -> get_UpsideDown(This,UpsideDown)

#define IAcadText_put_UpsideDown(This,UpsideDown)	\
    (This)->lpVtbl -> put_UpsideDown(This,UpsideDown)

#define IAcadText_get_Backward(This,Backward)	\
    (This)->lpVtbl -> get_Backward(This,Backward)

#define IAcadText_put_Backward(This,Backward)	\
    (This)->lpVtbl -> put_Backward(This,Backward)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadText_get_TextString_Proxy( 
    IAcadText * This,
    /* [retval][out] */ BSTR *bstrText);


void __RPC_STUB IAcadText_get_TextString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadText_put_TextString_Proxy( 
    IAcadText * This,
    /* [in] */ BSTR bstrText);


void __RPC_STUB IAcadText_put_TextString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadText_get_StyleName_Proxy( 
    IAcadText * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadText_get_StyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadText_put_StyleName_Proxy( 
    IAcadText * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadText_put_StyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadText_get_Alignment_Proxy( 
    IAcadText * This,
    /* [retval][out] */ AcAlignment *align);


void __RPC_STUB IAcadText_get_Alignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadText_put_Alignment_Proxy( 
    IAcadText * This,
    /* [in] */ AcAlignment align);


void __RPC_STUB IAcadText_put_Alignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadText_get_HorizontalAlignment_Proxy( 
    IAcadText * This,
    /* [retval][out] */ AcHorizontalAlignment *horizAlign);


void __RPC_STUB IAcadText_get_HorizontalAlignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadText_put_HorizontalAlignment_Proxy( 
    IAcadText * This,
    /* [in] */ AcHorizontalAlignment horizAlign);


void __RPC_STUB IAcadText_put_HorizontalAlignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadText_get_VerticalAlignment_Proxy( 
    IAcadText * This,
    /* [retval][out] */ AcVerticalAlignment *vertiAlign);


void __RPC_STUB IAcadText_get_VerticalAlignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadText_put_VerticalAlignment_Proxy( 
    IAcadText * This,
    /* [in] */ AcVerticalAlignment vertiAlign);


void __RPC_STUB IAcadText_put_VerticalAlignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadText_get_Height_Proxy( 
    IAcadText * This,
    /* [retval][out] */ double *Height);


void __RPC_STUB IAcadText_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadText_put_Height_Proxy( 
    IAcadText * This,
    /* [in] */ double Height);


void __RPC_STUB IAcadText_put_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadText_get_Rotation_Proxy( 
    IAcadText * This,
    /* [retval][out] */ ACAD_ANGLE *rotAngle);


void __RPC_STUB IAcadText_get_Rotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadText_put_Rotation_Proxy( 
    IAcadText * This,
    /* [in] */ ACAD_ANGLE rotAngle);


void __RPC_STUB IAcadText_put_Rotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadText_get_ScaleFactor_Proxy( 
    IAcadText * This,
    /* [retval][out] */ ACAD_NOUNITS *scalFactor);


void __RPC_STUB IAcadText_get_ScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadText_put_ScaleFactor_Proxy( 
    IAcadText * This,
    /* [in] */ ACAD_NOUNITS scalFactor);


void __RPC_STUB IAcadText_put_ScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadText_get_ObliqueAngle_Proxy( 
    IAcadText * This,
    /* [retval][out] */ ACAD_ANGLE *obliAngle);


void __RPC_STUB IAcadText_get_ObliqueAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadText_put_ObliqueAngle_Proxy( 
    IAcadText * This,
    /* [in] */ ACAD_ANGLE obliAngle);


void __RPC_STUB IAcadText_put_ObliqueAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadText_get_TextAlignmentPoint_Proxy( 
    IAcadText * This,
    /* [retval][out] */ VARIANT *alignPoint);


void __RPC_STUB IAcadText_get_TextAlignmentPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadText_put_TextAlignmentPoint_Proxy( 
    IAcadText * This,
    /* [in] */ VARIANT alignPoint);


void __RPC_STUB IAcadText_put_TextAlignmentPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadText_get_InsertionPoint_Proxy( 
    IAcadText * This,
    /* [retval][out] */ VARIANT *insPoint);


void __RPC_STUB IAcadText_get_InsertionPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadText_put_InsertionPoint_Proxy( 
    IAcadText * This,
    /* [in] */ VARIANT insPoint);


void __RPC_STUB IAcadText_put_InsertionPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadText_get_Normal_Proxy( 
    IAcadText * This,
    /* [retval][out] */ VARIANT *Normal);


void __RPC_STUB IAcadText_get_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadText_put_Normal_Proxy( 
    IAcadText * This,
    /* [in] */ VARIANT Normal);


void __RPC_STUB IAcadText_put_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadText_get_TextGenerationFlag_Proxy( 
    IAcadText * This,
    /* [retval][out] */ long *textGenFlag);


void __RPC_STUB IAcadText_get_TextGenerationFlag_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadText_put_TextGenerationFlag_Proxy( 
    IAcadText * This,
    /* [in] */ long textGenFlag);


void __RPC_STUB IAcadText_put_TextGenerationFlag_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadText_get_Thickness_Proxy( 
    IAcadText * This,
    /* [retval][out] */ double *Thickness);


void __RPC_STUB IAcadText_get_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadText_put_Thickness_Proxy( 
    IAcadText * This,
    /* [in] */ double Thickness);


void __RPC_STUB IAcadText_put_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadText_get_UpsideDown_Proxy( 
    IAcadText * This,
    /* [retval][out] */ VARIANT_BOOL *UpsideDown);


void __RPC_STUB IAcadText_get_UpsideDown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadText_put_UpsideDown_Proxy( 
    IAcadText * This,
    /* [in] */ VARIANT_BOOL UpsideDown);


void __RPC_STUB IAcadText_put_UpsideDown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadText_get_Backward_Proxy( 
    IAcadText * This,
    /* [retval][out] */ VARIANT_BOOL *Backward);


void __RPC_STUB IAcadText_get_Backward_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadText_put_Backward_Proxy( 
    IAcadText * This,
    /* [in] */ VARIANT_BOOL Backward);


void __RPC_STUB IAcadText_put_Backward_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadText_INTERFACE_DEFINED__ */


#ifndef __IAcadTolerance_INTERFACE_DEFINED__
#define __IAcadTolerance_INTERFACE_DEFINED__

/* interface IAcadTolerance */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadTolerance;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("82A7FD1F-1FB7-411A-BCA9-7074F9AD99EB")
    IAcadTolerance : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DirectionVector( 
            /* [retval][out] */ VARIANT *dirVector) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DirectionVector( 
            /* [in] */ VARIANT dirVector) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_InsertionPoint( 
            /* [retval][out] */ VARIANT *insPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_InsertionPoint( 
            /* [in] */ VARIANT insPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *Normal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT Normal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_StyleName( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_StyleName( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextColor( 
            /* [retval][out] */ ACAD_COLOR *color) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextColor( 
            /* [in] */ ACAD_COLOR color) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextString( 
            /* [retval][out] */ BSTR *bstrText) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextString( 
            /* [in] */ BSTR bstrText) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextStyle( 
            /* [retval][out] */ BSTR *style) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextStyle( 
            /* [in] */ BSTR style) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextHeight( 
            /* [retval][out] */ double *Height) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextHeight( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ScaleFactor( 
            /* [retval][out] */ ACAD_NOUNITS *factor) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ScaleFactor( 
            /* [in] */ ACAD_NOUNITS factor) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimensionLineColor( 
            /* [retval][out] */ ACAD_COLOR *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimensionLineColor( 
            /* [in] */ ACAD_COLOR Type) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadToleranceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadTolerance * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadTolerance * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadTolerance * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadTolerance * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadTolerance * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadTolerance * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadTolerance * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadTolerance * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadTolerance * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadTolerance * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadTolerance * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadTolerance * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadTolerance * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadTolerance * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadTolerance * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadTolerance * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadTolerance * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadTolerance * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadTolerance * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadTolerance * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadTolerance * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadTolerance * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadTolerance * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadTolerance * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadTolerance * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadTolerance * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadTolerance * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadTolerance * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadTolerance * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadTolerance * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadTolerance * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadTolerance * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadTolerance * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadTolerance * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadTolerance * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadTolerance * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadTolerance * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadTolerance * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadTolerance * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadTolerance * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadTolerance * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadTolerance * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadTolerance * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadTolerance * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadTolerance * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadTolerance * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadTolerance * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadTolerance * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadTolerance * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadTolerance * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadTolerance * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadTolerance * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadTolerance * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DirectionVector )( 
            IAcadTolerance * This,
            /* [retval][out] */ VARIANT *dirVector);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DirectionVector )( 
            IAcadTolerance * This,
            /* [in] */ VARIANT dirVector);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IAcadTolerance * This,
            /* [retval][out] */ VARIANT *insPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IAcadTolerance * This,
            /* [in] */ VARIANT insPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadTolerance * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadTolerance * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IAcadTolerance * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IAcadTolerance * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextColor )( 
            IAcadTolerance * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextColor )( 
            IAcadTolerance * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextString )( 
            IAcadTolerance * This,
            /* [retval][out] */ BSTR *bstrText);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextString )( 
            IAcadTolerance * This,
            /* [in] */ BSTR bstrText);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextStyle )( 
            IAcadTolerance * This,
            /* [retval][out] */ BSTR *style);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextStyle )( 
            IAcadTolerance * This,
            /* [in] */ BSTR style);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextHeight )( 
            IAcadTolerance * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextHeight )( 
            IAcadTolerance * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IAcadTolerance * This,
            /* [retval][out] */ ACAD_NOUNITS *factor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IAcadTolerance * This,
            /* [in] */ ACAD_NOUNITS factor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineColor )( 
            IAcadTolerance * This,
            /* [retval][out] */ ACAD_COLOR *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineColor )( 
            IAcadTolerance * This,
            /* [in] */ ACAD_COLOR Type);
        
        END_INTERFACE
    } IAcadToleranceVtbl;

    interface IAcadTolerance
    {
        CONST_VTBL struct IAcadToleranceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadTolerance_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadTolerance_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadTolerance_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadTolerance_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadTolerance_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadTolerance_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadTolerance_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadTolerance_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadTolerance_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadTolerance_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadTolerance_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadTolerance_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadTolerance_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadTolerance_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadTolerance_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadTolerance_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadTolerance_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadTolerance_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadTolerance_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadTolerance_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadTolerance_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadTolerance_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadTolerance_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadTolerance_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadTolerance_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadTolerance_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadTolerance_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadTolerance_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadTolerance_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadTolerance_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadTolerance_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadTolerance_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadTolerance_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadTolerance_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadTolerance_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadTolerance_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadTolerance_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadTolerance_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadTolerance_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadTolerance_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadTolerance_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadTolerance_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadTolerance_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadTolerance_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadTolerance_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadTolerance_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadTolerance_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadTolerance_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadTolerance_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadTolerance_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadTolerance_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadTolerance_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadTolerance_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadTolerance_get_DirectionVector(This,dirVector)	\
    (This)->lpVtbl -> get_DirectionVector(This,dirVector)

#define IAcadTolerance_put_DirectionVector(This,dirVector)	\
    (This)->lpVtbl -> put_DirectionVector(This,dirVector)

#define IAcadTolerance_get_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> get_InsertionPoint(This,insPoint)

#define IAcadTolerance_put_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> put_InsertionPoint(This,insPoint)

#define IAcadTolerance_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadTolerance_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadTolerance_get_StyleName(This,bstrName)	\
    (This)->lpVtbl -> get_StyleName(This,bstrName)

#define IAcadTolerance_put_StyleName(This,bstrName)	\
    (This)->lpVtbl -> put_StyleName(This,bstrName)

#define IAcadTolerance_get_TextColor(This,color)	\
    (This)->lpVtbl -> get_TextColor(This,color)

#define IAcadTolerance_put_TextColor(This,color)	\
    (This)->lpVtbl -> put_TextColor(This,color)

#define IAcadTolerance_get_TextString(This,bstrText)	\
    (This)->lpVtbl -> get_TextString(This,bstrText)

#define IAcadTolerance_put_TextString(This,bstrText)	\
    (This)->lpVtbl -> put_TextString(This,bstrText)

#define IAcadTolerance_get_TextStyle(This,style)	\
    (This)->lpVtbl -> get_TextStyle(This,style)

#define IAcadTolerance_put_TextStyle(This,style)	\
    (This)->lpVtbl -> put_TextStyle(This,style)

#define IAcadTolerance_get_TextHeight(This,Height)	\
    (This)->lpVtbl -> get_TextHeight(This,Height)

#define IAcadTolerance_put_TextHeight(This,Height)	\
    (This)->lpVtbl -> put_TextHeight(This,Height)

#define IAcadTolerance_get_ScaleFactor(This,factor)	\
    (This)->lpVtbl -> get_ScaleFactor(This,factor)

#define IAcadTolerance_put_ScaleFactor(This,factor)	\
    (This)->lpVtbl -> put_ScaleFactor(This,factor)

#define IAcadTolerance_get_DimensionLineColor(This,Type)	\
    (This)->lpVtbl -> get_DimensionLineColor(This,Type)

#define IAcadTolerance_put_DimensionLineColor(This,Type)	\
    (This)->lpVtbl -> put_DimensionLineColor(This,Type)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTolerance_get_DirectionVector_Proxy( 
    IAcadTolerance * This,
    /* [retval][out] */ VARIANT *dirVector);


void __RPC_STUB IAcadTolerance_get_DirectionVector_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTolerance_put_DirectionVector_Proxy( 
    IAcadTolerance * This,
    /* [in] */ VARIANT dirVector);


void __RPC_STUB IAcadTolerance_put_DirectionVector_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTolerance_get_InsertionPoint_Proxy( 
    IAcadTolerance * This,
    /* [retval][out] */ VARIANT *insPoint);


void __RPC_STUB IAcadTolerance_get_InsertionPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTolerance_put_InsertionPoint_Proxy( 
    IAcadTolerance * This,
    /* [in] */ VARIANT insPoint);


void __RPC_STUB IAcadTolerance_put_InsertionPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTolerance_get_Normal_Proxy( 
    IAcadTolerance * This,
    /* [retval][out] */ VARIANT *Normal);


void __RPC_STUB IAcadTolerance_get_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTolerance_put_Normal_Proxy( 
    IAcadTolerance * This,
    /* [in] */ VARIANT Normal);


void __RPC_STUB IAcadTolerance_put_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTolerance_get_StyleName_Proxy( 
    IAcadTolerance * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadTolerance_get_StyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTolerance_put_StyleName_Proxy( 
    IAcadTolerance * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadTolerance_put_StyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTolerance_get_TextColor_Proxy( 
    IAcadTolerance * This,
    /* [retval][out] */ ACAD_COLOR *color);


void __RPC_STUB IAcadTolerance_get_TextColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTolerance_put_TextColor_Proxy( 
    IAcadTolerance * This,
    /* [in] */ ACAD_COLOR color);


void __RPC_STUB IAcadTolerance_put_TextColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTolerance_get_TextString_Proxy( 
    IAcadTolerance * This,
    /* [retval][out] */ BSTR *bstrText);


void __RPC_STUB IAcadTolerance_get_TextString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTolerance_put_TextString_Proxy( 
    IAcadTolerance * This,
    /* [in] */ BSTR bstrText);


void __RPC_STUB IAcadTolerance_put_TextString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTolerance_get_TextStyle_Proxy( 
    IAcadTolerance * This,
    /* [retval][out] */ BSTR *style);


void __RPC_STUB IAcadTolerance_get_TextStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTolerance_put_TextStyle_Proxy( 
    IAcadTolerance * This,
    /* [in] */ BSTR style);


void __RPC_STUB IAcadTolerance_put_TextStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTolerance_get_TextHeight_Proxy( 
    IAcadTolerance * This,
    /* [retval][out] */ double *Height);


void __RPC_STUB IAcadTolerance_get_TextHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTolerance_put_TextHeight_Proxy( 
    IAcadTolerance * This,
    /* [in] */ double Height);


void __RPC_STUB IAcadTolerance_put_TextHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTolerance_get_ScaleFactor_Proxy( 
    IAcadTolerance * This,
    /* [retval][out] */ ACAD_NOUNITS *factor);


void __RPC_STUB IAcadTolerance_get_ScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTolerance_put_ScaleFactor_Proxy( 
    IAcadTolerance * This,
    /* [in] */ ACAD_NOUNITS factor);


void __RPC_STUB IAcadTolerance_put_ScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTolerance_get_DimensionLineColor_Proxy( 
    IAcadTolerance * This,
    /* [retval][out] */ ACAD_COLOR *Type);


void __RPC_STUB IAcadTolerance_get_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTolerance_put_DimensionLineColor_Proxy( 
    IAcadTolerance * This,
    /* [in] */ ACAD_COLOR Type);


void __RPC_STUB IAcadTolerance_put_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadTolerance_INTERFACE_DEFINED__ */


#ifndef __IAcadTrace_INTERFACE_DEFINED__
#define __IAcadTrace_INTERFACE_DEFINED__

/* interface IAcadTrace */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadTrace;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("506FED0C-4FF3-4550-AD8F-61614B334365")
    IAcadTrace : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *corners) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT corners) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *Normal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT Normal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *Thickness) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thickness) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Coordinate( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Coordinate( 
            /* [in] */ int Index,
            /* [in] */ VARIANT pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadTraceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadTrace * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadTrace * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadTrace * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadTrace * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadTrace * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadTrace * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadTrace * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadTrace * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadTrace * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadTrace * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadTrace * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadTrace * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadTrace * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadTrace * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadTrace * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadTrace * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadTrace * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadTrace * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadTrace * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadTrace * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadTrace * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadTrace * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadTrace * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadTrace * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadTrace * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadTrace * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadTrace * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadTrace * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadTrace * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadTrace * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadTrace * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadTrace * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadTrace * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadTrace * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadTrace * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadTrace * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadTrace * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadTrace * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadTrace * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadTrace * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadTrace * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadTrace * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadTrace * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadTrace * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadTrace * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadTrace * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadTrace * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadTrace * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadTrace * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadTrace * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadTrace * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadTrace * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadTrace * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IAcadTrace * This,
            /* [retval][out] */ VARIANT *corners);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IAcadTrace * This,
            /* [in] */ VARIANT corners);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadTrace * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadTrace * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IAcadTrace * This,
            /* [retval][out] */ double *Thickness);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IAcadTrace * This,
            /* [in] */ double Thickness);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinate )( 
            IAcadTrace * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinate )( 
            IAcadTrace * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT pVal);
        
        END_INTERFACE
    } IAcadTraceVtbl;

    interface IAcadTrace
    {
        CONST_VTBL struct IAcadTraceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadTrace_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadTrace_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadTrace_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadTrace_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadTrace_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadTrace_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadTrace_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadTrace_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadTrace_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadTrace_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadTrace_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadTrace_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadTrace_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadTrace_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadTrace_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadTrace_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadTrace_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadTrace_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadTrace_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadTrace_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadTrace_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadTrace_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadTrace_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadTrace_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadTrace_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadTrace_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadTrace_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadTrace_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadTrace_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadTrace_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadTrace_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadTrace_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadTrace_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadTrace_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadTrace_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadTrace_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadTrace_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadTrace_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadTrace_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadTrace_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadTrace_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadTrace_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadTrace_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadTrace_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadTrace_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadTrace_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadTrace_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadTrace_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadTrace_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadTrace_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadTrace_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadTrace_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadTrace_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadTrace_get_Coordinates(This,corners)	\
    (This)->lpVtbl -> get_Coordinates(This,corners)

#define IAcadTrace_put_Coordinates(This,corners)	\
    (This)->lpVtbl -> put_Coordinates(This,corners)

#define IAcadTrace_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadTrace_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadTrace_get_Thickness(This,Thickness)	\
    (This)->lpVtbl -> get_Thickness(This,Thickness)

#define IAcadTrace_put_Thickness(This,Thickness)	\
    (This)->lpVtbl -> put_Thickness(This,Thickness)

#define IAcadTrace_get_Coordinate(This,Index,pVal)	\
    (This)->lpVtbl -> get_Coordinate(This,Index,pVal)

#define IAcadTrace_put_Coordinate(This,Index,pVal)	\
    (This)->lpVtbl -> put_Coordinate(This,Index,pVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTrace_get_Coordinates_Proxy( 
    IAcadTrace * This,
    /* [retval][out] */ VARIANT *corners);


void __RPC_STUB IAcadTrace_get_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTrace_put_Coordinates_Proxy( 
    IAcadTrace * This,
    /* [in] */ VARIANT corners);


void __RPC_STUB IAcadTrace_put_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTrace_get_Normal_Proxy( 
    IAcadTrace * This,
    /* [retval][out] */ VARIANT *Normal);


void __RPC_STUB IAcadTrace_get_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTrace_put_Normal_Proxy( 
    IAcadTrace * This,
    /* [in] */ VARIANT Normal);


void __RPC_STUB IAcadTrace_put_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTrace_get_Thickness_Proxy( 
    IAcadTrace * This,
    /* [retval][out] */ double *Thickness);


void __RPC_STUB IAcadTrace_get_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTrace_put_Thickness_Proxy( 
    IAcadTrace * This,
    /* [in] */ double Thickness);


void __RPC_STUB IAcadTrace_put_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTrace_get_Coordinate_Proxy( 
    IAcadTrace * This,
    /* [in] */ int Index,
    /* [retval][out] */ VARIANT *pVal);


void __RPC_STUB IAcadTrace_get_Coordinate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTrace_put_Coordinate_Proxy( 
    IAcadTrace * This,
    /* [in] */ int Index,
    /* [in] */ VARIANT pVal);


void __RPC_STUB IAcadTrace_put_Coordinate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadTrace_INTERFACE_DEFINED__ */


#ifndef __IAcadXline_INTERFACE_DEFINED__
#define __IAcadXline_INTERFACE_DEFINED__

/* interface IAcadXline */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadXline;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5E5BD910-4F2F-4765-A509-1562430C8705")
    IAcadXline : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_BasePoint( 
            /* [retval][out] */ VARIANT *BasePoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_BasePoint( 
            /* [in] */ VARIANT BasePoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SecondPoint( 
            /* [retval][out] */ VARIANT *SecondPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SecondPoint( 
            /* [in] */ VARIANT SecondPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DirectionVector( 
            /* [retval][out] */ VARIANT *dirVector) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DirectionVector( 
            /* [in] */ VARIANT dirVector) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Offset( 
            /* [in] */ double Distance,
            /* [retval][out] */ VARIANT *pOffsetCurves) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadXlineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadXline * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadXline * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadXline * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadXline * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadXline * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadXline * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadXline * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadXline * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadXline * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadXline * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadXline * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadXline * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadXline * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadXline * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadXline * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadXline * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadXline * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadXline * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadXline * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadXline * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadXline * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadXline * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadXline * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadXline * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadXline * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadXline * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadXline * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadXline * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadXline * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadXline * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadXline * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadXline * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadXline * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadXline * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadXline * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadXline * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadXline * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadXline * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadXline * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadXline * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadXline * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadXline * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadXline * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadXline * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadXline * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadXline * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadXline * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadXline * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadXline * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadXline * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadXline * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadXline * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadXline * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BasePoint )( 
            IAcadXline * This,
            /* [retval][out] */ VARIANT *BasePoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BasePoint )( 
            IAcadXline * This,
            /* [in] */ VARIANT BasePoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SecondPoint )( 
            IAcadXline * This,
            /* [retval][out] */ VARIANT *SecondPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SecondPoint )( 
            IAcadXline * This,
            /* [in] */ VARIANT SecondPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DirectionVector )( 
            IAcadXline * This,
            /* [retval][out] */ VARIANT *dirVector);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DirectionVector )( 
            IAcadXline * This,
            /* [in] */ VARIANT dirVector);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Offset )( 
            IAcadXline * This,
            /* [in] */ double Distance,
            /* [retval][out] */ VARIANT *pOffsetCurves);
        
        END_INTERFACE
    } IAcadXlineVtbl;

    interface IAcadXline
    {
        CONST_VTBL struct IAcadXlineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadXline_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadXline_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadXline_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadXline_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadXline_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadXline_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadXline_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadXline_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadXline_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadXline_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadXline_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadXline_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadXline_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadXline_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadXline_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadXline_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadXline_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadXline_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadXline_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadXline_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadXline_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadXline_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadXline_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadXline_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadXline_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadXline_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadXline_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadXline_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadXline_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadXline_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadXline_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadXline_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadXline_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadXline_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadXline_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadXline_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadXline_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadXline_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadXline_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadXline_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadXline_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadXline_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadXline_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadXline_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadXline_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadXline_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadXline_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadXline_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadXline_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadXline_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadXline_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadXline_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadXline_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadXline_get_BasePoint(This,BasePoint)	\
    (This)->lpVtbl -> get_BasePoint(This,BasePoint)

#define IAcadXline_put_BasePoint(This,BasePoint)	\
    (This)->lpVtbl -> put_BasePoint(This,BasePoint)

#define IAcadXline_get_SecondPoint(This,SecondPoint)	\
    (This)->lpVtbl -> get_SecondPoint(This,SecondPoint)

#define IAcadXline_put_SecondPoint(This,SecondPoint)	\
    (This)->lpVtbl -> put_SecondPoint(This,SecondPoint)

#define IAcadXline_get_DirectionVector(This,dirVector)	\
    (This)->lpVtbl -> get_DirectionVector(This,dirVector)

#define IAcadXline_put_DirectionVector(This,dirVector)	\
    (This)->lpVtbl -> put_DirectionVector(This,dirVector)

#define IAcadXline_Offset(This,Distance,pOffsetCurves)	\
    (This)->lpVtbl -> Offset(This,Distance,pOffsetCurves)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadXline_get_BasePoint_Proxy( 
    IAcadXline * This,
    /* [retval][out] */ VARIANT *BasePoint);


void __RPC_STUB IAcadXline_get_BasePoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadXline_put_BasePoint_Proxy( 
    IAcadXline * This,
    /* [in] */ VARIANT BasePoint);


void __RPC_STUB IAcadXline_put_BasePoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadXline_get_SecondPoint_Proxy( 
    IAcadXline * This,
    /* [retval][out] */ VARIANT *SecondPoint);


void __RPC_STUB IAcadXline_get_SecondPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadXline_put_SecondPoint_Proxy( 
    IAcadXline * This,
    /* [in] */ VARIANT SecondPoint);


void __RPC_STUB IAcadXline_put_SecondPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadXline_get_DirectionVector_Proxy( 
    IAcadXline * This,
    /* [retval][out] */ VARIANT *dirVector);


void __RPC_STUB IAcadXline_get_DirectionVector_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadXline_put_DirectionVector_Proxy( 
    IAcadXline * This,
    /* [in] */ VARIANT dirVector);


void __RPC_STUB IAcadXline_put_DirectionVector_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadXline_Offset_Proxy( 
    IAcadXline * This,
    /* [in] */ double Distance,
    /* [retval][out] */ VARIANT *pOffsetCurves);


void __RPC_STUB IAcadXline_Offset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadXline_INTERFACE_DEFINED__ */


#ifndef __IAcadBlockReference_INTERFACE_DEFINED__
#define __IAcadBlockReference_INTERFACE_DEFINED__

/* interface IAcadBlockReference */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadBlockReference;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D50215E2-500B-4302-9C0E-991399B6C749")
    IAcadBlockReference : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_InsertionPoint( 
            /* [retval][out] */ VARIANT *insPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_InsertionPoint( 
            /* [in] */ VARIANT insPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *Normal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT Normal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
            /* [retval][out] */ ACAD_ANGLE *rotAngle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
            /* [in] */ ACAD_ANGLE rotAngle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_XScaleFactor( 
            /* [retval][out] */ ACAD_NOUNITS *ScaleFactor) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_XScaleFactor( 
            /* [in] */ ACAD_NOUNITS ScaleFactor) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_YScaleFactor( 
            /* [retval][out] */ ACAD_NOUNITS *ScaleFactor) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_YScaleFactor( 
            /* [in] */ ACAD_NOUNITS ScaleFactor) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ZScaleFactor( 
            /* [retval][out] */ ACAD_NOUNITS *ScaleFactor) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ZScaleFactor( 
            /* [in] */ ACAD_NOUNITS ScaleFactor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Explode( 
            /* [retval][out] */ VARIANT *pArrayObjs) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetAttributes( 
            /* [retval][out] */ VARIANT *pAttrObjs) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetConstantAttributes( 
            /* [retval][out] */ VARIANT *pAttrObjs) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HasAttributes( 
            /* [retval][out] */ VARIANT_BOOL *bHas) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadBlockReferenceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadBlockReference * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadBlockReference * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadBlockReference * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadBlockReference * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadBlockReference * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadBlockReference * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadBlockReference * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadBlockReference * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadBlockReference * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadBlockReference * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadBlockReference * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadBlockReference * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadBlockReference * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadBlockReference * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadBlockReference * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadBlockReference * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadBlockReference * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadBlockReference * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadBlockReference * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadBlockReference * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadBlockReference * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadBlockReference * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadBlockReference * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadBlockReference * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadBlockReference * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadBlockReference * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadBlockReference * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadBlockReference * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadBlockReference * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadBlockReference * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadBlockReference * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadBlockReference * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadBlockReference * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadBlockReference * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadBlockReference * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadBlockReference * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadBlockReference * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadBlockReference * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadBlockReference * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadBlockReference * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadBlockReference * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadBlockReference * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadBlockReference * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadBlockReference * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadBlockReference * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadBlockReference * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadBlockReference * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadBlockReference * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadBlockReference * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadBlockReference * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadBlockReference * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadBlockReference * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadBlockReference * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IAcadBlockReference * This,
            /* [retval][out] */ VARIANT *insPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IAcadBlockReference * This,
            /* [in] */ VARIANT insPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadBlockReference * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadBlockReference * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadBlockReference * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadBlockReference * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IAcadBlockReference * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IAcadBlockReference * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XScaleFactor )( 
            IAcadBlockReference * This,
            /* [retval][out] */ ACAD_NOUNITS *ScaleFactor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_XScaleFactor )( 
            IAcadBlockReference * This,
            /* [in] */ ACAD_NOUNITS ScaleFactor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_YScaleFactor )( 
            IAcadBlockReference * This,
            /* [retval][out] */ ACAD_NOUNITS *ScaleFactor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_YScaleFactor )( 
            IAcadBlockReference * This,
            /* [in] */ ACAD_NOUNITS ScaleFactor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ZScaleFactor )( 
            IAcadBlockReference * This,
            /* [retval][out] */ ACAD_NOUNITS *ScaleFactor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ZScaleFactor )( 
            IAcadBlockReference * This,
            /* [in] */ ACAD_NOUNITS ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Explode )( 
            IAcadBlockReference * This,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetAttributes )( 
            IAcadBlockReference * This,
            /* [retval][out] */ VARIANT *pAttrObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetConstantAttributes )( 
            IAcadBlockReference * This,
            /* [retval][out] */ VARIANT *pAttrObjs);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasAttributes )( 
            IAcadBlockReference * This,
            /* [retval][out] */ VARIANT_BOOL *bHas);
        
        END_INTERFACE
    } IAcadBlockReferenceVtbl;

    interface IAcadBlockReference
    {
        CONST_VTBL struct IAcadBlockReferenceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadBlockReference_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadBlockReference_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadBlockReference_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadBlockReference_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadBlockReference_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadBlockReference_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadBlockReference_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadBlockReference_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadBlockReference_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadBlockReference_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadBlockReference_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadBlockReference_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadBlockReference_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadBlockReference_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadBlockReference_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadBlockReference_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadBlockReference_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadBlockReference_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadBlockReference_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadBlockReference_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadBlockReference_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadBlockReference_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadBlockReference_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadBlockReference_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadBlockReference_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadBlockReference_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadBlockReference_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadBlockReference_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadBlockReference_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadBlockReference_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadBlockReference_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadBlockReference_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadBlockReference_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadBlockReference_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadBlockReference_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadBlockReference_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadBlockReference_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadBlockReference_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadBlockReference_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadBlockReference_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadBlockReference_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadBlockReference_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadBlockReference_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadBlockReference_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadBlockReference_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadBlockReference_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadBlockReference_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadBlockReference_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadBlockReference_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadBlockReference_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadBlockReference_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadBlockReference_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadBlockReference_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadBlockReference_get_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> get_InsertionPoint(This,insPoint)

#define IAcadBlockReference_put_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> put_InsertionPoint(This,insPoint)

#define IAcadBlockReference_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadBlockReference_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#define IAcadBlockReference_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadBlockReference_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadBlockReference_get_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> get_Rotation(This,rotAngle)

#define IAcadBlockReference_put_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> put_Rotation(This,rotAngle)

#define IAcadBlockReference_get_XScaleFactor(This,ScaleFactor)	\
    (This)->lpVtbl -> get_XScaleFactor(This,ScaleFactor)

#define IAcadBlockReference_put_XScaleFactor(This,ScaleFactor)	\
    (This)->lpVtbl -> put_XScaleFactor(This,ScaleFactor)

#define IAcadBlockReference_get_YScaleFactor(This,ScaleFactor)	\
    (This)->lpVtbl -> get_YScaleFactor(This,ScaleFactor)

#define IAcadBlockReference_put_YScaleFactor(This,ScaleFactor)	\
    (This)->lpVtbl -> put_YScaleFactor(This,ScaleFactor)

#define IAcadBlockReference_get_ZScaleFactor(This,ScaleFactor)	\
    (This)->lpVtbl -> get_ZScaleFactor(This,ScaleFactor)

#define IAcadBlockReference_put_ZScaleFactor(This,ScaleFactor)	\
    (This)->lpVtbl -> put_ZScaleFactor(This,ScaleFactor)

#define IAcadBlockReference_Explode(This,pArrayObjs)	\
    (This)->lpVtbl -> Explode(This,pArrayObjs)

#define IAcadBlockReference_GetAttributes(This,pAttrObjs)	\
    (This)->lpVtbl -> GetAttributes(This,pAttrObjs)

#define IAcadBlockReference_GetConstantAttributes(This,pAttrObjs)	\
    (This)->lpVtbl -> GetConstantAttributes(This,pAttrObjs)

#define IAcadBlockReference_get_HasAttributes(This,bHas)	\
    (This)->lpVtbl -> get_HasAttributes(This,bHas)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadBlockReference_get_InsertionPoint_Proxy( 
    IAcadBlockReference * This,
    /* [retval][out] */ VARIANT *insPoint);


void __RPC_STUB IAcadBlockReference_get_InsertionPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadBlockReference_put_InsertionPoint_Proxy( 
    IAcadBlockReference * This,
    /* [in] */ VARIANT insPoint);


void __RPC_STUB IAcadBlockReference_put_InsertionPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadBlockReference_get_Name_Proxy( 
    IAcadBlockReference * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadBlockReference_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadBlockReference_put_Name_Proxy( 
    IAcadBlockReference * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadBlockReference_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadBlockReference_get_Normal_Proxy( 
    IAcadBlockReference * This,
    /* [retval][out] */ VARIANT *Normal);


void __RPC_STUB IAcadBlockReference_get_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadBlockReference_put_Normal_Proxy( 
    IAcadBlockReference * This,
    /* [in] */ VARIANT Normal);


void __RPC_STUB IAcadBlockReference_put_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadBlockReference_get_Rotation_Proxy( 
    IAcadBlockReference * This,
    /* [retval][out] */ ACAD_ANGLE *rotAngle);


void __RPC_STUB IAcadBlockReference_get_Rotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadBlockReference_put_Rotation_Proxy( 
    IAcadBlockReference * This,
    /* [in] */ ACAD_ANGLE rotAngle);


void __RPC_STUB IAcadBlockReference_put_Rotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadBlockReference_get_XScaleFactor_Proxy( 
    IAcadBlockReference * This,
    /* [retval][out] */ ACAD_NOUNITS *ScaleFactor);


void __RPC_STUB IAcadBlockReference_get_XScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadBlockReference_put_XScaleFactor_Proxy( 
    IAcadBlockReference * This,
    /* [in] */ ACAD_NOUNITS ScaleFactor);


void __RPC_STUB IAcadBlockReference_put_XScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadBlockReference_get_YScaleFactor_Proxy( 
    IAcadBlockReference * This,
    /* [retval][out] */ ACAD_NOUNITS *ScaleFactor);


void __RPC_STUB IAcadBlockReference_get_YScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadBlockReference_put_YScaleFactor_Proxy( 
    IAcadBlockReference * This,
    /* [in] */ ACAD_NOUNITS ScaleFactor);


void __RPC_STUB IAcadBlockReference_put_YScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadBlockReference_get_ZScaleFactor_Proxy( 
    IAcadBlockReference * This,
    /* [retval][out] */ ACAD_NOUNITS *ScaleFactor);


void __RPC_STUB IAcadBlockReference_get_ZScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadBlockReference_put_ZScaleFactor_Proxy( 
    IAcadBlockReference * This,
    /* [in] */ ACAD_NOUNITS ScaleFactor);


void __RPC_STUB IAcadBlockReference_put_ZScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlockReference_Explode_Proxy( 
    IAcadBlockReference * This,
    /* [retval][out] */ VARIANT *pArrayObjs);


void __RPC_STUB IAcadBlockReference_Explode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlockReference_GetAttributes_Proxy( 
    IAcadBlockReference * This,
    /* [retval][out] */ VARIANT *pAttrObjs);


void __RPC_STUB IAcadBlockReference_GetAttributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlockReference_GetConstantAttributes_Proxy( 
    IAcadBlockReference * This,
    /* [retval][out] */ VARIANT *pAttrObjs);


void __RPC_STUB IAcadBlockReference_GetConstantAttributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadBlockReference_get_HasAttributes_Proxy( 
    IAcadBlockReference * This,
    /* [retval][out] */ VARIANT_BOOL *bHas);


void __RPC_STUB IAcadBlockReference_get_HasAttributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadBlockReference_INTERFACE_DEFINED__ */


#ifndef __IAcadHatch_INTERFACE_DEFINED__
#define __IAcadHatch_INTERFACE_DEFINED__

/* interface IAcadHatch */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadHatch;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("37E8D218-CE9E-4AD1-A1DB-B19A032EBED0")
    IAcadHatch : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *Normal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT Normal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_NumberOfLoops( 
            /* [retval][out] */ long *numLoops) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PatternType( 
            /* [retval][out] */ AcPatternType *PatternType) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PatternName( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PatternAngle( 
            /* [retval][out] */ ACAD_ANGLE *PatternAngle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PatternAngle( 
            /* [in] */ ACAD_ANGLE PatternAngle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PatternScale( 
            /* [retval][out] */ ACAD_NOUNITS *PatternScale) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PatternScale( 
            /* [in] */ ACAD_NOUNITS PatternScale) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PatternSpace( 
            /* [retval][out] */ double *PatternSpace) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PatternSpace( 
            /* [in] */ double PatternSpace) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ISOPenWidth( 
            /* [retval][out] */ AcISOPenWidth *penWidth) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ISOPenWidth( 
            /* [in] */ AcISOPenWidth penWidth) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PatternDouble( 
            /* [retval][out] */ VARIANT_BOOL *bDouble) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PatternDouble( 
            /* [in] */ VARIANT_BOOL bDouble) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Elevation( 
            /* [retval][out] */ double *Elevation) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Elevation( 
            /* [in] */ double Elevation) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AssociativeHatch( 
            /* [retval][out] */ VARIANT_BOOL *fAssoc) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AssociativeHatch( 
            /* [in] */ VARIANT_BOOL fAssoc) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HatchStyle( 
            /* [retval][out] */ AcHatchStyle *HatchStyle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_HatchStyle( 
            /* [in] */ AcHatchStyle HatchStyle) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetPattern( 
            /* [in] */ int PatternType,
            /* [in] */ BSTR PatternName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AppendOuterLoop( 
            /* [in] */ VARIANT ObjectArray) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AppendInnerLoop( 
            /* [in] */ VARIANT ObjectArray) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE InsertLoopAt( 
            /* [in] */ int Index,
            /* [in] */ AcLoopType LoopType,
            /* [in] */ VARIANT ObjectArray) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetLoopAt( 
            /* [in] */ int Index,
            /* [out] */ VARIANT *ObjectArray) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Evaluate( void) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_GradientColor1( 
            /* [retval][out] */ IAcadAcCmColor **pColor) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_GradientColor1( 
            /* [in] */ IAcadAcCmColor *pColor) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_GradientColor2( 
            /* [retval][out] */ IAcadAcCmColor **pColor) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_GradientColor2( 
            /* [in] */ IAcadAcCmColor *pColor) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_GradientAngle( 
            /* [retval][out] */ ACAD_ANGLE *GradientAngle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_GradientAngle( 
            /* [in] */ ACAD_ANGLE GradientAngle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_GradientCentered( 
            /* [retval][out] */ VARIANT_BOOL *fCentered) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_GradientCentered( 
            /* [in] */ VARIANT_BOOL fCentered) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_GradientName( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_GradientName( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HatchObjectType( 
            /* [retval][out] */ AcHatchObjectType *hatchType) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_HatchObjectType( 
            /* [in] */ AcHatchObjectType hatchType) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadHatchVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadHatch * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadHatch * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadHatch * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadHatch * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadHatch * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadHatch * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadHatch * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadHatch * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadHatch * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadHatch * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadHatch * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadHatch * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadHatch * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadHatch * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadHatch * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadHatch * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadHatch * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadHatch * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadHatch * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadHatch * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadHatch * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadHatch * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadHatch * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadHatch * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadHatch * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadHatch * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadHatch * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadHatch * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadHatch * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadHatch * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadHatch * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadHatch * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadHatch * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadHatch * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadHatch * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadHatch * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadHatch * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadHatch * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadHatch * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadHatch * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadHatch * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadHatch * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadHatch * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadHatch * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadHatch * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadHatch * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadHatch * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadHatch * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadHatch * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadHatch * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadHatch * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadHatch * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadHatch * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadHatch * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadHatch * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NumberOfLoops )( 
            IAcadHatch * This,
            /* [retval][out] */ long *numLoops);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PatternType )( 
            IAcadHatch * This,
            /* [retval][out] */ AcPatternType *PatternType);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PatternName )( 
            IAcadHatch * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PatternAngle )( 
            IAcadHatch * This,
            /* [retval][out] */ ACAD_ANGLE *PatternAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PatternAngle )( 
            IAcadHatch * This,
            /* [in] */ ACAD_ANGLE PatternAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PatternScale )( 
            IAcadHatch * This,
            /* [retval][out] */ ACAD_NOUNITS *PatternScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PatternScale )( 
            IAcadHatch * This,
            /* [in] */ ACAD_NOUNITS PatternScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PatternSpace )( 
            IAcadHatch * This,
            /* [retval][out] */ double *PatternSpace);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PatternSpace )( 
            IAcadHatch * This,
            /* [in] */ double PatternSpace);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ISOPenWidth )( 
            IAcadHatch * This,
            /* [retval][out] */ AcISOPenWidth *penWidth);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ISOPenWidth )( 
            IAcadHatch * This,
            /* [in] */ AcISOPenWidth penWidth);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PatternDouble )( 
            IAcadHatch * This,
            /* [retval][out] */ VARIANT_BOOL *bDouble);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PatternDouble )( 
            IAcadHatch * This,
            /* [in] */ VARIANT_BOOL bDouble);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Elevation )( 
            IAcadHatch * This,
            /* [retval][out] */ double *Elevation);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Elevation )( 
            IAcadHatch * This,
            /* [in] */ double Elevation);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AssociativeHatch )( 
            IAcadHatch * This,
            /* [retval][out] */ VARIANT_BOOL *fAssoc);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AssociativeHatch )( 
            IAcadHatch * This,
            /* [in] */ VARIANT_BOOL fAssoc);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HatchStyle )( 
            IAcadHatch * This,
            /* [retval][out] */ AcHatchStyle *HatchStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HatchStyle )( 
            IAcadHatch * This,
            /* [in] */ AcHatchStyle HatchStyle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetPattern )( 
            IAcadHatch * This,
            /* [in] */ int PatternType,
            /* [in] */ BSTR PatternName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AppendOuterLoop )( 
            IAcadHatch * This,
            /* [in] */ VARIANT ObjectArray);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AppendInnerLoop )( 
            IAcadHatch * This,
            /* [in] */ VARIANT ObjectArray);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *InsertLoopAt )( 
            IAcadHatch * This,
            /* [in] */ int Index,
            /* [in] */ AcLoopType LoopType,
            /* [in] */ VARIANT ObjectArray);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetLoopAt )( 
            IAcadHatch * This,
            /* [in] */ int Index,
            /* [out] */ VARIANT *ObjectArray);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Evaluate )( 
            IAcadHatch * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GradientColor1 )( 
            IAcadHatch * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GradientColor1 )( 
            IAcadHatch * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GradientColor2 )( 
            IAcadHatch * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GradientColor2 )( 
            IAcadHatch * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GradientAngle )( 
            IAcadHatch * This,
            /* [retval][out] */ ACAD_ANGLE *GradientAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GradientAngle )( 
            IAcadHatch * This,
            /* [in] */ ACAD_ANGLE GradientAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GradientCentered )( 
            IAcadHatch * This,
            /* [retval][out] */ VARIANT_BOOL *fCentered);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GradientCentered )( 
            IAcadHatch * This,
            /* [in] */ VARIANT_BOOL fCentered);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GradientName )( 
            IAcadHatch * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GradientName )( 
            IAcadHatch * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HatchObjectType )( 
            IAcadHatch * This,
            /* [retval][out] */ AcHatchObjectType *hatchType);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HatchObjectType )( 
            IAcadHatch * This,
            /* [in] */ AcHatchObjectType hatchType);
        
        END_INTERFACE
    } IAcadHatchVtbl;

    interface IAcadHatch
    {
        CONST_VTBL struct IAcadHatchVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadHatch_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadHatch_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadHatch_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadHatch_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadHatch_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadHatch_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadHatch_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadHatch_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadHatch_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadHatch_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadHatch_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadHatch_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadHatch_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadHatch_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadHatch_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadHatch_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadHatch_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadHatch_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadHatch_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadHatch_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadHatch_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadHatch_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadHatch_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadHatch_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadHatch_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadHatch_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadHatch_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadHatch_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadHatch_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadHatch_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadHatch_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadHatch_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadHatch_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadHatch_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadHatch_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadHatch_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadHatch_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadHatch_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadHatch_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadHatch_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadHatch_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadHatch_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadHatch_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadHatch_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadHatch_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadHatch_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadHatch_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadHatch_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadHatch_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadHatch_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadHatch_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadHatch_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadHatch_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadHatch_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadHatch_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadHatch_get_NumberOfLoops(This,numLoops)	\
    (This)->lpVtbl -> get_NumberOfLoops(This,numLoops)

#define IAcadHatch_get_PatternType(This,PatternType)	\
    (This)->lpVtbl -> get_PatternType(This,PatternType)

#define IAcadHatch_get_PatternName(This,bstrName)	\
    (This)->lpVtbl -> get_PatternName(This,bstrName)

#define IAcadHatch_get_PatternAngle(This,PatternAngle)	\
    (This)->lpVtbl -> get_PatternAngle(This,PatternAngle)

#define IAcadHatch_put_PatternAngle(This,PatternAngle)	\
    (This)->lpVtbl -> put_PatternAngle(This,PatternAngle)

#define IAcadHatch_get_PatternScale(This,PatternScale)	\
    (This)->lpVtbl -> get_PatternScale(This,PatternScale)

#define IAcadHatch_put_PatternScale(This,PatternScale)	\
    (This)->lpVtbl -> put_PatternScale(This,PatternScale)

#define IAcadHatch_get_PatternSpace(This,PatternSpace)	\
    (This)->lpVtbl -> get_PatternSpace(This,PatternSpace)

#define IAcadHatch_put_PatternSpace(This,PatternSpace)	\
    (This)->lpVtbl -> put_PatternSpace(This,PatternSpace)

#define IAcadHatch_get_ISOPenWidth(This,penWidth)	\
    (This)->lpVtbl -> get_ISOPenWidth(This,penWidth)

#define IAcadHatch_put_ISOPenWidth(This,penWidth)	\
    (This)->lpVtbl -> put_ISOPenWidth(This,penWidth)

#define IAcadHatch_get_PatternDouble(This,bDouble)	\
    (This)->lpVtbl -> get_PatternDouble(This,bDouble)

#define IAcadHatch_put_PatternDouble(This,bDouble)	\
    (This)->lpVtbl -> put_PatternDouble(This,bDouble)

#define IAcadHatch_get_Elevation(This,Elevation)	\
    (This)->lpVtbl -> get_Elevation(This,Elevation)

#define IAcadHatch_put_Elevation(This,Elevation)	\
    (This)->lpVtbl -> put_Elevation(This,Elevation)

#define IAcadHatch_get_AssociativeHatch(This,fAssoc)	\
    (This)->lpVtbl -> get_AssociativeHatch(This,fAssoc)

#define IAcadHatch_put_AssociativeHatch(This,fAssoc)	\
    (This)->lpVtbl -> put_AssociativeHatch(This,fAssoc)

#define IAcadHatch_get_HatchStyle(This,HatchStyle)	\
    (This)->lpVtbl -> get_HatchStyle(This,HatchStyle)

#define IAcadHatch_put_HatchStyle(This,HatchStyle)	\
    (This)->lpVtbl -> put_HatchStyle(This,HatchStyle)

#define IAcadHatch_SetPattern(This,PatternType,PatternName)	\
    (This)->lpVtbl -> SetPattern(This,PatternType,PatternName)

#define IAcadHatch_AppendOuterLoop(This,ObjectArray)	\
    (This)->lpVtbl -> AppendOuterLoop(This,ObjectArray)

#define IAcadHatch_AppendInnerLoop(This,ObjectArray)	\
    (This)->lpVtbl -> AppendInnerLoop(This,ObjectArray)

#define IAcadHatch_InsertLoopAt(This,Index,LoopType,ObjectArray)	\
    (This)->lpVtbl -> InsertLoopAt(This,Index,LoopType,ObjectArray)

#define IAcadHatch_GetLoopAt(This,Index,ObjectArray)	\
    (This)->lpVtbl -> GetLoopAt(This,Index,ObjectArray)

#define IAcadHatch_Evaluate(This)	\
    (This)->lpVtbl -> Evaluate(This)

#define IAcadHatch_get_GradientColor1(This,pColor)	\
    (This)->lpVtbl -> get_GradientColor1(This,pColor)

#define IAcadHatch_put_GradientColor1(This,pColor)	\
    (This)->lpVtbl -> put_GradientColor1(This,pColor)

#define IAcadHatch_get_GradientColor2(This,pColor)	\
    (This)->lpVtbl -> get_GradientColor2(This,pColor)

#define IAcadHatch_put_GradientColor2(This,pColor)	\
    (This)->lpVtbl -> put_GradientColor2(This,pColor)

#define IAcadHatch_get_GradientAngle(This,GradientAngle)	\
    (This)->lpVtbl -> get_GradientAngle(This,GradientAngle)

#define IAcadHatch_put_GradientAngle(This,GradientAngle)	\
    (This)->lpVtbl -> put_GradientAngle(This,GradientAngle)

#define IAcadHatch_get_GradientCentered(This,fCentered)	\
    (This)->lpVtbl -> get_GradientCentered(This,fCentered)

#define IAcadHatch_put_GradientCentered(This,fCentered)	\
    (This)->lpVtbl -> put_GradientCentered(This,fCentered)

#define IAcadHatch_get_GradientName(This,bstrName)	\
    (This)->lpVtbl -> get_GradientName(This,bstrName)

#define IAcadHatch_put_GradientName(This,bstrName)	\
    (This)->lpVtbl -> put_GradientName(This,bstrName)

#define IAcadHatch_get_HatchObjectType(This,hatchType)	\
    (This)->lpVtbl -> get_HatchObjectType(This,hatchType)

#define IAcadHatch_put_HatchObjectType(This,hatchType)	\
    (This)->lpVtbl -> put_HatchObjectType(This,hatchType)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_get_Normal_Proxy( 
    IAcadHatch * This,
    /* [retval][out] */ VARIANT *Normal);


void __RPC_STUB IAcadHatch_get_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_put_Normal_Proxy( 
    IAcadHatch * This,
    /* [in] */ VARIANT Normal);


void __RPC_STUB IAcadHatch_put_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_get_NumberOfLoops_Proxy( 
    IAcadHatch * This,
    /* [retval][out] */ long *numLoops);


void __RPC_STUB IAcadHatch_get_NumberOfLoops_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_get_PatternType_Proxy( 
    IAcadHatch * This,
    /* [retval][out] */ AcPatternType *PatternType);


void __RPC_STUB IAcadHatch_get_PatternType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_get_PatternName_Proxy( 
    IAcadHatch * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadHatch_get_PatternName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_get_PatternAngle_Proxy( 
    IAcadHatch * This,
    /* [retval][out] */ ACAD_ANGLE *PatternAngle);


void __RPC_STUB IAcadHatch_get_PatternAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_put_PatternAngle_Proxy( 
    IAcadHatch * This,
    /* [in] */ ACAD_ANGLE PatternAngle);


void __RPC_STUB IAcadHatch_put_PatternAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_get_PatternScale_Proxy( 
    IAcadHatch * This,
    /* [retval][out] */ ACAD_NOUNITS *PatternScale);


void __RPC_STUB IAcadHatch_get_PatternScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_put_PatternScale_Proxy( 
    IAcadHatch * This,
    /* [in] */ ACAD_NOUNITS PatternScale);


void __RPC_STUB IAcadHatch_put_PatternScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_get_PatternSpace_Proxy( 
    IAcadHatch * This,
    /* [retval][out] */ double *PatternSpace);


void __RPC_STUB IAcadHatch_get_PatternSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_put_PatternSpace_Proxy( 
    IAcadHatch * This,
    /* [in] */ double PatternSpace);


void __RPC_STUB IAcadHatch_put_PatternSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_get_ISOPenWidth_Proxy( 
    IAcadHatch * This,
    /* [retval][out] */ AcISOPenWidth *penWidth);


void __RPC_STUB IAcadHatch_get_ISOPenWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_put_ISOPenWidth_Proxy( 
    IAcadHatch * This,
    /* [in] */ AcISOPenWidth penWidth);


void __RPC_STUB IAcadHatch_put_ISOPenWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_get_PatternDouble_Proxy( 
    IAcadHatch * This,
    /* [retval][out] */ VARIANT_BOOL *bDouble);


void __RPC_STUB IAcadHatch_get_PatternDouble_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_put_PatternDouble_Proxy( 
    IAcadHatch * This,
    /* [in] */ VARIANT_BOOL bDouble);


void __RPC_STUB IAcadHatch_put_PatternDouble_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_get_Elevation_Proxy( 
    IAcadHatch * This,
    /* [retval][out] */ double *Elevation);


void __RPC_STUB IAcadHatch_get_Elevation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_put_Elevation_Proxy( 
    IAcadHatch * This,
    /* [in] */ double Elevation);


void __RPC_STUB IAcadHatch_put_Elevation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_get_AssociativeHatch_Proxy( 
    IAcadHatch * This,
    /* [retval][out] */ VARIANT_BOOL *fAssoc);


void __RPC_STUB IAcadHatch_get_AssociativeHatch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_put_AssociativeHatch_Proxy( 
    IAcadHatch * This,
    /* [in] */ VARIANT_BOOL fAssoc);


void __RPC_STUB IAcadHatch_put_AssociativeHatch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_get_HatchStyle_Proxy( 
    IAcadHatch * This,
    /* [retval][out] */ AcHatchStyle *HatchStyle);


void __RPC_STUB IAcadHatch_get_HatchStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_put_HatchStyle_Proxy( 
    IAcadHatch * This,
    /* [in] */ AcHatchStyle HatchStyle);


void __RPC_STUB IAcadHatch_put_HatchStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_SetPattern_Proxy( 
    IAcadHatch * This,
    /* [in] */ int PatternType,
    /* [in] */ BSTR PatternName);


void __RPC_STUB IAcadHatch_SetPattern_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_AppendOuterLoop_Proxy( 
    IAcadHatch * This,
    /* [in] */ VARIANT ObjectArray);


void __RPC_STUB IAcadHatch_AppendOuterLoop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_AppendInnerLoop_Proxy( 
    IAcadHatch * This,
    /* [in] */ VARIANT ObjectArray);


void __RPC_STUB IAcadHatch_AppendInnerLoop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_InsertLoopAt_Proxy( 
    IAcadHatch * This,
    /* [in] */ int Index,
    /* [in] */ AcLoopType LoopType,
    /* [in] */ VARIANT ObjectArray);


void __RPC_STUB IAcadHatch_InsertLoopAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_GetLoopAt_Proxy( 
    IAcadHatch * This,
    /* [in] */ int Index,
    /* [out] */ VARIANT *ObjectArray);


void __RPC_STUB IAcadHatch_GetLoopAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_Evaluate_Proxy( 
    IAcadHatch * This);


void __RPC_STUB IAcadHatch_Evaluate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_get_GradientColor1_Proxy( 
    IAcadHatch * This,
    /* [retval][out] */ IAcadAcCmColor **pColor);


void __RPC_STUB IAcadHatch_get_GradientColor1_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_put_GradientColor1_Proxy( 
    IAcadHatch * This,
    /* [in] */ IAcadAcCmColor *pColor);


void __RPC_STUB IAcadHatch_put_GradientColor1_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_get_GradientColor2_Proxy( 
    IAcadHatch * This,
    /* [retval][out] */ IAcadAcCmColor **pColor);


void __RPC_STUB IAcadHatch_get_GradientColor2_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_put_GradientColor2_Proxy( 
    IAcadHatch * This,
    /* [in] */ IAcadAcCmColor *pColor);


void __RPC_STUB IAcadHatch_put_GradientColor2_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_get_GradientAngle_Proxy( 
    IAcadHatch * This,
    /* [retval][out] */ ACAD_ANGLE *GradientAngle);


void __RPC_STUB IAcadHatch_get_GradientAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_put_GradientAngle_Proxy( 
    IAcadHatch * This,
    /* [in] */ ACAD_ANGLE GradientAngle);


void __RPC_STUB IAcadHatch_put_GradientAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_get_GradientCentered_Proxy( 
    IAcadHatch * This,
    /* [retval][out] */ VARIANT_BOOL *fCentered);


void __RPC_STUB IAcadHatch_get_GradientCentered_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_put_GradientCentered_Proxy( 
    IAcadHatch * This,
    /* [in] */ VARIANT_BOOL fCentered);


void __RPC_STUB IAcadHatch_put_GradientCentered_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_get_GradientName_Proxy( 
    IAcadHatch * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadHatch_get_GradientName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_put_GradientName_Proxy( 
    IAcadHatch * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadHatch_put_GradientName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_get_HatchObjectType_Proxy( 
    IAcadHatch * This,
    /* [retval][out] */ AcHatchObjectType *hatchType);


void __RPC_STUB IAcadHatch_get_HatchObjectType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadHatch_put_HatchObjectType_Proxy( 
    IAcadHatch * This,
    /* [in] */ AcHatchObjectType hatchType);


void __RPC_STUB IAcadHatch_put_HatchObjectType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadHatch_INTERFACE_DEFINED__ */


#ifndef __IAcadRasterImage_INTERFACE_DEFINED__
#define __IAcadRasterImage_INTERFACE_DEFINED__

/* interface IAcadRasterImage */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadRasterImage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6B8FA01D-B1D5-44C3-8BF3-B955A4964869")
    IAcadRasterImage : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Brightness( 
            /* [retval][out] */ long *Brightness) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Brightness( 
            /* [in] */ long Brightness) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Contrast( 
            /* [retval][out] */ long *Contrast) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Contrast( 
            /* [in] */ long Contrast) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Fade( 
            /* [retval][out] */ long *Fade) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Fade( 
            /* [in] */ long Fade) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Origin( 
            /* [retval][out] */ VARIANT *Origin) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Origin( 
            /* [in] */ VARIANT Origin) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
            /* [retval][out] */ ACAD_ANGLE *rotAngle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
            /* [in] */ ACAD_ANGLE rotAngle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ImageWidth( 
            /* [retval][out] */ double *Width) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ImageWidth( 
            /* [in] */ double Width) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ImageHeight( 
            /* [retval][out] */ double *Height) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ImageHeight( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ImageFile( 
            /* [in] */ BSTR imageFileName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ImageFile( 
            /* [retval][out] */ BSTR *imageFileName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ImageVisibility( 
            /* [retval][out] */ VARIANT_BOOL *fVisible) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ImageVisibility( 
            /* [in] */ VARIANT_BOOL fVisible) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ClippingEnabled( 
            /* [retval][out] */ VARIANT_BOOL *kClip) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ClippingEnabled( 
            /* [in] */ VARIANT_BOOL kClip) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Transparency( 
            /* [retval][out] */ VARIANT_BOOL *bTransp) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Transparency( 
            /* [in] */ VARIANT_BOOL bTransp) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ClipBoundary( 
            /* [in] */ VARIANT boundry) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *pixelHeight) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ double *pixelWidth) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowRotation( 
            /* [retval][out] */ VARIANT_BOOL *bShow) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowRotation( 
            /* [in] */ VARIANT_BOOL bShow) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ScaleFactor( 
            /* [retval][out] */ ACAD_NOUNITS *ScaleFactor) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ScaleFactor( 
            /* [in] */ ACAD_NOUNITS ScaleFactor) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadRasterImageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadRasterImage * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadRasterImage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadRasterImage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadRasterImage * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadRasterImage * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadRasterImage * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadRasterImage * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadRasterImage * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadRasterImage * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadRasterImage * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadRasterImage * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadRasterImage * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadRasterImage * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadRasterImage * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadRasterImage * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadRasterImage * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadRasterImage * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadRasterImage * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadRasterImage * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadRasterImage * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadRasterImage * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadRasterImage * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadRasterImage * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadRasterImage * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadRasterImage * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadRasterImage * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadRasterImage * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadRasterImage * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadRasterImage * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadRasterImage * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadRasterImage * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadRasterImage * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadRasterImage * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadRasterImage * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadRasterImage * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadRasterImage * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadRasterImage * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadRasterImage * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadRasterImage * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadRasterImage * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadRasterImage * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadRasterImage * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadRasterImage * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadRasterImage * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadRasterImage * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadRasterImage * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadRasterImage * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadRasterImage * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadRasterImage * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadRasterImage * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadRasterImage * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadRasterImage * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadRasterImage * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Brightness )( 
            IAcadRasterImage * This,
            /* [retval][out] */ long *Brightness);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Brightness )( 
            IAcadRasterImage * This,
            /* [in] */ long Brightness);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Contrast )( 
            IAcadRasterImage * This,
            /* [retval][out] */ long *Contrast);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Contrast )( 
            IAcadRasterImage * This,
            /* [in] */ long Contrast);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Fade )( 
            IAcadRasterImage * This,
            /* [retval][out] */ long *Fade);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Fade )( 
            IAcadRasterImage * This,
            /* [in] */ long Fade);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Origin )( 
            IAcadRasterImage * This,
            /* [retval][out] */ VARIANT *Origin);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Origin )( 
            IAcadRasterImage * This,
            /* [in] */ VARIANT Origin);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IAcadRasterImage * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IAcadRasterImage * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ImageWidth )( 
            IAcadRasterImage * This,
            /* [retval][out] */ double *Width);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ImageWidth )( 
            IAcadRasterImage * This,
            /* [in] */ double Width);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ImageHeight )( 
            IAcadRasterImage * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ImageHeight )( 
            IAcadRasterImage * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadRasterImage * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadRasterImage * This,
            /* [in] */ BSTR Name);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ImageFile )( 
            IAcadRasterImage * This,
            /* [in] */ BSTR imageFileName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ImageFile )( 
            IAcadRasterImage * This,
            /* [retval][out] */ BSTR *imageFileName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ImageVisibility )( 
            IAcadRasterImage * This,
            /* [retval][out] */ VARIANT_BOOL *fVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ImageVisibility )( 
            IAcadRasterImage * This,
            /* [in] */ VARIANT_BOOL fVisible);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ClippingEnabled )( 
            IAcadRasterImage * This,
            /* [retval][out] */ VARIANT_BOOL *kClip);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ClippingEnabled )( 
            IAcadRasterImage * This,
            /* [in] */ VARIANT_BOOL kClip);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Transparency )( 
            IAcadRasterImage * This,
            /* [retval][out] */ VARIANT_BOOL *bTransp);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Transparency )( 
            IAcadRasterImage * This,
            /* [in] */ VARIANT_BOOL bTransp);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ClipBoundary )( 
            IAcadRasterImage * This,
            /* [in] */ VARIANT boundry);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IAcadRasterImage * This,
            /* [retval][out] */ double *pixelHeight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IAcadRasterImage * This,
            /* [retval][out] */ double *pixelWidth);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowRotation )( 
            IAcadRasterImage * This,
            /* [retval][out] */ VARIANT_BOOL *bShow);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowRotation )( 
            IAcadRasterImage * This,
            /* [in] */ VARIANT_BOOL bShow);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IAcadRasterImage * This,
            /* [retval][out] */ ACAD_NOUNITS *ScaleFactor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IAcadRasterImage * This,
            /* [in] */ ACAD_NOUNITS ScaleFactor);
        
        END_INTERFACE
    } IAcadRasterImageVtbl;

    interface IAcadRasterImage
    {
        CONST_VTBL struct IAcadRasterImageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadRasterImage_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadRasterImage_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadRasterImage_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadRasterImage_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadRasterImage_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadRasterImage_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadRasterImage_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadRasterImage_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadRasterImage_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadRasterImage_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadRasterImage_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadRasterImage_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadRasterImage_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadRasterImage_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadRasterImage_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadRasterImage_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadRasterImage_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadRasterImage_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadRasterImage_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadRasterImage_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadRasterImage_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadRasterImage_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadRasterImage_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadRasterImage_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadRasterImage_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadRasterImage_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadRasterImage_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadRasterImage_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadRasterImage_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadRasterImage_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadRasterImage_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadRasterImage_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadRasterImage_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadRasterImage_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadRasterImage_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadRasterImage_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadRasterImage_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadRasterImage_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadRasterImage_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadRasterImage_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadRasterImage_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadRasterImage_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadRasterImage_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadRasterImage_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadRasterImage_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadRasterImage_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadRasterImage_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadRasterImage_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadRasterImage_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadRasterImage_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadRasterImage_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadRasterImage_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadRasterImage_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadRasterImage_get_Brightness(This,Brightness)	\
    (This)->lpVtbl -> get_Brightness(This,Brightness)

#define IAcadRasterImage_put_Brightness(This,Brightness)	\
    (This)->lpVtbl -> put_Brightness(This,Brightness)

#define IAcadRasterImage_get_Contrast(This,Contrast)	\
    (This)->lpVtbl -> get_Contrast(This,Contrast)

#define IAcadRasterImage_put_Contrast(This,Contrast)	\
    (This)->lpVtbl -> put_Contrast(This,Contrast)

#define IAcadRasterImage_get_Fade(This,Fade)	\
    (This)->lpVtbl -> get_Fade(This,Fade)

#define IAcadRasterImage_put_Fade(This,Fade)	\
    (This)->lpVtbl -> put_Fade(This,Fade)

#define IAcadRasterImage_get_Origin(This,Origin)	\
    (This)->lpVtbl -> get_Origin(This,Origin)

#define IAcadRasterImage_put_Origin(This,Origin)	\
    (This)->lpVtbl -> put_Origin(This,Origin)

#define IAcadRasterImage_get_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> get_Rotation(This,rotAngle)

#define IAcadRasterImage_put_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> put_Rotation(This,rotAngle)

#define IAcadRasterImage_get_ImageWidth(This,Width)	\
    (This)->lpVtbl -> get_ImageWidth(This,Width)

#define IAcadRasterImage_put_ImageWidth(This,Width)	\
    (This)->lpVtbl -> put_ImageWidth(This,Width)

#define IAcadRasterImage_get_ImageHeight(This,Height)	\
    (This)->lpVtbl -> get_ImageHeight(This,Height)

#define IAcadRasterImage_put_ImageHeight(This,Height)	\
    (This)->lpVtbl -> put_ImageHeight(This,Height)

#define IAcadRasterImage_get_Name(This,Name)	\
    (This)->lpVtbl -> get_Name(This,Name)

#define IAcadRasterImage_put_Name(This,Name)	\
    (This)->lpVtbl -> put_Name(This,Name)

#define IAcadRasterImage_put_ImageFile(This,imageFileName)	\
    (This)->lpVtbl -> put_ImageFile(This,imageFileName)

#define IAcadRasterImage_get_ImageFile(This,imageFileName)	\
    (This)->lpVtbl -> get_ImageFile(This,imageFileName)

#define IAcadRasterImage_get_ImageVisibility(This,fVisible)	\
    (This)->lpVtbl -> get_ImageVisibility(This,fVisible)

#define IAcadRasterImage_put_ImageVisibility(This,fVisible)	\
    (This)->lpVtbl -> put_ImageVisibility(This,fVisible)

#define IAcadRasterImage_get_ClippingEnabled(This,kClip)	\
    (This)->lpVtbl -> get_ClippingEnabled(This,kClip)

#define IAcadRasterImage_put_ClippingEnabled(This,kClip)	\
    (This)->lpVtbl -> put_ClippingEnabled(This,kClip)

#define IAcadRasterImage_get_Transparency(This,bTransp)	\
    (This)->lpVtbl -> get_Transparency(This,bTransp)

#define IAcadRasterImage_put_Transparency(This,bTransp)	\
    (This)->lpVtbl -> put_Transparency(This,bTransp)

#define IAcadRasterImage_ClipBoundary(This,boundry)	\
    (This)->lpVtbl -> ClipBoundary(This,boundry)

#define IAcadRasterImage_get_Height(This,pixelHeight)	\
    (This)->lpVtbl -> get_Height(This,pixelHeight)

#define IAcadRasterImage_get_Width(This,pixelWidth)	\
    (This)->lpVtbl -> get_Width(This,pixelWidth)

#define IAcadRasterImage_get_ShowRotation(This,bShow)	\
    (This)->lpVtbl -> get_ShowRotation(This,bShow)

#define IAcadRasterImage_put_ShowRotation(This,bShow)	\
    (This)->lpVtbl -> put_ShowRotation(This,bShow)

#define IAcadRasterImage_get_ScaleFactor(This,ScaleFactor)	\
    (This)->lpVtbl -> get_ScaleFactor(This,ScaleFactor)

#define IAcadRasterImage_put_ScaleFactor(This,ScaleFactor)	\
    (This)->lpVtbl -> put_ScaleFactor(This,ScaleFactor)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_get_Brightness_Proxy( 
    IAcadRasterImage * This,
    /* [retval][out] */ long *Brightness);


void __RPC_STUB IAcadRasterImage_get_Brightness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_put_Brightness_Proxy( 
    IAcadRasterImage * This,
    /* [in] */ long Brightness);


void __RPC_STUB IAcadRasterImage_put_Brightness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_get_Contrast_Proxy( 
    IAcadRasterImage * This,
    /* [retval][out] */ long *Contrast);


void __RPC_STUB IAcadRasterImage_get_Contrast_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_put_Contrast_Proxy( 
    IAcadRasterImage * This,
    /* [in] */ long Contrast);


void __RPC_STUB IAcadRasterImage_put_Contrast_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_get_Fade_Proxy( 
    IAcadRasterImage * This,
    /* [retval][out] */ long *Fade);


void __RPC_STUB IAcadRasterImage_get_Fade_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_put_Fade_Proxy( 
    IAcadRasterImage * This,
    /* [in] */ long Fade);


void __RPC_STUB IAcadRasterImage_put_Fade_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_get_Origin_Proxy( 
    IAcadRasterImage * This,
    /* [retval][out] */ VARIANT *Origin);


void __RPC_STUB IAcadRasterImage_get_Origin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_put_Origin_Proxy( 
    IAcadRasterImage * This,
    /* [in] */ VARIANT Origin);


void __RPC_STUB IAcadRasterImage_put_Origin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_get_Rotation_Proxy( 
    IAcadRasterImage * This,
    /* [retval][out] */ ACAD_ANGLE *rotAngle);


void __RPC_STUB IAcadRasterImage_get_Rotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_put_Rotation_Proxy( 
    IAcadRasterImage * This,
    /* [in] */ ACAD_ANGLE rotAngle);


void __RPC_STUB IAcadRasterImage_put_Rotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_get_ImageWidth_Proxy( 
    IAcadRasterImage * This,
    /* [retval][out] */ double *Width);


void __RPC_STUB IAcadRasterImage_get_ImageWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_put_ImageWidth_Proxy( 
    IAcadRasterImage * This,
    /* [in] */ double Width);


void __RPC_STUB IAcadRasterImage_put_ImageWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_get_ImageHeight_Proxy( 
    IAcadRasterImage * This,
    /* [retval][out] */ double *Height);


void __RPC_STUB IAcadRasterImage_get_ImageHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_put_ImageHeight_Proxy( 
    IAcadRasterImage * This,
    /* [in] */ double Height);


void __RPC_STUB IAcadRasterImage_put_ImageHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_get_Name_Proxy( 
    IAcadRasterImage * This,
    /* [retval][out] */ BSTR *Name);


void __RPC_STUB IAcadRasterImage_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_put_Name_Proxy( 
    IAcadRasterImage * This,
    /* [in] */ BSTR Name);


void __RPC_STUB IAcadRasterImage_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_put_ImageFile_Proxy( 
    IAcadRasterImage * This,
    /* [in] */ BSTR imageFileName);


void __RPC_STUB IAcadRasterImage_put_ImageFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_get_ImageFile_Proxy( 
    IAcadRasterImage * This,
    /* [retval][out] */ BSTR *imageFileName);


void __RPC_STUB IAcadRasterImage_get_ImageFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_get_ImageVisibility_Proxy( 
    IAcadRasterImage * This,
    /* [retval][out] */ VARIANT_BOOL *fVisible);


void __RPC_STUB IAcadRasterImage_get_ImageVisibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_put_ImageVisibility_Proxy( 
    IAcadRasterImage * This,
    /* [in] */ VARIANT_BOOL fVisible);


void __RPC_STUB IAcadRasterImage_put_ImageVisibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_get_ClippingEnabled_Proxy( 
    IAcadRasterImage * This,
    /* [retval][out] */ VARIANT_BOOL *kClip);


void __RPC_STUB IAcadRasterImage_get_ClippingEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_put_ClippingEnabled_Proxy( 
    IAcadRasterImage * This,
    /* [in] */ VARIANT_BOOL kClip);


void __RPC_STUB IAcadRasterImage_put_ClippingEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_get_Transparency_Proxy( 
    IAcadRasterImage * This,
    /* [retval][out] */ VARIANT_BOOL *bTransp);


void __RPC_STUB IAcadRasterImage_get_Transparency_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_put_Transparency_Proxy( 
    IAcadRasterImage * This,
    /* [in] */ VARIANT_BOOL bTransp);


void __RPC_STUB IAcadRasterImage_put_Transparency_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_ClipBoundary_Proxy( 
    IAcadRasterImage * This,
    /* [in] */ VARIANT boundry);


void __RPC_STUB IAcadRasterImage_ClipBoundary_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_get_Height_Proxy( 
    IAcadRasterImage * This,
    /* [retval][out] */ double *pixelHeight);


void __RPC_STUB IAcadRasterImage_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_get_Width_Proxy( 
    IAcadRasterImage * This,
    /* [retval][out] */ double *pixelWidth);


void __RPC_STUB IAcadRasterImage_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_get_ShowRotation_Proxy( 
    IAcadRasterImage * This,
    /* [retval][out] */ VARIANT_BOOL *bShow);


void __RPC_STUB IAcadRasterImage_get_ShowRotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_put_ShowRotation_Proxy( 
    IAcadRasterImage * This,
    /* [in] */ VARIANT_BOOL bShow);


void __RPC_STUB IAcadRasterImage_put_ShowRotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_get_ScaleFactor_Proxy( 
    IAcadRasterImage * This,
    /* [retval][out] */ ACAD_NOUNITS *ScaleFactor);


void __RPC_STUB IAcadRasterImage_get_ScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadRasterImage_put_ScaleFactor_Proxy( 
    IAcadRasterImage * This,
    /* [in] */ ACAD_NOUNITS ScaleFactor);


void __RPC_STUB IAcadRasterImage_put_ScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadRasterImage_INTERFACE_DEFINED__ */


#ifndef __IAcadLine_INTERFACE_DEFINED__
#define __IAcadLine_INTERFACE_DEFINED__

/* interface IAcadLine */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadLine;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0FC758CF-CF9C-4E17-B7F8-D550157CE289")
    IAcadLine : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [retval][out] */ VARIANT *StartPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_StartPoint( 
            /* [in] */ VARIANT StartPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
            /* [retval][out] */ VARIANT *EndPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_EndPoint( 
            /* [in] */ VARIANT EndPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *Normal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT Normal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *Thickness) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thickness) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Offset( 
            /* [in] */ double Distance,
            /* [retval][out] */ VARIANT *pOffsetCurves) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Delta( 
            /* [retval][out] */ VARIANT *Delta) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Length( 
            /* [retval][out] */ double *Length) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Angle( 
            /* [retval][out] */ ACAD_ANGLE *Angle) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadLineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadLine * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadLine * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadLine * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadLine * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadLine * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadLine * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadLine * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadLine * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadLine * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadLine * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadLine * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadLine * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadLine * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadLine * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadLine * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadLine * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadLine * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadLine * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadLine * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadLine * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadLine * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadLine * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadLine * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadLine * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadLine * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadLine * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadLine * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadLine * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadLine * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadLine * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadLine * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadLine * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadLine * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadLine * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadLine * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadLine * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadLine * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadLine * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadLine * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadLine * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadLine * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadLine * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadLine * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadLine * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadLine * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadLine * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadLine * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadLine * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadLine * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadLine * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadLine * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadLine * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadLine * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            IAcadLine * This,
            /* [retval][out] */ VARIANT *StartPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StartPoint )( 
            IAcadLine * This,
            /* [in] */ VARIANT StartPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            IAcadLine * This,
            /* [retval][out] */ VARIANT *EndPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EndPoint )( 
            IAcadLine * This,
            /* [in] */ VARIANT EndPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadLine * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadLine * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IAcadLine * This,
            /* [retval][out] */ double *Thickness);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IAcadLine * This,
            /* [in] */ double Thickness);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Offset )( 
            IAcadLine * This,
            /* [in] */ double Distance,
            /* [retval][out] */ VARIANT *pOffsetCurves);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Delta )( 
            IAcadLine * This,
            /* [retval][out] */ VARIANT *Delta);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Length )( 
            IAcadLine * This,
            /* [retval][out] */ double *Length);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Angle )( 
            IAcadLine * This,
            /* [retval][out] */ ACAD_ANGLE *Angle);
        
        END_INTERFACE
    } IAcadLineVtbl;

    interface IAcadLine
    {
        CONST_VTBL struct IAcadLineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadLine_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadLine_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadLine_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadLine_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadLine_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadLine_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadLine_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadLine_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadLine_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadLine_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadLine_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadLine_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadLine_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadLine_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadLine_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadLine_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadLine_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadLine_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadLine_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadLine_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadLine_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadLine_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadLine_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadLine_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadLine_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadLine_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadLine_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadLine_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadLine_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadLine_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadLine_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadLine_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadLine_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadLine_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadLine_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadLine_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadLine_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadLine_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadLine_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadLine_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadLine_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadLine_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadLine_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadLine_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadLine_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadLine_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadLine_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadLine_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadLine_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadLine_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadLine_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadLine_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadLine_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadLine_get_StartPoint(This,StartPoint)	\
    (This)->lpVtbl -> get_StartPoint(This,StartPoint)

#define IAcadLine_put_StartPoint(This,StartPoint)	\
    (This)->lpVtbl -> put_StartPoint(This,StartPoint)

#define IAcadLine_get_EndPoint(This,EndPoint)	\
    (This)->lpVtbl -> get_EndPoint(This,EndPoint)

#define IAcadLine_put_EndPoint(This,EndPoint)	\
    (This)->lpVtbl -> put_EndPoint(This,EndPoint)

#define IAcadLine_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadLine_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadLine_get_Thickness(This,Thickness)	\
    (This)->lpVtbl -> get_Thickness(This,Thickness)

#define IAcadLine_put_Thickness(This,Thickness)	\
    (This)->lpVtbl -> put_Thickness(This,Thickness)

#define IAcadLine_Offset(This,Distance,pOffsetCurves)	\
    (This)->lpVtbl -> Offset(This,Distance,pOffsetCurves)

#define IAcadLine_get_Delta(This,Delta)	\
    (This)->lpVtbl -> get_Delta(This,Delta)

#define IAcadLine_get_Length(This,Length)	\
    (This)->lpVtbl -> get_Length(This,Length)

#define IAcadLine_get_Angle(This,Angle)	\
    (This)->lpVtbl -> get_Angle(This,Angle)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLine_get_StartPoint_Proxy( 
    IAcadLine * This,
    /* [retval][out] */ VARIANT *StartPoint);


void __RPC_STUB IAcadLine_get_StartPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLine_put_StartPoint_Proxy( 
    IAcadLine * This,
    /* [in] */ VARIANT StartPoint);


void __RPC_STUB IAcadLine_put_StartPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLine_get_EndPoint_Proxy( 
    IAcadLine * This,
    /* [retval][out] */ VARIANT *EndPoint);


void __RPC_STUB IAcadLine_get_EndPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLine_put_EndPoint_Proxy( 
    IAcadLine * This,
    /* [in] */ VARIANT EndPoint);


void __RPC_STUB IAcadLine_put_EndPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLine_get_Normal_Proxy( 
    IAcadLine * This,
    /* [retval][out] */ VARIANT *Normal);


void __RPC_STUB IAcadLine_get_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLine_put_Normal_Proxy( 
    IAcadLine * This,
    /* [in] */ VARIANT Normal);


void __RPC_STUB IAcadLine_put_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLine_get_Thickness_Proxy( 
    IAcadLine * This,
    /* [retval][out] */ double *Thickness);


void __RPC_STUB IAcadLine_get_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLine_put_Thickness_Proxy( 
    IAcadLine * This,
    /* [in] */ double Thickness);


void __RPC_STUB IAcadLine_put_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadLine_Offset_Proxy( 
    IAcadLine * This,
    /* [in] */ double Distance,
    /* [retval][out] */ VARIANT *pOffsetCurves);


void __RPC_STUB IAcadLine_Offset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLine_get_Delta_Proxy( 
    IAcadLine * This,
    /* [retval][out] */ VARIANT *Delta);


void __RPC_STUB IAcadLine_get_Delta_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLine_get_Length_Proxy( 
    IAcadLine * This,
    /* [retval][out] */ double *Length);


void __RPC_STUB IAcadLine_get_Length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLine_get_Angle_Proxy( 
    IAcadLine * This,
    /* [retval][out] */ ACAD_ANGLE *Angle);


void __RPC_STUB IAcadLine_get_Angle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadLine_INTERFACE_DEFINED__ */


#ifndef __IAcadPlotConfiguration_INTERFACE_DEFINED__
#define __IAcadPlotConfiguration_INTERFACE_DEFINED__

/* interface IAcadPlotConfiguration */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadPlotConfiguration;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("719F05E7-6C78-47D0-A6AD-4489771DFEA3")
    IAcadPlotConfiguration : public IAcadObject
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR pName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConfigName( 
            /* [retval][out] */ BSTR *pName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ConfigName( 
            /* [in] */ BSTR pName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_CanonicalMediaName( 
            /* [retval][out] */ BSTR *pName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_CanonicalMediaName( 
            /* [in] */ BSTR pName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PaperUnits( 
            /* [retval][out] */ AcPlotPaperUnits *pPaperUnits) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PaperUnits( 
            /* [in] */ AcPlotPaperUnits pPaperUnits) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PlotViewportBorders( 
            /* [retval][out] */ VARIANT_BOOL *pViewportBorders) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PlotViewportBorders( 
            /* [in] */ VARIANT_BOOL pViewportBorders) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowPlotStyles( 
            /* [retval][out] */ VARIANT_BOOL *pStyles) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowPlotStyles( 
            /* [in] */ VARIANT_BOOL pStyles) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PlotRotation( 
            /* [retval][out] */ AcPlotRotation *pRotation) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PlotRotation( 
            /* [in] */ AcPlotRotation pRotation) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_CenterPlot( 
            /* [retval][out] */ VARIANT_BOOL *pCentered) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_CenterPlot( 
            /* [in] */ VARIANT_BOOL pCentered) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PlotHidden( 
            /* [retval][out] */ VARIANT_BOOL *pHidden) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PlotHidden( 
            /* [in] */ VARIANT_BOOL pHidden) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PlotType( 
            /* [retval][out] */ AcPlotType *pType) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PlotType( 
            /* [in] */ AcPlotType pType) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ViewToPlot( 
            /* [retval][out] */ BSTR *pName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ViewToPlot( 
            /* [in] */ BSTR pName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_UseStandardScale( 
            /* [retval][out] */ VARIANT_BOOL *pUseStdScale) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_UseStandardScale( 
            /* [in] */ VARIANT_BOOL pUseStdScale) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_StandardScale( 
            /* [retval][out] */ AcPlotScale *pStdScale) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_StandardScale( 
            /* [in] */ AcPlotScale pStdScale) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCustomScale( 
            /* [out] */ double *Numerator,
            /* [out] */ double *Denominator) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCustomScale( 
            /* [in] */ double Numerator,
            /* [in] */ double Denominator) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ScaleLineweights( 
            /* [retval][out] */ VARIANT_BOOL *pScale) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ScaleLineweights( 
            /* [in] */ VARIANT_BOOL pScale) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PlotWithLineweights( 
            /* [retval][out] */ VARIANT_BOOL *pPlot) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PlotWithLineweights( 
            /* [in] */ VARIANT_BOOL pPlot) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PlotViewportsFirst( 
            /* [retval][out] */ VARIANT_BOOL *pViewportsFirst) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PlotViewportsFirst( 
            /* [in] */ VARIANT_BOOL pViewportsFirst) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_StyleSheet( 
            /* [retval][out] */ BSTR *pName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_StyleSheet( 
            /* [in] */ BSTR pName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPaperMargins( 
            /* [out] */ VARIANT *LowerLeft,
            /* [out] */ VARIANT *UpperRight) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPaperSize( 
            /* [out] */ double *Width,
            /* [out] */ double *Height) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PlotOrigin( 
            /* [retval][out] */ VARIANT *pOrigin) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PlotOrigin( 
            /* [in] */ VARIANT pOrigin) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetWindowToPlot( 
            /* [out] */ VARIANT *LowerLeft,
            /* [out] */ VARIANT *UpperRight) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetWindowToPlot( 
            /* [in] */ VARIANT LowerLeft,
            /* [in] */ VARIANT UpperRight) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PlotWithPlotStyles( 
            /* [retval][out] */ VARIANT_BOOL *pStyles) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PlotWithPlotStyles( 
            /* [in] */ VARIANT_BOOL pStyles) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ModelType( 
            /* [retval][out] */ VARIANT_BOOL *pType) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CopyFrom( 
            /* [in] */ IAcadPlotConfiguration *pPlotConfig) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCanonicalMediaNames( 
            /* [retval][out] */ VARIANT *pNames) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPlotDeviceNames( 
            /* [retval][out] */ VARIANT *pNames) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPlotStyleTableNames( 
            /* [retval][out] */ VARIANT *pNames) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RefreshPlotDeviceInfo( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetLocaleMediaName( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ BSTR *pLocalName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadPlotConfigurationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadPlotConfiguration * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadPlotConfiguration * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadPlotConfiguration * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadPlotConfiguration * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadPlotConfiguration * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadPlotConfiguration * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadPlotConfiguration * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadPlotConfiguration * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadPlotConfiguration * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadPlotConfiguration * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadPlotConfiguration * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadPlotConfiguration * This,
            /* [in] */ BSTR pName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConfigName )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ConfigName )( 
            IAcadPlotConfiguration * This,
            /* [in] */ BSTR pName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CanonicalMediaName )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CanonicalMediaName )( 
            IAcadPlotConfiguration * This,
            /* [in] */ BSTR pName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PaperUnits )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ AcPlotPaperUnits *pPaperUnits);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PaperUnits )( 
            IAcadPlotConfiguration * This,
            /* [in] */ AcPlotPaperUnits pPaperUnits);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotViewportBorders )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *pViewportBorders);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotViewportBorders )( 
            IAcadPlotConfiguration * This,
            /* [in] */ VARIANT_BOOL pViewportBorders);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowPlotStyles )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *pStyles);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowPlotStyles )( 
            IAcadPlotConfiguration * This,
            /* [in] */ VARIANT_BOOL pStyles);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotRotation )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ AcPlotRotation *pRotation);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotRotation )( 
            IAcadPlotConfiguration * This,
            /* [in] */ AcPlotRotation pRotation);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CenterPlot )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *pCentered);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CenterPlot )( 
            IAcadPlotConfiguration * This,
            /* [in] */ VARIANT_BOOL pCentered);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotHidden )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *pHidden);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotHidden )( 
            IAcadPlotConfiguration * This,
            /* [in] */ VARIANT_BOOL pHidden);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotType )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ AcPlotType *pType);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotType )( 
            IAcadPlotConfiguration * This,
            /* [in] */ AcPlotType pType);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ViewToPlot )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ViewToPlot )( 
            IAcadPlotConfiguration * This,
            /* [in] */ BSTR pName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UseStandardScale )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *pUseStdScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UseStandardScale )( 
            IAcadPlotConfiguration * This,
            /* [in] */ VARIANT_BOOL pUseStdScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StandardScale )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ AcPlotScale *pStdScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StandardScale )( 
            IAcadPlotConfiguration * This,
            /* [in] */ AcPlotScale pStdScale);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCustomScale )( 
            IAcadPlotConfiguration * This,
            /* [out] */ double *Numerator,
            /* [out] */ double *Denominator);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCustomScale )( 
            IAcadPlotConfiguration * This,
            /* [in] */ double Numerator,
            /* [in] */ double Denominator);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLineweights )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *pScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLineweights )( 
            IAcadPlotConfiguration * This,
            /* [in] */ VARIANT_BOOL pScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotWithLineweights )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *pPlot);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotWithLineweights )( 
            IAcadPlotConfiguration * This,
            /* [in] */ VARIANT_BOOL pPlot);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotViewportsFirst )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *pViewportsFirst);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotViewportsFirst )( 
            IAcadPlotConfiguration * This,
            /* [in] */ VARIANT_BOOL pViewportsFirst);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleSheet )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleSheet )( 
            IAcadPlotConfiguration * This,
            /* [in] */ BSTR pName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPaperMargins )( 
            IAcadPlotConfiguration * This,
            /* [out] */ VARIANT *LowerLeft,
            /* [out] */ VARIANT *UpperRight);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPaperSize )( 
            IAcadPlotConfiguration * This,
            /* [out] */ double *Width,
            /* [out] */ double *Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotOrigin )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT *pOrigin);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotOrigin )( 
            IAcadPlotConfiguration * This,
            /* [in] */ VARIANT pOrigin);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetWindowToPlot )( 
            IAcadPlotConfiguration * This,
            /* [out] */ VARIANT *LowerLeft,
            /* [out] */ VARIANT *UpperRight);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetWindowToPlot )( 
            IAcadPlotConfiguration * This,
            /* [in] */ VARIANT LowerLeft,
            /* [in] */ VARIANT UpperRight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotWithPlotStyles )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *pStyles);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotWithPlotStyles )( 
            IAcadPlotConfiguration * This,
            /* [in] */ VARIANT_BOOL pStyles);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ModelType )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *pType);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CopyFrom )( 
            IAcadPlotConfiguration * This,
            /* [in] */ IAcadPlotConfiguration *pPlotConfig);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCanonicalMediaNames )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT *pNames);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPlotDeviceNames )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT *pNames);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPlotStyleTableNames )( 
            IAcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT *pNames);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RefreshPlotDeviceInfo )( 
            IAcadPlotConfiguration * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetLocaleMediaName )( 
            IAcadPlotConfiguration * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ BSTR *pLocalName);
        
        END_INTERFACE
    } IAcadPlotConfigurationVtbl;

    interface IAcadPlotConfiguration
    {
        CONST_VTBL struct IAcadPlotConfigurationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadPlotConfiguration_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadPlotConfiguration_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadPlotConfiguration_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadPlotConfiguration_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadPlotConfiguration_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadPlotConfiguration_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadPlotConfiguration_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadPlotConfiguration_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadPlotConfiguration_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadPlotConfiguration_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadPlotConfiguration_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadPlotConfiguration_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadPlotConfiguration_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadPlotConfiguration_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadPlotConfiguration_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadPlotConfiguration_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadPlotConfiguration_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadPlotConfiguration_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadPlotConfiguration_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadPlotConfiguration_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadPlotConfiguration_get_Name(This,pName)	\
    (This)->lpVtbl -> get_Name(This,pName)

#define IAcadPlotConfiguration_put_Name(This,pName)	\
    (This)->lpVtbl -> put_Name(This,pName)

#define IAcadPlotConfiguration_get_ConfigName(This,pName)	\
    (This)->lpVtbl -> get_ConfigName(This,pName)

#define IAcadPlotConfiguration_put_ConfigName(This,pName)	\
    (This)->lpVtbl -> put_ConfigName(This,pName)

#define IAcadPlotConfiguration_get_CanonicalMediaName(This,pName)	\
    (This)->lpVtbl -> get_CanonicalMediaName(This,pName)

#define IAcadPlotConfiguration_put_CanonicalMediaName(This,pName)	\
    (This)->lpVtbl -> put_CanonicalMediaName(This,pName)

#define IAcadPlotConfiguration_get_PaperUnits(This,pPaperUnits)	\
    (This)->lpVtbl -> get_PaperUnits(This,pPaperUnits)

#define IAcadPlotConfiguration_put_PaperUnits(This,pPaperUnits)	\
    (This)->lpVtbl -> put_PaperUnits(This,pPaperUnits)

#define IAcadPlotConfiguration_get_PlotViewportBorders(This,pViewportBorders)	\
    (This)->lpVtbl -> get_PlotViewportBorders(This,pViewportBorders)

#define IAcadPlotConfiguration_put_PlotViewportBorders(This,pViewportBorders)	\
    (This)->lpVtbl -> put_PlotViewportBorders(This,pViewportBorders)

#define IAcadPlotConfiguration_get_ShowPlotStyles(This,pStyles)	\
    (This)->lpVtbl -> get_ShowPlotStyles(This,pStyles)

#define IAcadPlotConfiguration_put_ShowPlotStyles(This,pStyles)	\
    (This)->lpVtbl -> put_ShowPlotStyles(This,pStyles)

#define IAcadPlotConfiguration_get_PlotRotation(This,pRotation)	\
    (This)->lpVtbl -> get_PlotRotation(This,pRotation)

#define IAcadPlotConfiguration_put_PlotRotation(This,pRotation)	\
    (This)->lpVtbl -> put_PlotRotation(This,pRotation)

#define IAcadPlotConfiguration_get_CenterPlot(This,pCentered)	\
    (This)->lpVtbl -> get_CenterPlot(This,pCentered)

#define IAcadPlotConfiguration_put_CenterPlot(This,pCentered)	\
    (This)->lpVtbl -> put_CenterPlot(This,pCentered)

#define IAcadPlotConfiguration_get_PlotHidden(This,pHidden)	\
    (This)->lpVtbl -> get_PlotHidden(This,pHidden)

#define IAcadPlotConfiguration_put_PlotHidden(This,pHidden)	\
    (This)->lpVtbl -> put_PlotHidden(This,pHidden)

#define IAcadPlotConfiguration_get_PlotType(This,pType)	\
    (This)->lpVtbl -> get_PlotType(This,pType)

#define IAcadPlotConfiguration_put_PlotType(This,pType)	\
    (This)->lpVtbl -> put_PlotType(This,pType)

#define IAcadPlotConfiguration_get_ViewToPlot(This,pName)	\
    (This)->lpVtbl -> get_ViewToPlot(This,pName)

#define IAcadPlotConfiguration_put_ViewToPlot(This,pName)	\
    (This)->lpVtbl -> put_ViewToPlot(This,pName)

#define IAcadPlotConfiguration_get_UseStandardScale(This,pUseStdScale)	\
    (This)->lpVtbl -> get_UseStandardScale(This,pUseStdScale)

#define IAcadPlotConfiguration_put_UseStandardScale(This,pUseStdScale)	\
    (This)->lpVtbl -> put_UseStandardScale(This,pUseStdScale)

#define IAcadPlotConfiguration_get_StandardScale(This,pStdScale)	\
    (This)->lpVtbl -> get_StandardScale(This,pStdScale)

#define IAcadPlotConfiguration_put_StandardScale(This,pStdScale)	\
    (This)->lpVtbl -> put_StandardScale(This,pStdScale)

#define IAcadPlotConfiguration_GetCustomScale(This,Numerator,Denominator)	\
    (This)->lpVtbl -> GetCustomScale(This,Numerator,Denominator)

#define IAcadPlotConfiguration_SetCustomScale(This,Numerator,Denominator)	\
    (This)->lpVtbl -> SetCustomScale(This,Numerator,Denominator)

#define IAcadPlotConfiguration_get_ScaleLineweights(This,pScale)	\
    (This)->lpVtbl -> get_ScaleLineweights(This,pScale)

#define IAcadPlotConfiguration_put_ScaleLineweights(This,pScale)	\
    (This)->lpVtbl -> put_ScaleLineweights(This,pScale)

#define IAcadPlotConfiguration_get_PlotWithLineweights(This,pPlot)	\
    (This)->lpVtbl -> get_PlotWithLineweights(This,pPlot)

#define IAcadPlotConfiguration_put_PlotWithLineweights(This,pPlot)	\
    (This)->lpVtbl -> put_PlotWithLineweights(This,pPlot)

#define IAcadPlotConfiguration_get_PlotViewportsFirst(This,pViewportsFirst)	\
    (This)->lpVtbl -> get_PlotViewportsFirst(This,pViewportsFirst)

#define IAcadPlotConfiguration_put_PlotViewportsFirst(This,pViewportsFirst)	\
    (This)->lpVtbl -> put_PlotViewportsFirst(This,pViewportsFirst)

#define IAcadPlotConfiguration_get_StyleSheet(This,pName)	\
    (This)->lpVtbl -> get_StyleSheet(This,pName)

#define IAcadPlotConfiguration_put_StyleSheet(This,pName)	\
    (This)->lpVtbl -> put_StyleSheet(This,pName)

#define IAcadPlotConfiguration_GetPaperMargins(This,LowerLeft,UpperRight)	\
    (This)->lpVtbl -> GetPaperMargins(This,LowerLeft,UpperRight)

#define IAcadPlotConfiguration_GetPaperSize(This,Width,Height)	\
    (This)->lpVtbl -> GetPaperSize(This,Width,Height)

#define IAcadPlotConfiguration_get_PlotOrigin(This,pOrigin)	\
    (This)->lpVtbl -> get_PlotOrigin(This,pOrigin)

#define IAcadPlotConfiguration_put_PlotOrigin(This,pOrigin)	\
    (This)->lpVtbl -> put_PlotOrigin(This,pOrigin)

#define IAcadPlotConfiguration_GetWindowToPlot(This,LowerLeft,UpperRight)	\
    (This)->lpVtbl -> GetWindowToPlot(This,LowerLeft,UpperRight)

#define IAcadPlotConfiguration_SetWindowToPlot(This,LowerLeft,UpperRight)	\
    (This)->lpVtbl -> SetWindowToPlot(This,LowerLeft,UpperRight)

#define IAcadPlotConfiguration_get_PlotWithPlotStyles(This,pStyles)	\
    (This)->lpVtbl -> get_PlotWithPlotStyles(This,pStyles)

#define IAcadPlotConfiguration_put_PlotWithPlotStyles(This,pStyles)	\
    (This)->lpVtbl -> put_PlotWithPlotStyles(This,pStyles)

#define IAcadPlotConfiguration_get_ModelType(This,pType)	\
    (This)->lpVtbl -> get_ModelType(This,pType)

#define IAcadPlotConfiguration_CopyFrom(This,pPlotConfig)	\
    (This)->lpVtbl -> CopyFrom(This,pPlotConfig)

#define IAcadPlotConfiguration_GetCanonicalMediaNames(This,pNames)	\
    (This)->lpVtbl -> GetCanonicalMediaNames(This,pNames)

#define IAcadPlotConfiguration_GetPlotDeviceNames(This,pNames)	\
    (This)->lpVtbl -> GetPlotDeviceNames(This,pNames)

#define IAcadPlotConfiguration_GetPlotStyleTableNames(This,pNames)	\
    (This)->lpVtbl -> GetPlotStyleTableNames(This,pNames)

#define IAcadPlotConfiguration_RefreshPlotDeviceInfo(This)	\
    (This)->lpVtbl -> RefreshPlotDeviceInfo(This)

#define IAcadPlotConfiguration_GetLocaleMediaName(This,Name,pLocalName)	\
    (This)->lpVtbl -> GetLocaleMediaName(This,Name,pLocalName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_get_Name_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ BSTR *pName);


void __RPC_STUB IAcadPlotConfiguration_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_put_Name_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ BSTR pName);


void __RPC_STUB IAcadPlotConfiguration_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_get_ConfigName_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ BSTR *pName);


void __RPC_STUB IAcadPlotConfiguration_get_ConfigName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_put_ConfigName_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ BSTR pName);


void __RPC_STUB IAcadPlotConfiguration_put_ConfigName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_get_CanonicalMediaName_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ BSTR *pName);


void __RPC_STUB IAcadPlotConfiguration_get_CanonicalMediaName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_put_CanonicalMediaName_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ BSTR pName);


void __RPC_STUB IAcadPlotConfiguration_put_CanonicalMediaName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_get_PaperUnits_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ AcPlotPaperUnits *pPaperUnits);


void __RPC_STUB IAcadPlotConfiguration_get_PaperUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_put_PaperUnits_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ AcPlotPaperUnits pPaperUnits);


void __RPC_STUB IAcadPlotConfiguration_put_PaperUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_get_PlotViewportBorders_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ VARIANT_BOOL *pViewportBorders);


void __RPC_STUB IAcadPlotConfiguration_get_PlotViewportBorders_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_put_PlotViewportBorders_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ VARIANT_BOOL pViewportBorders);


void __RPC_STUB IAcadPlotConfiguration_put_PlotViewportBorders_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_get_ShowPlotStyles_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ VARIANT_BOOL *pStyles);


void __RPC_STUB IAcadPlotConfiguration_get_ShowPlotStyles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_put_ShowPlotStyles_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ VARIANT_BOOL pStyles);


void __RPC_STUB IAcadPlotConfiguration_put_ShowPlotStyles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_get_PlotRotation_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ AcPlotRotation *pRotation);


void __RPC_STUB IAcadPlotConfiguration_get_PlotRotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_put_PlotRotation_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ AcPlotRotation pRotation);


void __RPC_STUB IAcadPlotConfiguration_put_PlotRotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_get_CenterPlot_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ VARIANT_BOOL *pCentered);


void __RPC_STUB IAcadPlotConfiguration_get_CenterPlot_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_put_CenterPlot_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ VARIANT_BOOL pCentered);


void __RPC_STUB IAcadPlotConfiguration_put_CenterPlot_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_get_PlotHidden_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ VARIANT_BOOL *pHidden);


void __RPC_STUB IAcadPlotConfiguration_get_PlotHidden_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_put_PlotHidden_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ VARIANT_BOOL pHidden);


void __RPC_STUB IAcadPlotConfiguration_put_PlotHidden_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_get_PlotType_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ AcPlotType *pType);


void __RPC_STUB IAcadPlotConfiguration_get_PlotType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_put_PlotType_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ AcPlotType pType);


void __RPC_STUB IAcadPlotConfiguration_put_PlotType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_get_ViewToPlot_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ BSTR *pName);


void __RPC_STUB IAcadPlotConfiguration_get_ViewToPlot_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_put_ViewToPlot_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ BSTR pName);


void __RPC_STUB IAcadPlotConfiguration_put_ViewToPlot_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_get_UseStandardScale_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ VARIANT_BOOL *pUseStdScale);


void __RPC_STUB IAcadPlotConfiguration_get_UseStandardScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_put_UseStandardScale_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ VARIANT_BOOL pUseStdScale);


void __RPC_STUB IAcadPlotConfiguration_put_UseStandardScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_get_StandardScale_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ AcPlotScale *pStdScale);


void __RPC_STUB IAcadPlotConfiguration_get_StandardScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_put_StandardScale_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ AcPlotScale pStdScale);


void __RPC_STUB IAcadPlotConfiguration_put_StandardScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_GetCustomScale_Proxy( 
    IAcadPlotConfiguration * This,
    /* [out] */ double *Numerator,
    /* [out] */ double *Denominator);


void __RPC_STUB IAcadPlotConfiguration_GetCustomScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_SetCustomScale_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ double Numerator,
    /* [in] */ double Denominator);


void __RPC_STUB IAcadPlotConfiguration_SetCustomScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_get_ScaleLineweights_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ VARIANT_BOOL *pScale);


void __RPC_STUB IAcadPlotConfiguration_get_ScaleLineweights_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_put_ScaleLineweights_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ VARIANT_BOOL pScale);


void __RPC_STUB IAcadPlotConfiguration_put_ScaleLineweights_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_get_PlotWithLineweights_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ VARIANT_BOOL *pPlot);


void __RPC_STUB IAcadPlotConfiguration_get_PlotWithLineweights_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_put_PlotWithLineweights_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ VARIANT_BOOL pPlot);


void __RPC_STUB IAcadPlotConfiguration_put_PlotWithLineweights_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_get_PlotViewportsFirst_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ VARIANT_BOOL *pViewportsFirst);


void __RPC_STUB IAcadPlotConfiguration_get_PlotViewportsFirst_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_put_PlotViewportsFirst_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ VARIANT_BOOL pViewportsFirst);


void __RPC_STUB IAcadPlotConfiguration_put_PlotViewportsFirst_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_get_StyleSheet_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ BSTR *pName);


void __RPC_STUB IAcadPlotConfiguration_get_StyleSheet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_put_StyleSheet_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ BSTR pName);


void __RPC_STUB IAcadPlotConfiguration_put_StyleSheet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_GetPaperMargins_Proxy( 
    IAcadPlotConfiguration * This,
    /* [out] */ VARIANT *LowerLeft,
    /* [out] */ VARIANT *UpperRight);


void __RPC_STUB IAcadPlotConfiguration_GetPaperMargins_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_GetPaperSize_Proxy( 
    IAcadPlotConfiguration * This,
    /* [out] */ double *Width,
    /* [out] */ double *Height);


void __RPC_STUB IAcadPlotConfiguration_GetPaperSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_get_PlotOrigin_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ VARIANT *pOrigin);


void __RPC_STUB IAcadPlotConfiguration_get_PlotOrigin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_put_PlotOrigin_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ VARIANT pOrigin);


void __RPC_STUB IAcadPlotConfiguration_put_PlotOrigin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_GetWindowToPlot_Proxy( 
    IAcadPlotConfiguration * This,
    /* [out] */ VARIANT *LowerLeft,
    /* [out] */ VARIANT *UpperRight);


void __RPC_STUB IAcadPlotConfiguration_GetWindowToPlot_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_SetWindowToPlot_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ VARIANT LowerLeft,
    /* [in] */ VARIANT UpperRight);


void __RPC_STUB IAcadPlotConfiguration_SetWindowToPlot_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_get_PlotWithPlotStyles_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ VARIANT_BOOL *pStyles);


void __RPC_STUB IAcadPlotConfiguration_get_PlotWithPlotStyles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_put_PlotWithPlotStyles_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ VARIANT_BOOL pStyles);


void __RPC_STUB IAcadPlotConfiguration_put_PlotWithPlotStyles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_get_ModelType_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ VARIANT_BOOL *pType);


void __RPC_STUB IAcadPlotConfiguration_get_ModelType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_CopyFrom_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ IAcadPlotConfiguration *pPlotConfig);


void __RPC_STUB IAcadPlotConfiguration_CopyFrom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_GetCanonicalMediaNames_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ VARIANT *pNames);


void __RPC_STUB IAcadPlotConfiguration_GetCanonicalMediaNames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_GetPlotDeviceNames_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ VARIANT *pNames);


void __RPC_STUB IAcadPlotConfiguration_GetPlotDeviceNames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_GetPlotStyleTableNames_Proxy( 
    IAcadPlotConfiguration * This,
    /* [retval][out] */ VARIANT *pNames);


void __RPC_STUB IAcadPlotConfiguration_GetPlotStyleTableNames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_RefreshPlotDeviceInfo_Proxy( 
    IAcadPlotConfiguration * This);


void __RPC_STUB IAcadPlotConfiguration_RefreshPlotDeviceInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfiguration_GetLocaleMediaName_Proxy( 
    IAcadPlotConfiguration * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ BSTR *pLocalName);


void __RPC_STUB IAcadPlotConfiguration_GetLocaleMediaName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadPlotConfiguration_INTERFACE_DEFINED__ */


#ifndef __IAcadLayout_INTERFACE_DEFINED__
#define __IAcadLayout_INTERFACE_DEFINED__

/* interface IAcadLayout */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadLayout;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("46FC0058-178D-4C7D-869D-B3C97BA6BD26")
    IAcadLayout : public IAcadPlotConfiguration
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Block( 
            /* [retval][out] */ IAcadBlock **pBlock) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TabOrder( 
            /* [retval][out] */ long *pOrder) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TabOrder( 
            /* [in] */ long pOrder) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadLayoutVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadLayout * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadLayout * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadLayout * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadLayout * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadLayout * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadLayout * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadLayout * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadLayout * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadLayout * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadLayout * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadLayout * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadLayout * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadLayout * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadLayout * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadLayout * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadLayout * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadLayout * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadLayout * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadLayout * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadLayout * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadLayout * This,
            /* [in] */ BSTR pName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConfigName )( 
            IAcadLayout * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ConfigName )( 
            IAcadLayout * This,
            /* [in] */ BSTR pName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CanonicalMediaName )( 
            IAcadLayout * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CanonicalMediaName )( 
            IAcadLayout * This,
            /* [in] */ BSTR pName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PaperUnits )( 
            IAcadLayout * This,
            /* [retval][out] */ AcPlotPaperUnits *pPaperUnits);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PaperUnits )( 
            IAcadLayout * This,
            /* [in] */ AcPlotPaperUnits pPaperUnits);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotViewportBorders )( 
            IAcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *pViewportBorders);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotViewportBorders )( 
            IAcadLayout * This,
            /* [in] */ VARIANT_BOOL pViewportBorders);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowPlotStyles )( 
            IAcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *pStyles);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowPlotStyles )( 
            IAcadLayout * This,
            /* [in] */ VARIANT_BOOL pStyles);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotRotation )( 
            IAcadLayout * This,
            /* [retval][out] */ AcPlotRotation *pRotation);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotRotation )( 
            IAcadLayout * This,
            /* [in] */ AcPlotRotation pRotation);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CenterPlot )( 
            IAcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *pCentered);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CenterPlot )( 
            IAcadLayout * This,
            /* [in] */ VARIANT_BOOL pCentered);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotHidden )( 
            IAcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *pHidden);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotHidden )( 
            IAcadLayout * This,
            /* [in] */ VARIANT_BOOL pHidden);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotType )( 
            IAcadLayout * This,
            /* [retval][out] */ AcPlotType *pType);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotType )( 
            IAcadLayout * This,
            /* [in] */ AcPlotType pType);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ViewToPlot )( 
            IAcadLayout * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ViewToPlot )( 
            IAcadLayout * This,
            /* [in] */ BSTR pName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UseStandardScale )( 
            IAcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *pUseStdScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UseStandardScale )( 
            IAcadLayout * This,
            /* [in] */ VARIANT_BOOL pUseStdScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StandardScale )( 
            IAcadLayout * This,
            /* [retval][out] */ AcPlotScale *pStdScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StandardScale )( 
            IAcadLayout * This,
            /* [in] */ AcPlotScale pStdScale);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCustomScale )( 
            IAcadLayout * This,
            /* [out] */ double *Numerator,
            /* [out] */ double *Denominator);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCustomScale )( 
            IAcadLayout * This,
            /* [in] */ double Numerator,
            /* [in] */ double Denominator);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLineweights )( 
            IAcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *pScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLineweights )( 
            IAcadLayout * This,
            /* [in] */ VARIANT_BOOL pScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotWithLineweights )( 
            IAcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *pPlot);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotWithLineweights )( 
            IAcadLayout * This,
            /* [in] */ VARIANT_BOOL pPlot);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotViewportsFirst )( 
            IAcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *pViewportsFirst);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotViewportsFirst )( 
            IAcadLayout * This,
            /* [in] */ VARIANT_BOOL pViewportsFirst);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleSheet )( 
            IAcadLayout * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleSheet )( 
            IAcadLayout * This,
            /* [in] */ BSTR pName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPaperMargins )( 
            IAcadLayout * This,
            /* [out] */ VARIANT *LowerLeft,
            /* [out] */ VARIANT *UpperRight);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPaperSize )( 
            IAcadLayout * This,
            /* [out] */ double *Width,
            /* [out] */ double *Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotOrigin )( 
            IAcadLayout * This,
            /* [retval][out] */ VARIANT *pOrigin);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotOrigin )( 
            IAcadLayout * This,
            /* [in] */ VARIANT pOrigin);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetWindowToPlot )( 
            IAcadLayout * This,
            /* [out] */ VARIANT *LowerLeft,
            /* [out] */ VARIANT *UpperRight);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetWindowToPlot )( 
            IAcadLayout * This,
            /* [in] */ VARIANT LowerLeft,
            /* [in] */ VARIANT UpperRight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotWithPlotStyles )( 
            IAcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *pStyles);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotWithPlotStyles )( 
            IAcadLayout * This,
            /* [in] */ VARIANT_BOOL pStyles);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ModelType )( 
            IAcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *pType);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CopyFrom )( 
            IAcadLayout * This,
            /* [in] */ IAcadPlotConfiguration *pPlotConfig);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCanonicalMediaNames )( 
            IAcadLayout * This,
            /* [retval][out] */ VARIANT *pNames);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPlotDeviceNames )( 
            IAcadLayout * This,
            /* [retval][out] */ VARIANT *pNames);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPlotStyleTableNames )( 
            IAcadLayout * This,
            /* [retval][out] */ VARIANT *pNames);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RefreshPlotDeviceInfo )( 
            IAcadLayout * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetLocaleMediaName )( 
            IAcadLayout * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ BSTR *pLocalName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Block )( 
            IAcadLayout * This,
            /* [retval][out] */ IAcadBlock **pBlock);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TabOrder )( 
            IAcadLayout * This,
            /* [retval][out] */ long *pOrder);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TabOrder )( 
            IAcadLayout * This,
            /* [in] */ long pOrder);
        
        END_INTERFACE
    } IAcadLayoutVtbl;

    interface IAcadLayout
    {
        CONST_VTBL struct IAcadLayoutVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadLayout_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadLayout_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadLayout_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadLayout_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadLayout_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadLayout_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadLayout_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadLayout_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadLayout_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadLayout_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadLayout_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadLayout_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadLayout_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadLayout_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadLayout_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadLayout_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadLayout_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadLayout_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadLayout_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadLayout_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadLayout_get_Name(This,pName)	\
    (This)->lpVtbl -> get_Name(This,pName)

#define IAcadLayout_put_Name(This,pName)	\
    (This)->lpVtbl -> put_Name(This,pName)

#define IAcadLayout_get_ConfigName(This,pName)	\
    (This)->lpVtbl -> get_ConfigName(This,pName)

#define IAcadLayout_put_ConfigName(This,pName)	\
    (This)->lpVtbl -> put_ConfigName(This,pName)

#define IAcadLayout_get_CanonicalMediaName(This,pName)	\
    (This)->lpVtbl -> get_CanonicalMediaName(This,pName)

#define IAcadLayout_put_CanonicalMediaName(This,pName)	\
    (This)->lpVtbl -> put_CanonicalMediaName(This,pName)

#define IAcadLayout_get_PaperUnits(This,pPaperUnits)	\
    (This)->lpVtbl -> get_PaperUnits(This,pPaperUnits)

#define IAcadLayout_put_PaperUnits(This,pPaperUnits)	\
    (This)->lpVtbl -> put_PaperUnits(This,pPaperUnits)

#define IAcadLayout_get_PlotViewportBorders(This,pViewportBorders)	\
    (This)->lpVtbl -> get_PlotViewportBorders(This,pViewportBorders)

#define IAcadLayout_put_PlotViewportBorders(This,pViewportBorders)	\
    (This)->lpVtbl -> put_PlotViewportBorders(This,pViewportBorders)

#define IAcadLayout_get_ShowPlotStyles(This,pStyles)	\
    (This)->lpVtbl -> get_ShowPlotStyles(This,pStyles)

#define IAcadLayout_put_ShowPlotStyles(This,pStyles)	\
    (This)->lpVtbl -> put_ShowPlotStyles(This,pStyles)

#define IAcadLayout_get_PlotRotation(This,pRotation)	\
    (This)->lpVtbl -> get_PlotRotation(This,pRotation)

#define IAcadLayout_put_PlotRotation(This,pRotation)	\
    (This)->lpVtbl -> put_PlotRotation(This,pRotation)

#define IAcadLayout_get_CenterPlot(This,pCentered)	\
    (This)->lpVtbl -> get_CenterPlot(This,pCentered)

#define IAcadLayout_put_CenterPlot(This,pCentered)	\
    (This)->lpVtbl -> put_CenterPlot(This,pCentered)

#define IAcadLayout_get_PlotHidden(This,pHidden)	\
    (This)->lpVtbl -> get_PlotHidden(This,pHidden)

#define IAcadLayout_put_PlotHidden(This,pHidden)	\
    (This)->lpVtbl -> put_PlotHidden(This,pHidden)

#define IAcadLayout_get_PlotType(This,pType)	\
    (This)->lpVtbl -> get_PlotType(This,pType)

#define IAcadLayout_put_PlotType(This,pType)	\
    (This)->lpVtbl -> put_PlotType(This,pType)

#define IAcadLayout_get_ViewToPlot(This,pName)	\
    (This)->lpVtbl -> get_ViewToPlot(This,pName)

#define IAcadLayout_put_ViewToPlot(This,pName)	\
    (This)->lpVtbl -> put_ViewToPlot(This,pName)

#define IAcadLayout_get_UseStandardScale(This,pUseStdScale)	\
    (This)->lpVtbl -> get_UseStandardScale(This,pUseStdScale)

#define IAcadLayout_put_UseStandardScale(This,pUseStdScale)	\
    (This)->lpVtbl -> put_UseStandardScale(This,pUseStdScale)

#define IAcadLayout_get_StandardScale(This,pStdScale)	\
    (This)->lpVtbl -> get_StandardScale(This,pStdScale)

#define IAcadLayout_put_StandardScale(This,pStdScale)	\
    (This)->lpVtbl -> put_StandardScale(This,pStdScale)

#define IAcadLayout_GetCustomScale(This,Numerator,Denominator)	\
    (This)->lpVtbl -> GetCustomScale(This,Numerator,Denominator)

#define IAcadLayout_SetCustomScale(This,Numerator,Denominator)	\
    (This)->lpVtbl -> SetCustomScale(This,Numerator,Denominator)

#define IAcadLayout_get_ScaleLineweights(This,pScale)	\
    (This)->lpVtbl -> get_ScaleLineweights(This,pScale)

#define IAcadLayout_put_ScaleLineweights(This,pScale)	\
    (This)->lpVtbl -> put_ScaleLineweights(This,pScale)

#define IAcadLayout_get_PlotWithLineweights(This,pPlot)	\
    (This)->lpVtbl -> get_PlotWithLineweights(This,pPlot)

#define IAcadLayout_put_PlotWithLineweights(This,pPlot)	\
    (This)->lpVtbl -> put_PlotWithLineweights(This,pPlot)

#define IAcadLayout_get_PlotViewportsFirst(This,pViewportsFirst)	\
    (This)->lpVtbl -> get_PlotViewportsFirst(This,pViewportsFirst)

#define IAcadLayout_put_PlotViewportsFirst(This,pViewportsFirst)	\
    (This)->lpVtbl -> put_PlotViewportsFirst(This,pViewportsFirst)

#define IAcadLayout_get_StyleSheet(This,pName)	\
    (This)->lpVtbl -> get_StyleSheet(This,pName)

#define IAcadLayout_put_StyleSheet(This,pName)	\
    (This)->lpVtbl -> put_StyleSheet(This,pName)

#define IAcadLayout_GetPaperMargins(This,LowerLeft,UpperRight)	\
    (This)->lpVtbl -> GetPaperMargins(This,LowerLeft,UpperRight)

#define IAcadLayout_GetPaperSize(This,Width,Height)	\
    (This)->lpVtbl -> GetPaperSize(This,Width,Height)

#define IAcadLayout_get_PlotOrigin(This,pOrigin)	\
    (This)->lpVtbl -> get_PlotOrigin(This,pOrigin)

#define IAcadLayout_put_PlotOrigin(This,pOrigin)	\
    (This)->lpVtbl -> put_PlotOrigin(This,pOrigin)

#define IAcadLayout_GetWindowToPlot(This,LowerLeft,UpperRight)	\
    (This)->lpVtbl -> GetWindowToPlot(This,LowerLeft,UpperRight)

#define IAcadLayout_SetWindowToPlot(This,LowerLeft,UpperRight)	\
    (This)->lpVtbl -> SetWindowToPlot(This,LowerLeft,UpperRight)

#define IAcadLayout_get_PlotWithPlotStyles(This,pStyles)	\
    (This)->lpVtbl -> get_PlotWithPlotStyles(This,pStyles)

#define IAcadLayout_put_PlotWithPlotStyles(This,pStyles)	\
    (This)->lpVtbl -> put_PlotWithPlotStyles(This,pStyles)

#define IAcadLayout_get_ModelType(This,pType)	\
    (This)->lpVtbl -> get_ModelType(This,pType)

#define IAcadLayout_CopyFrom(This,pPlotConfig)	\
    (This)->lpVtbl -> CopyFrom(This,pPlotConfig)

#define IAcadLayout_GetCanonicalMediaNames(This,pNames)	\
    (This)->lpVtbl -> GetCanonicalMediaNames(This,pNames)

#define IAcadLayout_GetPlotDeviceNames(This,pNames)	\
    (This)->lpVtbl -> GetPlotDeviceNames(This,pNames)

#define IAcadLayout_GetPlotStyleTableNames(This,pNames)	\
    (This)->lpVtbl -> GetPlotStyleTableNames(This,pNames)

#define IAcadLayout_RefreshPlotDeviceInfo(This)	\
    (This)->lpVtbl -> RefreshPlotDeviceInfo(This)

#define IAcadLayout_GetLocaleMediaName(This,Name,pLocalName)	\
    (This)->lpVtbl -> GetLocaleMediaName(This,Name,pLocalName)


#define IAcadLayout_get_Block(This,pBlock)	\
    (This)->lpVtbl -> get_Block(This,pBlock)

#define IAcadLayout_get_TabOrder(This,pOrder)	\
    (This)->lpVtbl -> get_TabOrder(This,pOrder)

#define IAcadLayout_put_TabOrder(This,pOrder)	\
    (This)->lpVtbl -> put_TabOrder(This,pOrder)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLayout_get_Block_Proxy( 
    IAcadLayout * This,
    /* [retval][out] */ IAcadBlock **pBlock);


void __RPC_STUB IAcadLayout_get_Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLayout_get_TabOrder_Proxy( 
    IAcadLayout * This,
    /* [retval][out] */ long *pOrder);


void __RPC_STUB IAcadLayout_get_TabOrder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLayout_put_TabOrder_Proxy( 
    IAcadLayout * This,
    /* [in] */ long pOrder);


void __RPC_STUB IAcadLayout_put_TabOrder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadLayout_INTERFACE_DEFINED__ */


#ifndef __IAcadMInsertBlock_INTERFACE_DEFINED__
#define __IAcadMInsertBlock_INTERFACE_DEFINED__

/* interface IAcadMInsertBlock */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadMInsertBlock;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9229E352-E850-403E-88D1-3333AAEC3769")
    IAcadMInsertBlock : public IAcadBlockReference
    {
    public:
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Columns( 
            /* [in] */ long NumColumns) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Columns( 
            /* [retval][out] */ long *NumColumns) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ColumnSpacing( 
            /* [in] */ double Spacing) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ColumnSpacing( 
            /* [retval][out] */ double *Spacing) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Rows( 
            /* [in] */ long NumRows) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Rows( 
            /* [retval][out] */ long *NumRows) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_RowSpacing( 
            /* [in] */ double Spacing) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_RowSpacing( 
            /* [retval][out] */ double *Spacing) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadMInsertBlockVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadMInsertBlock * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadMInsertBlock * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadMInsertBlock * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadMInsertBlock * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadMInsertBlock * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadMInsertBlock * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadMInsertBlock * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadMInsertBlock * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadMInsertBlock * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadMInsertBlock * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadMInsertBlock * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadMInsertBlock * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadMInsertBlock * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadMInsertBlock * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadMInsertBlock * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadMInsertBlock * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadMInsertBlock * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadMInsertBlock * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadMInsertBlock * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadMInsertBlock * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadMInsertBlock * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadMInsertBlock * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadMInsertBlock * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadMInsertBlock * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadMInsertBlock * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadMInsertBlock * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadMInsertBlock * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadMInsertBlock * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadMInsertBlock * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadMInsertBlock * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadMInsertBlock * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadMInsertBlock * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ VARIANT *insPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IAcadMInsertBlock * This,
            /* [in] */ VARIANT insPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadMInsertBlock * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadMInsertBlock * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IAcadMInsertBlock * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XScaleFactor )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ ACAD_NOUNITS *ScaleFactor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_XScaleFactor )( 
            IAcadMInsertBlock * This,
            /* [in] */ ACAD_NOUNITS ScaleFactor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_YScaleFactor )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ ACAD_NOUNITS *ScaleFactor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_YScaleFactor )( 
            IAcadMInsertBlock * This,
            /* [in] */ ACAD_NOUNITS ScaleFactor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ZScaleFactor )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ ACAD_NOUNITS *ScaleFactor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ZScaleFactor )( 
            IAcadMInsertBlock * This,
            /* [in] */ ACAD_NOUNITS ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Explode )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetAttributes )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ VARIANT *pAttrObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetConstantAttributes )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ VARIANT *pAttrObjs);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasAttributes )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ VARIANT_BOOL *bHas);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Columns )( 
            IAcadMInsertBlock * This,
            /* [in] */ long NumColumns);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Columns )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ long *NumColumns);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ColumnSpacing )( 
            IAcadMInsertBlock * This,
            /* [in] */ double Spacing);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ColumnSpacing )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ double *Spacing);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rows )( 
            IAcadMInsertBlock * This,
            /* [in] */ long NumRows);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rows )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ long *NumRows);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RowSpacing )( 
            IAcadMInsertBlock * This,
            /* [in] */ double Spacing);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RowSpacing )( 
            IAcadMInsertBlock * This,
            /* [retval][out] */ double *Spacing);
        
        END_INTERFACE
    } IAcadMInsertBlockVtbl;

    interface IAcadMInsertBlock
    {
        CONST_VTBL struct IAcadMInsertBlockVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadMInsertBlock_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadMInsertBlock_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadMInsertBlock_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadMInsertBlock_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadMInsertBlock_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadMInsertBlock_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadMInsertBlock_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadMInsertBlock_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadMInsertBlock_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadMInsertBlock_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadMInsertBlock_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadMInsertBlock_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadMInsertBlock_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadMInsertBlock_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadMInsertBlock_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadMInsertBlock_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadMInsertBlock_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadMInsertBlock_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadMInsertBlock_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadMInsertBlock_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadMInsertBlock_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadMInsertBlock_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadMInsertBlock_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadMInsertBlock_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadMInsertBlock_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadMInsertBlock_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadMInsertBlock_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadMInsertBlock_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadMInsertBlock_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadMInsertBlock_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadMInsertBlock_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadMInsertBlock_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadMInsertBlock_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadMInsertBlock_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadMInsertBlock_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadMInsertBlock_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadMInsertBlock_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadMInsertBlock_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadMInsertBlock_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadMInsertBlock_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadMInsertBlock_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadMInsertBlock_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadMInsertBlock_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadMInsertBlock_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadMInsertBlock_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadMInsertBlock_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadMInsertBlock_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadMInsertBlock_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadMInsertBlock_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadMInsertBlock_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadMInsertBlock_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadMInsertBlock_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadMInsertBlock_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadMInsertBlock_get_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> get_InsertionPoint(This,insPoint)

#define IAcadMInsertBlock_put_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> put_InsertionPoint(This,insPoint)

#define IAcadMInsertBlock_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadMInsertBlock_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#define IAcadMInsertBlock_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadMInsertBlock_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadMInsertBlock_get_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> get_Rotation(This,rotAngle)

#define IAcadMInsertBlock_put_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> put_Rotation(This,rotAngle)

#define IAcadMInsertBlock_get_XScaleFactor(This,ScaleFactor)	\
    (This)->lpVtbl -> get_XScaleFactor(This,ScaleFactor)

#define IAcadMInsertBlock_put_XScaleFactor(This,ScaleFactor)	\
    (This)->lpVtbl -> put_XScaleFactor(This,ScaleFactor)

#define IAcadMInsertBlock_get_YScaleFactor(This,ScaleFactor)	\
    (This)->lpVtbl -> get_YScaleFactor(This,ScaleFactor)

#define IAcadMInsertBlock_put_YScaleFactor(This,ScaleFactor)	\
    (This)->lpVtbl -> put_YScaleFactor(This,ScaleFactor)

#define IAcadMInsertBlock_get_ZScaleFactor(This,ScaleFactor)	\
    (This)->lpVtbl -> get_ZScaleFactor(This,ScaleFactor)

#define IAcadMInsertBlock_put_ZScaleFactor(This,ScaleFactor)	\
    (This)->lpVtbl -> put_ZScaleFactor(This,ScaleFactor)

#define IAcadMInsertBlock_Explode(This,pArrayObjs)	\
    (This)->lpVtbl -> Explode(This,pArrayObjs)

#define IAcadMInsertBlock_GetAttributes(This,pAttrObjs)	\
    (This)->lpVtbl -> GetAttributes(This,pAttrObjs)

#define IAcadMInsertBlock_GetConstantAttributes(This,pAttrObjs)	\
    (This)->lpVtbl -> GetConstantAttributes(This,pAttrObjs)

#define IAcadMInsertBlock_get_HasAttributes(This,bHas)	\
    (This)->lpVtbl -> get_HasAttributes(This,bHas)


#define IAcadMInsertBlock_put_Columns(This,NumColumns)	\
    (This)->lpVtbl -> put_Columns(This,NumColumns)

#define IAcadMInsertBlock_get_Columns(This,NumColumns)	\
    (This)->lpVtbl -> get_Columns(This,NumColumns)

#define IAcadMInsertBlock_put_ColumnSpacing(This,Spacing)	\
    (This)->lpVtbl -> put_ColumnSpacing(This,Spacing)

#define IAcadMInsertBlock_get_ColumnSpacing(This,Spacing)	\
    (This)->lpVtbl -> get_ColumnSpacing(This,Spacing)

#define IAcadMInsertBlock_put_Rows(This,NumRows)	\
    (This)->lpVtbl -> put_Rows(This,NumRows)

#define IAcadMInsertBlock_get_Rows(This,NumRows)	\
    (This)->lpVtbl -> get_Rows(This,NumRows)

#define IAcadMInsertBlock_put_RowSpacing(This,Spacing)	\
    (This)->lpVtbl -> put_RowSpacing(This,Spacing)

#define IAcadMInsertBlock_get_RowSpacing(This,Spacing)	\
    (This)->lpVtbl -> get_RowSpacing(This,Spacing)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadMInsertBlock_put_Columns_Proxy( 
    IAcadMInsertBlock * This,
    /* [in] */ long NumColumns);


void __RPC_STUB IAcadMInsertBlock_put_Columns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadMInsertBlock_get_Columns_Proxy( 
    IAcadMInsertBlock * This,
    /* [retval][out] */ long *NumColumns);


void __RPC_STUB IAcadMInsertBlock_get_Columns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadMInsertBlock_put_ColumnSpacing_Proxy( 
    IAcadMInsertBlock * This,
    /* [in] */ double Spacing);


void __RPC_STUB IAcadMInsertBlock_put_ColumnSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadMInsertBlock_get_ColumnSpacing_Proxy( 
    IAcadMInsertBlock * This,
    /* [retval][out] */ double *Spacing);


void __RPC_STUB IAcadMInsertBlock_get_ColumnSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadMInsertBlock_put_Rows_Proxy( 
    IAcadMInsertBlock * This,
    /* [in] */ long NumRows);


void __RPC_STUB IAcadMInsertBlock_put_Rows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadMInsertBlock_get_Rows_Proxy( 
    IAcadMInsertBlock * This,
    /* [retval][out] */ long *NumRows);


void __RPC_STUB IAcadMInsertBlock_get_Rows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadMInsertBlock_put_RowSpacing_Proxy( 
    IAcadMInsertBlock * This,
    /* [in] */ double Spacing);


void __RPC_STUB IAcadMInsertBlock_put_RowSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadMInsertBlock_get_RowSpacing_Proxy( 
    IAcadMInsertBlock * This,
    /* [retval][out] */ double *Spacing);


void __RPC_STUB IAcadMInsertBlock_get_RowSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadMInsertBlock_INTERFACE_DEFINED__ */


#ifndef __IAcadPolyfaceMesh_INTERFACE_DEFINED__
#define __IAcadPolyfaceMesh_INTERFACE_DEFINED__

/* interface IAcadPolyfaceMesh */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadPolyfaceMesh;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("058B7D06-FCB3-4B36-B39A-F3AF39435604")
    IAcadPolyfaceMesh : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT Vertices) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *Vertices) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Coordinate( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Coordinate( 
            /* [in] */ int Index,
            /* [in] */ VARIANT pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_NumberOfVertices( 
            /* [retval][out] */ long *NumVertices) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_NumberOfFaces( 
            /* [retval][out] */ long *NumFaces) = 0;
        
        virtual /* [hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_Faces( 
            /* [in] */ VARIANT rhs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadPolyfaceMeshVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadPolyfaceMesh * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadPolyfaceMesh * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadPolyfaceMesh * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadPolyfaceMesh * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadPolyfaceMesh * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadPolyfaceMesh * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadPolyfaceMesh * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ VARIANT Vertices);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ VARIANT *Vertices);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinate )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinate )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NumberOfVertices )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ long *NumVertices);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NumberOfFaces )( 
            IAcadPolyfaceMesh * This,
            /* [retval][out] */ long *NumFaces);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Faces )( 
            IAcadPolyfaceMesh * This,
            /* [in] */ VARIANT rhs);
        
        END_INTERFACE
    } IAcadPolyfaceMeshVtbl;

    interface IAcadPolyfaceMesh
    {
        CONST_VTBL struct IAcadPolyfaceMeshVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadPolyfaceMesh_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadPolyfaceMesh_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadPolyfaceMesh_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadPolyfaceMesh_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadPolyfaceMesh_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadPolyfaceMesh_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadPolyfaceMesh_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadPolyfaceMesh_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadPolyfaceMesh_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadPolyfaceMesh_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadPolyfaceMesh_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadPolyfaceMesh_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadPolyfaceMesh_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadPolyfaceMesh_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadPolyfaceMesh_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadPolyfaceMesh_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadPolyfaceMesh_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadPolyfaceMesh_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadPolyfaceMesh_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadPolyfaceMesh_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadPolyfaceMesh_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadPolyfaceMesh_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadPolyfaceMesh_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadPolyfaceMesh_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadPolyfaceMesh_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadPolyfaceMesh_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadPolyfaceMesh_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadPolyfaceMesh_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadPolyfaceMesh_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadPolyfaceMesh_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadPolyfaceMesh_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadPolyfaceMesh_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadPolyfaceMesh_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadPolyfaceMesh_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadPolyfaceMesh_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadPolyfaceMesh_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadPolyfaceMesh_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadPolyfaceMesh_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadPolyfaceMesh_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadPolyfaceMesh_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadPolyfaceMesh_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadPolyfaceMesh_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadPolyfaceMesh_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadPolyfaceMesh_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadPolyfaceMesh_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadPolyfaceMesh_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadPolyfaceMesh_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadPolyfaceMesh_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadPolyfaceMesh_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadPolyfaceMesh_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadPolyfaceMesh_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadPolyfaceMesh_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadPolyfaceMesh_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadPolyfaceMesh_put_Coordinates(This,Vertices)	\
    (This)->lpVtbl -> put_Coordinates(This,Vertices)

#define IAcadPolyfaceMesh_get_Coordinates(This,Vertices)	\
    (This)->lpVtbl -> get_Coordinates(This,Vertices)

#define IAcadPolyfaceMesh_get_Coordinate(This,Index,pVal)	\
    (This)->lpVtbl -> get_Coordinate(This,Index,pVal)

#define IAcadPolyfaceMesh_put_Coordinate(This,Index,pVal)	\
    (This)->lpVtbl -> put_Coordinate(This,Index,pVal)

#define IAcadPolyfaceMesh_get_NumberOfVertices(This,NumVertices)	\
    (This)->lpVtbl -> get_NumberOfVertices(This,NumVertices)

#define IAcadPolyfaceMesh_get_NumberOfFaces(This,NumFaces)	\
    (This)->lpVtbl -> get_NumberOfFaces(This,NumFaces)

#define IAcadPolyfaceMesh_put_Faces(This,rhs)	\
    (This)->lpVtbl -> put_Faces(This,rhs)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyfaceMesh_put_Coordinates_Proxy( 
    IAcadPolyfaceMesh * This,
    /* [in] */ VARIANT Vertices);


void __RPC_STUB IAcadPolyfaceMesh_put_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyfaceMesh_get_Coordinates_Proxy( 
    IAcadPolyfaceMesh * This,
    /* [retval][out] */ VARIANT *Vertices);


void __RPC_STUB IAcadPolyfaceMesh_get_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyfaceMesh_get_Coordinate_Proxy( 
    IAcadPolyfaceMesh * This,
    /* [in] */ int Index,
    /* [retval][out] */ VARIANT *pVal);


void __RPC_STUB IAcadPolyfaceMesh_get_Coordinate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyfaceMesh_put_Coordinate_Proxy( 
    IAcadPolyfaceMesh * This,
    /* [in] */ int Index,
    /* [in] */ VARIANT pVal);


void __RPC_STUB IAcadPolyfaceMesh_put_Coordinate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyfaceMesh_get_NumberOfVertices_Proxy( 
    IAcadPolyfaceMesh * This,
    /* [retval][out] */ long *NumVertices);


void __RPC_STUB IAcadPolyfaceMesh_get_NumberOfVertices_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyfaceMesh_get_NumberOfFaces_Proxy( 
    IAcadPolyfaceMesh * This,
    /* [retval][out] */ long *NumFaces);


void __RPC_STUB IAcadPolyfaceMesh_get_NumberOfFaces_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPolyfaceMesh_put_Faces_Proxy( 
    IAcadPolyfaceMesh * This,
    /* [in] */ VARIANT rhs);


void __RPC_STUB IAcadPolyfaceMesh_put_Faces_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadPolyfaceMesh_INTERFACE_DEFINED__ */


#ifndef __IAcadMLine_INTERFACE_DEFINED__
#define __IAcadMLine_INTERFACE_DEFINED__

/* interface IAcadMLine */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadMLine;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7C0ED309-AA19-4D81-9E92-ADBBF964835F")
    IAcadMLine : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_StyleName( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *Vertices) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT Vertices) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadMLineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadMLine * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadMLine * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadMLine * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadMLine * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadMLine * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadMLine * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadMLine * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadMLine * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadMLine * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadMLine * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadMLine * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadMLine * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadMLine * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadMLine * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadMLine * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadMLine * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadMLine * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadMLine * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadMLine * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadMLine * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadMLine * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadMLine * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadMLine * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadMLine * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadMLine * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadMLine * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadMLine * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadMLine * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadMLine * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadMLine * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadMLine * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadMLine * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadMLine * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadMLine * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadMLine * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadMLine * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadMLine * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadMLine * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadMLine * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadMLine * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadMLine * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadMLine * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadMLine * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadMLine * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadMLine * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadMLine * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadMLine * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadMLine * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadMLine * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadMLine * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadMLine * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadMLine * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadMLine * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IAcadMLine * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IAcadMLine * This,
            /* [retval][out] */ VARIANT *Vertices);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IAcadMLine * This,
            /* [in] */ VARIANT Vertices);
        
        END_INTERFACE
    } IAcadMLineVtbl;

    interface IAcadMLine
    {
        CONST_VTBL struct IAcadMLineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadMLine_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadMLine_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadMLine_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadMLine_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadMLine_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadMLine_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadMLine_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadMLine_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadMLine_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadMLine_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadMLine_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadMLine_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadMLine_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadMLine_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadMLine_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadMLine_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadMLine_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadMLine_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadMLine_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadMLine_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadMLine_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadMLine_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadMLine_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadMLine_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadMLine_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadMLine_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadMLine_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadMLine_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadMLine_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadMLine_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadMLine_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadMLine_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadMLine_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadMLine_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadMLine_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadMLine_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadMLine_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadMLine_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadMLine_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadMLine_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadMLine_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadMLine_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadMLine_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadMLine_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadMLine_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadMLine_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadMLine_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadMLine_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadMLine_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadMLine_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadMLine_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadMLine_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadMLine_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadMLine_get_StyleName(This,Name)	\
    (This)->lpVtbl -> get_StyleName(This,Name)

#define IAcadMLine_get_Coordinates(This,Vertices)	\
    (This)->lpVtbl -> get_Coordinates(This,Vertices)

#define IAcadMLine_put_Coordinates(This,Vertices)	\
    (This)->lpVtbl -> put_Coordinates(This,Vertices)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadMLine_get_StyleName_Proxy( 
    IAcadMLine * This,
    /* [retval][out] */ BSTR *Name);


void __RPC_STUB IAcadMLine_get_StyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadMLine_get_Coordinates_Proxy( 
    IAcadMLine * This,
    /* [retval][out] */ VARIANT *Vertices);


void __RPC_STUB IAcadMLine_get_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadMLine_put_Coordinates_Proxy( 
    IAcadMLine * This,
    /* [in] */ VARIANT Vertices);


void __RPC_STUB IAcadMLine_put_Coordinates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadMLine_INTERFACE_DEFINED__ */


#ifndef __IAcadDim3PointAngular_INTERFACE_DEFINED__
#define __IAcadDim3PointAngular_INTERFACE_DEFINED__

/* interface IAcadDim3PointAngular */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadDim3PointAngular;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1908BE81-E5FD-44AB-B9E0-24DF76B198ED")
    IAcadDim3PointAngular : public IAcadDimension
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtLine1EndPoint( 
            /* [retval][out] */ VARIANT *xLine1Point) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtLine1EndPoint( 
            /* [in] */ VARIANT xLine1Point) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtLine2EndPoint( 
            /* [retval][out] */ VARIANT *xLine2Point) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtLine2EndPoint( 
            /* [in] */ VARIANT xLine2Point) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AngleVertex( 
            /* [retval][out] */ VARIANT *AngleVertex) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AngleVertex( 
            /* [in] */ VARIANT AngleVertex) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextPrecision( 
            /* [retval][out] */ AcDimPrecision *AngleVertex) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextPrecision( 
            /* [in] */ AcDimPrecision AngleVertex) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AngleFormat( 
            /* [retval][out] */ AcAngleUnits *format) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AngleFormat( 
            /* [in] */ AcAngleUnits format) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimensionLineColor( 
            /* [retval][out] */ ACAD_COLOR *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimensionLineColor( 
            /* [in] */ ACAD_COLOR Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineColor( 
            /* [retval][out] */ ACAD_COLOR *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineColor( 
            /* [in] */ ACAD_COLOR Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineExtend( 
            /* [retval][out] */ double *extend) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineExtend( 
            /* [in] */ double extend) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Fit( 
            /* [retval][out] */ AcDimFit *fittype) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Fit( 
            /* [in] */ AcDimFit fittype) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HorizontalTextPosition( 
            /* [retval][out] */ AcDimHorizontalJustification *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_HorizontalTextPosition( 
            /* [in] */ AcDimHorizontalJustification Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineWeight( 
            /* [retval][out] */ ACAD_LWEIGHT *lweight) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineWeight( 
            /* [in] */ ACAD_LWEIGHT lweight) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimLine1Suppress( 
            /* [retval][out] */ VARIANT_BOOL *bSuppress) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimLine1Suppress( 
            /* [in] */ VARIANT_BOOL bSuppress) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimLine2Suppress( 
            /* [retval][out] */ VARIANT_BOOL *bSuppress) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimLine2Suppress( 
            /* [in] */ VARIANT_BOOL bSuppress) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtLine1Suppress( 
            /* [retval][out] */ VARIANT_BOOL *bSuppress) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtLine1Suppress( 
            /* [in] */ VARIANT_BOOL bSuppress) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtLine2Suppress( 
            /* [retval][out] */ VARIANT_BOOL *bSuppress) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtLine2Suppress( 
            /* [in] */ VARIANT_BOOL bSuppress) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimLineInside( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimLineInside( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextInsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextInsideAlign( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextInside( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextInside( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ForceLineInside( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ForceLineInside( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextOutsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *bInside) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextOutsideAlign( 
            /* [in] */ VARIANT_BOOL bInside) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineOffset( 
            /* [retval][out] */ double *Offset) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineOffset( 
            /* [in] */ double Offset) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DimensionLineWeight( 
            /* [retval][out] */ ACAD_LWEIGHT *weight) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DimensionLineWeight( 
            /* [in] */ ACAD_LWEIGHT weight) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ArrowheadSize( 
            /* [retval][out] */ double *size) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ArrowheadSize( 
            /* [in] */ double size) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arrowhead1Type( 
            /* [retval][out] */ AcDimArrowheadType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Arrowhead1Type( 
            /* [in] */ AcDimArrowheadType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arrowhead2Type( 
            /* [retval][out] */ AcDimArrowheadType *Type) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Arrowhead2Type( 
            /* [in] */ AcDimArrowheadType Type) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Measurement( 
            /* [retval][out] */ ACAD_ANGLE *bVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arrowhead1Block( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Arrowhead1Block( 
            /* [in] */ BSTR BlockName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Arrowhead2Block( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Arrowhead2Block( 
            /* [in] */ BSTR BlockName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadDim3PointAngularVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadDim3PointAngular * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadDim3PointAngular * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadDim3PointAngular * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadDim3PointAngular * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadDim3PointAngular * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadDim3PointAngular * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadDim3PointAngular * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadDim3PointAngular * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadDim3PointAngular * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadDim3PointAngular * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadDim3PointAngular * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadDim3PointAngular * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadDim3PointAngular * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadDim3PointAngular * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadDim3PointAngular * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadDim3PointAngular * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadDim3PointAngular * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadDim3PointAngular * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadDim3PointAngular * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadDim3PointAngular * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadDim3PointAngular * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadDim3PointAngular * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IAcadDim3PointAngular * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextPosition )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT *textPos);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextPosition )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT textPos);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextRotation )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextRotation )( 
            IAcadDim3PointAngular * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextOverride )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *bstrText);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextOverride )( 
            IAcadDim3PointAngular * This,
            /* [in] */ BSTR bstrText);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IAcadDim3PointAngular * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextColor )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextColor )( 
            IAcadDim3PointAngular * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DecimalSeparator )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *character);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DecimalSeparator )( 
            IAcadDim3PointAngular * This,
            /* [in] */ BSTR character);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextGap )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ double *Offset);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextGap )( 
            IAcadDim3PointAngular * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrefix )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *prefix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrefix )( 
            IAcadDim3PointAngular * This,
            /* [in] */ BSTR prefix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextSuffix )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *suffix);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextSuffix )( 
            IAcadDim3PointAngular * This,
            /* [in] */ BSTR suffix);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ ACAD_NOUNITS *factor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IAcadDim3PointAngular * This,
            /* [in] */ ACAD_NOUNITS factor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalTextPosition )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ AcDimVerticalJustification *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalTextPosition )( 
            IAcadDim3PointAngular * This,
            /* [in] */ AcDimVerticalJustification Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TolerancePrecision )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ AcDimPrecision *precision);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TolerancePrecision )( 
            IAcadDim3PointAngular * This,
            /* [in] */ AcDimPrecision precision);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceHeightScale )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ ACAD_NOUNITS *scale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceHeightScale )( 
            IAcadDim3PointAngular * This,
            /* [in] */ ACAD_NOUNITS scale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceLowerLimit )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ double *lower);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceLowerLimit )( 
            IAcadDim3PointAngular * This,
            /* [in] */ double lower);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextMovement )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ AcDimTextMovement *Move);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextMovement )( 
            IAcadDim3PointAngular * This,
            /* [in] */ AcDimTextMovement Move);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceDisplay )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ AcDimToleranceMethod *method);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceDisplay )( 
            IAcadDim3PointAngular * This,
            /* [in] */ AcDimToleranceMethod method);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceJustification )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ AcDimToleranceJustify *method);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceJustification )( 
            IAcadDim3PointAngular * This,
            /* [in] */ AcDimToleranceJustify method);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceUpperLimit )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ double *upper);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceUpperLimit )( 
            IAcadDim3PointAngular * This,
            /* [in] */ double upper);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextStyle )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *style);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextStyle )( 
            IAcadDim3PointAngular * This,
            /* [in] */ BSTR style);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextHeight )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextHeight )( 
            IAcadDim3PointAngular * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressLeadingZeros )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressLeadingZeros )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressTrailingZeros )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressTrailingZeros )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressLeadingZeros )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressLeadingZeros )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressTrailingZeros )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressTrailingZeros )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine1EndPoint )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT *xLine1Point);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine1EndPoint )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT xLine1Point);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine2EndPoint )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT *xLine2Point);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine2EndPoint )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT xLine2Point);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AngleVertex )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT *AngleVertex);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AngleVertex )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT AngleVertex);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrecision )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ AcDimPrecision *AngleVertex);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrecision )( 
            IAcadDim3PointAngular * This,
            /* [in] */ AcDimPrecision AngleVertex);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AngleFormat )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ AcAngleUnits *format);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AngleFormat )( 
            IAcadDim3PointAngular * This,
            /* [in] */ AcAngleUnits format);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineColor )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ ACAD_COLOR *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineColor )( 
            IAcadDim3PointAngular * This,
            /* [in] */ ACAD_COLOR Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineColor )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ ACAD_COLOR *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineColor )( 
            IAcadDim3PointAngular * This,
            /* [in] */ ACAD_COLOR Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineExtend )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ double *extend);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineExtend )( 
            IAcadDim3PointAngular * This,
            /* [in] */ double extend);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Fit )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ AcDimFit *fittype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Fit )( 
            IAcadDim3PointAngular * This,
            /* [in] */ AcDimFit fittype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalTextPosition )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ AcDimHorizontalJustification *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalTextPosition )( 
            IAcadDim3PointAngular * This,
            /* [in] */ AcDimHorizontalJustification Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineWeight )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ ACAD_LWEIGHT *lweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineWeight )( 
            IAcadDim3PointAngular * This,
            /* [in] */ ACAD_LWEIGHT lweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimLine1Suppress )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bSuppress);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimLine1Suppress )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL bSuppress);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimLine2Suppress )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bSuppress);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimLine2Suppress )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL bSuppress);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine1Suppress )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bSuppress);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine1Suppress )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL bSuppress);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine2Suppress )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bSuppress);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine2Suppress )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL bSuppress);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimLineInside )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimLineInside )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextInsideAlign )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextInsideAlign )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextInside )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextInside )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForceLineInside )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForceLineInside )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextOutsideAlign )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bInside);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextOutsideAlign )( 
            IAcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL bInside);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineOffset )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ double *Offset);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineOffset )( 
            IAcadDim3PointAngular * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineWeight )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ ACAD_LWEIGHT *weight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineWeight )( 
            IAcadDim3PointAngular * This,
            /* [in] */ ACAD_LWEIGHT weight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadSize )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ double *size);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadSize )( 
            IAcadDim3PointAngular * This,
            /* [in] */ double size);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead1Type )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ AcDimArrowheadType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead1Type )( 
            IAcadDim3PointAngular * This,
            /* [in] */ AcDimArrowheadType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead2Type )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ AcDimArrowheadType *Type);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead2Type )( 
            IAcadDim3PointAngular * This,
            /* [in] */ AcDimArrowheadType Type);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Measurement )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ ACAD_ANGLE *bVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead1Block )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead1Block )( 
            IAcadDim3PointAngular * This,
            /* [in] */ BSTR BlockName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead2Block )( 
            IAcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead2Block )( 
            IAcadDim3PointAngular * This,
            /* [in] */ BSTR BlockName);
        
        END_INTERFACE
    } IAcadDim3PointAngularVtbl;

    interface IAcadDim3PointAngular
    {
        CONST_VTBL struct IAcadDim3PointAngularVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadDim3PointAngular_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadDim3PointAngular_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadDim3PointAngular_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadDim3PointAngular_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadDim3PointAngular_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadDim3PointAngular_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadDim3PointAngular_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadDim3PointAngular_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadDim3PointAngular_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadDim3PointAngular_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadDim3PointAngular_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadDim3PointAngular_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadDim3PointAngular_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadDim3PointAngular_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadDim3PointAngular_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadDim3PointAngular_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadDim3PointAngular_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadDim3PointAngular_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadDim3PointAngular_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadDim3PointAngular_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadDim3PointAngular_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadDim3PointAngular_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadDim3PointAngular_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadDim3PointAngular_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadDim3PointAngular_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadDim3PointAngular_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadDim3PointAngular_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadDim3PointAngular_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadDim3PointAngular_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadDim3PointAngular_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadDim3PointAngular_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadDim3PointAngular_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadDim3PointAngular_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadDim3PointAngular_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadDim3PointAngular_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadDim3PointAngular_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadDim3PointAngular_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadDim3PointAngular_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadDim3PointAngular_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadDim3PointAngular_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadDim3PointAngular_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadDim3PointAngular_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadDim3PointAngular_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadDim3PointAngular_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadDim3PointAngular_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadDim3PointAngular_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadDim3PointAngular_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadDim3PointAngular_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadDim3PointAngular_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadDim3PointAngular_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadDim3PointAngular_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadDim3PointAngular_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadDim3PointAngular_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadDim3PointAngular_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadDim3PointAngular_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadDim3PointAngular_get_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> get_Rotation(This,rotAngle)

#define IAcadDim3PointAngular_put_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> put_Rotation(This,rotAngle)

#define IAcadDim3PointAngular_get_TextPosition(This,textPos)	\
    (This)->lpVtbl -> get_TextPosition(This,textPos)

#define IAcadDim3PointAngular_put_TextPosition(This,textPos)	\
    (This)->lpVtbl -> put_TextPosition(This,textPos)

#define IAcadDim3PointAngular_get_TextRotation(This,rotAngle)	\
    (This)->lpVtbl -> get_TextRotation(This,rotAngle)

#define IAcadDim3PointAngular_put_TextRotation(This,rotAngle)	\
    (This)->lpVtbl -> put_TextRotation(This,rotAngle)

#define IAcadDim3PointAngular_get_TextOverride(This,bstrText)	\
    (This)->lpVtbl -> get_TextOverride(This,bstrText)

#define IAcadDim3PointAngular_put_TextOverride(This,bstrText)	\
    (This)->lpVtbl -> put_TextOverride(This,bstrText)

#define IAcadDim3PointAngular_get_StyleName(This,bstrName)	\
    (This)->lpVtbl -> get_StyleName(This,bstrName)

#define IAcadDim3PointAngular_put_StyleName(This,bstrName)	\
    (This)->lpVtbl -> put_StyleName(This,bstrName)

#define IAcadDim3PointAngular_get_TextColor(This,color)	\
    (This)->lpVtbl -> get_TextColor(This,color)

#define IAcadDim3PointAngular_put_TextColor(This,color)	\
    (This)->lpVtbl -> put_TextColor(This,color)

#define IAcadDim3PointAngular_get_DecimalSeparator(This,character)	\
    (This)->lpVtbl -> get_DecimalSeparator(This,character)

#define IAcadDim3PointAngular_put_DecimalSeparator(This,character)	\
    (This)->lpVtbl -> put_DecimalSeparator(This,character)

#define IAcadDim3PointAngular_get_TextGap(This,Offset)	\
    (This)->lpVtbl -> get_TextGap(This,Offset)

#define IAcadDim3PointAngular_put_TextGap(This,Offset)	\
    (This)->lpVtbl -> put_TextGap(This,Offset)

#define IAcadDim3PointAngular_get_TextPrefix(This,prefix)	\
    (This)->lpVtbl -> get_TextPrefix(This,prefix)

#define IAcadDim3PointAngular_put_TextPrefix(This,prefix)	\
    (This)->lpVtbl -> put_TextPrefix(This,prefix)

#define IAcadDim3PointAngular_get_TextSuffix(This,suffix)	\
    (This)->lpVtbl -> get_TextSuffix(This,suffix)

#define IAcadDim3PointAngular_put_TextSuffix(This,suffix)	\
    (This)->lpVtbl -> put_TextSuffix(This,suffix)

#define IAcadDim3PointAngular_get_ScaleFactor(This,factor)	\
    (This)->lpVtbl -> get_ScaleFactor(This,factor)

#define IAcadDim3PointAngular_put_ScaleFactor(This,factor)	\
    (This)->lpVtbl -> put_ScaleFactor(This,factor)

#define IAcadDim3PointAngular_get_VerticalTextPosition(This,Type)	\
    (This)->lpVtbl -> get_VerticalTextPosition(This,Type)

#define IAcadDim3PointAngular_put_VerticalTextPosition(This,Type)	\
    (This)->lpVtbl -> put_VerticalTextPosition(This,Type)

#define IAcadDim3PointAngular_get_TolerancePrecision(This,precision)	\
    (This)->lpVtbl -> get_TolerancePrecision(This,precision)

#define IAcadDim3PointAngular_put_TolerancePrecision(This,precision)	\
    (This)->lpVtbl -> put_TolerancePrecision(This,precision)

#define IAcadDim3PointAngular_get_ToleranceHeightScale(This,scale)	\
    (This)->lpVtbl -> get_ToleranceHeightScale(This,scale)

#define IAcadDim3PointAngular_put_ToleranceHeightScale(This,scale)	\
    (This)->lpVtbl -> put_ToleranceHeightScale(This,scale)

#define IAcadDim3PointAngular_get_ToleranceLowerLimit(This,lower)	\
    (This)->lpVtbl -> get_ToleranceLowerLimit(This,lower)

#define IAcadDim3PointAngular_put_ToleranceLowerLimit(This,lower)	\
    (This)->lpVtbl -> put_ToleranceLowerLimit(This,lower)

#define IAcadDim3PointAngular_get_TextMovement(This,Move)	\
    (This)->lpVtbl -> get_TextMovement(This,Move)

#define IAcadDim3PointAngular_put_TextMovement(This,Move)	\
    (This)->lpVtbl -> put_TextMovement(This,Move)

#define IAcadDim3PointAngular_get_ToleranceDisplay(This,method)	\
    (This)->lpVtbl -> get_ToleranceDisplay(This,method)

#define IAcadDim3PointAngular_put_ToleranceDisplay(This,method)	\
    (This)->lpVtbl -> put_ToleranceDisplay(This,method)

#define IAcadDim3PointAngular_get_ToleranceJustification(This,method)	\
    (This)->lpVtbl -> get_ToleranceJustification(This,method)

#define IAcadDim3PointAngular_put_ToleranceJustification(This,method)	\
    (This)->lpVtbl -> put_ToleranceJustification(This,method)

#define IAcadDim3PointAngular_get_ToleranceUpperLimit(This,upper)	\
    (This)->lpVtbl -> get_ToleranceUpperLimit(This,upper)

#define IAcadDim3PointAngular_put_ToleranceUpperLimit(This,upper)	\
    (This)->lpVtbl -> put_ToleranceUpperLimit(This,upper)

#define IAcadDim3PointAngular_get_TextStyle(This,style)	\
    (This)->lpVtbl -> get_TextStyle(This,style)

#define IAcadDim3PointAngular_put_TextStyle(This,style)	\
    (This)->lpVtbl -> put_TextStyle(This,style)

#define IAcadDim3PointAngular_get_TextHeight(This,Height)	\
    (This)->lpVtbl -> get_TextHeight(This,Height)

#define IAcadDim3PointAngular_put_TextHeight(This,Height)	\
    (This)->lpVtbl -> put_TextHeight(This,Height)

#define IAcadDim3PointAngular_get_SuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_SuppressLeadingZeros(This,bVal)

#define IAcadDim3PointAngular_put_SuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_SuppressLeadingZeros(This,bVal)

#define IAcadDim3PointAngular_get_SuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_SuppressTrailingZeros(This,bVal)

#define IAcadDim3PointAngular_put_SuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_SuppressTrailingZeros(This,bVal)

#define IAcadDim3PointAngular_get_ToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDim3PointAngular_put_ToleranceSuppressLeadingZeros(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressLeadingZeros(This,bVal)

#define IAcadDim3PointAngular_get_ToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> get_ToleranceSuppressTrailingZeros(This,bVal)

#define IAcadDim3PointAngular_put_ToleranceSuppressTrailingZeros(This,bVal)	\
    (This)->lpVtbl -> put_ToleranceSuppressTrailingZeros(This,bVal)


#define IAcadDim3PointAngular_get_ExtLine1EndPoint(This,xLine1Point)	\
    (This)->lpVtbl -> get_ExtLine1EndPoint(This,xLine1Point)

#define IAcadDim3PointAngular_put_ExtLine1EndPoint(This,xLine1Point)	\
    (This)->lpVtbl -> put_ExtLine1EndPoint(This,xLine1Point)

#define IAcadDim3PointAngular_get_ExtLine2EndPoint(This,xLine2Point)	\
    (This)->lpVtbl -> get_ExtLine2EndPoint(This,xLine2Point)

#define IAcadDim3PointAngular_put_ExtLine2EndPoint(This,xLine2Point)	\
    (This)->lpVtbl -> put_ExtLine2EndPoint(This,xLine2Point)

#define IAcadDim3PointAngular_get_AngleVertex(This,AngleVertex)	\
    (This)->lpVtbl -> get_AngleVertex(This,AngleVertex)

#define IAcadDim3PointAngular_put_AngleVertex(This,AngleVertex)	\
    (This)->lpVtbl -> put_AngleVertex(This,AngleVertex)

#define IAcadDim3PointAngular_get_TextPrecision(This,AngleVertex)	\
    (This)->lpVtbl -> get_TextPrecision(This,AngleVertex)

#define IAcadDim3PointAngular_put_TextPrecision(This,AngleVertex)	\
    (This)->lpVtbl -> put_TextPrecision(This,AngleVertex)

#define IAcadDim3PointAngular_get_AngleFormat(This,format)	\
    (This)->lpVtbl -> get_AngleFormat(This,format)

#define IAcadDim3PointAngular_put_AngleFormat(This,format)	\
    (This)->lpVtbl -> put_AngleFormat(This,format)

#define IAcadDim3PointAngular_get_DimensionLineColor(This,Type)	\
    (This)->lpVtbl -> get_DimensionLineColor(This,Type)

#define IAcadDim3PointAngular_put_DimensionLineColor(This,Type)	\
    (This)->lpVtbl -> put_DimensionLineColor(This,Type)

#define IAcadDim3PointAngular_get_ExtensionLineColor(This,Type)	\
    (This)->lpVtbl -> get_ExtensionLineColor(This,Type)

#define IAcadDim3PointAngular_put_ExtensionLineColor(This,Type)	\
    (This)->lpVtbl -> put_ExtensionLineColor(This,Type)

#define IAcadDim3PointAngular_get_ExtensionLineExtend(This,extend)	\
    (This)->lpVtbl -> get_ExtensionLineExtend(This,extend)

#define IAcadDim3PointAngular_put_ExtensionLineExtend(This,extend)	\
    (This)->lpVtbl -> put_ExtensionLineExtend(This,extend)

#define IAcadDim3PointAngular_get_Fit(This,fittype)	\
    (This)->lpVtbl -> get_Fit(This,fittype)

#define IAcadDim3PointAngular_put_Fit(This,fittype)	\
    (This)->lpVtbl -> put_Fit(This,fittype)

#define IAcadDim3PointAngular_get_HorizontalTextPosition(This,Type)	\
    (This)->lpVtbl -> get_HorizontalTextPosition(This,Type)

#define IAcadDim3PointAngular_put_HorizontalTextPosition(This,Type)	\
    (This)->lpVtbl -> put_HorizontalTextPosition(This,Type)

#define IAcadDim3PointAngular_get_ExtensionLineWeight(This,lweight)	\
    (This)->lpVtbl -> get_ExtensionLineWeight(This,lweight)

#define IAcadDim3PointAngular_put_ExtensionLineWeight(This,lweight)	\
    (This)->lpVtbl -> put_ExtensionLineWeight(This,lweight)

#define IAcadDim3PointAngular_get_DimLine1Suppress(This,bSuppress)	\
    (This)->lpVtbl -> get_DimLine1Suppress(This,bSuppress)

#define IAcadDim3PointAngular_put_DimLine1Suppress(This,bSuppress)	\
    (This)->lpVtbl -> put_DimLine1Suppress(This,bSuppress)

#define IAcadDim3PointAngular_get_DimLine2Suppress(This,bSuppress)	\
    (This)->lpVtbl -> get_DimLine2Suppress(This,bSuppress)

#define IAcadDim3PointAngular_put_DimLine2Suppress(This,bSuppress)	\
    (This)->lpVtbl -> put_DimLine2Suppress(This,bSuppress)

#define IAcadDim3PointAngular_get_ExtLine1Suppress(This,bSuppress)	\
    (This)->lpVtbl -> get_ExtLine1Suppress(This,bSuppress)

#define IAcadDim3PointAngular_put_ExtLine1Suppress(This,bSuppress)	\
    (This)->lpVtbl -> put_ExtLine1Suppress(This,bSuppress)

#define IAcadDim3PointAngular_get_ExtLine2Suppress(This,bSuppress)	\
    (This)->lpVtbl -> get_ExtLine2Suppress(This,bSuppress)

#define IAcadDim3PointAngular_put_ExtLine2Suppress(This,bSuppress)	\
    (This)->lpVtbl -> put_ExtLine2Suppress(This,bSuppress)

#define IAcadDim3PointAngular_get_DimLineInside(This,bInside)	\
    (This)->lpVtbl -> get_DimLineInside(This,bInside)

#define IAcadDim3PointAngular_put_DimLineInside(This,bInside)	\
    (This)->lpVtbl -> put_DimLineInside(This,bInside)

#define IAcadDim3PointAngular_get_TextInsideAlign(This,bInside)	\
    (This)->lpVtbl -> get_TextInsideAlign(This,bInside)

#define IAcadDim3PointAngular_put_TextInsideAlign(This,bInside)	\
    (This)->lpVtbl -> put_TextInsideAlign(This,bInside)

#define IAcadDim3PointAngular_get_TextInside(This,bInside)	\
    (This)->lpVtbl -> get_TextInside(This,bInside)

#define IAcadDim3PointAngular_put_TextInside(This,bInside)	\
    (This)->lpVtbl -> put_TextInside(This,bInside)

#define IAcadDim3PointAngular_get_ForceLineInside(This,bInside)	\
    (This)->lpVtbl -> get_ForceLineInside(This,bInside)

#define IAcadDim3PointAngular_put_ForceLineInside(This,bInside)	\
    (This)->lpVtbl -> put_ForceLineInside(This,bInside)

#define IAcadDim3PointAngular_get_TextOutsideAlign(This,bInside)	\
    (This)->lpVtbl -> get_TextOutsideAlign(This,bInside)

#define IAcadDim3PointAngular_put_TextOutsideAlign(This,bInside)	\
    (This)->lpVtbl -> put_TextOutsideAlign(This,bInside)

#define IAcadDim3PointAngular_get_ExtensionLineOffset(This,Offset)	\
    (This)->lpVtbl -> get_ExtensionLineOffset(This,Offset)

#define IAcadDim3PointAngular_put_ExtensionLineOffset(This,Offset)	\
    (This)->lpVtbl -> put_ExtensionLineOffset(This,Offset)

#define IAcadDim3PointAngular_get_DimensionLineWeight(This,weight)	\
    (This)->lpVtbl -> get_DimensionLineWeight(This,weight)

#define IAcadDim3PointAngular_put_DimensionLineWeight(This,weight)	\
    (This)->lpVtbl -> put_DimensionLineWeight(This,weight)

#define IAcadDim3PointAngular_get_ArrowheadSize(This,size)	\
    (This)->lpVtbl -> get_ArrowheadSize(This,size)

#define IAcadDim3PointAngular_put_ArrowheadSize(This,size)	\
    (This)->lpVtbl -> put_ArrowheadSize(This,size)

#define IAcadDim3PointAngular_get_Arrowhead1Type(This,Type)	\
    (This)->lpVtbl -> get_Arrowhead1Type(This,Type)

#define IAcadDim3PointAngular_put_Arrowhead1Type(This,Type)	\
    (This)->lpVtbl -> put_Arrowhead1Type(This,Type)

#define IAcadDim3PointAngular_get_Arrowhead2Type(This,Type)	\
    (This)->lpVtbl -> get_Arrowhead2Type(This,Type)

#define IAcadDim3PointAngular_put_Arrowhead2Type(This,Type)	\
    (This)->lpVtbl -> put_Arrowhead2Type(This,Type)

#define IAcadDim3PointAngular_get_Measurement(This,bVal)	\
    (This)->lpVtbl -> get_Measurement(This,bVal)

#define IAcadDim3PointAngular_get_Arrowhead1Block(This,BlockName)	\
    (This)->lpVtbl -> get_Arrowhead1Block(This,BlockName)

#define IAcadDim3PointAngular_put_Arrowhead1Block(This,BlockName)	\
    (This)->lpVtbl -> put_Arrowhead1Block(This,BlockName)

#define IAcadDim3PointAngular_get_Arrowhead2Block(This,BlockName)	\
    (This)->lpVtbl -> get_Arrowhead2Block(This,BlockName)

#define IAcadDim3PointAngular_put_Arrowhead2Block(This,BlockName)	\
    (This)->lpVtbl -> put_Arrowhead2Block(This,BlockName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_ExtLine1EndPoint_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT *xLine1Point);


void __RPC_STUB IAcadDim3PointAngular_get_ExtLine1EndPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_ExtLine1EndPoint_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ VARIANT xLine1Point);


void __RPC_STUB IAcadDim3PointAngular_put_ExtLine1EndPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_ExtLine2EndPoint_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT *xLine2Point);


void __RPC_STUB IAcadDim3PointAngular_get_ExtLine2EndPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_ExtLine2EndPoint_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ VARIANT xLine2Point);


void __RPC_STUB IAcadDim3PointAngular_put_ExtLine2EndPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_AngleVertex_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT *AngleVertex);


void __RPC_STUB IAcadDim3PointAngular_get_AngleVertex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_AngleVertex_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ VARIANT AngleVertex);


void __RPC_STUB IAcadDim3PointAngular_put_AngleVertex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_TextPrecision_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ AcDimPrecision *AngleVertex);


void __RPC_STUB IAcadDim3PointAngular_get_TextPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_TextPrecision_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ AcDimPrecision AngleVertex);


void __RPC_STUB IAcadDim3PointAngular_put_TextPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_AngleFormat_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ AcAngleUnits *format);


void __RPC_STUB IAcadDim3PointAngular_get_AngleFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_AngleFormat_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ AcAngleUnits format);


void __RPC_STUB IAcadDim3PointAngular_put_AngleFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_DimensionLineColor_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ ACAD_COLOR *Type);


void __RPC_STUB IAcadDim3PointAngular_get_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_DimensionLineColor_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ ACAD_COLOR Type);


void __RPC_STUB IAcadDim3PointAngular_put_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_ExtensionLineColor_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ ACAD_COLOR *Type);


void __RPC_STUB IAcadDim3PointAngular_get_ExtensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_ExtensionLineColor_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ ACAD_COLOR Type);


void __RPC_STUB IAcadDim3PointAngular_put_ExtensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_ExtensionLineExtend_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ double *extend);


void __RPC_STUB IAcadDim3PointAngular_get_ExtensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_ExtensionLineExtend_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ double extend);


void __RPC_STUB IAcadDim3PointAngular_put_ExtensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_Fit_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ AcDimFit *fittype);


void __RPC_STUB IAcadDim3PointAngular_get_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_Fit_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ AcDimFit fittype);


void __RPC_STUB IAcadDim3PointAngular_put_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_HorizontalTextPosition_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ AcDimHorizontalJustification *Type);


void __RPC_STUB IAcadDim3PointAngular_get_HorizontalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_HorizontalTextPosition_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ AcDimHorizontalJustification Type);


void __RPC_STUB IAcadDim3PointAngular_put_HorizontalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_ExtensionLineWeight_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ ACAD_LWEIGHT *lweight);


void __RPC_STUB IAcadDim3PointAngular_get_ExtensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_ExtensionLineWeight_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ ACAD_LWEIGHT lweight);


void __RPC_STUB IAcadDim3PointAngular_put_ExtensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_DimLine1Suppress_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT_BOOL *bSuppress);


void __RPC_STUB IAcadDim3PointAngular_get_DimLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_DimLine1Suppress_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ VARIANT_BOOL bSuppress);


void __RPC_STUB IAcadDim3PointAngular_put_DimLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_DimLine2Suppress_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT_BOOL *bSuppress);


void __RPC_STUB IAcadDim3PointAngular_get_DimLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_DimLine2Suppress_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ VARIANT_BOOL bSuppress);


void __RPC_STUB IAcadDim3PointAngular_put_DimLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_ExtLine1Suppress_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT_BOOL *bSuppress);


void __RPC_STUB IAcadDim3PointAngular_get_ExtLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_ExtLine1Suppress_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ VARIANT_BOOL bSuppress);


void __RPC_STUB IAcadDim3PointAngular_put_ExtLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_ExtLine2Suppress_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT_BOOL *bSuppress);


void __RPC_STUB IAcadDim3PointAngular_get_ExtLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_ExtLine2Suppress_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ VARIANT_BOOL bSuppress);


void __RPC_STUB IAcadDim3PointAngular_put_ExtLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_DimLineInside_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDim3PointAngular_get_DimLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_DimLineInside_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDim3PointAngular_put_DimLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_TextInsideAlign_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDim3PointAngular_get_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_TextInsideAlign_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDim3PointAngular_put_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_TextInside_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDim3PointAngular_get_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_TextInside_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDim3PointAngular_put_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_ForceLineInside_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDim3PointAngular_get_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_ForceLineInside_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDim3PointAngular_put_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_TextOutsideAlign_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT_BOOL *bInside);


void __RPC_STUB IAcadDim3PointAngular_get_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_TextOutsideAlign_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ VARIANT_BOOL bInside);


void __RPC_STUB IAcadDim3PointAngular_put_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_ExtensionLineOffset_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ double *Offset);


void __RPC_STUB IAcadDim3PointAngular_get_ExtensionLineOffset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_ExtensionLineOffset_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ double Offset);


void __RPC_STUB IAcadDim3PointAngular_put_ExtensionLineOffset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_DimensionLineWeight_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ ACAD_LWEIGHT *weight);


void __RPC_STUB IAcadDim3PointAngular_get_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_DimensionLineWeight_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ ACAD_LWEIGHT weight);


void __RPC_STUB IAcadDim3PointAngular_put_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_ArrowheadSize_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ double *size);


void __RPC_STUB IAcadDim3PointAngular_get_ArrowheadSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_ArrowheadSize_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ double size);


void __RPC_STUB IAcadDim3PointAngular_put_ArrowheadSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_Arrowhead1Type_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ AcDimArrowheadType *Type);


void __RPC_STUB IAcadDim3PointAngular_get_Arrowhead1Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_Arrowhead1Type_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ AcDimArrowheadType Type);


void __RPC_STUB IAcadDim3PointAngular_put_Arrowhead1Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_Arrowhead2Type_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ AcDimArrowheadType *Type);


void __RPC_STUB IAcadDim3PointAngular_get_Arrowhead2Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_Arrowhead2Type_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ AcDimArrowheadType Type);


void __RPC_STUB IAcadDim3PointAngular_put_Arrowhead2Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_Measurement_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ ACAD_ANGLE *bVal);


void __RPC_STUB IAcadDim3PointAngular_get_Measurement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_Arrowhead1Block_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ BSTR *BlockName);


void __RPC_STUB IAcadDim3PointAngular_get_Arrowhead1Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_Arrowhead1Block_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ BSTR BlockName);


void __RPC_STUB IAcadDim3PointAngular_put_Arrowhead1Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_get_Arrowhead2Block_Proxy( 
    IAcadDim3PointAngular * This,
    /* [retval][out] */ BSTR *BlockName);


void __RPC_STUB IAcadDim3PointAngular_get_Arrowhead2Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDim3PointAngular_put_Arrowhead2Block_Proxy( 
    IAcadDim3PointAngular * This,
    /* [in] */ BSTR BlockName);


void __RPC_STUB IAcadDim3PointAngular_put_Arrowhead2Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadDim3PointAngular_INTERFACE_DEFINED__ */


#ifndef __IAcadExternalReference_INTERFACE_DEFINED__
#define __IAcadExternalReference_INTERFACE_DEFINED__

/* interface IAcadExternalReference */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadExternalReference;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2D21020D-78C5-431B-B6A2-3301A4385DEA")
    IAcadExternalReference : public IAcadBlockReference
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Path( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Path( 
            /* [in] */ BSTR bstrName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadExternalReferenceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadExternalReference * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadExternalReference * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadExternalReference * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadExternalReference * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadExternalReference * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadExternalReference * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadExternalReference * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadExternalReference * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadExternalReference * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadExternalReference * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadExternalReference * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadExternalReference * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadExternalReference * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadExternalReference * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadExternalReference * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadExternalReference * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadExternalReference * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadExternalReference * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadExternalReference * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadExternalReference * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadExternalReference * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadExternalReference * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadExternalReference * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadExternalReference * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadExternalReference * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadExternalReference * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadExternalReference * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadExternalReference * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadExternalReference * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadExternalReference * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadExternalReference * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadExternalReference * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadExternalReference * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadExternalReference * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadExternalReference * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadExternalReference * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadExternalReference * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadExternalReference * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadExternalReference * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadExternalReference * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadExternalReference * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadExternalReference * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadExternalReference * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadExternalReference * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadExternalReference * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadExternalReference * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadExternalReference * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadExternalReference * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadExternalReference * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadExternalReference * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadExternalReference * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadExternalReference * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadExternalReference * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IAcadExternalReference * This,
            /* [retval][out] */ VARIANT *insPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IAcadExternalReference * This,
            /* [in] */ VARIANT insPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadExternalReference * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadExternalReference * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadExternalReference * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadExternalReference * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IAcadExternalReference * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IAcadExternalReference * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XScaleFactor )( 
            IAcadExternalReference * This,
            /* [retval][out] */ ACAD_NOUNITS *ScaleFactor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_XScaleFactor )( 
            IAcadExternalReference * This,
            /* [in] */ ACAD_NOUNITS ScaleFactor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_YScaleFactor )( 
            IAcadExternalReference * This,
            /* [retval][out] */ ACAD_NOUNITS *ScaleFactor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_YScaleFactor )( 
            IAcadExternalReference * This,
            /* [in] */ ACAD_NOUNITS ScaleFactor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ZScaleFactor )( 
            IAcadExternalReference * This,
            /* [retval][out] */ ACAD_NOUNITS *ScaleFactor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ZScaleFactor )( 
            IAcadExternalReference * This,
            /* [in] */ ACAD_NOUNITS ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Explode )( 
            IAcadExternalReference * This,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetAttributes )( 
            IAcadExternalReference * This,
            /* [retval][out] */ VARIANT *pAttrObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetConstantAttributes )( 
            IAcadExternalReference * This,
            /* [retval][out] */ VARIANT *pAttrObjs);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasAttributes )( 
            IAcadExternalReference * This,
            /* [retval][out] */ VARIANT_BOOL *bHas);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Path )( 
            IAcadExternalReference * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Path )( 
            IAcadExternalReference * This,
            /* [in] */ BSTR bstrName);
        
        END_INTERFACE
    } IAcadExternalReferenceVtbl;

    interface IAcadExternalReference
    {
        CONST_VTBL struct IAcadExternalReferenceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadExternalReference_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadExternalReference_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadExternalReference_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadExternalReference_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadExternalReference_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadExternalReference_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadExternalReference_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadExternalReference_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadExternalReference_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadExternalReference_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadExternalReference_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadExternalReference_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadExternalReference_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadExternalReference_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadExternalReference_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadExternalReference_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadExternalReference_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadExternalReference_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadExternalReference_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadExternalReference_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadExternalReference_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadExternalReference_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadExternalReference_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadExternalReference_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadExternalReference_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadExternalReference_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadExternalReference_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadExternalReference_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadExternalReference_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadExternalReference_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadExternalReference_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadExternalReference_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadExternalReference_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadExternalReference_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadExternalReference_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadExternalReference_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadExternalReference_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadExternalReference_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadExternalReference_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadExternalReference_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadExternalReference_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadExternalReference_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadExternalReference_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadExternalReference_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadExternalReference_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadExternalReference_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadExternalReference_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadExternalReference_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadExternalReference_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadExternalReference_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadExternalReference_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadExternalReference_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadExternalReference_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadExternalReference_get_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> get_InsertionPoint(This,insPoint)

#define IAcadExternalReference_put_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> put_InsertionPoint(This,insPoint)

#define IAcadExternalReference_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadExternalReference_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#define IAcadExternalReference_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadExternalReference_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadExternalReference_get_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> get_Rotation(This,rotAngle)

#define IAcadExternalReference_put_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> put_Rotation(This,rotAngle)

#define IAcadExternalReference_get_XScaleFactor(This,ScaleFactor)	\
    (This)->lpVtbl -> get_XScaleFactor(This,ScaleFactor)

#define IAcadExternalReference_put_XScaleFactor(This,ScaleFactor)	\
    (This)->lpVtbl -> put_XScaleFactor(This,ScaleFactor)

#define IAcadExternalReference_get_YScaleFactor(This,ScaleFactor)	\
    (This)->lpVtbl -> get_YScaleFactor(This,ScaleFactor)

#define IAcadExternalReference_put_YScaleFactor(This,ScaleFactor)	\
    (This)->lpVtbl -> put_YScaleFactor(This,ScaleFactor)

#define IAcadExternalReference_get_ZScaleFactor(This,ScaleFactor)	\
    (This)->lpVtbl -> get_ZScaleFactor(This,ScaleFactor)

#define IAcadExternalReference_put_ZScaleFactor(This,ScaleFactor)	\
    (This)->lpVtbl -> put_ZScaleFactor(This,ScaleFactor)

#define IAcadExternalReference_Explode(This,pArrayObjs)	\
    (This)->lpVtbl -> Explode(This,pArrayObjs)

#define IAcadExternalReference_GetAttributes(This,pAttrObjs)	\
    (This)->lpVtbl -> GetAttributes(This,pAttrObjs)

#define IAcadExternalReference_GetConstantAttributes(This,pAttrObjs)	\
    (This)->lpVtbl -> GetConstantAttributes(This,pAttrObjs)

#define IAcadExternalReference_get_HasAttributes(This,bHas)	\
    (This)->lpVtbl -> get_HasAttributes(This,bHas)


#define IAcadExternalReference_get_Path(This,bstrName)	\
    (This)->lpVtbl -> get_Path(This,bstrName)

#define IAcadExternalReference_put_Path(This,bstrName)	\
    (This)->lpVtbl -> put_Path(This,bstrName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadExternalReference_get_Path_Proxy( 
    IAcadExternalReference * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadExternalReference_get_Path_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadExternalReference_put_Path_Proxy( 
    IAcadExternalReference * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadExternalReference_put_Path_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadExternalReference_INTERFACE_DEFINED__ */


#ifndef __IAcadPaperSpace_INTERFACE_DEFINED__
#define __IAcadPaperSpace_INTERFACE_DEFINED__

/* interface IAcadPaperSpace */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadPaperSpace;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4D4D9C1E-EF26-48B3-8AF7-F2D8E6BAB9F6")
    IAcadPaperSpace : public IAcadBlock
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddPViewport( 
            /* [in] */ VARIANT Center,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IAcadPViewport **pPViewport) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadPaperSpaceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadPaperSpace * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadPaperSpace * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadPaperSpace * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadPaperSpace * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadPaperSpace * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadPaperSpace * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadPaperSpace * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadPaperSpace * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadPaperSpace * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadPaperSpace * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadPaperSpace * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadPaperSpace * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadPaperSpace * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadPaperSpace * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadPaperSpace * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadPaperSpace * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadPaperSpace * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadPaperSpace * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadPaperSpace * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadEntity **pItem);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadPaperSpace * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadPaperSpace * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadPaperSpace * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadPaperSpace * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Origin )( 
            IAcadPaperSpace * This,
            /* [retval][out] */ VARIANT *Origin);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Origin )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT Origin);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCustomObject )( 
            IAcadPaperSpace * This,
            /* [in] */ BSTR ClassName,
            /* [retval][out] */ IDispatch **pObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DFace )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [in] */ VARIANT Point4,
            /* [retval][out] */ IAcad3DFace **pFace3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DMesh )( 
            IAcadPaperSpace * This,
            /* [in] */ int M,
            /* [in] */ int N,
            /* [in] */ VARIANT PointsMatrix,
            /* [retval][out] */ IAcadPolygonMesh **pMesh3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DPoly )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT PointsArray,
            /* [retval][out] */ IAcad3DPolyline **pPoly3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddArc )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [in] */ double StartAngle,
            /* [in] */ double EndAngle,
            /* [retval][out] */ IAcadArc **pArc);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            IAcadPaperSpace * This,
            /* [in] */ double Height,
            /* [in] */ AcAttributeMode Mode,
            /* [in] */ BSTR Prompt,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Tag,
            /* [in] */ BSTR Value,
            /* [retval][out] */ IAcadAttribute **pAttr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddBox )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT Origin,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pBox);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCircle )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [retval][out] */ IAcadCircle **pCircle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCone )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double BaseRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pCone);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCylinder )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pCyl);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimAligned )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT ExtLine1Point,
            /* [in] */ VARIANT ExtLine2Point,
            /* [in] */ VARIANT TextPosition,
            /* [retval][out] */ IAcadDimAligned **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimAngular )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT AngleVertex,
            /* [in] */ VARIANT FirstEndPoint,
            /* [in] */ VARIANT SecondEndPoint,
            /* [in] */ VARIANT TextPoint,
            /* [retval][out] */ IAcadDimAngular **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimDiametric )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT ChordPoint,
            /* [in] */ VARIANT FarChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IAcadDimDiametric **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimRotated )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT ExtLine1Point,
            /* [in] */ VARIANT ExtLine2Point,
            /* [in] */ VARIANT DimLineLocation,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadDimRotated **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimOrdinate )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT DefinitionPoint,
            /* [in] */ VARIANT LeaderEndPoint,
            /* [in] */ int UseXAxis,
            /* [retval][out] */ IAcadDimOrdinate **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimRadial )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ VARIANT ChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IAcadDimRadial **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipse )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ VARIANT MajorAxis,
            /* [in] */ double RadiusRatio,
            /* [retval][out] */ IAcadEllipse **pEllipse);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCone )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pEllipCone);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCylinder )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pEllipCyl);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolid )( 
            IAcadPaperSpace * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ double Height,
            /* [in] */ double TaperAngle,
            /* [retval][out] */ IAcad3DSolid **pExtrSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolidAlongPath )( 
            IAcadPaperSpace * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ IDispatch *Path,
            /* [retval][out] */ IAcad3DSolid **pExtrSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLeader )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT PointsArray,
            /* [in] */ IAcadEntity *Annotation,
            /* [in] */ AcLeaderType Type,
            /* [retval][out] */ IAcadLeader **pLeader);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMText )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Width,
            /* [in] */ BSTR Text,
            /* [retval][out] */ IAcadMText **pMtext);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPoint )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT Point,
            /* [retval][out] */ IAcadPoint **pPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLightWeightPolyline )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT VerticesList,
            /* [retval][out] */ IAcadLWPolyline **pLWPolyline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPolyline )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT VerticesList,
            /* [retval][out] */ IAcadPolyline **pPolyline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRay )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IAcadRay **pRay);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRegion )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT ObjectList,
            /* [retval][out] */ VARIANT *pRegions);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRevolvedSolid )( 
            IAcadPaperSpace * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ VARIANT AxisPoint,
            /* [in] */ VARIANT AxisDir,
            /* [in] */ double Angle,
            /* [retval][out] */ IAcad3DSolid **pRevolSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddShape )( 
            IAcadPaperSpace * This,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double ScaleFactor,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadShape **pShape);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSolid )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [in] */ VARIANT Point4,
            /* [retval][out] */ IAcadSolid **pSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSphere )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [retval][out] */ IAcad3DSolid **pSphere);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSpline )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT PointsArray,
            /* [in] */ VARIANT StartTangent,
            /* [in] */ VARIANT EndTangent,
            /* [retval][out] */ IAcadSpline **pSpline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddText )( 
            IAcadPaperSpace * This,
            /* [in] */ BSTR TextString,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Height,
            /* [retval][out] */ IAcadText **pText);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTolerance )( 
            IAcadPaperSpace * This,
            /* [in] */ BSTR Text,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ VARIANT Direction,
            /* [retval][out] */ IAcadTolerance **pTolerance);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTorus )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double TorusRadius,
            /* [in] */ double TubeRadius,
            /* [retval][out] */ IAcad3DSolid **pTorus);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTrace )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT PointsArray,
            /* [retval][out] */ IAcadTrace **pTrace);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddWedge )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pWedge);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddXline )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IAcadXline **pXline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *InsertBlock )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Name,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadBlockReference **pBlkRef);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddHatch )( 
            IAcadPaperSpace * This,
            /* [in] */ int PatternType,
            /* [in] */ BSTR PatternName,
            /* [in] */ VARIANT_BOOL Associativity,
            /* [optional][in] */ VARIANT HatchObjectType,
            /* [retval][out] */ IAcadHatch **pHatch);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRaster )( 
            IAcadPaperSpace * This,
            /* [in] */ BSTR imageFileName,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double ScaleFactor,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadRasterImage **pRaster);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLine )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT StartPoint,
            /* [in] */ VARIANT EndPoint,
            /* [retval][out] */ IAcadLine **pLine);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsLayout )( 
            IAcadPaperSpace * This,
            /* [retval][out] */ VARIANT_BOOL *bIsLayout);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layout )( 
            IAcadPaperSpace * This,
            /* [retval][out] */ IAcadLayout **pLayout);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsXRef )( 
            IAcadPaperSpace * This,
            /* [retval][out] */ VARIANT_BOOL *pIsXRref);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMInsertBlock )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Name,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [in] */ long NumRows,
            /* [in] */ long NumColumns,
            /* [in] */ long RowSpacing,
            /* [in] */ long ColumnSpacing,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadMInsertBlock **pMInsertBlk);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPolyfaceMesh )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT VertexList,
            /* [in] */ VARIANT FaceList,
            /* [retval][out] */ IAcadPolyfaceMesh **pPFMesh);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMLine )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT VertexList,
            /* [retval][out] */ IAcadMLine **pMLine);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDim3PointAngular )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT AngleVertex,
            /* [in] */ VARIANT FirstEndPoint,
            /* [in] */ VARIANT SecondEndPoint,
            /* [in] */ VARIANT TextPoint,
            /* [retval][out] */ IAcadDim3PointAngular **pDim);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XRefDatabase )( 
            IAcadPaperSpace * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AttachExternalReference )( 
            IAcadPaperSpace * This,
            /* [in] */ BSTR PathName,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [in] */ VARIANT_BOOL bOverlay,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadExternalReference **pXRef);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Unload )( 
            IAcadPaperSpace * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Reload )( 
            IAcadPaperSpace * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Bind )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT_BOOL bPrefixName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Detach )( 
            IAcadPaperSpace * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPViewport )( 
            IAcadPaperSpace * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IAcadPViewport **pPViewport);
        
        END_INTERFACE
    } IAcadPaperSpaceVtbl;

    interface IAcadPaperSpace
    {
        CONST_VTBL struct IAcadPaperSpaceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadPaperSpace_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadPaperSpace_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadPaperSpace_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadPaperSpace_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadPaperSpace_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadPaperSpace_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadPaperSpace_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadPaperSpace_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadPaperSpace_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadPaperSpace_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadPaperSpace_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadPaperSpace_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadPaperSpace_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadPaperSpace_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadPaperSpace_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadPaperSpace_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadPaperSpace_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadPaperSpace_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadPaperSpace_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadPaperSpace_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadPaperSpace_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadPaperSpace_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadPaperSpace_get_Count(This,pVal)	\
    (This)->lpVtbl -> get_Count(This,pVal)

#define IAcadPaperSpace_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadPaperSpace_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#define IAcadPaperSpace_get_Origin(This,Origin)	\
    (This)->lpVtbl -> get_Origin(This,Origin)

#define IAcadPaperSpace_put_Origin(This,Origin)	\
    (This)->lpVtbl -> put_Origin(This,Origin)

#define IAcadPaperSpace_AddCustomObject(This,ClassName,pObject)	\
    (This)->lpVtbl -> AddCustomObject(This,ClassName,pObject)

#define IAcadPaperSpace_Add3DFace(This,Point1,Point2,point3,Point4,pFace3d)	\
    (This)->lpVtbl -> Add3DFace(This,Point1,Point2,point3,Point4,pFace3d)

#define IAcadPaperSpace_Add3DMesh(This,M,N,PointsMatrix,pMesh3d)	\
    (This)->lpVtbl -> Add3DMesh(This,M,N,PointsMatrix,pMesh3d)

#define IAcadPaperSpace_Add3DPoly(This,PointsArray,pPoly3d)	\
    (This)->lpVtbl -> Add3DPoly(This,PointsArray,pPoly3d)

#define IAcadPaperSpace_AddArc(This,Center,Radius,StartAngle,EndAngle,pArc)	\
    (This)->lpVtbl -> AddArc(This,Center,Radius,StartAngle,EndAngle,pArc)

#define IAcadPaperSpace_AddAttribute(This,Height,Mode,Prompt,InsertionPoint,Tag,Value,pAttr)	\
    (This)->lpVtbl -> AddAttribute(This,Height,Mode,Prompt,InsertionPoint,Tag,Value,pAttr)

#define IAcadPaperSpace_AddBox(This,Origin,Length,Width,Height,pBox)	\
    (This)->lpVtbl -> AddBox(This,Origin,Length,Width,Height,pBox)

#define IAcadPaperSpace_AddCircle(This,Center,Radius,pCircle)	\
    (This)->lpVtbl -> AddCircle(This,Center,Radius,pCircle)

#define IAcadPaperSpace_AddCone(This,Center,BaseRadius,Height,pCone)	\
    (This)->lpVtbl -> AddCone(This,Center,BaseRadius,Height,pCone)

#define IAcadPaperSpace_AddCylinder(This,Center,Radius,Height,pCyl)	\
    (This)->lpVtbl -> AddCylinder(This,Center,Radius,Height,pCyl)

#define IAcadPaperSpace_AddDimAligned(This,ExtLine1Point,ExtLine2Point,TextPosition,pDim)	\
    (This)->lpVtbl -> AddDimAligned(This,ExtLine1Point,ExtLine2Point,TextPosition,pDim)

#define IAcadPaperSpace_AddDimAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)	\
    (This)->lpVtbl -> AddDimAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)

#define IAcadPaperSpace_AddDimDiametric(This,ChordPoint,FarChordPoint,LeaderLength,pDim)	\
    (This)->lpVtbl -> AddDimDiametric(This,ChordPoint,FarChordPoint,LeaderLength,pDim)

#define IAcadPaperSpace_AddDimRotated(This,ExtLine1Point,ExtLine2Point,DimLineLocation,RotationAngle,pDim)	\
    (This)->lpVtbl -> AddDimRotated(This,ExtLine1Point,ExtLine2Point,DimLineLocation,RotationAngle,pDim)

#define IAcadPaperSpace_AddDimOrdinate(This,DefinitionPoint,LeaderEndPoint,UseXAxis,pDim)	\
    (This)->lpVtbl -> AddDimOrdinate(This,DefinitionPoint,LeaderEndPoint,UseXAxis,pDim)

#define IAcadPaperSpace_AddDimRadial(This,Center,ChordPoint,LeaderLength,pDim)	\
    (This)->lpVtbl -> AddDimRadial(This,Center,ChordPoint,LeaderLength,pDim)

#define IAcadPaperSpace_AddEllipse(This,Center,MajorAxis,RadiusRatio,pEllipse)	\
    (This)->lpVtbl -> AddEllipse(This,Center,MajorAxis,RadiusRatio,pEllipse)

#define IAcadPaperSpace_AddEllipticalCone(This,Center,MajorRadius,MinorRadius,Height,pEllipCone)	\
    (This)->lpVtbl -> AddEllipticalCone(This,Center,MajorRadius,MinorRadius,Height,pEllipCone)

#define IAcadPaperSpace_AddEllipticalCylinder(This,Center,MajorRadius,MinorRadius,Height,pEllipCyl)	\
    (This)->lpVtbl -> AddEllipticalCylinder(This,Center,MajorRadius,MinorRadius,Height,pEllipCyl)

#define IAcadPaperSpace_AddExtrudedSolid(This,Profile,Height,TaperAngle,pExtrSolid)	\
    (This)->lpVtbl -> AddExtrudedSolid(This,Profile,Height,TaperAngle,pExtrSolid)

#define IAcadPaperSpace_AddExtrudedSolidAlongPath(This,Profile,Path,pExtrSolid)	\
    (This)->lpVtbl -> AddExtrudedSolidAlongPath(This,Profile,Path,pExtrSolid)

#define IAcadPaperSpace_AddLeader(This,PointsArray,Annotation,Type,pLeader)	\
    (This)->lpVtbl -> AddLeader(This,PointsArray,Annotation,Type,pLeader)

#define IAcadPaperSpace_AddMText(This,InsertionPoint,Width,Text,pMtext)	\
    (This)->lpVtbl -> AddMText(This,InsertionPoint,Width,Text,pMtext)

#define IAcadPaperSpace_AddPoint(This,Point,pPoint)	\
    (This)->lpVtbl -> AddPoint(This,Point,pPoint)

#define IAcadPaperSpace_AddLightWeightPolyline(This,VerticesList,pLWPolyline)	\
    (This)->lpVtbl -> AddLightWeightPolyline(This,VerticesList,pLWPolyline)

#define IAcadPaperSpace_AddPolyline(This,VerticesList,pPolyline)	\
    (This)->lpVtbl -> AddPolyline(This,VerticesList,pPolyline)

#define IAcadPaperSpace_AddRay(This,Point1,Point2,pRay)	\
    (This)->lpVtbl -> AddRay(This,Point1,Point2,pRay)

#define IAcadPaperSpace_AddRegion(This,ObjectList,pRegions)	\
    (This)->lpVtbl -> AddRegion(This,ObjectList,pRegions)

#define IAcadPaperSpace_AddRevolvedSolid(This,Profile,AxisPoint,AxisDir,Angle,pRevolSolid)	\
    (This)->lpVtbl -> AddRevolvedSolid(This,Profile,AxisPoint,AxisDir,Angle,pRevolSolid)

#define IAcadPaperSpace_AddShape(This,Name,InsertionPoint,ScaleFactor,RotationAngle,pShape)	\
    (This)->lpVtbl -> AddShape(This,Name,InsertionPoint,ScaleFactor,RotationAngle,pShape)

#define IAcadPaperSpace_AddSolid(This,Point1,Point2,point3,Point4,pSolid)	\
    (This)->lpVtbl -> AddSolid(This,Point1,Point2,point3,Point4,pSolid)

#define IAcadPaperSpace_AddSphere(This,Center,Radius,pSphere)	\
    (This)->lpVtbl -> AddSphere(This,Center,Radius,pSphere)

#define IAcadPaperSpace_AddSpline(This,PointsArray,StartTangent,EndTangent,pSpline)	\
    (This)->lpVtbl -> AddSpline(This,PointsArray,StartTangent,EndTangent,pSpline)

#define IAcadPaperSpace_AddText(This,TextString,InsertionPoint,Height,pText)	\
    (This)->lpVtbl -> AddText(This,TextString,InsertionPoint,Height,pText)

#define IAcadPaperSpace_AddTolerance(This,Text,InsertionPoint,Direction,pTolerance)	\
    (This)->lpVtbl -> AddTolerance(This,Text,InsertionPoint,Direction,pTolerance)

#define IAcadPaperSpace_AddTorus(This,Center,TorusRadius,TubeRadius,pTorus)	\
    (This)->lpVtbl -> AddTorus(This,Center,TorusRadius,TubeRadius,pTorus)

#define IAcadPaperSpace_AddTrace(This,PointsArray,pTrace)	\
    (This)->lpVtbl -> AddTrace(This,PointsArray,pTrace)

#define IAcadPaperSpace_AddWedge(This,Center,Length,Width,Height,pWedge)	\
    (This)->lpVtbl -> AddWedge(This,Center,Length,Width,Height,pWedge)

#define IAcadPaperSpace_AddXline(This,Point1,Point2,pXline)	\
    (This)->lpVtbl -> AddXline(This,Point1,Point2,pXline)

#define IAcadPaperSpace_InsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,Password,pBlkRef)	\
    (This)->lpVtbl -> InsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,Password,pBlkRef)

#define IAcadPaperSpace_AddHatch(This,PatternType,PatternName,Associativity,HatchObjectType,pHatch)	\
    (This)->lpVtbl -> AddHatch(This,PatternType,PatternName,Associativity,HatchObjectType,pHatch)

#define IAcadPaperSpace_AddRaster(This,imageFileName,InsertionPoint,ScaleFactor,RotationAngle,pRaster)	\
    (This)->lpVtbl -> AddRaster(This,imageFileName,InsertionPoint,ScaleFactor,RotationAngle,pRaster)

#define IAcadPaperSpace_AddLine(This,StartPoint,EndPoint,pLine)	\
    (This)->lpVtbl -> AddLine(This,StartPoint,EndPoint,pLine)

#define IAcadPaperSpace_get_IsLayout(This,bIsLayout)	\
    (This)->lpVtbl -> get_IsLayout(This,bIsLayout)

#define IAcadPaperSpace_get_Layout(This,pLayout)	\
    (This)->lpVtbl -> get_Layout(This,pLayout)

#define IAcadPaperSpace_get_IsXRef(This,pIsXRref)	\
    (This)->lpVtbl -> get_IsXRef(This,pIsXRref)

#define IAcadPaperSpace_AddMInsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,NumRows,NumColumns,RowSpacing,ColumnSpacing,Password,pMInsertBlk)	\
    (This)->lpVtbl -> AddMInsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,NumRows,NumColumns,RowSpacing,ColumnSpacing,Password,pMInsertBlk)

#define IAcadPaperSpace_AddPolyfaceMesh(This,VertexList,FaceList,pPFMesh)	\
    (This)->lpVtbl -> AddPolyfaceMesh(This,VertexList,FaceList,pPFMesh)

#define IAcadPaperSpace_AddMLine(This,VertexList,pMLine)	\
    (This)->lpVtbl -> AddMLine(This,VertexList,pMLine)

#define IAcadPaperSpace_AddDim3PointAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)	\
    (This)->lpVtbl -> AddDim3PointAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)

#define IAcadPaperSpace_get_XRefDatabase(This,pDatabase)	\
    (This)->lpVtbl -> get_XRefDatabase(This,pDatabase)

#define IAcadPaperSpace_AttachExternalReference(This,PathName,Name,InsertionPoint,Xscale,Yscale,Zscale,Rotation,bOverlay,Password,pXRef)	\
    (This)->lpVtbl -> AttachExternalReference(This,PathName,Name,InsertionPoint,Xscale,Yscale,Zscale,Rotation,bOverlay,Password,pXRef)

#define IAcadPaperSpace_Unload(This)	\
    (This)->lpVtbl -> Unload(This)

#define IAcadPaperSpace_Reload(This)	\
    (This)->lpVtbl -> Reload(This)

#define IAcadPaperSpace_Bind(This,bPrefixName)	\
    (This)->lpVtbl -> Bind(This,bPrefixName)

#define IAcadPaperSpace_Detach(This)	\
    (This)->lpVtbl -> Detach(This)


#define IAcadPaperSpace_AddPViewport(This,Center,Width,Height,pPViewport)	\
    (This)->lpVtbl -> AddPViewport(This,Center,Width,Height,pPViewport)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPaperSpace_AddPViewport_Proxy( 
    IAcadPaperSpace * This,
    /* [in] */ VARIANT Center,
    /* [in] */ double Width,
    /* [in] */ double Height,
    /* [retval][out] */ IAcadPViewport **pPViewport);


void __RPC_STUB IAcadPaperSpace_AddPViewport_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadPaperSpace_INTERFACE_DEFINED__ */


#ifndef __IAcadPViewport_INTERFACE_DEFINED__
#define __IAcadPViewport_INTERFACE_DEFINED__

/* interface IAcadPViewport */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadPViewport;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FDF8DA1E-DCE0-4C2A-86C8-28F472755744")
    IAcadPViewport : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Center( 
            /* [retval][out] */ VARIANT *CenterPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Center( 
            /* [in] */ VARIANT CenterPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Direction( 
            /* [retval][out] */ VARIANT *dirVector) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Direction( 
            /* [in] */ VARIANT dirVector) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_GridOn( 
            /* [retval][out] */ VARIANT_BOOL *bGridOn) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_GridOn( 
            /* [in] */ VARIANT_BOOL bGridOn) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *Height) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ double *Width) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ double Width) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ViewportOn( 
            /* [retval][out] */ VARIANT_BOOL *bOn) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ViewportOn( 
            /* [in] */ VARIANT_BOOL bOn) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Clipped( 
            /* [retval][out] */ VARIANT_BOOL *bClipped) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayLocked( 
            /* [retval][out] */ VARIANT_BOOL *bLocked) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayLocked( 
            /* [in] */ VARIANT_BOOL bLocked) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_StandardScale( 
            /* [retval][out] */ AcViewportScale *scale) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_StandardScale( 
            /* [in] */ AcViewportScale scale) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_CustomScale( 
            /* [retval][out] */ double *scale) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_CustomScale( 
            /* [in] */ double scale) = 0;
        
        virtual /* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_StyleSheet( 
            /* [retval][out] */ BSTR *pName) = 0;
        
        virtual /* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_StyleSheet( 
            /* [in] */ BSTR pName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_UCSPerViewport( 
            /* [retval][out] */ VARIANT_BOOL *UCSSaved) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_UCSPerViewport( 
            /* [in] */ VARIANT_BOOL UCSSaved) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SnapBasePoint( 
            /* [retval][out] */ VARIANT *lowLeft) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SnapBasePoint( 
            /* [in] */ VARIANT lowLeft) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SnapOn( 
            /* [retval][out] */ VARIANT_BOOL *bSnapOn) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SnapOn( 
            /* [in] */ VARIANT_BOOL bSnapOn) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SnapRotationAngle( 
            /* [retval][out] */ double *Angle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SnapRotationAngle( 
            /* [in] */ double Angle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_UCSIconOn( 
            /* [retval][out] */ VARIANT_BOOL *bIconOn) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_UCSIconOn( 
            /* [in] */ VARIANT_BOOL bIconOn) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_UCSIconAtOrigin( 
            /* [retval][out] */ VARIANT_BOOL *bIconAtOrigin) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_UCSIconAtOrigin( 
            /* [in] */ VARIANT_BOOL bIconAtOrigin) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetGridSpacing( 
            /* [out] */ double *XSpacing,
            /* [out] */ double *YSpacing) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetGridSpacing( 
            /* [in] */ double XSpacing,
            /* [in] */ double YSpacing) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetSnapSpacing( 
            /* [out] */ double *XSpacing,
            /* [out] */ double *YSpacing) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetSnapSpacing( 
            /* [in] */ double XSpacing,
            /* [in] */ double YSpacing) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [in] */ VARIANT_BOOL bStatus) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TwistAngle( 
            /* [retval][out] */ ACAD_ANGLE *Angle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TwistAngle( 
            /* [in] */ ACAD_ANGLE Angle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LensLength( 
            /* [retval][out] */ double *Length) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LensLength( 
            /* [in] */ double Length) = 0;
        
        virtual /* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_RemoveHiddenLines( 
            /* [retval][out] */ VARIANT_BOOL *bRemoval) = 0;
        
        virtual /* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_RemoveHiddenLines( 
            /* [in] */ VARIANT_BOOL bRemoval) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Target( 
            /* [retval][out] */ VARIANT *targetPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Target( 
            /* [in] */ VARIANT targetPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ArcSmoothness( 
            /* [retval][out] */ long *arcSmooth) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ArcSmoothness( 
            /* [in] */ long arcSmooth) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShadePlot( 
            /* [retval][out] */ AcShadePlot *ShadePlot) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShadePlot( 
            /* [in] */ AcShadePlot ShadePlot) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadPViewportVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadPViewport * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadPViewport * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadPViewport * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadPViewport * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadPViewport * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadPViewport * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadPViewport * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadPViewport * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadPViewport * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadPViewport * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadPViewport * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadPViewport * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadPViewport * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadPViewport * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadPViewport * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadPViewport * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadPViewport * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadPViewport * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadPViewport * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadPViewport * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadPViewport * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadPViewport * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadPViewport * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadPViewport * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadPViewport * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadPViewport * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadPViewport * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadPViewport * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadPViewport * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadPViewport * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadPViewport * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadPViewport * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadPViewport * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadPViewport * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadPViewport * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadPViewport * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadPViewport * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadPViewport * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadPViewport * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadPViewport * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadPViewport * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadPViewport * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadPViewport * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Center )( 
            IAcadPViewport * This,
            /* [retval][out] */ VARIANT *CenterPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Center )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT CenterPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Direction )( 
            IAcadPViewport * This,
            /* [retval][out] */ VARIANT *dirVector);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Direction )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT dirVector);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GridOn )( 
            IAcadPViewport * This,
            /* [retval][out] */ VARIANT_BOOL *bGridOn);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GridOn )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT_BOOL bGridOn);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IAcadPViewport * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IAcadPViewport * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IAcadPViewport * This,
            /* [retval][out] */ double *Width);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            IAcadPViewport * This,
            /* [in] */ double Width);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ViewportOn )( 
            IAcadPViewport * This,
            /* [retval][out] */ VARIANT_BOOL *bOn);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ViewportOn )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT_BOOL bOn);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Clipped )( 
            IAcadPViewport * This,
            /* [retval][out] */ VARIANT_BOOL *bClipped);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayLocked )( 
            IAcadPViewport * This,
            /* [retval][out] */ VARIANT_BOOL *bLocked);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayLocked )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT_BOOL bLocked);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StandardScale )( 
            IAcadPViewport * This,
            /* [retval][out] */ AcViewportScale *scale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StandardScale )( 
            IAcadPViewport * This,
            /* [in] */ AcViewportScale scale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CustomScale )( 
            IAcadPViewport * This,
            /* [retval][out] */ double *scale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CustomScale )( 
            IAcadPViewport * This,
            /* [in] */ double scale);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleSheet )( 
            IAcadPViewport * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleSheet )( 
            IAcadPViewport * This,
            /* [in] */ BSTR pName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UCSPerViewport )( 
            IAcadPViewport * This,
            /* [retval][out] */ VARIANT_BOOL *UCSSaved);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UCSPerViewport )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT_BOOL UCSSaved);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SnapBasePoint )( 
            IAcadPViewport * This,
            /* [retval][out] */ VARIANT *lowLeft);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SnapBasePoint )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT lowLeft);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SnapOn )( 
            IAcadPViewport * This,
            /* [retval][out] */ VARIANT_BOOL *bSnapOn);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SnapOn )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT_BOOL bSnapOn);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SnapRotationAngle )( 
            IAcadPViewport * This,
            /* [retval][out] */ double *Angle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SnapRotationAngle )( 
            IAcadPViewport * This,
            /* [in] */ double Angle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UCSIconOn )( 
            IAcadPViewport * This,
            /* [retval][out] */ VARIANT_BOOL *bIconOn);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UCSIconOn )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT_BOOL bIconOn);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UCSIconAtOrigin )( 
            IAcadPViewport * This,
            /* [retval][out] */ VARIANT_BOOL *bIconAtOrigin);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UCSIconAtOrigin )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT_BOOL bIconAtOrigin);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetGridSpacing )( 
            IAcadPViewport * This,
            /* [out] */ double *XSpacing,
            /* [out] */ double *YSpacing);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetGridSpacing )( 
            IAcadPViewport * This,
            /* [in] */ double XSpacing,
            /* [in] */ double YSpacing);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSnapSpacing )( 
            IAcadPViewport * This,
            /* [out] */ double *XSpacing,
            /* [out] */ double *YSpacing);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetSnapSpacing )( 
            IAcadPViewport * This,
            /* [in] */ double XSpacing,
            /* [in] */ double YSpacing);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT_BOOL bStatus);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TwistAngle )( 
            IAcadPViewport * This,
            /* [retval][out] */ ACAD_ANGLE *Angle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TwistAngle )( 
            IAcadPViewport * This,
            /* [in] */ ACAD_ANGLE Angle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LensLength )( 
            IAcadPViewport * This,
            /* [retval][out] */ double *Length);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LensLength )( 
            IAcadPViewport * This,
            /* [in] */ double Length);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RemoveHiddenLines )( 
            IAcadPViewport * This,
            /* [retval][out] */ VARIANT_BOOL *bRemoval);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RemoveHiddenLines )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT_BOOL bRemoval);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Target )( 
            IAcadPViewport * This,
            /* [retval][out] */ VARIANT *targetPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Target )( 
            IAcadPViewport * This,
            /* [in] */ VARIANT targetPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ArcSmoothness )( 
            IAcadPViewport * This,
            /* [retval][out] */ long *arcSmooth);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ArcSmoothness )( 
            IAcadPViewport * This,
            /* [in] */ long arcSmooth);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShadePlot )( 
            IAcadPViewport * This,
            /* [retval][out] */ AcShadePlot *ShadePlot);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShadePlot )( 
            IAcadPViewport * This,
            /* [in] */ AcShadePlot ShadePlot);
        
        END_INTERFACE
    } IAcadPViewportVtbl;

    interface IAcadPViewport
    {
        CONST_VTBL struct IAcadPViewportVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadPViewport_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadPViewport_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadPViewport_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadPViewport_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadPViewport_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadPViewport_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadPViewport_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadPViewport_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadPViewport_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadPViewport_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadPViewport_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadPViewport_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadPViewport_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadPViewport_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadPViewport_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadPViewport_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadPViewport_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadPViewport_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadPViewport_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadPViewport_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadPViewport_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadPViewport_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadPViewport_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadPViewport_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadPViewport_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadPViewport_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadPViewport_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadPViewport_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadPViewport_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadPViewport_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadPViewport_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadPViewport_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadPViewport_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadPViewport_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadPViewport_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadPViewport_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadPViewport_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadPViewport_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadPViewport_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadPViewport_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadPViewport_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadPViewport_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadPViewport_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadPViewport_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadPViewport_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadPViewport_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadPViewport_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadPViewport_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadPViewport_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadPViewport_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadPViewport_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadPViewport_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadPViewport_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadPViewport_get_Center(This,CenterPoint)	\
    (This)->lpVtbl -> get_Center(This,CenterPoint)

#define IAcadPViewport_put_Center(This,CenterPoint)	\
    (This)->lpVtbl -> put_Center(This,CenterPoint)

#define IAcadPViewport_get_Direction(This,dirVector)	\
    (This)->lpVtbl -> get_Direction(This,dirVector)

#define IAcadPViewport_put_Direction(This,dirVector)	\
    (This)->lpVtbl -> put_Direction(This,dirVector)

#define IAcadPViewport_get_GridOn(This,bGridOn)	\
    (This)->lpVtbl -> get_GridOn(This,bGridOn)

#define IAcadPViewport_put_GridOn(This,bGridOn)	\
    (This)->lpVtbl -> put_GridOn(This,bGridOn)

#define IAcadPViewport_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAcadPViewport_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAcadPViewport_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAcadPViewport_put_Width(This,Width)	\
    (This)->lpVtbl -> put_Width(This,Width)

#define IAcadPViewport_get_ViewportOn(This,bOn)	\
    (This)->lpVtbl -> get_ViewportOn(This,bOn)

#define IAcadPViewport_put_ViewportOn(This,bOn)	\
    (This)->lpVtbl -> put_ViewportOn(This,bOn)

#define IAcadPViewport_get_Clipped(This,bClipped)	\
    (This)->lpVtbl -> get_Clipped(This,bClipped)

#define IAcadPViewport_get_DisplayLocked(This,bLocked)	\
    (This)->lpVtbl -> get_DisplayLocked(This,bLocked)

#define IAcadPViewport_put_DisplayLocked(This,bLocked)	\
    (This)->lpVtbl -> put_DisplayLocked(This,bLocked)

#define IAcadPViewport_get_StandardScale(This,scale)	\
    (This)->lpVtbl -> get_StandardScale(This,scale)

#define IAcadPViewport_put_StandardScale(This,scale)	\
    (This)->lpVtbl -> put_StandardScale(This,scale)

#define IAcadPViewport_get_CustomScale(This,scale)	\
    (This)->lpVtbl -> get_CustomScale(This,scale)

#define IAcadPViewport_put_CustomScale(This,scale)	\
    (This)->lpVtbl -> put_CustomScale(This,scale)

#define IAcadPViewport_get_StyleSheet(This,pName)	\
    (This)->lpVtbl -> get_StyleSheet(This,pName)

#define IAcadPViewport_put_StyleSheet(This,pName)	\
    (This)->lpVtbl -> put_StyleSheet(This,pName)

#define IAcadPViewport_get_UCSPerViewport(This,UCSSaved)	\
    (This)->lpVtbl -> get_UCSPerViewport(This,UCSSaved)

#define IAcadPViewport_put_UCSPerViewport(This,UCSSaved)	\
    (This)->lpVtbl -> put_UCSPerViewport(This,UCSSaved)

#define IAcadPViewport_get_SnapBasePoint(This,lowLeft)	\
    (This)->lpVtbl -> get_SnapBasePoint(This,lowLeft)

#define IAcadPViewport_put_SnapBasePoint(This,lowLeft)	\
    (This)->lpVtbl -> put_SnapBasePoint(This,lowLeft)

#define IAcadPViewport_get_SnapOn(This,bSnapOn)	\
    (This)->lpVtbl -> get_SnapOn(This,bSnapOn)

#define IAcadPViewport_put_SnapOn(This,bSnapOn)	\
    (This)->lpVtbl -> put_SnapOn(This,bSnapOn)

#define IAcadPViewport_get_SnapRotationAngle(This,Angle)	\
    (This)->lpVtbl -> get_SnapRotationAngle(This,Angle)

#define IAcadPViewport_put_SnapRotationAngle(This,Angle)	\
    (This)->lpVtbl -> put_SnapRotationAngle(This,Angle)

#define IAcadPViewport_get_UCSIconOn(This,bIconOn)	\
    (This)->lpVtbl -> get_UCSIconOn(This,bIconOn)

#define IAcadPViewport_put_UCSIconOn(This,bIconOn)	\
    (This)->lpVtbl -> put_UCSIconOn(This,bIconOn)

#define IAcadPViewport_get_UCSIconAtOrigin(This,bIconAtOrigin)	\
    (This)->lpVtbl -> get_UCSIconAtOrigin(This,bIconAtOrigin)

#define IAcadPViewport_put_UCSIconAtOrigin(This,bIconAtOrigin)	\
    (This)->lpVtbl -> put_UCSIconAtOrigin(This,bIconAtOrigin)

#define IAcadPViewport_GetGridSpacing(This,XSpacing,YSpacing)	\
    (This)->lpVtbl -> GetGridSpacing(This,XSpacing,YSpacing)

#define IAcadPViewport_SetGridSpacing(This,XSpacing,YSpacing)	\
    (This)->lpVtbl -> SetGridSpacing(This,XSpacing,YSpacing)

#define IAcadPViewport_GetSnapSpacing(This,XSpacing,YSpacing)	\
    (This)->lpVtbl -> GetSnapSpacing(This,XSpacing,YSpacing)

#define IAcadPViewport_SetSnapSpacing(This,XSpacing,YSpacing)	\
    (This)->lpVtbl -> SetSnapSpacing(This,XSpacing,YSpacing)

#define IAcadPViewport_Display(This,bStatus)	\
    (This)->lpVtbl -> Display(This,bStatus)

#define IAcadPViewport_get_TwistAngle(This,Angle)	\
    (This)->lpVtbl -> get_TwistAngle(This,Angle)

#define IAcadPViewport_put_TwistAngle(This,Angle)	\
    (This)->lpVtbl -> put_TwistAngle(This,Angle)

#define IAcadPViewport_get_LensLength(This,Length)	\
    (This)->lpVtbl -> get_LensLength(This,Length)

#define IAcadPViewport_put_LensLength(This,Length)	\
    (This)->lpVtbl -> put_LensLength(This,Length)

#define IAcadPViewport_get_RemoveHiddenLines(This,bRemoval)	\
    (This)->lpVtbl -> get_RemoveHiddenLines(This,bRemoval)

#define IAcadPViewport_put_RemoveHiddenLines(This,bRemoval)	\
    (This)->lpVtbl -> put_RemoveHiddenLines(This,bRemoval)

#define IAcadPViewport_get_Target(This,targetPoint)	\
    (This)->lpVtbl -> get_Target(This,targetPoint)

#define IAcadPViewport_put_Target(This,targetPoint)	\
    (This)->lpVtbl -> put_Target(This,targetPoint)

#define IAcadPViewport_get_ArcSmoothness(This,arcSmooth)	\
    (This)->lpVtbl -> get_ArcSmoothness(This,arcSmooth)

#define IAcadPViewport_put_ArcSmoothness(This,arcSmooth)	\
    (This)->lpVtbl -> put_ArcSmoothness(This,arcSmooth)

#define IAcadPViewport_get_ShadePlot(This,ShadePlot)	\
    (This)->lpVtbl -> get_ShadePlot(This,ShadePlot)

#define IAcadPViewport_put_ShadePlot(This,ShadePlot)	\
    (This)->lpVtbl -> put_ShadePlot(This,ShadePlot)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_Center_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ VARIANT *CenterPoint);


void __RPC_STUB IAcadPViewport_get_Center_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_Center_Proxy( 
    IAcadPViewport * This,
    /* [in] */ VARIANT CenterPoint);


void __RPC_STUB IAcadPViewport_put_Center_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_Direction_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ VARIANT *dirVector);


void __RPC_STUB IAcadPViewport_get_Direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_Direction_Proxy( 
    IAcadPViewport * This,
    /* [in] */ VARIANT dirVector);


void __RPC_STUB IAcadPViewport_put_Direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_GridOn_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ VARIANT_BOOL *bGridOn);


void __RPC_STUB IAcadPViewport_get_GridOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_GridOn_Proxy( 
    IAcadPViewport * This,
    /* [in] */ VARIANT_BOOL bGridOn);


void __RPC_STUB IAcadPViewport_put_GridOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_Height_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ double *Height);


void __RPC_STUB IAcadPViewport_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_Height_Proxy( 
    IAcadPViewport * This,
    /* [in] */ double Height);


void __RPC_STUB IAcadPViewport_put_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_Width_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ double *Width);


void __RPC_STUB IAcadPViewport_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_Width_Proxy( 
    IAcadPViewport * This,
    /* [in] */ double Width);


void __RPC_STUB IAcadPViewport_put_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_ViewportOn_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ VARIANT_BOOL *bOn);


void __RPC_STUB IAcadPViewport_get_ViewportOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_ViewportOn_Proxy( 
    IAcadPViewport * This,
    /* [in] */ VARIANT_BOOL bOn);


void __RPC_STUB IAcadPViewport_put_ViewportOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_Clipped_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ VARIANT_BOOL *bClipped);


void __RPC_STUB IAcadPViewport_get_Clipped_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_DisplayLocked_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ VARIANT_BOOL *bLocked);


void __RPC_STUB IAcadPViewport_get_DisplayLocked_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_DisplayLocked_Proxy( 
    IAcadPViewport * This,
    /* [in] */ VARIANT_BOOL bLocked);


void __RPC_STUB IAcadPViewport_put_DisplayLocked_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_StandardScale_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ AcViewportScale *scale);


void __RPC_STUB IAcadPViewport_get_StandardScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_StandardScale_Proxy( 
    IAcadPViewport * This,
    /* [in] */ AcViewportScale scale);


void __RPC_STUB IAcadPViewport_put_StandardScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_CustomScale_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ double *scale);


void __RPC_STUB IAcadPViewport_get_CustomScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_CustomScale_Proxy( 
    IAcadPViewport * This,
    /* [in] */ double scale);


void __RPC_STUB IAcadPViewport_put_CustomScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_StyleSheet_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ BSTR *pName);


void __RPC_STUB IAcadPViewport_get_StyleSheet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_StyleSheet_Proxy( 
    IAcadPViewport * This,
    /* [in] */ BSTR pName);


void __RPC_STUB IAcadPViewport_put_StyleSheet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_UCSPerViewport_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ VARIANT_BOOL *UCSSaved);


void __RPC_STUB IAcadPViewport_get_UCSPerViewport_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_UCSPerViewport_Proxy( 
    IAcadPViewport * This,
    /* [in] */ VARIANT_BOOL UCSSaved);


void __RPC_STUB IAcadPViewport_put_UCSPerViewport_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_SnapBasePoint_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ VARIANT *lowLeft);


void __RPC_STUB IAcadPViewport_get_SnapBasePoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_SnapBasePoint_Proxy( 
    IAcadPViewport * This,
    /* [in] */ VARIANT lowLeft);


void __RPC_STUB IAcadPViewport_put_SnapBasePoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_SnapOn_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ VARIANT_BOOL *bSnapOn);


void __RPC_STUB IAcadPViewport_get_SnapOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_SnapOn_Proxy( 
    IAcadPViewport * This,
    /* [in] */ VARIANT_BOOL bSnapOn);


void __RPC_STUB IAcadPViewport_put_SnapOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_SnapRotationAngle_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ double *Angle);


void __RPC_STUB IAcadPViewport_get_SnapRotationAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_SnapRotationAngle_Proxy( 
    IAcadPViewport * This,
    /* [in] */ double Angle);


void __RPC_STUB IAcadPViewport_put_SnapRotationAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_UCSIconOn_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ VARIANT_BOOL *bIconOn);


void __RPC_STUB IAcadPViewport_get_UCSIconOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_UCSIconOn_Proxy( 
    IAcadPViewport * This,
    /* [in] */ VARIANT_BOOL bIconOn);


void __RPC_STUB IAcadPViewport_put_UCSIconOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_UCSIconAtOrigin_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ VARIANT_BOOL *bIconAtOrigin);


void __RPC_STUB IAcadPViewport_get_UCSIconAtOrigin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_UCSIconAtOrigin_Proxy( 
    IAcadPViewport * This,
    /* [in] */ VARIANT_BOOL bIconAtOrigin);


void __RPC_STUB IAcadPViewport_put_UCSIconAtOrigin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_GetGridSpacing_Proxy( 
    IAcadPViewport * This,
    /* [out] */ double *XSpacing,
    /* [out] */ double *YSpacing);


void __RPC_STUB IAcadPViewport_GetGridSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_SetGridSpacing_Proxy( 
    IAcadPViewport * This,
    /* [in] */ double XSpacing,
    /* [in] */ double YSpacing);


void __RPC_STUB IAcadPViewport_SetGridSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_GetSnapSpacing_Proxy( 
    IAcadPViewport * This,
    /* [out] */ double *XSpacing,
    /* [out] */ double *YSpacing);


void __RPC_STUB IAcadPViewport_GetSnapSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_SetSnapSpacing_Proxy( 
    IAcadPViewport * This,
    /* [in] */ double XSpacing,
    /* [in] */ double YSpacing);


void __RPC_STUB IAcadPViewport_SetSnapSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_Display_Proxy( 
    IAcadPViewport * This,
    /* [in] */ VARIANT_BOOL bStatus);


void __RPC_STUB IAcadPViewport_Display_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_TwistAngle_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ ACAD_ANGLE *Angle);


void __RPC_STUB IAcadPViewport_get_TwistAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_TwistAngle_Proxy( 
    IAcadPViewport * This,
    /* [in] */ ACAD_ANGLE Angle);


void __RPC_STUB IAcadPViewport_put_TwistAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_LensLength_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ double *Length);


void __RPC_STUB IAcadPViewport_get_LensLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_LensLength_Proxy( 
    IAcadPViewport * This,
    /* [in] */ double Length);


void __RPC_STUB IAcadPViewport_put_LensLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_RemoveHiddenLines_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ VARIANT_BOOL *bRemoval);


void __RPC_STUB IAcadPViewport_get_RemoveHiddenLines_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_RemoveHiddenLines_Proxy( 
    IAcadPViewport * This,
    /* [in] */ VARIANT_BOOL bRemoval);


void __RPC_STUB IAcadPViewport_put_RemoveHiddenLines_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_Target_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ VARIANT *targetPoint);


void __RPC_STUB IAcadPViewport_get_Target_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_Target_Proxy( 
    IAcadPViewport * This,
    /* [in] */ VARIANT targetPoint);


void __RPC_STUB IAcadPViewport_put_Target_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_ArcSmoothness_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ long *arcSmooth);


void __RPC_STUB IAcadPViewport_get_ArcSmoothness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_ArcSmoothness_Proxy( 
    IAcadPViewport * This,
    /* [in] */ long arcSmooth);


void __RPC_STUB IAcadPViewport_put_ArcSmoothness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_get_ShadePlot_Proxy( 
    IAcadPViewport * This,
    /* [retval][out] */ AcShadePlot *ShadePlot);


void __RPC_STUB IAcadPViewport_get_ShadePlot_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport_put_ShadePlot_Proxy( 
    IAcadPViewport * This,
    /* [in] */ AcShadePlot ShadePlot);


void __RPC_STUB IAcadPViewport_put_ShadePlot_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadPViewport_INTERFACE_DEFINED__ */


#ifndef __IAcadBlocks_INTERFACE_DEFINED__
#define __IAcadBlocks_INTERFACE_DEFINED__

/* interface IAcadBlocks */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadBlocks;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("704EEA43-2E4F-4B19-95F7-6ED2A5AEED2D")
    IAcadBlocks : public IAcadObject
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadBlock **pItem) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadBlock **pBlock) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadBlocksVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadBlocks * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadBlocks * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadBlocks * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadBlocks * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadBlocks * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadBlocks * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadBlocks * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadBlocks * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadBlocks * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadBlocks * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadBlocks * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadBlocks * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadBlocks * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadBlocks * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadBlocks * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadBlocks * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadBlocks * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadBlocks * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadBlocks * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadBlocks * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadBlocks * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadBlock **pItem);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadBlocks * This,
            /* [retval][out] */ long *pVal);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadBlocks * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IAcadBlocks * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadBlock **pBlock);
        
        END_INTERFACE
    } IAcadBlocksVtbl;

    interface IAcadBlocks
    {
        CONST_VTBL struct IAcadBlocksVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadBlocks_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadBlocks_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadBlocks_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadBlocks_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadBlocks_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadBlocks_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadBlocks_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadBlocks_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadBlocks_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadBlocks_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadBlocks_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadBlocks_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadBlocks_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadBlocks_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadBlocks_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadBlocks_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadBlocks_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadBlocks_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadBlocks_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadBlocks_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadBlocks_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadBlocks_get_Count(This,pVal)	\
    (This)->lpVtbl -> get_Count(This,pVal)

#define IAcadBlocks_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadBlocks_Add(This,InsertionPoint,Name,pBlock)	\
    (This)->lpVtbl -> Add(This,InsertionPoint,Name,pBlock)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlocks_Item_Proxy( 
    IAcadBlocks * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ IAcadBlock **pItem);


void __RPC_STUB IAcadBlocks_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadBlocks_get_Count_Proxy( 
    IAcadBlocks * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IAcadBlocks_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadBlocks_get__NewEnum_Proxy( 
    IAcadBlocks * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IAcadBlocks_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadBlocks_Add_Proxy( 
    IAcadBlocks * This,
    /* [in] */ VARIANT InsertionPoint,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAcadBlock **pBlock);


void __RPC_STUB IAcadBlocks_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadBlocks_INTERFACE_DEFINED__ */


#ifndef __IAcadGroups_INTERFACE_DEFINED__
#define __IAcadGroups_INTERFACE_DEFINED__

/* interface IAcadGroups */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadGroups;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CC54AEA3-CBEB-4A72-BEFD-41D2CDDD96B3")
    IAcadGroups : public IAcadObject
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadGroup **pItem) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadGroup **pDimStyle) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadGroupsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadGroups * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadGroups * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadGroups * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadGroups * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadGroups * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadGroups * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadGroups * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadGroups * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadGroups * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadGroups * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadGroups * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadGroups * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadGroups * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadGroups * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadGroups * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadGroups * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadGroups * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadGroups * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadGroups * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadGroups * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadGroups * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadGroup **pItem);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadGroups * This,
            /* [retval][out] */ long *pCount);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadGroups * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IAcadGroups * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadGroup **pDimStyle);
        
        END_INTERFACE
    } IAcadGroupsVtbl;

    interface IAcadGroups
    {
        CONST_VTBL struct IAcadGroupsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadGroups_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadGroups_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadGroups_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadGroups_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadGroups_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadGroups_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadGroups_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadGroups_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadGroups_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadGroups_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadGroups_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadGroups_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadGroups_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadGroups_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadGroups_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadGroups_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadGroups_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadGroups_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadGroups_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadGroups_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadGroups_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadGroups_get_Count(This,pCount)	\
    (This)->lpVtbl -> get_Count(This,pCount)

#define IAcadGroups_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadGroups_Add(This,Name,pDimStyle)	\
    (This)->lpVtbl -> Add(This,Name,pDimStyle)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadGroups_Item_Proxy( 
    IAcadGroups * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ IAcadGroup **pItem);


void __RPC_STUB IAcadGroups_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadGroups_get_Count_Proxy( 
    IAcadGroups * This,
    /* [retval][out] */ long *pCount);


void __RPC_STUB IAcadGroups_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadGroups_get__NewEnum_Proxy( 
    IAcadGroups * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IAcadGroups_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadGroups_Add_Proxy( 
    IAcadGroups * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAcadGroup **pDimStyle);


void __RPC_STUB IAcadGroups_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadGroups_INTERFACE_DEFINED__ */


#ifndef __IAcadGroup_INTERFACE_DEFINED__
#define __IAcadGroup_INTERFACE_DEFINED__

/* interface IAcadGroup */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6E8401D2-0722-4FFA-B1F6-F75D0EACED05")
    IAcadGroup : public IAcadObject
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadEntity **ppEntity) = 0;
        
        virtual /* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TrueColor( 
            /* [in] */ IAcadAcCmColor *rhs) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Layer( 
            /* [in] */ BSTR rhs) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Linetype( 
            /* [in] */ BSTR rhs) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LinetypeScale( 
            /* [in] */ ACAD_NOUNITS rhs) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL rhs) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Highlight( 
            /* [in] */ VARIANT_BOOL HighlightFlag) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PlotStyleName( 
            /* [in] */ BSTR rhs) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Lineweight( 
            /* [in] */ ACAD_LWEIGHT rhs) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AppendItems( 
            /* [in] */ VARIANT Objects) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RemoveItems( 
            /* [in] */ VARIANT Objects) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Update( void) = 0;
        
        virtual /* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_color( 
            /* [in] */ AcColor rhs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadGroup * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadGroup * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadGroup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadGroup * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadGroup * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadGroup * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadGroup * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadGroup * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadGroup * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadGroup * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadGroup * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadGroup * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadGroup * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadGroup * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadGroup * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadGroup * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadGroup * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadGroup * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadGroup * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadEntity **ppEntity);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadGroup * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadGroup * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadGroup * This,
            /* [in] */ IAcadAcCmColor *rhs);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadGroup * This,
            /* [in] */ BSTR rhs);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadGroup * This,
            /* [in] */ BSTR rhs);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadGroup * This,
            /* [in] */ ACAD_NOUNITS rhs);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadGroup * This,
            /* [in] */ VARIANT_BOOL rhs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadGroup * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadGroup * This,
            /* [in] */ BSTR rhs);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadGroup * This,
            /* [in] */ ACAD_LWEIGHT rhs);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadGroup * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadGroup * This,
            /* [in] */ BSTR pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AppendItems )( 
            IAcadGroup * This,
            /* [in] */ VARIANT Objects);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveItems )( 
            IAcadGroup * This,
            /* [in] */ VARIANT Objects);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadGroup * This);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadGroup * This,
            /* [in] */ AcColor rhs);
        
        END_INTERFACE
    } IAcadGroupVtbl;

    interface IAcadGroup
    {
        CONST_VTBL struct IAcadGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadGroup_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadGroup_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadGroup_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadGroup_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadGroup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadGroup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadGroup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadGroup_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadGroup_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadGroup_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadGroup_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadGroup_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadGroup_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadGroup_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadGroup_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadGroup_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadGroup_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadGroup_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadGroup_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadGroup_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadGroup_Item(This,Index,ppEntity)	\
    (This)->lpVtbl -> Item(This,Index,ppEntity)

#define IAcadGroup_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadGroup_get_Count(This,pVal)	\
    (This)->lpVtbl -> get_Count(This,pVal)

#define IAcadGroup_put_TrueColor(This,rhs)	\
    (This)->lpVtbl -> put_TrueColor(This,rhs)

#define IAcadGroup_put_Layer(This,rhs)	\
    (This)->lpVtbl -> put_Layer(This,rhs)

#define IAcadGroup_put_Linetype(This,rhs)	\
    (This)->lpVtbl -> put_Linetype(This,rhs)

#define IAcadGroup_put_LinetypeScale(This,rhs)	\
    (This)->lpVtbl -> put_LinetypeScale(This,rhs)

#define IAcadGroup_put_Visible(This,rhs)	\
    (This)->lpVtbl -> put_Visible(This,rhs)

#define IAcadGroup_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadGroup_put_PlotStyleName(This,rhs)	\
    (This)->lpVtbl -> put_PlotStyleName(This,rhs)

#define IAcadGroup_put_Lineweight(This,rhs)	\
    (This)->lpVtbl -> put_Lineweight(This,rhs)

#define IAcadGroup_get_Name(This,pVal)	\
    (This)->lpVtbl -> get_Name(This,pVal)

#define IAcadGroup_put_Name(This,pVal)	\
    (This)->lpVtbl -> put_Name(This,pVal)

#define IAcadGroup_AppendItems(This,Objects)	\
    (This)->lpVtbl -> AppendItems(This,Objects)

#define IAcadGroup_RemoveItems(This,Objects)	\
    (This)->lpVtbl -> RemoveItems(This,Objects)

#define IAcadGroup_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadGroup_put_color(This,rhs)	\
    (This)->lpVtbl -> put_color(This,rhs)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadGroup_Item_Proxy( 
    IAcadGroup * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ IAcadEntity **ppEntity);


void __RPC_STUB IAcadGroup_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadGroup_get__NewEnum_Proxy( 
    IAcadGroup * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IAcadGroup_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadGroup_get_Count_Proxy( 
    IAcadGroup * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IAcadGroup_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadGroup_put_TrueColor_Proxy( 
    IAcadGroup * This,
    /* [in] */ IAcadAcCmColor *rhs);


void __RPC_STUB IAcadGroup_put_TrueColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadGroup_put_Layer_Proxy( 
    IAcadGroup * This,
    /* [in] */ BSTR rhs);


void __RPC_STUB IAcadGroup_put_Layer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadGroup_put_Linetype_Proxy( 
    IAcadGroup * This,
    /* [in] */ BSTR rhs);


void __RPC_STUB IAcadGroup_put_Linetype_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadGroup_put_LinetypeScale_Proxy( 
    IAcadGroup * This,
    /* [in] */ ACAD_NOUNITS rhs);


void __RPC_STUB IAcadGroup_put_LinetypeScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadGroup_put_Visible_Proxy( 
    IAcadGroup * This,
    /* [in] */ VARIANT_BOOL rhs);


void __RPC_STUB IAcadGroup_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadGroup_Highlight_Proxy( 
    IAcadGroup * This,
    /* [in] */ VARIANT_BOOL HighlightFlag);


void __RPC_STUB IAcadGroup_Highlight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadGroup_put_PlotStyleName_Proxy( 
    IAcadGroup * This,
    /* [in] */ BSTR rhs);


void __RPC_STUB IAcadGroup_put_PlotStyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadGroup_put_Lineweight_Proxy( 
    IAcadGroup * This,
    /* [in] */ ACAD_LWEIGHT rhs);


void __RPC_STUB IAcadGroup_put_Lineweight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadGroup_get_Name_Proxy( 
    IAcadGroup * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IAcadGroup_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadGroup_put_Name_Proxy( 
    IAcadGroup * This,
    /* [in] */ BSTR pVal);


void __RPC_STUB IAcadGroup_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadGroup_AppendItems_Proxy( 
    IAcadGroup * This,
    /* [in] */ VARIANT Objects);


void __RPC_STUB IAcadGroup_AppendItems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadGroup_RemoveItems_Proxy( 
    IAcadGroup * This,
    /* [in] */ VARIANT Objects);


void __RPC_STUB IAcadGroup_RemoveItems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadGroup_Update_Proxy( 
    IAcadGroup * This);


void __RPC_STUB IAcadGroup_Update_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadGroup_put_color_Proxy( 
    IAcadGroup * This,
    /* [in] */ AcColor rhs);


void __RPC_STUB IAcadGroup_put_color_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadGroup_INTERFACE_DEFINED__ */


#ifndef __IAcadDimStyles_INTERFACE_DEFINED__
#define __IAcadDimStyles_INTERFACE_DEFINED__

/* interface IAcadDimStyles */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadDimStyles;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("722A6EB9-A6A7-40D5-9DB3-4F4B2BA2C6FE")
    IAcadDimStyles : public IAcadObject
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadDimStyle **pItem) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadDimStyle **pDimStyle) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadDimStylesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadDimStyles * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadDimStyles * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadDimStyles * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadDimStyles * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadDimStyles * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadDimStyles * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadDimStyles * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadDimStyles * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadDimStyles * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadDimStyles * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadDimStyles * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadDimStyles * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadDimStyles * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadDimStyles * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadDimStyles * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadDimStyles * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadDimStyles * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadDimStyles * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadDimStyles * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadDimStyles * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadDimStyles * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadDimStyle **pItem);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadDimStyles * This,
            /* [retval][out] */ long *pCount);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadDimStyles * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IAcadDimStyles * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadDimStyle **pDimStyle);
        
        END_INTERFACE
    } IAcadDimStylesVtbl;

    interface IAcadDimStyles
    {
        CONST_VTBL struct IAcadDimStylesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadDimStyles_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadDimStyles_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadDimStyles_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadDimStyles_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadDimStyles_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadDimStyles_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadDimStyles_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadDimStyles_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadDimStyles_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadDimStyles_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadDimStyles_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadDimStyles_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadDimStyles_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadDimStyles_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadDimStyles_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadDimStyles_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadDimStyles_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadDimStyles_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadDimStyles_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadDimStyles_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadDimStyles_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadDimStyles_get_Count(This,pCount)	\
    (This)->lpVtbl -> get_Count(This,pCount)

#define IAcadDimStyles_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadDimStyles_Add(This,Name,pDimStyle)	\
    (This)->lpVtbl -> Add(This,Name,pDimStyle)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadDimStyles_Item_Proxy( 
    IAcadDimStyles * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ IAcadDimStyle **pItem);


void __RPC_STUB IAcadDimStyles_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimStyles_get_Count_Proxy( 
    IAcadDimStyles * This,
    /* [retval][out] */ long *pCount);


void __RPC_STUB IAcadDimStyles_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimStyles_get__NewEnum_Proxy( 
    IAcadDimStyles * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IAcadDimStyles_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadDimStyles_Add_Proxy( 
    IAcadDimStyles * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAcadDimStyle **pDimStyle);


void __RPC_STUB IAcadDimStyles_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadDimStyles_INTERFACE_DEFINED__ */


#ifndef __IAcadDimStyle_INTERFACE_DEFINED__
#define __IAcadDimStyle_INTERFACE_DEFINED__

/* interface IAcadDimStyle */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadDimStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DF7932CD-4E3A-4DE1-B9BE-B90A4005DB44")
    IAcadDimStyle : public IAcadObject
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CopyFrom( 
            /* [in] */ IDispatch *StyleSource) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadDimStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadDimStyle * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadDimStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadDimStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadDimStyle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadDimStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadDimStyle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadDimStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadDimStyle * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadDimStyle * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadDimStyle * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadDimStyle * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadDimStyle * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadDimStyle * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadDimStyle * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadDimStyle * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadDimStyle * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadDimStyle * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadDimStyle * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadDimStyle * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadDimStyle * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadDimStyle * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadDimStyle * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CopyFrom )( 
            IAcadDimStyle * This,
            /* [in] */ IDispatch *StyleSource);
        
        END_INTERFACE
    } IAcadDimStyleVtbl;

    interface IAcadDimStyle
    {
        CONST_VTBL struct IAcadDimStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadDimStyle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadDimStyle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadDimStyle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadDimStyle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadDimStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadDimStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadDimStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadDimStyle_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadDimStyle_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadDimStyle_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadDimStyle_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadDimStyle_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadDimStyle_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadDimStyle_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadDimStyle_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadDimStyle_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadDimStyle_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadDimStyle_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadDimStyle_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadDimStyle_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadDimStyle_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadDimStyle_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#define IAcadDimStyle_CopyFrom(This,StyleSource)	\
    (This)->lpVtbl -> CopyFrom(This,StyleSource)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDimStyle_get_Name_Proxy( 
    IAcadDimStyle * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadDimStyle_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDimStyle_put_Name_Proxy( 
    IAcadDimStyle * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadDimStyle_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadDimStyle_CopyFrom_Proxy( 
    IAcadDimStyle * This,
    /* [in] */ IDispatch *StyleSource);


void __RPC_STUB IAcadDimStyle_CopyFrom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadDimStyle_INTERFACE_DEFINED__ */


#ifndef __IAcadLayers_INTERFACE_DEFINED__
#define __IAcadLayers_INTERFACE_DEFINED__

/* interface IAcadLayers */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadLayers;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C347DCBD-D10D-4E35-8509-463A47F6F197")
    IAcadLayers : public IAcadObject
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadLayer **pItem) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadLayer **pLayer) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadLayersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadLayers * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadLayers * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadLayers * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadLayers * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadLayers * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadLayers * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadLayers * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadLayers * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadLayers * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadLayers * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadLayers * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadLayers * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadLayers * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadLayers * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadLayers * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadLayers * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadLayers * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadLayers * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadLayers * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadLayers * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadLayers * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadLayer **pItem);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadLayers * This,
            /* [retval][out] */ long *pCount);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadLayers * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IAcadLayers * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadLayer **pLayer);
        
        END_INTERFACE
    } IAcadLayersVtbl;

    interface IAcadLayers
    {
        CONST_VTBL struct IAcadLayersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadLayers_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadLayers_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadLayers_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadLayers_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadLayers_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadLayers_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadLayers_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadLayers_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadLayers_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadLayers_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadLayers_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadLayers_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadLayers_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadLayers_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadLayers_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadLayers_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadLayers_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadLayers_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadLayers_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadLayers_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadLayers_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadLayers_get_Count(This,pCount)	\
    (This)->lpVtbl -> get_Count(This,pCount)

#define IAcadLayers_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadLayers_Add(This,Name,pLayer)	\
    (This)->lpVtbl -> Add(This,Name,pLayer)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadLayers_Item_Proxy( 
    IAcadLayers * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ IAcadLayer **pItem);


void __RPC_STUB IAcadLayers_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLayers_get_Count_Proxy( 
    IAcadLayers * This,
    /* [retval][out] */ long *pCount);


void __RPC_STUB IAcadLayers_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLayers_get__NewEnum_Proxy( 
    IAcadLayers * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IAcadLayers_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadLayers_Add_Proxy( 
    IAcadLayers * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAcadLayer **pLayer);


void __RPC_STUB IAcadLayers_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadLayers_INTERFACE_DEFINED__ */


#ifndef __IAcadLayer_INTERFACE_DEFINED__
#define __IAcadLayer_INTERFACE_DEFINED__

/* interface IAcadLayer */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadLayer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7F210BA8-5AC1-41B1-B3AB-F05C5A261118")
    IAcadLayer : public IAcadObject
    {
    public:
        virtual /* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_color( 
            /* [retval][out] */ AcColor *color) = 0;
        
        virtual /* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_color( 
            /* [in] */ AcColor color) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TrueColor( 
            /* [retval][out] */ IAcadAcCmColor **pColor) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TrueColor( 
            /* [in] */ IAcadAcCmColor *pColor) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Freeze( 
            /* [retval][out] */ VARIANT_BOOL *bFreeze) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Freeze( 
            /* [in] */ VARIANT_BOOL bFreeze) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LayerOn( 
            /* [retval][out] */ VARIANT_BOOL *bOn) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LayerOn( 
            /* [in] */ VARIANT_BOOL bOn) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Linetype( 
            /* [retval][out] */ BSTR *Linetype) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Linetype( 
            /* [in] */ BSTR Linetype) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Lock( 
            /* [retval][out] */ VARIANT_BOOL *Block) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Lock( 
            /* [in] */ VARIANT_BOOL Block) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Plottable( 
            /* [retval][out] */ VARIANT_BOOL *bPlottable) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Plottable( 
            /* [in] */ VARIANT_BOOL bPlottable) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ViewportDefault( 
            /* [retval][out] */ VARIANT_BOOL *bDefault) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ViewportDefault( 
            /* [in] */ VARIANT_BOOL bDefault) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PlotStyleName( 
            /* [retval][out] */ BSTR *plotStyle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_PlotStyleName( 
            /* [in] */ BSTR plotStyle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Lineweight( 
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Lineweight( 
            /* [in] */ ACAD_LWEIGHT Lineweight) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadLayerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadLayer * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadLayer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadLayer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadLayer * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadLayer * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadLayer * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadLayer * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadLayer * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadLayer * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadLayer * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadLayer * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadLayer * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadLayer * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadLayer * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadLayer * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadLayer * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadLayer * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadLayer * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadLayer * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadLayer * This);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadLayer * This,
            /* [retval][out] */ AcColor *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadLayer * This,
            /* [in] */ AcColor color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadLayer * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadLayer * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Freeze )( 
            IAcadLayer * This,
            /* [retval][out] */ VARIANT_BOOL *bFreeze);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Freeze )( 
            IAcadLayer * This,
            /* [in] */ VARIANT_BOOL bFreeze);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LayerOn )( 
            IAcadLayer * This,
            /* [retval][out] */ VARIANT_BOOL *bOn);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LayerOn )( 
            IAcadLayer * This,
            /* [in] */ VARIANT_BOOL bOn);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadLayer * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadLayer * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lock )( 
            IAcadLayer * This,
            /* [retval][out] */ VARIANT_BOOL *Block);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lock )( 
            IAcadLayer * This,
            /* [in] */ VARIANT_BOOL Block);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadLayer * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadLayer * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Plottable )( 
            IAcadLayer * This,
            /* [retval][out] */ VARIANT_BOOL *bPlottable);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Plottable )( 
            IAcadLayer * This,
            /* [in] */ VARIANT_BOOL bPlottable);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ViewportDefault )( 
            IAcadLayer * This,
            /* [retval][out] */ VARIANT_BOOL *bDefault);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ViewportDefault )( 
            IAcadLayer * This,
            /* [in] */ VARIANT_BOOL bDefault);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadLayer * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadLayer * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadLayer * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadLayer * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        END_INTERFACE
    } IAcadLayerVtbl;

    interface IAcadLayer
    {
        CONST_VTBL struct IAcadLayerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadLayer_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadLayer_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadLayer_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadLayer_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadLayer_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadLayer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadLayer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadLayer_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadLayer_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadLayer_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadLayer_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadLayer_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadLayer_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadLayer_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadLayer_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadLayer_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadLayer_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadLayer_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadLayer_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadLayer_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadLayer_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadLayer_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)

#define IAcadLayer_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadLayer_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadLayer_get_Freeze(This,bFreeze)	\
    (This)->lpVtbl -> get_Freeze(This,bFreeze)

#define IAcadLayer_put_Freeze(This,bFreeze)	\
    (This)->lpVtbl -> put_Freeze(This,bFreeze)

#define IAcadLayer_get_LayerOn(This,bOn)	\
    (This)->lpVtbl -> get_LayerOn(This,bOn)

#define IAcadLayer_put_LayerOn(This,bOn)	\
    (This)->lpVtbl -> put_LayerOn(This,bOn)

#define IAcadLayer_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadLayer_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadLayer_get_Lock(This,Block)	\
    (This)->lpVtbl -> get_Lock(This,Block)

#define IAcadLayer_put_Lock(This,Block)	\
    (This)->lpVtbl -> put_Lock(This,Block)

#define IAcadLayer_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadLayer_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#define IAcadLayer_get_Plottable(This,bPlottable)	\
    (This)->lpVtbl -> get_Plottable(This,bPlottable)

#define IAcadLayer_put_Plottable(This,bPlottable)	\
    (This)->lpVtbl -> put_Plottable(This,bPlottable)

#define IAcadLayer_get_ViewportDefault(This,bDefault)	\
    (This)->lpVtbl -> get_ViewportDefault(This,bDefault)

#define IAcadLayer_put_ViewportDefault(This,bDefault)	\
    (This)->lpVtbl -> put_ViewportDefault(This,bDefault)

#define IAcadLayer_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadLayer_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadLayer_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadLayer_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_get_color_Proxy( 
    IAcadLayer * This,
    /* [retval][out] */ AcColor *color);


void __RPC_STUB IAcadLayer_get_color_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_put_color_Proxy( 
    IAcadLayer * This,
    /* [in] */ AcColor color);


void __RPC_STUB IAcadLayer_put_color_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_get_TrueColor_Proxy( 
    IAcadLayer * This,
    /* [retval][out] */ IAcadAcCmColor **pColor);


void __RPC_STUB IAcadLayer_get_TrueColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_put_TrueColor_Proxy( 
    IAcadLayer * This,
    /* [in] */ IAcadAcCmColor *pColor);


void __RPC_STUB IAcadLayer_put_TrueColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_get_Freeze_Proxy( 
    IAcadLayer * This,
    /* [retval][out] */ VARIANT_BOOL *bFreeze);


void __RPC_STUB IAcadLayer_get_Freeze_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_put_Freeze_Proxy( 
    IAcadLayer * This,
    /* [in] */ VARIANT_BOOL bFreeze);


void __RPC_STUB IAcadLayer_put_Freeze_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_get_LayerOn_Proxy( 
    IAcadLayer * This,
    /* [retval][out] */ VARIANT_BOOL *bOn);


void __RPC_STUB IAcadLayer_get_LayerOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_put_LayerOn_Proxy( 
    IAcadLayer * This,
    /* [in] */ VARIANT_BOOL bOn);


void __RPC_STUB IAcadLayer_put_LayerOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_get_Linetype_Proxy( 
    IAcadLayer * This,
    /* [retval][out] */ BSTR *Linetype);


void __RPC_STUB IAcadLayer_get_Linetype_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_put_Linetype_Proxy( 
    IAcadLayer * This,
    /* [in] */ BSTR Linetype);


void __RPC_STUB IAcadLayer_put_Linetype_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_get_Lock_Proxy( 
    IAcadLayer * This,
    /* [retval][out] */ VARIANT_BOOL *Block);


void __RPC_STUB IAcadLayer_get_Lock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_put_Lock_Proxy( 
    IAcadLayer * This,
    /* [in] */ VARIANT_BOOL Block);


void __RPC_STUB IAcadLayer_put_Lock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_get_Name_Proxy( 
    IAcadLayer * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadLayer_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_put_Name_Proxy( 
    IAcadLayer * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadLayer_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_get_Plottable_Proxy( 
    IAcadLayer * This,
    /* [retval][out] */ VARIANT_BOOL *bPlottable);


void __RPC_STUB IAcadLayer_get_Plottable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_put_Plottable_Proxy( 
    IAcadLayer * This,
    /* [in] */ VARIANT_BOOL bPlottable);


void __RPC_STUB IAcadLayer_put_Plottable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_get_ViewportDefault_Proxy( 
    IAcadLayer * This,
    /* [retval][out] */ VARIANT_BOOL *bDefault);


void __RPC_STUB IAcadLayer_get_ViewportDefault_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_put_ViewportDefault_Proxy( 
    IAcadLayer * This,
    /* [in] */ VARIANT_BOOL bDefault);


void __RPC_STUB IAcadLayer_put_ViewportDefault_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_get_PlotStyleName_Proxy( 
    IAcadLayer * This,
    /* [retval][out] */ BSTR *plotStyle);


void __RPC_STUB IAcadLayer_get_PlotStyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_put_PlotStyleName_Proxy( 
    IAcadLayer * This,
    /* [in] */ BSTR plotStyle);


void __RPC_STUB IAcadLayer_put_PlotStyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_get_Lineweight_Proxy( 
    IAcadLayer * This,
    /* [retval][out] */ ACAD_LWEIGHT *Lineweight);


void __RPC_STUB IAcadLayer_get_Lineweight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer_put_Lineweight_Proxy( 
    IAcadLayer * This,
    /* [in] */ ACAD_LWEIGHT Lineweight);


void __RPC_STUB IAcadLayer_put_Lineweight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadLayer_INTERFACE_DEFINED__ */


#ifndef __IAcadLineTypes_INTERFACE_DEFINED__
#define __IAcadLineTypes_INTERFACE_DEFINED__

/* interface IAcadLineTypes */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadLineTypes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("96A72A20-A6C9-470B-AC3D-A0AE3813068A")
    IAcadLineTypes : public IAcadObject
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadLineType **pItem) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadLineType **pLinetype) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Load( 
            /* [in] */ BSTR Name,
            /* [in] */ BSTR FileName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadLineTypesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadLineTypes * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadLineTypes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadLineTypes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadLineTypes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadLineTypes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadLineTypes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadLineTypes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadLineTypes * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadLineTypes * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadLineTypes * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadLineTypes * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadLineTypes * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadLineTypes * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadLineTypes * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadLineTypes * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadLineTypes * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadLineTypes * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadLineTypes * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadLineTypes * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadLineTypes * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadLineTypes * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadLineType **pItem);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadLineTypes * This,
            /* [retval][out] */ long *pCount);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadLineTypes * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IAcadLineTypes * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadLineType **pLinetype);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Load )( 
            IAcadLineTypes * This,
            /* [in] */ BSTR Name,
            /* [in] */ BSTR FileName);
        
        END_INTERFACE
    } IAcadLineTypesVtbl;

    interface IAcadLineTypes
    {
        CONST_VTBL struct IAcadLineTypesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadLineTypes_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadLineTypes_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadLineTypes_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadLineTypes_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadLineTypes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadLineTypes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadLineTypes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadLineTypes_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadLineTypes_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadLineTypes_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadLineTypes_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadLineTypes_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadLineTypes_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadLineTypes_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadLineTypes_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadLineTypes_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadLineTypes_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadLineTypes_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadLineTypes_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadLineTypes_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadLineTypes_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadLineTypes_get_Count(This,pCount)	\
    (This)->lpVtbl -> get_Count(This,pCount)

#define IAcadLineTypes_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadLineTypes_Add(This,Name,pLinetype)	\
    (This)->lpVtbl -> Add(This,Name,pLinetype)

#define IAcadLineTypes_Load(This,Name,FileName)	\
    (This)->lpVtbl -> Load(This,Name,FileName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadLineTypes_Item_Proxy( 
    IAcadLineTypes * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ IAcadLineType **pItem);


void __RPC_STUB IAcadLineTypes_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLineTypes_get_Count_Proxy( 
    IAcadLineTypes * This,
    /* [retval][out] */ long *pCount);


void __RPC_STUB IAcadLineTypes_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLineTypes_get__NewEnum_Proxy( 
    IAcadLineTypes * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IAcadLineTypes_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadLineTypes_Add_Proxy( 
    IAcadLineTypes * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAcadLineType **pLinetype);


void __RPC_STUB IAcadLineTypes_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadLineTypes_Load_Proxy( 
    IAcadLineTypes * This,
    /* [in] */ BSTR Name,
    /* [in] */ BSTR FileName);


void __RPC_STUB IAcadLineTypes_Load_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadLineTypes_INTERFACE_DEFINED__ */


#ifndef __IAcadLineType_INTERFACE_DEFINED__
#define __IAcadLineType_INTERFACE_DEFINED__

/* interface IAcadLineType */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadLineType;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("09006FDC-9BC1-4AB8-93FF-78B7790DD467")
    IAcadLineType : public IAcadObject
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *bstrDes) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ BSTR bstrDes) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bstrName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadLineTypeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadLineType * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadLineType * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadLineType * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadLineType * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadLineType * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadLineType * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadLineType * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadLineType * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadLineType * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadLineType * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadLineType * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadLineType * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadLineType * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadLineType * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadLineType * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadLineType * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadLineType * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadLineType * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadLineType * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadLineType * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IAcadLineType * This,
            /* [retval][out] */ BSTR *bstrDes);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            IAcadLineType * This,
            /* [in] */ BSTR bstrDes);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadLineType * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadLineType * This,
            /* [in] */ BSTR bstrName);
        
        END_INTERFACE
    } IAcadLineTypeVtbl;

    interface IAcadLineType
    {
        CONST_VTBL struct IAcadLineTypeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadLineType_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadLineType_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadLineType_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadLineType_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadLineType_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadLineType_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadLineType_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadLineType_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadLineType_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadLineType_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadLineType_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadLineType_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadLineType_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadLineType_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadLineType_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadLineType_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadLineType_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadLineType_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadLineType_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadLineType_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadLineType_get_Description(This,bstrDes)	\
    (This)->lpVtbl -> get_Description(This,bstrDes)

#define IAcadLineType_put_Description(This,bstrDes)	\
    (This)->lpVtbl -> put_Description(This,bstrDes)

#define IAcadLineType_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadLineType_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLineType_get_Description_Proxy( 
    IAcadLineType * This,
    /* [retval][out] */ BSTR *bstrDes);


void __RPC_STUB IAcadLineType_get_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLineType_put_Description_Proxy( 
    IAcadLineType * This,
    /* [in] */ BSTR bstrDes);


void __RPC_STUB IAcadLineType_put_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLineType_get_Name_Proxy( 
    IAcadLineType * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadLineType_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLineType_put_Name_Proxy( 
    IAcadLineType * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadLineType_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadLineType_INTERFACE_DEFINED__ */


#ifndef __IOdaLineType_INTERFACE_DEFINED__
#define __IOdaLineType_INTERFACE_DEFINED__

/* interface IOdaLineType */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IOdaLineType;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0776DA1A-5050-4e2e-8796-DBC283B7F62A")
    IOdaLineType : public IAcadLineType
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_NumDashes( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_NumDashes( 
            /* [in] */ long Count) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TextAt( 
            /* [in] */ long Index,
            /* [retval][out] */ BSTR *bstrText) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_TextAt( 
            /* [in] */ long Index,
            /* [in] */ BSTR bstrText) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PatternLength( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PatternLength( 
            /* [in] */ double newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DashLengthAt( 
            long Index,
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DashLengthAt( 
            long Index,
            /* [in] */ double newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ShapeScaleAt( 
            long Index,
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ShapeScaleAt( 
            long Index,
            /* [in] */ double newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ShapeNumberAt( 
            long Index,
            /* [retval][out] */ short *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ShapeNumberAt( 
            long Index,
            /* [in] */ short newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ShapeRotationAt( 
            long Index,
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ShapeRotationAt( 
            long Index,
            /* [in] */ double newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ShapeOffsetAt( 
            long Index,
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ShapeOffsetAt( 
            long Index,
            /* [in] */ VARIANT newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ShapeStyleAt( 
            long Index,
            /* [retval][out] */ IAcadTextStyle **pStyle) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ShapeStyleAt( 
            long Index,
            /* [in] */ IAcadTextStyle *pStyle) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOdaLineTypeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IOdaLineType * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IOdaLineType * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IOdaLineType * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IOdaLineType * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IOdaLineType * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IOdaLineType * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IOdaLineType * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IOdaLineType * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IOdaLineType * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IOdaLineType * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IOdaLineType * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IOdaLineType * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IOdaLineType * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IOdaLineType * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IOdaLineType * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IOdaLineType * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IOdaLineType * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IOdaLineType * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IOdaLineType * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IOdaLineType * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IOdaLineType * This,
            /* [retval][out] */ BSTR *bstrDes);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            IOdaLineType * This,
            /* [in] */ BSTR bstrDes);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IOdaLineType * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IOdaLineType * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDashes )( 
            IOdaLineType * This,
            /* [retval][out] */ long *Count);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_NumDashes )( 
            IOdaLineType * This,
            /* [in] */ long Count);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextAt )( 
            IOdaLineType * This,
            /* [in] */ long Index,
            /* [retval][out] */ BSTR *bstrText);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextAt )( 
            IOdaLineType * This,
            /* [in] */ long Index,
            /* [in] */ BSTR bstrText);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PatternLength )( 
            IOdaLineType * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PatternLength )( 
            IOdaLineType * This,
            /* [in] */ double newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DashLengthAt )( 
            IOdaLineType * This,
            long Index,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DashLengthAt )( 
            IOdaLineType * This,
            long Index,
            /* [in] */ double newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShapeScaleAt )( 
            IOdaLineType * This,
            long Index,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShapeScaleAt )( 
            IOdaLineType * This,
            long Index,
            /* [in] */ double newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShapeNumberAt )( 
            IOdaLineType * This,
            long Index,
            /* [retval][out] */ short *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShapeNumberAt )( 
            IOdaLineType * This,
            long Index,
            /* [in] */ short newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShapeRotationAt )( 
            IOdaLineType * This,
            long Index,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShapeRotationAt )( 
            IOdaLineType * This,
            long Index,
            /* [in] */ double newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShapeOffsetAt )( 
            IOdaLineType * This,
            long Index,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShapeOffsetAt )( 
            IOdaLineType * This,
            long Index,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShapeStyleAt )( 
            IOdaLineType * This,
            long Index,
            /* [retval][out] */ IAcadTextStyle **pStyle);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShapeStyleAt )( 
            IOdaLineType * This,
            long Index,
            /* [in] */ IAcadTextStyle *pStyle);
        
        END_INTERFACE
    } IOdaLineTypeVtbl;

    interface IOdaLineType
    {
        CONST_VTBL struct IOdaLineTypeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOdaLineType_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IOdaLineType_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IOdaLineType_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IOdaLineType_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IOdaLineType_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IOdaLineType_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IOdaLineType_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IOdaLineType_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IOdaLineType_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IOdaLineType_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IOdaLineType_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IOdaLineType_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IOdaLineType_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IOdaLineType_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IOdaLineType_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IOdaLineType_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IOdaLineType_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IOdaLineType_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IOdaLineType_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IOdaLineType_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IOdaLineType_get_Description(This,bstrDes)	\
    (This)->lpVtbl -> get_Description(This,bstrDes)

#define IOdaLineType_put_Description(This,bstrDes)	\
    (This)->lpVtbl -> put_Description(This,bstrDes)

#define IOdaLineType_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IOdaLineType_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)


#define IOdaLineType_get_NumDashes(This,Count)	\
    (This)->lpVtbl -> get_NumDashes(This,Count)

#define IOdaLineType_put_NumDashes(This,Count)	\
    (This)->lpVtbl -> put_NumDashes(This,Count)

#define IOdaLineType_get_TextAt(This,Index,bstrText)	\
    (This)->lpVtbl -> get_TextAt(This,Index,bstrText)

#define IOdaLineType_put_TextAt(This,Index,bstrText)	\
    (This)->lpVtbl -> put_TextAt(This,Index,bstrText)

#define IOdaLineType_get_PatternLength(This,pVal)	\
    (This)->lpVtbl -> get_PatternLength(This,pVal)

#define IOdaLineType_put_PatternLength(This,newVal)	\
    (This)->lpVtbl -> put_PatternLength(This,newVal)

#define IOdaLineType_get_DashLengthAt(This,Index,pVal)	\
    (This)->lpVtbl -> get_DashLengthAt(This,Index,pVal)

#define IOdaLineType_put_DashLengthAt(This,Index,newVal)	\
    (This)->lpVtbl -> put_DashLengthAt(This,Index,newVal)

#define IOdaLineType_get_ShapeScaleAt(This,Index,pVal)	\
    (This)->lpVtbl -> get_ShapeScaleAt(This,Index,pVal)

#define IOdaLineType_put_ShapeScaleAt(This,Index,newVal)	\
    (This)->lpVtbl -> put_ShapeScaleAt(This,Index,newVal)

#define IOdaLineType_get_ShapeNumberAt(This,Index,pVal)	\
    (This)->lpVtbl -> get_ShapeNumberAt(This,Index,pVal)

#define IOdaLineType_put_ShapeNumberAt(This,Index,newVal)	\
    (This)->lpVtbl -> put_ShapeNumberAt(This,Index,newVal)

#define IOdaLineType_get_ShapeRotationAt(This,Index,pVal)	\
    (This)->lpVtbl -> get_ShapeRotationAt(This,Index,pVal)

#define IOdaLineType_put_ShapeRotationAt(This,Index,newVal)	\
    (This)->lpVtbl -> put_ShapeRotationAt(This,Index,newVal)

#define IOdaLineType_get_ShapeOffsetAt(This,Index,pVal)	\
    (This)->lpVtbl -> get_ShapeOffsetAt(This,Index,pVal)

#define IOdaLineType_put_ShapeOffsetAt(This,Index,newVal)	\
    (This)->lpVtbl -> put_ShapeOffsetAt(This,Index,newVal)

#define IOdaLineType_get_ShapeStyleAt(This,Index,pStyle)	\
    (This)->lpVtbl -> get_ShapeStyleAt(This,Index,pStyle)

#define IOdaLineType_put_ShapeStyleAt(This,Index,pStyle)	\
    (This)->lpVtbl -> put_ShapeStyleAt(This,Index,pStyle)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaLineType_get_NumDashes_Proxy( 
    IOdaLineType * This,
    /* [retval][out] */ long *Count);


void __RPC_STUB IOdaLineType_get_NumDashes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaLineType_put_NumDashes_Proxy( 
    IOdaLineType * This,
    /* [in] */ long Count);


void __RPC_STUB IOdaLineType_put_NumDashes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaLineType_get_TextAt_Proxy( 
    IOdaLineType * This,
    /* [in] */ long Index,
    /* [retval][out] */ BSTR *bstrText);


void __RPC_STUB IOdaLineType_get_TextAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaLineType_put_TextAt_Proxy( 
    IOdaLineType * This,
    /* [in] */ long Index,
    /* [in] */ BSTR bstrText);


void __RPC_STUB IOdaLineType_put_TextAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaLineType_get_PatternLength_Proxy( 
    IOdaLineType * This,
    /* [retval][out] */ double *pVal);


void __RPC_STUB IOdaLineType_get_PatternLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaLineType_put_PatternLength_Proxy( 
    IOdaLineType * This,
    /* [in] */ double newVal);


void __RPC_STUB IOdaLineType_put_PatternLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaLineType_get_DashLengthAt_Proxy( 
    IOdaLineType * This,
    long Index,
    /* [retval][out] */ double *pVal);


void __RPC_STUB IOdaLineType_get_DashLengthAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaLineType_put_DashLengthAt_Proxy( 
    IOdaLineType * This,
    long Index,
    /* [in] */ double newVal);


void __RPC_STUB IOdaLineType_put_DashLengthAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaLineType_get_ShapeScaleAt_Proxy( 
    IOdaLineType * This,
    long Index,
    /* [retval][out] */ double *pVal);


void __RPC_STUB IOdaLineType_get_ShapeScaleAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaLineType_put_ShapeScaleAt_Proxy( 
    IOdaLineType * This,
    long Index,
    /* [in] */ double newVal);


void __RPC_STUB IOdaLineType_put_ShapeScaleAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaLineType_get_ShapeNumberAt_Proxy( 
    IOdaLineType * This,
    long Index,
    /* [retval][out] */ short *pVal);


void __RPC_STUB IOdaLineType_get_ShapeNumberAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaLineType_put_ShapeNumberAt_Proxy( 
    IOdaLineType * This,
    long Index,
    /* [in] */ short newVal);


void __RPC_STUB IOdaLineType_put_ShapeNumberAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaLineType_get_ShapeRotationAt_Proxy( 
    IOdaLineType * This,
    long Index,
    /* [retval][out] */ double *pVal);


void __RPC_STUB IOdaLineType_get_ShapeRotationAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaLineType_put_ShapeRotationAt_Proxy( 
    IOdaLineType * This,
    long Index,
    /* [in] */ double newVal);


void __RPC_STUB IOdaLineType_put_ShapeRotationAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaLineType_get_ShapeOffsetAt_Proxy( 
    IOdaLineType * This,
    long Index,
    /* [retval][out] */ VARIANT *pVal);


void __RPC_STUB IOdaLineType_get_ShapeOffsetAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaLineType_put_ShapeOffsetAt_Proxy( 
    IOdaLineType * This,
    long Index,
    /* [in] */ VARIANT newVal);


void __RPC_STUB IOdaLineType_put_ShapeOffsetAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaLineType_get_ShapeStyleAt_Proxy( 
    IOdaLineType * This,
    long Index,
    /* [retval][out] */ IAcadTextStyle **pStyle);


void __RPC_STUB IOdaLineType_get_ShapeStyleAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaLineType_put_ShapeStyleAt_Proxy( 
    IOdaLineType * This,
    long Index,
    /* [in] */ IAcadTextStyle *pStyle);


void __RPC_STUB IOdaLineType_put_ShapeStyleAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IOdaLineType_INTERFACE_DEFINED__ */


#ifndef __IAcadDictionaries_INTERFACE_DEFINED__
#define __IAcadDictionaries_INTERFACE_DEFINED__

/* interface IAcadDictionaries */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadDictionaries;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C13C2C5E-671C-4674-A602-ECC41FEF21F7")
    IAcadDictionaries : public IAcadObject
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadObject **pItem) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadDictionary **pDimStyle) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadDictionariesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadDictionaries * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadDictionaries * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadDictionaries * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadDictionaries * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadDictionaries * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadDictionaries * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadDictionaries * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadDictionaries * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadDictionaries * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadDictionaries * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadDictionaries * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadDictionaries * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadDictionaries * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadDictionaries * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadDictionaries * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadDictionaries * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadDictionaries * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadDictionaries * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadDictionaries * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadDictionaries * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadDictionaries * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadObject **pItem);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadDictionaries * This,
            /* [retval][out] */ long *pCount);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadDictionaries * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IAcadDictionaries * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadDictionary **pDimStyle);
        
        END_INTERFACE
    } IAcadDictionariesVtbl;

    interface IAcadDictionaries
    {
        CONST_VTBL struct IAcadDictionariesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadDictionaries_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadDictionaries_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadDictionaries_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadDictionaries_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadDictionaries_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadDictionaries_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadDictionaries_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadDictionaries_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadDictionaries_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadDictionaries_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadDictionaries_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadDictionaries_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadDictionaries_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadDictionaries_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadDictionaries_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadDictionaries_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadDictionaries_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadDictionaries_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadDictionaries_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadDictionaries_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadDictionaries_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadDictionaries_get_Count(This,pCount)	\
    (This)->lpVtbl -> get_Count(This,pCount)

#define IAcadDictionaries_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadDictionaries_Add(This,Name,pDimStyle)	\
    (This)->lpVtbl -> Add(This,Name,pDimStyle)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadDictionaries_Item_Proxy( 
    IAcadDictionaries * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ IAcadObject **pItem);


void __RPC_STUB IAcadDictionaries_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDictionaries_get_Count_Proxy( 
    IAcadDictionaries * This,
    /* [retval][out] */ long *pCount);


void __RPC_STUB IAcadDictionaries_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDictionaries_get__NewEnum_Proxy( 
    IAcadDictionaries * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IAcadDictionaries_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadDictionaries_Add_Proxy( 
    IAcadDictionaries * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAcadDictionary **pDimStyle);


void __RPC_STUB IAcadDictionaries_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadDictionaries_INTERFACE_DEFINED__ */


#ifndef __IAcadDictionary_INTERFACE_DEFINED__
#define __IAcadDictionary_INTERFACE_DEFINED__

/* interface IAcadDictionary */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadDictionary;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1B67BDA6-499E-44D5-B839-B60A141D6CCD")
    IAcadDictionary : public IAcadObject
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddObject( 
            /* [in] */ BSTR Keyword,
            /* [in] */ BSTR ObjectName,
            /* [retval][out] */ IAcadObject **pNewObj) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetName( 
            /* [in] */ IAcadObject *Object,
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetObject( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadObject **pObj) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadObject **pObj) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Rename( 
            /* [in] */ BSTR OldName,
            /* [in] */ BSTR NewName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Replace( 
            /* [in] */ BSTR OldName,
            /* [in] */ IAcadObject *pObj) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadObject **pItem) = 0;
        
        virtual /* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddXRecord( 
            /* [in] */ BSTR Keyword,
            /* [retval][out] */ IAcadXRecord **pNewXRecord) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadDictionaryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadDictionary * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadDictionary * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadDictionary * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadDictionary * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadDictionary * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadDictionary * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadDictionary * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadDictionary * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadDictionary * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadDictionary * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadDictionary * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadDictionary * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadDictionary * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadDictionary * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadDictionary * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadDictionary * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadDictionary * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadDictionary * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadDictionary * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadDictionary * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadDictionary * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadDictionary * This,
            /* [in] */ BSTR pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddObject )( 
            IAcadDictionary * This,
            /* [in] */ BSTR Keyword,
            /* [in] */ BSTR ObjectName,
            /* [retval][out] */ IAcadObject **pNewObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetName )( 
            IAcadDictionary * This,
            /* [in] */ IAcadObject *Object,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetObject )( 
            IAcadDictionary * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadObject **pObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IAcadDictionary * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadObject **pObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rename )( 
            IAcadDictionary * This,
            /* [in] */ BSTR OldName,
            /* [in] */ BSTR NewName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Replace )( 
            IAcadDictionary * This,
            /* [in] */ BSTR OldName,
            /* [in] */ IAcadObject *pObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadDictionary * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadObject **pItem);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadDictionary * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadDictionary * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddXRecord )( 
            IAcadDictionary * This,
            /* [in] */ BSTR Keyword,
            /* [retval][out] */ IAcadXRecord **pNewXRecord);
        
        END_INTERFACE
    } IAcadDictionaryVtbl;

    interface IAcadDictionary
    {
        CONST_VTBL struct IAcadDictionaryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadDictionary_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadDictionary_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadDictionary_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadDictionary_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadDictionary_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadDictionary_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadDictionary_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadDictionary_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadDictionary_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadDictionary_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadDictionary_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadDictionary_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadDictionary_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadDictionary_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadDictionary_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadDictionary_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadDictionary_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadDictionary_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadDictionary_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadDictionary_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadDictionary_get_Name(This,pVal)	\
    (This)->lpVtbl -> get_Name(This,pVal)

#define IAcadDictionary_put_Name(This,pVal)	\
    (This)->lpVtbl -> put_Name(This,pVal)

#define IAcadDictionary_AddObject(This,Keyword,ObjectName,pNewObj)	\
    (This)->lpVtbl -> AddObject(This,Keyword,ObjectName,pNewObj)

#define IAcadDictionary_GetName(This,Object,bstrName)	\
    (This)->lpVtbl -> GetName(This,Object,bstrName)

#define IAcadDictionary_GetObject(This,Name,pObj)	\
    (This)->lpVtbl -> GetObject(This,Name,pObj)

#define IAcadDictionary_Remove(This,Name,pObj)	\
    (This)->lpVtbl -> Remove(This,Name,pObj)

#define IAcadDictionary_Rename(This,OldName,NewName)	\
    (This)->lpVtbl -> Rename(This,OldName,NewName)

#define IAcadDictionary_Replace(This,OldName,pObj)	\
    (This)->lpVtbl -> Replace(This,OldName,pObj)

#define IAcadDictionary_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadDictionary_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadDictionary_get_Count(This,pVal)	\
    (This)->lpVtbl -> get_Count(This,pVal)

#define IAcadDictionary_AddXRecord(This,Keyword,pNewXRecord)	\
    (This)->lpVtbl -> AddXRecord(This,Keyword,pNewXRecord)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDictionary_get_Name_Proxy( 
    IAcadDictionary * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IAcadDictionary_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDictionary_put_Name_Proxy( 
    IAcadDictionary * This,
    /* [in] */ BSTR pVal);


void __RPC_STUB IAcadDictionary_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadDictionary_AddObject_Proxy( 
    IAcadDictionary * This,
    /* [in] */ BSTR Keyword,
    /* [in] */ BSTR ObjectName,
    /* [retval][out] */ IAcadObject **pNewObj);


void __RPC_STUB IAcadDictionary_AddObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadDictionary_GetName_Proxy( 
    IAcadDictionary * This,
    /* [in] */ IAcadObject *Object,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadDictionary_GetName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadDictionary_GetObject_Proxy( 
    IAcadDictionary * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAcadObject **pObj);


void __RPC_STUB IAcadDictionary_GetObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadDictionary_Remove_Proxy( 
    IAcadDictionary * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAcadObject **pObj);


void __RPC_STUB IAcadDictionary_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadDictionary_Rename_Proxy( 
    IAcadDictionary * This,
    /* [in] */ BSTR OldName,
    /* [in] */ BSTR NewName);


void __RPC_STUB IAcadDictionary_Rename_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadDictionary_Replace_Proxy( 
    IAcadDictionary * This,
    /* [in] */ BSTR OldName,
    /* [in] */ IAcadObject *pObj);


void __RPC_STUB IAcadDictionary_Replace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadDictionary_Item_Proxy( 
    IAcadDictionary * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ IAcadObject **pItem);


void __RPC_STUB IAcadDictionary_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDictionary_get__NewEnum_Proxy( 
    IAcadDictionary * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IAcadDictionary_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDictionary_get_Count_Proxy( 
    IAcadDictionary * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IAcadDictionary_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadDictionary_AddXRecord_Proxy( 
    IAcadDictionary * This,
    /* [in] */ BSTR Keyword,
    /* [retval][out] */ IAcadXRecord **pNewXRecord);


void __RPC_STUB IAcadDictionary_AddXRecord_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadDictionary_INTERFACE_DEFINED__ */


#ifndef __IAcadXRecord_INTERFACE_DEFINED__
#define __IAcadXRecord_INTERFACE_DEFINED__

/* interface IAcadXRecord */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadXRecord;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A90A35E1-D3D9-4254-BDB6-4A1DEDAF6054")
    IAcadXRecord : public IAcadObject
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetXRecordData( 
            /* [out] */ VARIANT *XRecordDataType,
            /* [out] */ VARIANT *XRecordDataValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetXRecordData( 
            /* [in] */ VARIANT XRecordDataType,
            /* [in] */ VARIANT XRecordDataValue) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TranslateIDs( 
            /* [retval][out] */ VARIANT_BOOL *xlateIds) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TranslateIDs( 
            /* [in] */ VARIANT_BOOL xlateIds) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadXRecordVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadXRecord * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadXRecord * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadXRecord * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadXRecord * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadXRecord * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadXRecord * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadXRecord * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadXRecord * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadXRecord * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadXRecord * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadXRecord * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadXRecord * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadXRecord * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadXRecord * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadXRecord * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadXRecord * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadXRecord * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadXRecord * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadXRecord * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadXRecord * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadXRecord * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadXRecord * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXRecordData )( 
            IAcadXRecord * This,
            /* [out] */ VARIANT *XRecordDataType,
            /* [out] */ VARIANT *XRecordDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXRecordData )( 
            IAcadXRecord * This,
            /* [in] */ VARIANT XRecordDataType,
            /* [in] */ VARIANT XRecordDataValue);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TranslateIDs )( 
            IAcadXRecord * This,
            /* [retval][out] */ VARIANT_BOOL *xlateIds);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TranslateIDs )( 
            IAcadXRecord * This,
            /* [in] */ VARIANT_BOOL xlateIds);
        
        END_INTERFACE
    } IAcadXRecordVtbl;

    interface IAcadXRecord
    {
        CONST_VTBL struct IAcadXRecordVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadXRecord_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadXRecord_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadXRecord_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadXRecord_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadXRecord_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadXRecord_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadXRecord_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadXRecord_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadXRecord_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadXRecord_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadXRecord_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadXRecord_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadXRecord_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadXRecord_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadXRecord_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadXRecord_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadXRecord_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadXRecord_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadXRecord_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadXRecord_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadXRecord_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadXRecord_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#define IAcadXRecord_GetXRecordData(This,XRecordDataType,XRecordDataValue)	\
    (This)->lpVtbl -> GetXRecordData(This,XRecordDataType,XRecordDataValue)

#define IAcadXRecord_SetXRecordData(This,XRecordDataType,XRecordDataValue)	\
    (This)->lpVtbl -> SetXRecordData(This,XRecordDataType,XRecordDataValue)

#define IAcadXRecord_get_TranslateIDs(This,xlateIds)	\
    (This)->lpVtbl -> get_TranslateIDs(This,xlateIds)

#define IAcadXRecord_put_TranslateIDs(This,xlateIds)	\
    (This)->lpVtbl -> put_TranslateIDs(This,xlateIds)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadXRecord_get_Name_Proxy( 
    IAcadXRecord * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadXRecord_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadXRecord_put_Name_Proxy( 
    IAcadXRecord * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadXRecord_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadXRecord_GetXRecordData_Proxy( 
    IAcadXRecord * This,
    /* [out] */ VARIANT *XRecordDataType,
    /* [out] */ VARIANT *XRecordDataValue);


void __RPC_STUB IAcadXRecord_GetXRecordData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadXRecord_SetXRecordData_Proxy( 
    IAcadXRecord * This,
    /* [in] */ VARIANT XRecordDataType,
    /* [in] */ VARIANT XRecordDataValue);


void __RPC_STUB IAcadXRecord_SetXRecordData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadXRecord_get_TranslateIDs_Proxy( 
    IAcadXRecord * This,
    /* [retval][out] */ VARIANT_BOOL *xlateIds);


void __RPC_STUB IAcadXRecord_get_TranslateIDs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadXRecord_put_TranslateIDs_Proxy( 
    IAcadXRecord * This,
    /* [in] */ VARIANT_BOOL xlateIds);


void __RPC_STUB IAcadXRecord_put_TranslateIDs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadXRecord_INTERFACE_DEFINED__ */


#ifndef __IAcadRegisteredApplications_INTERFACE_DEFINED__
#define __IAcadRegisteredApplications_INTERFACE_DEFINED__

/* interface IAcadRegisteredApplications */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadRegisteredApplications;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("801CC2FA-39B3-4846-8E23-7D4404426F84")
    IAcadRegisteredApplications : public IAcadObject
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadRegisteredApplication **pItem) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadRegisteredApplication **pRegApp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadRegisteredApplicationsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadRegisteredApplications * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadRegisteredApplications * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadRegisteredApplications * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadRegisteredApplications * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadRegisteredApplications * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadRegisteredApplications * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadRegisteredApplications * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadRegisteredApplications * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadRegisteredApplications * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadRegisteredApplications * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadRegisteredApplications * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadRegisteredApplications * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadRegisteredApplications * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadRegisteredApplications * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadRegisteredApplications * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadRegisteredApplications * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadRegisteredApplications * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadRegisteredApplications * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadRegisteredApplications * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadRegisteredApplications * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadRegisteredApplications * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadRegisteredApplication **pItem);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadRegisteredApplications * This,
            /* [retval][out] */ long *pCount);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadRegisteredApplications * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IAcadRegisteredApplications * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadRegisteredApplication **pRegApp);
        
        END_INTERFACE
    } IAcadRegisteredApplicationsVtbl;

    interface IAcadRegisteredApplications
    {
        CONST_VTBL struct IAcadRegisteredApplicationsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadRegisteredApplications_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadRegisteredApplications_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadRegisteredApplications_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadRegisteredApplications_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadRegisteredApplications_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadRegisteredApplications_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadRegisteredApplications_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadRegisteredApplications_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadRegisteredApplications_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadRegisteredApplications_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadRegisteredApplications_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadRegisteredApplications_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadRegisteredApplications_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadRegisteredApplications_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadRegisteredApplications_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadRegisteredApplications_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadRegisteredApplications_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadRegisteredApplications_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadRegisteredApplications_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadRegisteredApplications_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadRegisteredApplications_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadRegisteredApplications_get_Count(This,pCount)	\
    (This)->lpVtbl -> get_Count(This,pCount)

#define IAcadRegisteredApplications_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadRegisteredApplications_Add(This,Name,pRegApp)	\
    (This)->lpVtbl -> Add(This,Name,pRegApp)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadRegisteredApplications_Item_Proxy( 
    IAcadRegisteredApplications * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ IAcadRegisteredApplication **pItem);


void __RPC_STUB IAcadRegisteredApplications_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRegisteredApplications_get_Count_Proxy( 
    IAcadRegisteredApplications * This,
    /* [retval][out] */ long *pCount);


void __RPC_STUB IAcadRegisteredApplications_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRegisteredApplications_get__NewEnum_Proxy( 
    IAcadRegisteredApplications * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IAcadRegisteredApplications_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadRegisteredApplications_Add_Proxy( 
    IAcadRegisteredApplications * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAcadRegisteredApplication **pRegApp);


void __RPC_STUB IAcadRegisteredApplications_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadRegisteredApplications_INTERFACE_DEFINED__ */


#ifndef __IAcadRegisteredApplication_INTERFACE_DEFINED__
#define __IAcadRegisteredApplication_INTERFACE_DEFINED__

/* interface IAcadRegisteredApplication */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadRegisteredApplication;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("55C46AC7-115F-4C53-B569-6A6A033B66A7")
    IAcadRegisteredApplication : public IAcadObject
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bstrName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadRegisteredApplicationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadRegisteredApplication * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadRegisteredApplication * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadRegisteredApplication * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadRegisteredApplication * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadRegisteredApplication * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadRegisteredApplication * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadRegisteredApplication * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadRegisteredApplication * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadRegisteredApplication * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadRegisteredApplication * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadRegisteredApplication * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadRegisteredApplication * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadRegisteredApplication * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadRegisteredApplication * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadRegisteredApplication * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadRegisteredApplication * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadRegisteredApplication * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadRegisteredApplication * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadRegisteredApplication * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadRegisteredApplication * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadRegisteredApplication * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadRegisteredApplication * This,
            /* [in] */ BSTR bstrName);
        
        END_INTERFACE
    } IAcadRegisteredApplicationVtbl;

    interface IAcadRegisteredApplication
    {
        CONST_VTBL struct IAcadRegisteredApplicationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadRegisteredApplication_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadRegisteredApplication_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadRegisteredApplication_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadRegisteredApplication_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadRegisteredApplication_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadRegisteredApplication_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadRegisteredApplication_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadRegisteredApplication_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadRegisteredApplication_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadRegisteredApplication_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadRegisteredApplication_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadRegisteredApplication_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadRegisteredApplication_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadRegisteredApplication_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadRegisteredApplication_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadRegisteredApplication_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadRegisteredApplication_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadRegisteredApplication_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadRegisteredApplication_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadRegisteredApplication_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadRegisteredApplication_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadRegisteredApplication_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadRegisteredApplication_get_Name_Proxy( 
    IAcadRegisteredApplication * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadRegisteredApplication_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadRegisteredApplication_put_Name_Proxy( 
    IAcadRegisteredApplication * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadRegisteredApplication_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadRegisteredApplication_INTERFACE_DEFINED__ */


#ifndef __IAcadTextStyles_INTERFACE_DEFINED__
#define __IAcadTextStyles_INTERFACE_DEFINED__

/* interface IAcadTextStyles */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadTextStyles;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0D40004A-B71D-40B3-9C87-3C98427B9D39")
    IAcadTextStyles : public IAcadObject
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadTextStyle **pItem) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadTextStyle **pTextStyle) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadTextStylesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadTextStyles * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadTextStyles * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadTextStyles * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadTextStyles * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadTextStyles * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadTextStyles * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadTextStyles * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadTextStyles * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadTextStyles * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadTextStyles * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadTextStyles * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadTextStyles * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadTextStyles * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadTextStyles * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadTextStyles * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadTextStyles * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadTextStyles * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadTextStyles * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadTextStyles * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadTextStyles * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadTextStyles * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadTextStyle **pItem);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadTextStyles * This,
            /* [retval][out] */ long *pCount);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadTextStyles * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IAcadTextStyles * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadTextStyle **pTextStyle);
        
        END_INTERFACE
    } IAcadTextStylesVtbl;

    interface IAcadTextStyles
    {
        CONST_VTBL struct IAcadTextStylesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadTextStyles_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadTextStyles_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadTextStyles_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadTextStyles_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadTextStyles_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadTextStyles_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadTextStyles_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadTextStyles_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadTextStyles_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadTextStyles_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadTextStyles_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadTextStyles_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadTextStyles_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadTextStyles_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadTextStyles_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadTextStyles_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadTextStyles_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadTextStyles_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadTextStyles_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadTextStyles_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadTextStyles_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadTextStyles_get_Count(This,pCount)	\
    (This)->lpVtbl -> get_Count(This,pCount)

#define IAcadTextStyles_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadTextStyles_Add(This,Name,pTextStyle)	\
    (This)->lpVtbl -> Add(This,Name,pTextStyle)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyles_Item_Proxy( 
    IAcadTextStyles * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ IAcadTextStyle **pItem);


void __RPC_STUB IAcadTextStyles_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyles_get_Count_Proxy( 
    IAcadTextStyles * This,
    /* [retval][out] */ long *pCount);


void __RPC_STUB IAcadTextStyles_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyles_get__NewEnum_Proxy( 
    IAcadTextStyles * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IAcadTextStyles_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyles_Add_Proxy( 
    IAcadTextStyles * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAcadTextStyle **pTextStyle);


void __RPC_STUB IAcadTextStyles_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadTextStyles_INTERFACE_DEFINED__ */


#ifndef __IAcadTextStyle_INTERFACE_DEFINED__
#define __IAcadTextStyle_INTERFACE_DEFINED__

/* interface IAcadTextStyle */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadTextStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3B272FDC-C510-44FC-B4F5-C2B2751B8DAA")
    IAcadTextStyle : public IAcadObject
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_BigFontFile( 
            /* [retval][out] */ BSTR *fontFile) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_BigFontFile( 
            /* [in] */ BSTR fontFile) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_fontFile( 
            /* [retval][out] */ BSTR *fontFile) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_fontFile( 
            /* [in] */ BSTR fontFile) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *Height) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastHeight( 
            /* [retval][out] */ double *Height) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LastHeight( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ObliqueAngle( 
            /* [retval][out] */ ACAD_ANGLE *obliAngle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ObliqueAngle( 
            /* [in] */ ACAD_ANGLE obliAngle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextGenerationFlag( 
            /* [retval][out] */ long *textGenFlag) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextGenerationFlag( 
            /* [in] */ long textGenFlag) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ double *Width) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ double Width) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetFont( 
            /* [out] */ BSTR *TypeFace,
            /* [out] */ VARIANT_BOOL *Bold,
            /* [out] */ VARIANT_BOOL *Italic,
            /* [out] */ long *Charset,
            /* [out] */ long *PitchAndFamily) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetFont( 
            /* [in] */ BSTR TypeFace,
            /* [in] */ VARIANT_BOOL Bold,
            /* [in] */ VARIANT_BOOL Italic,
            /* [in] */ long Charset,
            /* [in] */ long PitchAndFamily) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadTextStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadTextStyle * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadTextStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadTextStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadTextStyle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadTextStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadTextStyle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadTextStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadTextStyle * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadTextStyle * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadTextStyle * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadTextStyle * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadTextStyle * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadTextStyle * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadTextStyle * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadTextStyle * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadTextStyle * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadTextStyle * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadTextStyle * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadTextStyle * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadTextStyle * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BigFontFile )( 
            IAcadTextStyle * This,
            /* [retval][out] */ BSTR *fontFile);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BigFontFile )( 
            IAcadTextStyle * This,
            /* [in] */ BSTR fontFile);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_fontFile )( 
            IAcadTextStyle * This,
            /* [retval][out] */ BSTR *fontFile);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_fontFile )( 
            IAcadTextStyle * This,
            /* [in] */ BSTR fontFile);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IAcadTextStyle * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IAcadTextStyle * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastHeight )( 
            IAcadTextStyle * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LastHeight )( 
            IAcadTextStyle * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadTextStyle * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObliqueAngle )( 
            IAcadTextStyle * This,
            /* [retval][out] */ ACAD_ANGLE *obliAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ObliqueAngle )( 
            IAcadTextStyle * This,
            /* [in] */ ACAD_ANGLE obliAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextGenerationFlag )( 
            IAcadTextStyle * This,
            /* [retval][out] */ long *textGenFlag);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextGenerationFlag )( 
            IAcadTextStyle * This,
            /* [in] */ long textGenFlag);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IAcadTextStyle * This,
            /* [retval][out] */ double *Width);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            IAcadTextStyle * This,
            /* [in] */ double Width);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetFont )( 
            IAcadTextStyle * This,
            /* [out] */ BSTR *TypeFace,
            /* [out] */ VARIANT_BOOL *Bold,
            /* [out] */ VARIANT_BOOL *Italic,
            /* [out] */ long *Charset,
            /* [out] */ long *PitchAndFamily);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetFont )( 
            IAcadTextStyle * This,
            /* [in] */ BSTR TypeFace,
            /* [in] */ VARIANT_BOOL Bold,
            /* [in] */ VARIANT_BOOL Italic,
            /* [in] */ long Charset,
            /* [in] */ long PitchAndFamily);
        
        END_INTERFACE
    } IAcadTextStyleVtbl;

    interface IAcadTextStyle
    {
        CONST_VTBL struct IAcadTextStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadTextStyle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadTextStyle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadTextStyle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadTextStyle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadTextStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadTextStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadTextStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadTextStyle_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadTextStyle_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadTextStyle_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadTextStyle_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadTextStyle_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadTextStyle_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadTextStyle_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadTextStyle_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadTextStyle_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadTextStyle_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadTextStyle_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadTextStyle_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadTextStyle_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadTextStyle_get_BigFontFile(This,fontFile)	\
    (This)->lpVtbl -> get_BigFontFile(This,fontFile)

#define IAcadTextStyle_put_BigFontFile(This,fontFile)	\
    (This)->lpVtbl -> put_BigFontFile(This,fontFile)

#define IAcadTextStyle_get_fontFile(This,fontFile)	\
    (This)->lpVtbl -> get_fontFile(This,fontFile)

#define IAcadTextStyle_put_fontFile(This,fontFile)	\
    (This)->lpVtbl -> put_fontFile(This,fontFile)

#define IAcadTextStyle_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAcadTextStyle_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAcadTextStyle_get_LastHeight(This,Height)	\
    (This)->lpVtbl -> get_LastHeight(This,Height)

#define IAcadTextStyle_put_LastHeight(This,Height)	\
    (This)->lpVtbl -> put_LastHeight(This,Height)

#define IAcadTextStyle_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadTextStyle_get_ObliqueAngle(This,obliAngle)	\
    (This)->lpVtbl -> get_ObliqueAngle(This,obliAngle)

#define IAcadTextStyle_put_ObliqueAngle(This,obliAngle)	\
    (This)->lpVtbl -> put_ObliqueAngle(This,obliAngle)

#define IAcadTextStyle_get_TextGenerationFlag(This,textGenFlag)	\
    (This)->lpVtbl -> get_TextGenerationFlag(This,textGenFlag)

#define IAcadTextStyle_put_TextGenerationFlag(This,textGenFlag)	\
    (This)->lpVtbl -> put_TextGenerationFlag(This,textGenFlag)

#define IAcadTextStyle_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAcadTextStyle_put_Width(This,Width)	\
    (This)->lpVtbl -> put_Width(This,Width)

#define IAcadTextStyle_GetFont(This,TypeFace,Bold,Italic,Charset,PitchAndFamily)	\
    (This)->lpVtbl -> GetFont(This,TypeFace,Bold,Italic,Charset,PitchAndFamily)

#define IAcadTextStyle_SetFont(This,TypeFace,Bold,Italic,Charset,PitchAndFamily)	\
    (This)->lpVtbl -> SetFont(This,TypeFace,Bold,Italic,Charset,PitchAndFamily)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyle_get_BigFontFile_Proxy( 
    IAcadTextStyle * This,
    /* [retval][out] */ BSTR *fontFile);


void __RPC_STUB IAcadTextStyle_get_BigFontFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyle_put_BigFontFile_Proxy( 
    IAcadTextStyle * This,
    /* [in] */ BSTR fontFile);


void __RPC_STUB IAcadTextStyle_put_BigFontFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyle_get_fontFile_Proxy( 
    IAcadTextStyle * This,
    /* [retval][out] */ BSTR *fontFile);


void __RPC_STUB IAcadTextStyle_get_fontFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyle_put_fontFile_Proxy( 
    IAcadTextStyle * This,
    /* [in] */ BSTR fontFile);


void __RPC_STUB IAcadTextStyle_put_fontFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyle_get_Height_Proxy( 
    IAcadTextStyle * This,
    /* [retval][out] */ double *Height);


void __RPC_STUB IAcadTextStyle_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyle_put_Height_Proxy( 
    IAcadTextStyle * This,
    /* [in] */ double Height);


void __RPC_STUB IAcadTextStyle_put_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyle_get_LastHeight_Proxy( 
    IAcadTextStyle * This,
    /* [retval][out] */ double *Height);


void __RPC_STUB IAcadTextStyle_get_LastHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyle_put_LastHeight_Proxy( 
    IAcadTextStyle * This,
    /* [in] */ double Height);


void __RPC_STUB IAcadTextStyle_put_LastHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyle_get_Name_Proxy( 
    IAcadTextStyle * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadTextStyle_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyle_get_ObliqueAngle_Proxy( 
    IAcadTextStyle * This,
    /* [retval][out] */ ACAD_ANGLE *obliAngle);


void __RPC_STUB IAcadTextStyle_get_ObliqueAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyle_put_ObliqueAngle_Proxy( 
    IAcadTextStyle * This,
    /* [in] */ ACAD_ANGLE obliAngle);


void __RPC_STUB IAcadTextStyle_put_ObliqueAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyle_get_TextGenerationFlag_Proxy( 
    IAcadTextStyle * This,
    /* [retval][out] */ long *textGenFlag);


void __RPC_STUB IAcadTextStyle_get_TextGenerationFlag_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyle_put_TextGenerationFlag_Proxy( 
    IAcadTextStyle * This,
    /* [in] */ long textGenFlag);


void __RPC_STUB IAcadTextStyle_put_TextGenerationFlag_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyle_get_Width_Proxy( 
    IAcadTextStyle * This,
    /* [retval][out] */ double *Width);


void __RPC_STUB IAcadTextStyle_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyle_put_Width_Proxy( 
    IAcadTextStyle * This,
    /* [in] */ double Width);


void __RPC_STUB IAcadTextStyle_put_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyle_GetFont_Proxy( 
    IAcadTextStyle * This,
    /* [out] */ BSTR *TypeFace,
    /* [out] */ VARIANT_BOOL *Bold,
    /* [out] */ VARIANT_BOOL *Italic,
    /* [out] */ long *Charset,
    /* [out] */ long *PitchAndFamily);


void __RPC_STUB IAcadTextStyle_GetFont_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTextStyle_SetFont_Proxy( 
    IAcadTextStyle * This,
    /* [in] */ BSTR TypeFace,
    /* [in] */ VARIANT_BOOL Bold,
    /* [in] */ VARIANT_BOOL Italic,
    /* [in] */ long Charset,
    /* [in] */ long PitchAndFamily);


void __RPC_STUB IAcadTextStyle_SetFont_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadTextStyle_INTERFACE_DEFINED__ */


#ifndef __IAcadUCSs_INTERFACE_DEFINED__
#define __IAcadUCSs_INTERFACE_DEFINED__

/* interface IAcadUCSs */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadUCSs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BA5A4D4D-15A4-4B95-A19F-D00B7D0B54FB")
    IAcadUCSs : public IAcadObject
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadUCS **pItem) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ VARIANT Origin,
            /* [in] */ VARIANT XAxisPoint,
            /* [in] */ VARIANT YAxisPoint,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadUCS **pUCS) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadUCSsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadUCSs * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadUCSs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadUCSs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadUCSs * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadUCSs * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadUCSs * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadUCSs * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadUCSs * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadUCSs * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadUCSs * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadUCSs * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadUCSs * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadUCSs * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadUCSs * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadUCSs * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadUCSs * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadUCSs * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadUCSs * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadUCSs * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadUCSs * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadUCSs * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadUCS **pItem);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadUCSs * This,
            /* [retval][out] */ long *pCount);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadUCSs * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IAcadUCSs * This,
            /* [in] */ VARIANT Origin,
            /* [in] */ VARIANT XAxisPoint,
            /* [in] */ VARIANT YAxisPoint,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadUCS **pUCS);
        
        END_INTERFACE
    } IAcadUCSsVtbl;

    interface IAcadUCSs
    {
        CONST_VTBL struct IAcadUCSsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadUCSs_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadUCSs_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadUCSs_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadUCSs_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadUCSs_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadUCSs_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadUCSs_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadUCSs_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadUCSs_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadUCSs_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadUCSs_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadUCSs_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadUCSs_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadUCSs_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadUCSs_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadUCSs_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadUCSs_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadUCSs_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadUCSs_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadUCSs_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadUCSs_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadUCSs_get_Count(This,pCount)	\
    (This)->lpVtbl -> get_Count(This,pCount)

#define IAcadUCSs_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadUCSs_Add(This,Origin,XAxisPoint,YAxisPoint,Name,pUCS)	\
    (This)->lpVtbl -> Add(This,Origin,XAxisPoint,YAxisPoint,Name,pUCS)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadUCSs_Item_Proxy( 
    IAcadUCSs * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ IAcadUCS **pItem);


void __RPC_STUB IAcadUCSs_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadUCSs_get_Count_Proxy( 
    IAcadUCSs * This,
    /* [retval][out] */ long *pCount);


void __RPC_STUB IAcadUCSs_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadUCSs_get__NewEnum_Proxy( 
    IAcadUCSs * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IAcadUCSs_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadUCSs_Add_Proxy( 
    IAcadUCSs * This,
    /* [in] */ VARIANT Origin,
    /* [in] */ VARIANT XAxisPoint,
    /* [in] */ VARIANT YAxisPoint,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAcadUCS **pUCS);


void __RPC_STUB IAcadUCSs_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadUCSs_INTERFACE_DEFINED__ */


#ifndef __IAcadUCS_INTERFACE_DEFINED__
#define __IAcadUCS_INTERFACE_DEFINED__

/* interface IAcadUCS */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadUCS;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0DDDB5F6-D8DA-4F44-81E1-33DBDA981CA1")
    IAcadUCS : public IAcadObject
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Origin( 
            /* [retval][out] */ VARIANT *Origin) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Origin( 
            /* [in] */ VARIANT Origin) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_XVector( 
            /* [retval][out] */ VARIANT *XVector) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_XVector( 
            /* [in] */ VARIANT XVector) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_YVector( 
            /* [retval][out] */ VARIANT *YVector) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_YVector( 
            /* [in] */ VARIANT YVector) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetUCSMatrix( 
            /* [retval][out] */ VARIANT *transMatrix) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadUCSVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadUCS * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadUCS * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadUCS * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadUCS * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadUCS * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadUCS * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadUCS * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadUCS * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadUCS * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadUCS * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadUCS * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadUCS * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadUCS * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadUCS * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadUCS * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadUCS * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadUCS * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadUCS * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadUCS * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadUCS * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadUCS * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadUCS * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Origin )( 
            IAcadUCS * This,
            /* [retval][out] */ VARIANT *Origin);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Origin )( 
            IAcadUCS * This,
            /* [in] */ VARIANT Origin);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XVector )( 
            IAcadUCS * This,
            /* [retval][out] */ VARIANT *XVector);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_XVector )( 
            IAcadUCS * This,
            /* [in] */ VARIANT XVector);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_YVector )( 
            IAcadUCS * This,
            /* [retval][out] */ VARIANT *YVector);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_YVector )( 
            IAcadUCS * This,
            /* [in] */ VARIANT YVector);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetUCSMatrix )( 
            IAcadUCS * This,
            /* [retval][out] */ VARIANT *transMatrix);
        
        END_INTERFACE
    } IAcadUCSVtbl;

    interface IAcadUCS
    {
        CONST_VTBL struct IAcadUCSVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadUCS_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadUCS_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadUCS_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadUCS_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadUCS_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadUCS_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadUCS_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadUCS_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadUCS_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadUCS_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadUCS_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadUCS_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadUCS_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadUCS_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadUCS_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadUCS_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadUCS_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadUCS_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadUCS_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadUCS_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadUCS_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadUCS_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#define IAcadUCS_get_Origin(This,Origin)	\
    (This)->lpVtbl -> get_Origin(This,Origin)

#define IAcadUCS_put_Origin(This,Origin)	\
    (This)->lpVtbl -> put_Origin(This,Origin)

#define IAcadUCS_get_XVector(This,XVector)	\
    (This)->lpVtbl -> get_XVector(This,XVector)

#define IAcadUCS_put_XVector(This,XVector)	\
    (This)->lpVtbl -> put_XVector(This,XVector)

#define IAcadUCS_get_YVector(This,YVector)	\
    (This)->lpVtbl -> get_YVector(This,YVector)

#define IAcadUCS_put_YVector(This,YVector)	\
    (This)->lpVtbl -> put_YVector(This,YVector)

#define IAcadUCS_GetUCSMatrix(This,transMatrix)	\
    (This)->lpVtbl -> GetUCSMatrix(This,transMatrix)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadUCS_get_Name_Proxy( 
    IAcadUCS * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadUCS_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadUCS_put_Name_Proxy( 
    IAcadUCS * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadUCS_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadUCS_get_Origin_Proxy( 
    IAcadUCS * This,
    /* [retval][out] */ VARIANT *Origin);


void __RPC_STUB IAcadUCS_get_Origin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadUCS_put_Origin_Proxy( 
    IAcadUCS * This,
    /* [in] */ VARIANT Origin);


void __RPC_STUB IAcadUCS_put_Origin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadUCS_get_XVector_Proxy( 
    IAcadUCS * This,
    /* [retval][out] */ VARIANT *XVector);


void __RPC_STUB IAcadUCS_get_XVector_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadUCS_put_XVector_Proxy( 
    IAcadUCS * This,
    /* [in] */ VARIANT XVector);


void __RPC_STUB IAcadUCS_put_XVector_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadUCS_get_YVector_Proxy( 
    IAcadUCS * This,
    /* [retval][out] */ VARIANT *YVector);


void __RPC_STUB IAcadUCS_get_YVector_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadUCS_put_YVector_Proxy( 
    IAcadUCS * This,
    /* [in] */ VARIANT YVector);


void __RPC_STUB IAcadUCS_put_YVector_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadUCS_GetUCSMatrix_Proxy( 
    IAcadUCS * This,
    /* [retval][out] */ VARIANT *transMatrix);


void __RPC_STUB IAcadUCS_GetUCSMatrix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadUCS_INTERFACE_DEFINED__ */


#ifndef __IAcadViews_INTERFACE_DEFINED__
#define __IAcadViews_INTERFACE_DEFINED__

/* interface IAcadViews */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadViews;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DDEC76C4-E07A-46A9-89F2-B1D1954736CA")
    IAcadViews : public IAcadObject
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadView **pItem) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadView **pRegApp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadViewsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadViews * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadViews * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadViews * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadViews * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadViews * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadViews * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadViews * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadViews * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadViews * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadViews * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadViews * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadViews * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadViews * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadViews * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadViews * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadViews * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadViews * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadViews * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadViews * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadViews * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadViews * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadView **pItem);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadViews * This,
            /* [retval][out] */ long *pCount);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadViews * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IAcadViews * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadView **pRegApp);
        
        END_INTERFACE
    } IAcadViewsVtbl;

    interface IAcadViews
    {
        CONST_VTBL struct IAcadViewsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadViews_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadViews_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadViews_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadViews_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadViews_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadViews_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadViews_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadViews_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadViews_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadViews_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadViews_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadViews_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadViews_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadViews_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadViews_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadViews_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadViews_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadViews_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadViews_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadViews_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadViews_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadViews_get_Count(This,pCount)	\
    (This)->lpVtbl -> get_Count(This,pCount)

#define IAcadViews_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadViews_Add(This,Name,pRegApp)	\
    (This)->lpVtbl -> Add(This,Name,pRegApp)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadViews_Item_Proxy( 
    IAcadViews * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ IAcadView **pItem);


void __RPC_STUB IAcadViews_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadViews_get_Count_Proxy( 
    IAcadViews * This,
    /* [retval][out] */ long *pCount);


void __RPC_STUB IAcadViews_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadViews_get__NewEnum_Proxy( 
    IAcadViews * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IAcadViews_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadViews_Add_Proxy( 
    IAcadViews * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAcadView **pRegApp);


void __RPC_STUB IAcadViews_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadViews_INTERFACE_DEFINED__ */


#ifndef __IAcadView_INTERFACE_DEFINED__
#define __IAcadView_INTERFACE_DEFINED__

/* interface IAcadView */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("186C8834-89D2-4939-B506-CA0F234279F8")
    IAcadView : public IAcadObject
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Center( 
            /* [retval][out] */ VARIANT *Center) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Center( 
            /* [in] */ VARIANT Center) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *Height) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ double *Width) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ double Width) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Target( 
            /* [retval][out] */ VARIANT *targetPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Target( 
            /* [in] */ VARIANT targetPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Direction( 
            /* [retval][out] */ VARIANT *dirVec) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Direction( 
            /* [in] */ VARIANT dirVec) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bstrName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadView * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadView * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadView * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadView * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadView * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadView * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadView * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadView * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadView * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadView * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadView * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadView * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadView * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadView * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadView * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadView * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadView * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadView * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadView * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Center )( 
            IAcadView * This,
            /* [retval][out] */ VARIANT *Center);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Center )( 
            IAcadView * This,
            /* [in] */ VARIANT Center);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IAcadView * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IAcadView * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IAcadView * This,
            /* [retval][out] */ double *Width);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            IAcadView * This,
            /* [in] */ double Width);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Target )( 
            IAcadView * This,
            /* [retval][out] */ VARIANT *targetPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Target )( 
            IAcadView * This,
            /* [in] */ VARIANT targetPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Direction )( 
            IAcadView * This,
            /* [retval][out] */ VARIANT *dirVec);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Direction )( 
            IAcadView * This,
            /* [in] */ VARIANT dirVec);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadView * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadView * This,
            /* [in] */ BSTR bstrName);
        
        END_INTERFACE
    } IAcadViewVtbl;

    interface IAcadView
    {
        CONST_VTBL struct IAcadViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadView_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadView_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadView_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadView_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadView_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadView_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadView_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadView_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadView_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadView_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadView_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadView_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadView_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadView_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadView_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadView_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadView_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadView_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadView_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadView_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadView_get_Center(This,Center)	\
    (This)->lpVtbl -> get_Center(This,Center)

#define IAcadView_put_Center(This,Center)	\
    (This)->lpVtbl -> put_Center(This,Center)

#define IAcadView_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAcadView_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAcadView_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAcadView_put_Width(This,Width)	\
    (This)->lpVtbl -> put_Width(This,Width)

#define IAcadView_get_Target(This,targetPoint)	\
    (This)->lpVtbl -> get_Target(This,targetPoint)

#define IAcadView_put_Target(This,targetPoint)	\
    (This)->lpVtbl -> put_Target(This,targetPoint)

#define IAcadView_get_Direction(This,dirVec)	\
    (This)->lpVtbl -> get_Direction(This,dirVec)

#define IAcadView_put_Direction(This,dirVec)	\
    (This)->lpVtbl -> put_Direction(This,dirVec)

#define IAcadView_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadView_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadView_get_Center_Proxy( 
    IAcadView * This,
    /* [retval][out] */ VARIANT *Center);


void __RPC_STUB IAcadView_get_Center_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadView_put_Center_Proxy( 
    IAcadView * This,
    /* [in] */ VARIANT Center);


void __RPC_STUB IAcadView_put_Center_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadView_get_Height_Proxy( 
    IAcadView * This,
    /* [retval][out] */ double *Height);


void __RPC_STUB IAcadView_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadView_put_Height_Proxy( 
    IAcadView * This,
    /* [in] */ double Height);


void __RPC_STUB IAcadView_put_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadView_get_Width_Proxy( 
    IAcadView * This,
    /* [retval][out] */ double *Width);


void __RPC_STUB IAcadView_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadView_put_Width_Proxy( 
    IAcadView * This,
    /* [in] */ double Width);


void __RPC_STUB IAcadView_put_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadView_get_Target_Proxy( 
    IAcadView * This,
    /* [retval][out] */ VARIANT *targetPoint);


void __RPC_STUB IAcadView_get_Target_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadView_put_Target_Proxy( 
    IAcadView * This,
    /* [in] */ VARIANT targetPoint);


void __RPC_STUB IAcadView_put_Target_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadView_get_Direction_Proxy( 
    IAcadView * This,
    /* [retval][out] */ VARIANT *dirVec);


void __RPC_STUB IAcadView_get_Direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadView_put_Direction_Proxy( 
    IAcadView * This,
    /* [in] */ VARIANT dirVec);


void __RPC_STUB IAcadView_put_Direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadView_get_Name_Proxy( 
    IAcadView * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadView_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadView_put_Name_Proxy( 
    IAcadView * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadView_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadView_INTERFACE_DEFINED__ */


#ifndef __IAcadViewports_INTERFACE_DEFINED__
#define __IAcadViewports_INTERFACE_DEFINED__

/* interface IAcadViewports */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadViewports;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5EF9CF1C-DB3D-4A14-84CD-BAB3F372B779")
    IAcadViewports : public IAcadObject
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadViewport **pItem) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadViewport **pRegApp) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DeleteConfiguration( 
            /* [in] */ BSTR Name) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadViewportsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadViewports * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadViewports * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadViewports * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadViewports * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadViewports * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadViewports * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadViewports * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadViewports * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadViewports * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadViewports * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadViewports * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadViewports * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadViewports * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadViewports * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadViewports * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadViewports * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadViewports * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadViewports * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadViewports * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadViewports * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadViewports * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadViewport **pItem);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadViewports * This,
            /* [retval][out] */ long *pCount);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadViewports * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IAcadViewports * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadViewport **pRegApp);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteConfiguration )( 
            IAcadViewports * This,
            /* [in] */ BSTR Name);
        
        END_INTERFACE
    } IAcadViewportsVtbl;

    interface IAcadViewports
    {
        CONST_VTBL struct IAcadViewportsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadViewports_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadViewports_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadViewports_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadViewports_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadViewports_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadViewports_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadViewports_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadViewports_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadViewports_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadViewports_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadViewports_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadViewports_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadViewports_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadViewports_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadViewports_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadViewports_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadViewports_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadViewports_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadViewports_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadViewports_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadViewports_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadViewports_get_Count(This,pCount)	\
    (This)->lpVtbl -> get_Count(This,pCount)

#define IAcadViewports_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadViewports_Add(This,Name,pRegApp)	\
    (This)->lpVtbl -> Add(This,Name,pRegApp)

#define IAcadViewports_DeleteConfiguration(This,Name)	\
    (This)->lpVtbl -> DeleteConfiguration(This,Name)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadViewports_Item_Proxy( 
    IAcadViewports * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ IAcadViewport **pItem);


void __RPC_STUB IAcadViewports_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadViewports_get_Count_Proxy( 
    IAcadViewports * This,
    /* [retval][out] */ long *pCount);


void __RPC_STUB IAcadViewports_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadViewports_get__NewEnum_Proxy( 
    IAcadViewports * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IAcadViewports_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadViewports_Add_Proxy( 
    IAcadViewports * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAcadViewport **pRegApp);


void __RPC_STUB IAcadViewports_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadViewports_DeleteConfiguration_Proxy( 
    IAcadViewports * This,
    /* [in] */ BSTR Name);


void __RPC_STUB IAcadViewports_DeleteConfiguration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadViewports_INTERFACE_DEFINED__ */


#ifndef __IAcadViewport_INTERFACE_DEFINED__
#define __IAcadViewport_INTERFACE_DEFINED__

/* interface IAcadViewport */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadViewport;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8E05F37A-CCDF-40EC-9AFA-824272AD24C4")
    IAcadViewport : public IAcadObject
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Center( 
            /* [retval][out] */ VARIANT *Center) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Center( 
            /* [in] */ VARIANT Center) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *Height) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ double *Width) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ double Width) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Target( 
            /* [retval][out] */ VARIANT *targetPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Target( 
            /* [in] */ VARIANT targetPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Direction( 
            /* [retval][out] */ VARIANT *dirVec) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Direction( 
            /* [in] */ VARIANT dirVec) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_GridOn( 
            /* [retval][out] */ VARIANT_BOOL *bGridOn) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_GridOn( 
            /* [in] */ VARIANT_BOOL bGridOn) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_OrthoOn( 
            /* [retval][out] */ VARIANT_BOOL *bOrthoOn) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_OrthoOn( 
            /* [in] */ VARIANT_BOOL bOrthoOn) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SnapBasePoint( 
            /* [retval][out] */ VARIANT *lowLeft) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SnapBasePoint( 
            /* [in] */ VARIANT lowLeft) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SnapOn( 
            /* [retval][out] */ VARIANT_BOOL *bSnapOn) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SnapOn( 
            /* [in] */ VARIANT_BOOL bSnapOn) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SnapRotationAngle( 
            /* [retval][out] */ ACAD_ANGLE *Angle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SnapRotationAngle( 
            /* [in] */ ACAD_ANGLE Angle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_UCSIconOn( 
            /* [retval][out] */ VARIANT_BOOL *bIconOn) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_UCSIconOn( 
            /* [in] */ VARIANT_BOOL bIconOn) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_UCSIconAtOrigin( 
            /* [retval][out] */ VARIANT_BOOL *bIconAtOrigin) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_UCSIconAtOrigin( 
            /* [in] */ VARIANT_BOOL bIconAtOrigin) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LowerLeftCorner( 
            /* [retval][out] */ VARIANT *lowLeft) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_UpperRightCorner( 
            /* [retval][out] */ VARIANT *UpperRight) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Split( 
            /* [in] */ AcViewportSplitType NumWins) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetGridSpacing( 
            /* [out] */ double *XSpacing,
            /* [out] */ double *YSpacing) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetGridSpacing( 
            /* [in] */ double XSpacing,
            /* [in] */ double YSpacing) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetSnapSpacing( 
            /* [out] */ double *XSpacing,
            /* [out] */ double *YSpacing) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetSnapSpacing( 
            /* [in] */ double XSpacing,
            /* [in] */ double YSpacing) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetView( 
            /* [in] */ IAcadView *View) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ArcSmoothness( 
            /* [retval][out] */ long *arcSmooth) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ArcSmoothness( 
            /* [in] */ long arcSmooth) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadViewportVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadViewport * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadViewport * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadViewport * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadViewport * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadViewport * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadViewport * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadViewport * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadViewport * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadViewport * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadViewport * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadViewport * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadViewport * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadViewport * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadViewport * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadViewport * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadViewport * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadViewport * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadViewport * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadViewport * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadViewport * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Center )( 
            IAcadViewport * This,
            /* [retval][out] */ VARIANT *Center);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Center )( 
            IAcadViewport * This,
            /* [in] */ VARIANT Center);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IAcadViewport * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IAcadViewport * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IAcadViewport * This,
            /* [retval][out] */ double *Width);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            IAcadViewport * This,
            /* [in] */ double Width);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Target )( 
            IAcadViewport * This,
            /* [retval][out] */ VARIANT *targetPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Target )( 
            IAcadViewport * This,
            /* [in] */ VARIANT targetPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Direction )( 
            IAcadViewport * This,
            /* [retval][out] */ VARIANT *dirVec);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Direction )( 
            IAcadViewport * This,
            /* [in] */ VARIANT dirVec);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadViewport * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadViewport * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GridOn )( 
            IAcadViewport * This,
            /* [retval][out] */ VARIANT_BOOL *bGridOn);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GridOn )( 
            IAcadViewport * This,
            /* [in] */ VARIANT_BOOL bGridOn);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OrthoOn )( 
            IAcadViewport * This,
            /* [retval][out] */ VARIANT_BOOL *bOrthoOn);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OrthoOn )( 
            IAcadViewport * This,
            /* [in] */ VARIANT_BOOL bOrthoOn);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SnapBasePoint )( 
            IAcadViewport * This,
            /* [retval][out] */ VARIANT *lowLeft);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SnapBasePoint )( 
            IAcadViewport * This,
            /* [in] */ VARIANT lowLeft);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SnapOn )( 
            IAcadViewport * This,
            /* [retval][out] */ VARIANT_BOOL *bSnapOn);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SnapOn )( 
            IAcadViewport * This,
            /* [in] */ VARIANT_BOOL bSnapOn);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SnapRotationAngle )( 
            IAcadViewport * This,
            /* [retval][out] */ ACAD_ANGLE *Angle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SnapRotationAngle )( 
            IAcadViewport * This,
            /* [in] */ ACAD_ANGLE Angle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UCSIconOn )( 
            IAcadViewport * This,
            /* [retval][out] */ VARIANT_BOOL *bIconOn);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UCSIconOn )( 
            IAcadViewport * This,
            /* [in] */ VARIANT_BOOL bIconOn);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UCSIconAtOrigin )( 
            IAcadViewport * This,
            /* [retval][out] */ VARIANT_BOOL *bIconAtOrigin);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UCSIconAtOrigin )( 
            IAcadViewport * This,
            /* [in] */ VARIANT_BOOL bIconAtOrigin);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LowerLeftCorner )( 
            IAcadViewport * This,
            /* [retval][out] */ VARIANT *lowLeft);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UpperRightCorner )( 
            IAcadViewport * This,
            /* [retval][out] */ VARIANT *UpperRight);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Split )( 
            IAcadViewport * This,
            /* [in] */ AcViewportSplitType NumWins);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetGridSpacing )( 
            IAcadViewport * This,
            /* [out] */ double *XSpacing,
            /* [out] */ double *YSpacing);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetGridSpacing )( 
            IAcadViewport * This,
            /* [in] */ double XSpacing,
            /* [in] */ double YSpacing);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSnapSpacing )( 
            IAcadViewport * This,
            /* [out] */ double *XSpacing,
            /* [out] */ double *YSpacing);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetSnapSpacing )( 
            IAcadViewport * This,
            /* [in] */ double XSpacing,
            /* [in] */ double YSpacing);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetView )( 
            IAcadViewport * This,
            /* [in] */ IAcadView *View);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ArcSmoothness )( 
            IAcadViewport * This,
            /* [retval][out] */ long *arcSmooth);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ArcSmoothness )( 
            IAcadViewport * This,
            /* [in] */ long arcSmooth);
        
        END_INTERFACE
    } IAcadViewportVtbl;

    interface IAcadViewport
    {
        CONST_VTBL struct IAcadViewportVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadViewport_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadViewport_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadViewport_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadViewport_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadViewport_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadViewport_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadViewport_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadViewport_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadViewport_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadViewport_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadViewport_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadViewport_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadViewport_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadViewport_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadViewport_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadViewport_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadViewport_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadViewport_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadViewport_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadViewport_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadViewport_get_Center(This,Center)	\
    (This)->lpVtbl -> get_Center(This,Center)

#define IAcadViewport_put_Center(This,Center)	\
    (This)->lpVtbl -> put_Center(This,Center)

#define IAcadViewport_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAcadViewport_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAcadViewport_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAcadViewport_put_Width(This,Width)	\
    (This)->lpVtbl -> put_Width(This,Width)

#define IAcadViewport_get_Target(This,targetPoint)	\
    (This)->lpVtbl -> get_Target(This,targetPoint)

#define IAcadViewport_put_Target(This,targetPoint)	\
    (This)->lpVtbl -> put_Target(This,targetPoint)

#define IAcadViewport_get_Direction(This,dirVec)	\
    (This)->lpVtbl -> get_Direction(This,dirVec)

#define IAcadViewport_put_Direction(This,dirVec)	\
    (This)->lpVtbl -> put_Direction(This,dirVec)

#define IAcadViewport_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadViewport_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#define IAcadViewport_get_GridOn(This,bGridOn)	\
    (This)->lpVtbl -> get_GridOn(This,bGridOn)

#define IAcadViewport_put_GridOn(This,bGridOn)	\
    (This)->lpVtbl -> put_GridOn(This,bGridOn)

#define IAcadViewport_get_OrthoOn(This,bOrthoOn)	\
    (This)->lpVtbl -> get_OrthoOn(This,bOrthoOn)

#define IAcadViewport_put_OrthoOn(This,bOrthoOn)	\
    (This)->lpVtbl -> put_OrthoOn(This,bOrthoOn)

#define IAcadViewport_get_SnapBasePoint(This,lowLeft)	\
    (This)->lpVtbl -> get_SnapBasePoint(This,lowLeft)

#define IAcadViewport_put_SnapBasePoint(This,lowLeft)	\
    (This)->lpVtbl -> put_SnapBasePoint(This,lowLeft)

#define IAcadViewport_get_SnapOn(This,bSnapOn)	\
    (This)->lpVtbl -> get_SnapOn(This,bSnapOn)

#define IAcadViewport_put_SnapOn(This,bSnapOn)	\
    (This)->lpVtbl -> put_SnapOn(This,bSnapOn)

#define IAcadViewport_get_SnapRotationAngle(This,Angle)	\
    (This)->lpVtbl -> get_SnapRotationAngle(This,Angle)

#define IAcadViewport_put_SnapRotationAngle(This,Angle)	\
    (This)->lpVtbl -> put_SnapRotationAngle(This,Angle)

#define IAcadViewport_get_UCSIconOn(This,bIconOn)	\
    (This)->lpVtbl -> get_UCSIconOn(This,bIconOn)

#define IAcadViewport_put_UCSIconOn(This,bIconOn)	\
    (This)->lpVtbl -> put_UCSIconOn(This,bIconOn)

#define IAcadViewport_get_UCSIconAtOrigin(This,bIconAtOrigin)	\
    (This)->lpVtbl -> get_UCSIconAtOrigin(This,bIconAtOrigin)

#define IAcadViewport_put_UCSIconAtOrigin(This,bIconAtOrigin)	\
    (This)->lpVtbl -> put_UCSIconAtOrigin(This,bIconAtOrigin)

#define IAcadViewport_get_LowerLeftCorner(This,lowLeft)	\
    (This)->lpVtbl -> get_LowerLeftCorner(This,lowLeft)

#define IAcadViewport_get_UpperRightCorner(This,UpperRight)	\
    (This)->lpVtbl -> get_UpperRightCorner(This,UpperRight)

#define IAcadViewport_Split(This,NumWins)	\
    (This)->lpVtbl -> Split(This,NumWins)

#define IAcadViewport_GetGridSpacing(This,XSpacing,YSpacing)	\
    (This)->lpVtbl -> GetGridSpacing(This,XSpacing,YSpacing)

#define IAcadViewport_SetGridSpacing(This,XSpacing,YSpacing)	\
    (This)->lpVtbl -> SetGridSpacing(This,XSpacing,YSpacing)

#define IAcadViewport_GetSnapSpacing(This,XSpacing,YSpacing)	\
    (This)->lpVtbl -> GetSnapSpacing(This,XSpacing,YSpacing)

#define IAcadViewport_SetSnapSpacing(This,XSpacing,YSpacing)	\
    (This)->lpVtbl -> SetSnapSpacing(This,XSpacing,YSpacing)

#define IAcadViewport_SetView(This,View)	\
    (This)->lpVtbl -> SetView(This,View)

#define IAcadViewport_get_ArcSmoothness(This,arcSmooth)	\
    (This)->lpVtbl -> get_ArcSmoothness(This,arcSmooth)

#define IAcadViewport_put_ArcSmoothness(This,arcSmooth)	\
    (This)->lpVtbl -> put_ArcSmoothness(This,arcSmooth)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_get_Center_Proxy( 
    IAcadViewport * This,
    /* [retval][out] */ VARIANT *Center);


void __RPC_STUB IAcadViewport_get_Center_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_put_Center_Proxy( 
    IAcadViewport * This,
    /* [in] */ VARIANT Center);


void __RPC_STUB IAcadViewport_put_Center_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_get_Height_Proxy( 
    IAcadViewport * This,
    /* [retval][out] */ double *Height);


void __RPC_STUB IAcadViewport_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_put_Height_Proxy( 
    IAcadViewport * This,
    /* [in] */ double Height);


void __RPC_STUB IAcadViewport_put_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_get_Width_Proxy( 
    IAcadViewport * This,
    /* [retval][out] */ double *Width);


void __RPC_STUB IAcadViewport_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_put_Width_Proxy( 
    IAcadViewport * This,
    /* [in] */ double Width);


void __RPC_STUB IAcadViewport_put_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_get_Target_Proxy( 
    IAcadViewport * This,
    /* [retval][out] */ VARIANT *targetPoint);


void __RPC_STUB IAcadViewport_get_Target_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_put_Target_Proxy( 
    IAcadViewport * This,
    /* [in] */ VARIANT targetPoint);


void __RPC_STUB IAcadViewport_put_Target_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_get_Direction_Proxy( 
    IAcadViewport * This,
    /* [retval][out] */ VARIANT *dirVec);


void __RPC_STUB IAcadViewport_get_Direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_put_Direction_Proxy( 
    IAcadViewport * This,
    /* [in] */ VARIANT dirVec);


void __RPC_STUB IAcadViewport_put_Direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_get_Name_Proxy( 
    IAcadViewport * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadViewport_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_put_Name_Proxy( 
    IAcadViewport * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadViewport_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_get_GridOn_Proxy( 
    IAcadViewport * This,
    /* [retval][out] */ VARIANT_BOOL *bGridOn);


void __RPC_STUB IAcadViewport_get_GridOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_put_GridOn_Proxy( 
    IAcadViewport * This,
    /* [in] */ VARIANT_BOOL bGridOn);


void __RPC_STUB IAcadViewport_put_GridOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_get_OrthoOn_Proxy( 
    IAcadViewport * This,
    /* [retval][out] */ VARIANT_BOOL *bOrthoOn);


void __RPC_STUB IAcadViewport_get_OrthoOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_put_OrthoOn_Proxy( 
    IAcadViewport * This,
    /* [in] */ VARIANT_BOOL bOrthoOn);


void __RPC_STUB IAcadViewport_put_OrthoOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_get_SnapBasePoint_Proxy( 
    IAcadViewport * This,
    /* [retval][out] */ VARIANT *lowLeft);


void __RPC_STUB IAcadViewport_get_SnapBasePoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_put_SnapBasePoint_Proxy( 
    IAcadViewport * This,
    /* [in] */ VARIANT lowLeft);


void __RPC_STUB IAcadViewport_put_SnapBasePoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_get_SnapOn_Proxy( 
    IAcadViewport * This,
    /* [retval][out] */ VARIANT_BOOL *bSnapOn);


void __RPC_STUB IAcadViewport_get_SnapOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_put_SnapOn_Proxy( 
    IAcadViewport * This,
    /* [in] */ VARIANT_BOOL bSnapOn);


void __RPC_STUB IAcadViewport_put_SnapOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_get_SnapRotationAngle_Proxy( 
    IAcadViewport * This,
    /* [retval][out] */ ACAD_ANGLE *Angle);


void __RPC_STUB IAcadViewport_get_SnapRotationAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_put_SnapRotationAngle_Proxy( 
    IAcadViewport * This,
    /* [in] */ ACAD_ANGLE Angle);


void __RPC_STUB IAcadViewport_put_SnapRotationAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_get_UCSIconOn_Proxy( 
    IAcadViewport * This,
    /* [retval][out] */ VARIANT_BOOL *bIconOn);


void __RPC_STUB IAcadViewport_get_UCSIconOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_put_UCSIconOn_Proxy( 
    IAcadViewport * This,
    /* [in] */ VARIANT_BOOL bIconOn);


void __RPC_STUB IAcadViewport_put_UCSIconOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_get_UCSIconAtOrigin_Proxy( 
    IAcadViewport * This,
    /* [retval][out] */ VARIANT_BOOL *bIconAtOrigin);


void __RPC_STUB IAcadViewport_get_UCSIconAtOrigin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_put_UCSIconAtOrigin_Proxy( 
    IAcadViewport * This,
    /* [in] */ VARIANT_BOOL bIconAtOrigin);


void __RPC_STUB IAcadViewport_put_UCSIconAtOrigin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_get_LowerLeftCorner_Proxy( 
    IAcadViewport * This,
    /* [retval][out] */ VARIANT *lowLeft);


void __RPC_STUB IAcadViewport_get_LowerLeftCorner_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_get_UpperRightCorner_Proxy( 
    IAcadViewport * This,
    /* [retval][out] */ VARIANT *UpperRight);


void __RPC_STUB IAcadViewport_get_UpperRightCorner_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_Split_Proxy( 
    IAcadViewport * This,
    /* [in] */ AcViewportSplitType NumWins);


void __RPC_STUB IAcadViewport_Split_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_GetGridSpacing_Proxy( 
    IAcadViewport * This,
    /* [out] */ double *XSpacing,
    /* [out] */ double *YSpacing);


void __RPC_STUB IAcadViewport_GetGridSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_SetGridSpacing_Proxy( 
    IAcadViewport * This,
    /* [in] */ double XSpacing,
    /* [in] */ double YSpacing);


void __RPC_STUB IAcadViewport_SetGridSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_GetSnapSpacing_Proxy( 
    IAcadViewport * This,
    /* [out] */ double *XSpacing,
    /* [out] */ double *YSpacing);


void __RPC_STUB IAcadViewport_GetSnapSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_SetSnapSpacing_Proxy( 
    IAcadViewport * This,
    /* [in] */ double XSpacing,
    /* [in] */ double YSpacing);


void __RPC_STUB IAcadViewport_SetSnapSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_SetView_Proxy( 
    IAcadViewport * This,
    /* [in] */ IAcadView *View);


void __RPC_STUB IAcadViewport_SetView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_get_ArcSmoothness_Proxy( 
    IAcadViewport * This,
    /* [retval][out] */ long *arcSmooth);


void __RPC_STUB IAcadViewport_get_ArcSmoothness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadViewport_put_ArcSmoothness_Proxy( 
    IAcadViewport * This,
    /* [in] */ long arcSmooth);


void __RPC_STUB IAcadViewport_put_ArcSmoothness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadViewport_INTERFACE_DEFINED__ */


#ifndef __IAcadLayouts_INTERFACE_DEFINED__
#define __IAcadLayouts_INTERFACE_DEFINED__

/* interface IAcadLayouts */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadLayouts;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D0D2DFD9-F8DA-4F72-A44D-8C503100A3C2")
    IAcadLayouts : public IAcadObject
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadLayout **pItem) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadLayout **pLayout) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadLayoutsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadLayouts * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadLayouts * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadLayouts * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadLayouts * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadLayouts * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadLayouts * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadLayouts * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadLayouts * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadLayouts * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadLayouts * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadLayouts * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadLayouts * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadLayouts * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadLayouts * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadLayouts * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadLayouts * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadLayouts * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadLayouts * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadLayouts * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadLayouts * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadLayouts * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadLayout **pItem);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadLayouts * This,
            /* [retval][out] */ long *pCount);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadLayouts * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IAcadLayouts * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadLayout **pLayout);
        
        END_INTERFACE
    } IAcadLayoutsVtbl;

    interface IAcadLayouts
    {
        CONST_VTBL struct IAcadLayoutsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadLayouts_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadLayouts_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadLayouts_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadLayouts_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadLayouts_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadLayouts_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadLayouts_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadLayouts_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadLayouts_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadLayouts_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadLayouts_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadLayouts_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadLayouts_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadLayouts_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadLayouts_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadLayouts_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadLayouts_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadLayouts_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadLayouts_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadLayouts_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadLayouts_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadLayouts_get_Count(This,pCount)	\
    (This)->lpVtbl -> get_Count(This,pCount)

#define IAcadLayouts_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadLayouts_Add(This,Name,pLayout)	\
    (This)->lpVtbl -> Add(This,Name,pLayout)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadLayouts_Item_Proxy( 
    IAcadLayouts * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ IAcadLayout **pItem);


void __RPC_STUB IAcadLayouts_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLayouts_get_Count_Proxy( 
    IAcadLayouts * This,
    /* [retval][out] */ long *pCount);


void __RPC_STUB IAcadLayouts_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLayouts_get__NewEnum_Proxy( 
    IAcadLayouts * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IAcadLayouts_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadLayouts_Add_Proxy( 
    IAcadLayouts * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAcadLayout **pLayout);


void __RPC_STUB IAcadLayouts_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadLayouts_INTERFACE_DEFINED__ */


#ifndef __IAcadPlotConfigurations_INTERFACE_DEFINED__
#define __IAcadPlotConfigurations_INTERFACE_DEFINED__

/* interface IAcadPlotConfigurations */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadPlotConfigurations;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E0B3C996-314E-4F29-89E9-CA75C7DE9985")
    IAcadPlotConfigurations : public IAcadObject
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadPlotConfiguration **pItem) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT ModelType,
            /* [retval][out] */ IAcadPlotConfiguration **pPlotConfig) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadPlotConfigurationsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadPlotConfigurations * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadPlotConfigurations * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadPlotConfigurations * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadPlotConfigurations * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadPlotConfigurations * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadPlotConfigurations * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadPlotConfigurations * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadPlotConfigurations * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadPlotConfigurations * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadPlotConfigurations * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadPlotConfigurations * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadPlotConfigurations * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadPlotConfigurations * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadPlotConfigurations * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadPlotConfigurations * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadPlotConfigurations * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadPlotConfigurations * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadPlotConfigurations * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadPlotConfigurations * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadPlotConfigurations * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadPlotConfigurations * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadPlotConfiguration **pItem);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadPlotConfigurations * This,
            /* [retval][out] */ long *pCount);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadPlotConfigurations * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IAcadPlotConfigurations * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT ModelType,
            /* [retval][out] */ IAcadPlotConfiguration **pPlotConfig);
        
        END_INTERFACE
    } IAcadPlotConfigurationsVtbl;

    interface IAcadPlotConfigurations
    {
        CONST_VTBL struct IAcadPlotConfigurationsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadPlotConfigurations_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadPlotConfigurations_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadPlotConfigurations_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadPlotConfigurations_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadPlotConfigurations_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadPlotConfigurations_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadPlotConfigurations_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadPlotConfigurations_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadPlotConfigurations_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadPlotConfigurations_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadPlotConfigurations_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadPlotConfigurations_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadPlotConfigurations_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadPlotConfigurations_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadPlotConfigurations_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadPlotConfigurations_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadPlotConfigurations_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadPlotConfigurations_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadPlotConfigurations_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadPlotConfigurations_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadPlotConfigurations_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadPlotConfigurations_get_Count(This,pCount)	\
    (This)->lpVtbl -> get_Count(This,pCount)

#define IAcadPlotConfigurations_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadPlotConfigurations_Add(This,Name,ModelType,pPlotConfig)	\
    (This)->lpVtbl -> Add(This,Name,ModelType,pPlotConfig)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfigurations_Item_Proxy( 
    IAcadPlotConfigurations * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ IAcadPlotConfiguration **pItem);


void __RPC_STUB IAcadPlotConfigurations_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfigurations_get_Count_Proxy( 
    IAcadPlotConfigurations * This,
    /* [retval][out] */ long *pCount);


void __RPC_STUB IAcadPlotConfigurations_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfigurations_get__NewEnum_Proxy( 
    IAcadPlotConfigurations * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IAcadPlotConfigurations_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPlotConfigurations_Add_Proxy( 
    IAcadPlotConfigurations * This,
    /* [in] */ BSTR Name,
    /* [optional][in] */ VARIANT ModelType,
    /* [retval][out] */ IAcadPlotConfiguration **pPlotConfig);


void __RPC_STUB IAcadPlotConfigurations_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadPlotConfigurations_INTERFACE_DEFINED__ */


#ifndef __IAcadDatabasePreferences_INTERFACE_DEFINED__
#define __IAcadDatabasePreferences_INTERFACE_DEFINED__

/* interface IAcadDatabasePreferences */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadDatabasePreferences;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7C526650-42E8-44C2-B6F6-D113781226BF")
    IAcadDatabasePreferences : public IDispatch
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch **pAppObj) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SolidFill( 
            /* [retval][out] */ VARIANT_BOOL *Fill) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SolidFill( 
            /* [in] */ VARIANT_BOOL Fill) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_XRefEdit( 
            /* [retval][out] */ VARIANT_BOOL *Edit) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_XRefEdit( 
            /* [in] */ VARIANT_BOOL Edit) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_XRefLayerVisibility( 
            /* [retval][out] */ VARIANT_BOOL *XRefLayerVis) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_XRefLayerVisibility( 
            /* [in] */ VARIANT_BOOL XRefLayerVis) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_OLELaunch( 
            /* [retval][out] */ VARIANT_BOOL *Launch) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_OLELaunch( 
            /* [in] */ VARIANT_BOOL Launch) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AllowLongSymbolNames( 
            /* [retval][out] */ VARIANT_BOOL *LongNames) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AllowLongSymbolNames( 
            /* [in] */ VARIANT_BOOL LongNames) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ObjectSortBySelection( 
            /* [retval][out] */ VARIANT_BOOL *Sort) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ObjectSortBySelection( 
            /* [in] */ VARIANT_BOOL Sort) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ObjectSortBySnap( 
            /* [retval][out] */ VARIANT_BOOL *Sort) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ObjectSortBySnap( 
            /* [in] */ VARIANT_BOOL Sort) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ObjectSortByRedraws( 
            /* [retval][out] */ VARIANT_BOOL *Sort) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ObjectSortByRedraws( 
            /* [in] */ VARIANT_BOOL Sort) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ObjectSortByRegens( 
            /* [retval][out] */ VARIANT_BOOL *Sort) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ObjectSortByRegens( 
            /* [in] */ VARIANT_BOOL Sort) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ObjectSortByPlotting( 
            /* [retval][out] */ VARIANT_BOOL *Sort) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ObjectSortByPlotting( 
            /* [in] */ VARIANT_BOOL Sort) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ObjectSortByPSOutput( 
            /* [retval][out] */ VARIANT_BOOL *Sort) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ObjectSortByPSOutput( 
            /* [in] */ VARIANT_BOOL Sort) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ContourLinesPerSurface( 
            /* [in] */ long Path) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ContourLinesPerSurface( 
            /* [retval][out] */ long *Path) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplaySilhouette( 
            /* [in] */ VARIANT_BOOL Path) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplaySilhouette( 
            /* [retval][out] */ VARIANT_BOOL *Path) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_MaxActiveViewports( 
            /* [in] */ long Path) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_MaxActiveViewports( 
            /* [retval][out] */ long *Path) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_RenderSmoothness( 
            /* [in] */ double Path) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_RenderSmoothness( 
            /* [retval][out] */ double *Path) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SegmentPerPolyline( 
            /* [in] */ long Path) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SegmentPerPolyline( 
            /* [retval][out] */ long *Path) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextFrameDisplay( 
            /* [in] */ VARIANT_BOOL Path) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextFrameDisplay( 
            /* [retval][out] */ VARIANT_BOOL *Path) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Lineweight( 
            /* [in] */ AcLineWeight Path) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Lineweight( 
            /* [retval][out] */ AcLineWeight *Path) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LineWeightDisplay( 
            /* [in] */ VARIANT_BOOL Path) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LineWeightDisplay( 
            /* [retval][out] */ VARIANT_BOOL *Path) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadDatabasePreferencesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadDatabasePreferences * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadDatabasePreferences * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadDatabasePreferences * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadDatabasePreferences * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadDatabasePreferences * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadDatabasePreferences * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadDatabasePreferences * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadDatabasePreferences * This,
            /* [retval][out] */ IDispatch **pAppObj);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SolidFill )( 
            IAcadDatabasePreferences * This,
            /* [retval][out] */ VARIANT_BOOL *Fill);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SolidFill )( 
            IAcadDatabasePreferences * This,
            /* [in] */ VARIANT_BOOL Fill);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XRefEdit )( 
            IAcadDatabasePreferences * This,
            /* [retval][out] */ VARIANT_BOOL *Edit);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_XRefEdit )( 
            IAcadDatabasePreferences * This,
            /* [in] */ VARIANT_BOOL Edit);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XRefLayerVisibility )( 
            IAcadDatabasePreferences * This,
            /* [retval][out] */ VARIANT_BOOL *XRefLayerVis);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_XRefLayerVisibility )( 
            IAcadDatabasePreferences * This,
            /* [in] */ VARIANT_BOOL XRefLayerVis);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OLELaunch )( 
            IAcadDatabasePreferences * This,
            /* [retval][out] */ VARIANT_BOOL *Launch);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OLELaunch )( 
            IAcadDatabasePreferences * This,
            /* [in] */ VARIANT_BOOL Launch);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AllowLongSymbolNames )( 
            IAcadDatabasePreferences * This,
            /* [retval][out] */ VARIANT_BOOL *LongNames);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AllowLongSymbolNames )( 
            IAcadDatabasePreferences * This,
            /* [in] */ VARIANT_BOOL LongNames);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectSortBySelection )( 
            IAcadDatabasePreferences * This,
            /* [retval][out] */ VARIANT_BOOL *Sort);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ObjectSortBySelection )( 
            IAcadDatabasePreferences * This,
            /* [in] */ VARIANT_BOOL Sort);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectSortBySnap )( 
            IAcadDatabasePreferences * This,
            /* [retval][out] */ VARIANT_BOOL *Sort);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ObjectSortBySnap )( 
            IAcadDatabasePreferences * This,
            /* [in] */ VARIANT_BOOL Sort);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectSortByRedraws )( 
            IAcadDatabasePreferences * This,
            /* [retval][out] */ VARIANT_BOOL *Sort);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ObjectSortByRedraws )( 
            IAcadDatabasePreferences * This,
            /* [in] */ VARIANT_BOOL Sort);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectSortByRegens )( 
            IAcadDatabasePreferences * This,
            /* [retval][out] */ VARIANT_BOOL *Sort);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ObjectSortByRegens )( 
            IAcadDatabasePreferences * This,
            /* [in] */ VARIANT_BOOL Sort);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectSortByPlotting )( 
            IAcadDatabasePreferences * This,
            /* [retval][out] */ VARIANT_BOOL *Sort);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ObjectSortByPlotting )( 
            IAcadDatabasePreferences * This,
            /* [in] */ VARIANT_BOOL Sort);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectSortByPSOutput )( 
            IAcadDatabasePreferences * This,
            /* [retval][out] */ VARIANT_BOOL *Sort);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ObjectSortByPSOutput )( 
            IAcadDatabasePreferences * This,
            /* [in] */ VARIANT_BOOL Sort);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ContourLinesPerSurface )( 
            IAcadDatabasePreferences * This,
            /* [in] */ long Path);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ContourLinesPerSurface )( 
            IAcadDatabasePreferences * This,
            /* [retval][out] */ long *Path);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplaySilhouette )( 
            IAcadDatabasePreferences * This,
            /* [in] */ VARIANT_BOOL Path);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplaySilhouette )( 
            IAcadDatabasePreferences * This,
            /* [retval][out] */ VARIANT_BOOL *Path);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MaxActiveViewports )( 
            IAcadDatabasePreferences * This,
            /* [in] */ long Path);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MaxActiveViewports )( 
            IAcadDatabasePreferences * This,
            /* [retval][out] */ long *Path);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RenderSmoothness )( 
            IAcadDatabasePreferences * This,
            /* [in] */ double Path);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RenderSmoothness )( 
            IAcadDatabasePreferences * This,
            /* [retval][out] */ double *Path);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SegmentPerPolyline )( 
            IAcadDatabasePreferences * This,
            /* [in] */ long Path);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SegmentPerPolyline )( 
            IAcadDatabasePreferences * This,
            /* [retval][out] */ long *Path);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextFrameDisplay )( 
            IAcadDatabasePreferences * This,
            /* [in] */ VARIANT_BOOL Path);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextFrameDisplay )( 
            IAcadDatabasePreferences * This,
            /* [retval][out] */ VARIANT_BOOL *Path);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadDatabasePreferences * This,
            /* [in] */ AcLineWeight Path);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadDatabasePreferences * This,
            /* [retval][out] */ AcLineWeight *Path);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LineWeightDisplay )( 
            IAcadDatabasePreferences * This,
            /* [in] */ VARIANT_BOOL Path);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LineWeightDisplay )( 
            IAcadDatabasePreferences * This,
            /* [retval][out] */ VARIANT_BOOL *Path);
        
        END_INTERFACE
    } IAcadDatabasePreferencesVtbl;

    interface IAcadDatabasePreferences
    {
        CONST_VTBL struct IAcadDatabasePreferencesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadDatabasePreferences_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadDatabasePreferences_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadDatabasePreferences_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadDatabasePreferences_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadDatabasePreferences_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadDatabasePreferences_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadDatabasePreferences_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadDatabasePreferences_get_Application(This,pAppObj)	\
    (This)->lpVtbl -> get_Application(This,pAppObj)

#define IAcadDatabasePreferences_get_SolidFill(This,Fill)	\
    (This)->lpVtbl -> get_SolidFill(This,Fill)

#define IAcadDatabasePreferences_put_SolidFill(This,Fill)	\
    (This)->lpVtbl -> put_SolidFill(This,Fill)

#define IAcadDatabasePreferences_get_XRefEdit(This,Edit)	\
    (This)->lpVtbl -> get_XRefEdit(This,Edit)

#define IAcadDatabasePreferences_put_XRefEdit(This,Edit)	\
    (This)->lpVtbl -> put_XRefEdit(This,Edit)

#define IAcadDatabasePreferences_get_XRefLayerVisibility(This,XRefLayerVis)	\
    (This)->lpVtbl -> get_XRefLayerVisibility(This,XRefLayerVis)

#define IAcadDatabasePreferences_put_XRefLayerVisibility(This,XRefLayerVis)	\
    (This)->lpVtbl -> put_XRefLayerVisibility(This,XRefLayerVis)

#define IAcadDatabasePreferences_get_OLELaunch(This,Launch)	\
    (This)->lpVtbl -> get_OLELaunch(This,Launch)

#define IAcadDatabasePreferences_put_OLELaunch(This,Launch)	\
    (This)->lpVtbl -> put_OLELaunch(This,Launch)

#define IAcadDatabasePreferences_get_AllowLongSymbolNames(This,LongNames)	\
    (This)->lpVtbl -> get_AllowLongSymbolNames(This,LongNames)

#define IAcadDatabasePreferences_put_AllowLongSymbolNames(This,LongNames)	\
    (This)->lpVtbl -> put_AllowLongSymbolNames(This,LongNames)

#define IAcadDatabasePreferences_get_ObjectSortBySelection(This,Sort)	\
    (This)->lpVtbl -> get_ObjectSortBySelection(This,Sort)

#define IAcadDatabasePreferences_put_ObjectSortBySelection(This,Sort)	\
    (This)->lpVtbl -> put_ObjectSortBySelection(This,Sort)

#define IAcadDatabasePreferences_get_ObjectSortBySnap(This,Sort)	\
    (This)->lpVtbl -> get_ObjectSortBySnap(This,Sort)

#define IAcadDatabasePreferences_put_ObjectSortBySnap(This,Sort)	\
    (This)->lpVtbl -> put_ObjectSortBySnap(This,Sort)

#define IAcadDatabasePreferences_get_ObjectSortByRedraws(This,Sort)	\
    (This)->lpVtbl -> get_ObjectSortByRedraws(This,Sort)

#define IAcadDatabasePreferences_put_ObjectSortByRedraws(This,Sort)	\
    (This)->lpVtbl -> put_ObjectSortByRedraws(This,Sort)

#define IAcadDatabasePreferences_get_ObjectSortByRegens(This,Sort)	\
    (This)->lpVtbl -> get_ObjectSortByRegens(This,Sort)

#define IAcadDatabasePreferences_put_ObjectSortByRegens(This,Sort)	\
    (This)->lpVtbl -> put_ObjectSortByRegens(This,Sort)

#define IAcadDatabasePreferences_get_ObjectSortByPlotting(This,Sort)	\
    (This)->lpVtbl -> get_ObjectSortByPlotting(This,Sort)

#define IAcadDatabasePreferences_put_ObjectSortByPlotting(This,Sort)	\
    (This)->lpVtbl -> put_ObjectSortByPlotting(This,Sort)

#define IAcadDatabasePreferences_get_ObjectSortByPSOutput(This,Sort)	\
    (This)->lpVtbl -> get_ObjectSortByPSOutput(This,Sort)

#define IAcadDatabasePreferences_put_ObjectSortByPSOutput(This,Sort)	\
    (This)->lpVtbl -> put_ObjectSortByPSOutput(This,Sort)

#define IAcadDatabasePreferences_put_ContourLinesPerSurface(This,Path)	\
    (This)->lpVtbl -> put_ContourLinesPerSurface(This,Path)

#define IAcadDatabasePreferences_get_ContourLinesPerSurface(This,Path)	\
    (This)->lpVtbl -> get_ContourLinesPerSurface(This,Path)

#define IAcadDatabasePreferences_put_DisplaySilhouette(This,Path)	\
    (This)->lpVtbl -> put_DisplaySilhouette(This,Path)

#define IAcadDatabasePreferences_get_DisplaySilhouette(This,Path)	\
    (This)->lpVtbl -> get_DisplaySilhouette(This,Path)

#define IAcadDatabasePreferences_put_MaxActiveViewports(This,Path)	\
    (This)->lpVtbl -> put_MaxActiveViewports(This,Path)

#define IAcadDatabasePreferences_get_MaxActiveViewports(This,Path)	\
    (This)->lpVtbl -> get_MaxActiveViewports(This,Path)

#define IAcadDatabasePreferences_put_RenderSmoothness(This,Path)	\
    (This)->lpVtbl -> put_RenderSmoothness(This,Path)

#define IAcadDatabasePreferences_get_RenderSmoothness(This,Path)	\
    (This)->lpVtbl -> get_RenderSmoothness(This,Path)

#define IAcadDatabasePreferences_put_SegmentPerPolyline(This,Path)	\
    (This)->lpVtbl -> put_SegmentPerPolyline(This,Path)

#define IAcadDatabasePreferences_get_SegmentPerPolyline(This,Path)	\
    (This)->lpVtbl -> get_SegmentPerPolyline(This,Path)

#define IAcadDatabasePreferences_put_TextFrameDisplay(This,Path)	\
    (This)->lpVtbl -> put_TextFrameDisplay(This,Path)

#define IAcadDatabasePreferences_get_TextFrameDisplay(This,Path)	\
    (This)->lpVtbl -> get_TextFrameDisplay(This,Path)

#define IAcadDatabasePreferences_put_Lineweight(This,Path)	\
    (This)->lpVtbl -> put_Lineweight(This,Path)

#define IAcadDatabasePreferences_get_Lineweight(This,Path)	\
    (This)->lpVtbl -> get_Lineweight(This,Path)

#define IAcadDatabasePreferences_put_LineWeightDisplay(This,Path)	\
    (This)->lpVtbl -> put_LineWeightDisplay(This,Path)

#define IAcadDatabasePreferences_get_LineWeightDisplay(This,Path)	\
    (This)->lpVtbl -> get_LineWeightDisplay(This,Path)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_get_Application_Proxy( 
    IAcadDatabasePreferences * This,
    /* [retval][out] */ IDispatch **pAppObj);


void __RPC_STUB IAcadDatabasePreferences_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_get_SolidFill_Proxy( 
    IAcadDatabasePreferences * This,
    /* [retval][out] */ VARIANT_BOOL *Fill);


void __RPC_STUB IAcadDatabasePreferences_get_SolidFill_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_put_SolidFill_Proxy( 
    IAcadDatabasePreferences * This,
    /* [in] */ VARIANT_BOOL Fill);


void __RPC_STUB IAcadDatabasePreferences_put_SolidFill_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_get_XRefEdit_Proxy( 
    IAcadDatabasePreferences * This,
    /* [retval][out] */ VARIANT_BOOL *Edit);


void __RPC_STUB IAcadDatabasePreferences_get_XRefEdit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_put_XRefEdit_Proxy( 
    IAcadDatabasePreferences * This,
    /* [in] */ VARIANT_BOOL Edit);


void __RPC_STUB IAcadDatabasePreferences_put_XRefEdit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_get_XRefLayerVisibility_Proxy( 
    IAcadDatabasePreferences * This,
    /* [retval][out] */ VARIANT_BOOL *XRefLayerVis);


void __RPC_STUB IAcadDatabasePreferences_get_XRefLayerVisibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_put_XRefLayerVisibility_Proxy( 
    IAcadDatabasePreferences * This,
    /* [in] */ VARIANT_BOOL XRefLayerVis);


void __RPC_STUB IAcadDatabasePreferences_put_XRefLayerVisibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_get_OLELaunch_Proxy( 
    IAcadDatabasePreferences * This,
    /* [retval][out] */ VARIANT_BOOL *Launch);


void __RPC_STUB IAcadDatabasePreferences_get_OLELaunch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_put_OLELaunch_Proxy( 
    IAcadDatabasePreferences * This,
    /* [in] */ VARIANT_BOOL Launch);


void __RPC_STUB IAcadDatabasePreferences_put_OLELaunch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_get_AllowLongSymbolNames_Proxy( 
    IAcadDatabasePreferences * This,
    /* [retval][out] */ VARIANT_BOOL *LongNames);


void __RPC_STUB IAcadDatabasePreferences_get_AllowLongSymbolNames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_put_AllowLongSymbolNames_Proxy( 
    IAcadDatabasePreferences * This,
    /* [in] */ VARIANT_BOOL LongNames);


void __RPC_STUB IAcadDatabasePreferences_put_AllowLongSymbolNames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_get_ObjectSortBySelection_Proxy( 
    IAcadDatabasePreferences * This,
    /* [retval][out] */ VARIANT_BOOL *Sort);


void __RPC_STUB IAcadDatabasePreferences_get_ObjectSortBySelection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_put_ObjectSortBySelection_Proxy( 
    IAcadDatabasePreferences * This,
    /* [in] */ VARIANT_BOOL Sort);


void __RPC_STUB IAcadDatabasePreferences_put_ObjectSortBySelection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_get_ObjectSortBySnap_Proxy( 
    IAcadDatabasePreferences * This,
    /* [retval][out] */ VARIANT_BOOL *Sort);


void __RPC_STUB IAcadDatabasePreferences_get_ObjectSortBySnap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_put_ObjectSortBySnap_Proxy( 
    IAcadDatabasePreferences * This,
    /* [in] */ VARIANT_BOOL Sort);


void __RPC_STUB IAcadDatabasePreferences_put_ObjectSortBySnap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_get_ObjectSortByRedraws_Proxy( 
    IAcadDatabasePreferences * This,
    /* [retval][out] */ VARIANT_BOOL *Sort);


void __RPC_STUB IAcadDatabasePreferences_get_ObjectSortByRedraws_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_put_ObjectSortByRedraws_Proxy( 
    IAcadDatabasePreferences * This,
    /* [in] */ VARIANT_BOOL Sort);


void __RPC_STUB IAcadDatabasePreferences_put_ObjectSortByRedraws_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_get_ObjectSortByRegens_Proxy( 
    IAcadDatabasePreferences * This,
    /* [retval][out] */ VARIANT_BOOL *Sort);


void __RPC_STUB IAcadDatabasePreferences_get_ObjectSortByRegens_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_put_ObjectSortByRegens_Proxy( 
    IAcadDatabasePreferences * This,
    /* [in] */ VARIANT_BOOL Sort);


void __RPC_STUB IAcadDatabasePreferences_put_ObjectSortByRegens_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_get_ObjectSortByPlotting_Proxy( 
    IAcadDatabasePreferences * This,
    /* [retval][out] */ VARIANT_BOOL *Sort);


void __RPC_STUB IAcadDatabasePreferences_get_ObjectSortByPlotting_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_put_ObjectSortByPlotting_Proxy( 
    IAcadDatabasePreferences * This,
    /* [in] */ VARIANT_BOOL Sort);


void __RPC_STUB IAcadDatabasePreferences_put_ObjectSortByPlotting_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_get_ObjectSortByPSOutput_Proxy( 
    IAcadDatabasePreferences * This,
    /* [retval][out] */ VARIANT_BOOL *Sort);


void __RPC_STUB IAcadDatabasePreferences_get_ObjectSortByPSOutput_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_put_ObjectSortByPSOutput_Proxy( 
    IAcadDatabasePreferences * This,
    /* [in] */ VARIANT_BOOL Sort);


void __RPC_STUB IAcadDatabasePreferences_put_ObjectSortByPSOutput_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_put_ContourLinesPerSurface_Proxy( 
    IAcadDatabasePreferences * This,
    /* [in] */ long Path);


void __RPC_STUB IAcadDatabasePreferences_put_ContourLinesPerSurface_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_get_ContourLinesPerSurface_Proxy( 
    IAcadDatabasePreferences * This,
    /* [retval][out] */ long *Path);


void __RPC_STUB IAcadDatabasePreferences_get_ContourLinesPerSurface_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_put_DisplaySilhouette_Proxy( 
    IAcadDatabasePreferences * This,
    /* [in] */ VARIANT_BOOL Path);


void __RPC_STUB IAcadDatabasePreferences_put_DisplaySilhouette_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_get_DisplaySilhouette_Proxy( 
    IAcadDatabasePreferences * This,
    /* [retval][out] */ VARIANT_BOOL *Path);


void __RPC_STUB IAcadDatabasePreferences_get_DisplaySilhouette_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_put_MaxActiveViewports_Proxy( 
    IAcadDatabasePreferences * This,
    /* [in] */ long Path);


void __RPC_STUB IAcadDatabasePreferences_put_MaxActiveViewports_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_get_MaxActiveViewports_Proxy( 
    IAcadDatabasePreferences * This,
    /* [retval][out] */ long *Path);


void __RPC_STUB IAcadDatabasePreferences_get_MaxActiveViewports_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_put_RenderSmoothness_Proxy( 
    IAcadDatabasePreferences * This,
    /* [in] */ double Path);


void __RPC_STUB IAcadDatabasePreferences_put_RenderSmoothness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_get_RenderSmoothness_Proxy( 
    IAcadDatabasePreferences * This,
    /* [retval][out] */ double *Path);


void __RPC_STUB IAcadDatabasePreferences_get_RenderSmoothness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_put_SegmentPerPolyline_Proxy( 
    IAcadDatabasePreferences * This,
    /* [in] */ long Path);


void __RPC_STUB IAcadDatabasePreferences_put_SegmentPerPolyline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_get_SegmentPerPolyline_Proxy( 
    IAcadDatabasePreferences * This,
    /* [retval][out] */ long *Path);


void __RPC_STUB IAcadDatabasePreferences_get_SegmentPerPolyline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_put_TextFrameDisplay_Proxy( 
    IAcadDatabasePreferences * This,
    /* [in] */ VARIANT_BOOL Path);


void __RPC_STUB IAcadDatabasePreferences_put_TextFrameDisplay_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_get_TextFrameDisplay_Proxy( 
    IAcadDatabasePreferences * This,
    /* [retval][out] */ VARIANT_BOOL *Path);


void __RPC_STUB IAcadDatabasePreferences_get_TextFrameDisplay_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_put_Lineweight_Proxy( 
    IAcadDatabasePreferences * This,
    /* [in] */ AcLineWeight Path);


void __RPC_STUB IAcadDatabasePreferences_put_Lineweight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_get_Lineweight_Proxy( 
    IAcadDatabasePreferences * This,
    /* [retval][out] */ AcLineWeight *Path);


void __RPC_STUB IAcadDatabasePreferences_get_Lineweight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_put_LineWeightDisplay_Proxy( 
    IAcadDatabasePreferences * This,
    /* [in] */ VARIANT_BOOL Path);


void __RPC_STUB IAcadDatabasePreferences_put_LineWeightDisplay_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadDatabasePreferences_get_LineWeightDisplay_Proxy( 
    IAcadDatabasePreferences * This,
    /* [retval][out] */ VARIANT_BOOL *Path);


void __RPC_STUB IAcadDatabasePreferences_get_LineWeightDisplay_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadDatabasePreferences_INTERFACE_DEFINED__ */


#ifndef __IAcadFileDependencies_INTERFACE_DEFINED__
#define __IAcadFileDependencies_INTERFACE_DEFINED__

/* interface IAcadFileDependencies */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadFileDependencies;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C8985250-C2A1-47B4-8928-CA81A496EB27")
    IAcadFileDependencies : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadFileDependency **pItem) = 0;
        
        virtual /* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch **pAppObj) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CreateEntry( 
            /* [in] */ BSTR Feature,
            /* [in] */ BSTR FullFileName,
            /* [in] */ VARIANT_BOOL AffectsGraphics,
            /* [in] */ VARIANT_BOOL noIncrement,
            /* [retval][out] */ long *Index) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ BSTR Feature,
            /* [in] */ BSTR FullFileName,
            /* [retval][out] */ long *Index) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RemoveEntry( 
            /* [in] */ long Index,
            /* [in] */ VARIANT_BOOL forceRemove) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE UpdateEntry( 
            /* [in] */ long Index) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadFileDependenciesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadFileDependencies * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadFileDependencies * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadFileDependencies * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadFileDependencies * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadFileDependencies * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadFileDependencies * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadFileDependencies * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadFileDependencies * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadFileDependency **pItem);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadFileDependencies * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadFileDependencies * This,
            /* [retval][out] */ IDispatch **pAppObj);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadFileDependencies * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CreateEntry )( 
            IAcadFileDependencies * This,
            /* [in] */ BSTR Feature,
            /* [in] */ BSTR FullFileName,
            /* [in] */ VARIANT_BOOL AffectsGraphics,
            /* [in] */ VARIANT_BOOL noIncrement,
            /* [retval][out] */ long *Index);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            IAcadFileDependencies * This,
            /* [in] */ BSTR Feature,
            /* [in] */ BSTR FullFileName,
            /* [retval][out] */ long *Index);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveEntry )( 
            IAcadFileDependencies * This,
            /* [in] */ long Index,
            /* [in] */ VARIANT_BOOL forceRemove);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *UpdateEntry )( 
            IAcadFileDependencies * This,
            /* [in] */ long Index);
        
        END_INTERFACE
    } IAcadFileDependenciesVtbl;

    interface IAcadFileDependencies
    {
        CONST_VTBL struct IAcadFileDependenciesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadFileDependencies_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadFileDependencies_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadFileDependencies_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadFileDependencies_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadFileDependencies_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadFileDependencies_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadFileDependencies_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadFileDependencies_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadFileDependencies_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadFileDependencies_get_Application(This,pAppObj)	\
    (This)->lpVtbl -> get_Application(This,pAppObj)

#define IAcadFileDependencies_get_Count(This,pVal)	\
    (This)->lpVtbl -> get_Count(This,pVal)

#define IAcadFileDependencies_CreateEntry(This,Feature,FullFileName,AffectsGraphics,noIncrement,Index)	\
    (This)->lpVtbl -> CreateEntry(This,Feature,FullFileName,AffectsGraphics,noIncrement,Index)

#define IAcadFileDependencies_IndexOf(This,Feature,FullFileName,Index)	\
    (This)->lpVtbl -> IndexOf(This,Feature,FullFileName,Index)

#define IAcadFileDependencies_RemoveEntry(This,Index,forceRemove)	\
    (This)->lpVtbl -> RemoveEntry(This,Index,forceRemove)

#define IAcadFileDependencies_UpdateEntry(This,Index)	\
    (This)->lpVtbl -> UpdateEntry(This,Index)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadFileDependencies_Item_Proxy( 
    IAcadFileDependencies * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ IAcadFileDependency **pItem);


void __RPC_STUB IAcadFileDependencies_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadFileDependencies_get__NewEnum_Proxy( 
    IAcadFileDependencies * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IAcadFileDependencies_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadFileDependencies_get_Application_Proxy( 
    IAcadFileDependencies * This,
    /* [retval][out] */ IDispatch **pAppObj);


void __RPC_STUB IAcadFileDependencies_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadFileDependencies_get_Count_Proxy( 
    IAcadFileDependencies * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IAcadFileDependencies_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadFileDependencies_CreateEntry_Proxy( 
    IAcadFileDependencies * This,
    /* [in] */ BSTR Feature,
    /* [in] */ BSTR FullFileName,
    /* [in] */ VARIANT_BOOL AffectsGraphics,
    /* [in] */ VARIANT_BOOL noIncrement,
    /* [retval][out] */ long *Index);


void __RPC_STUB IAcadFileDependencies_CreateEntry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadFileDependencies_IndexOf_Proxy( 
    IAcadFileDependencies * This,
    /* [in] */ BSTR Feature,
    /* [in] */ BSTR FullFileName,
    /* [retval][out] */ long *Index);


void __RPC_STUB IAcadFileDependencies_IndexOf_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadFileDependencies_RemoveEntry_Proxy( 
    IAcadFileDependencies * This,
    /* [in] */ long Index,
    /* [in] */ VARIANT_BOOL forceRemove);


void __RPC_STUB IAcadFileDependencies_RemoveEntry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadFileDependencies_UpdateEntry_Proxy( 
    IAcadFileDependencies * This,
    /* [in] */ long Index);


void __RPC_STUB IAcadFileDependencies_UpdateEntry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadFileDependencies_INTERFACE_DEFINED__ */


#ifndef __IAcadFileDependency_INTERFACE_DEFINED__
#define __IAcadFileDependency_INTERFACE_DEFINED__

/* interface IAcadFileDependency */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadFileDependency;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("136EBBF4-66F5-41E8-BE4F-75BCB08A7401")
    IAcadFileDependency : public IDispatch
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullFileName( 
            /* [retval][out] */ BSTR *FullFileName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileName( 
            /* [retval][out] */ BSTR *FileName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_FoundPath( 
            /* [retval][out] */ BSTR *FoundPath) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_FingerprintGuid( 
            /* [retval][out] */ BSTR *FingerprintGuid) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_VersionGuid( 
            /* [retval][out] */ BSTR *VersionGuid) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Feature( 
            /* [retval][out] */ BSTR *Feature) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsModified( 
            /* [retval][out] */ VARIANT_BOOL *IsModified) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AffectsGraphics( 
            /* [retval][out] */ VARIANT_BOOL *AffectsGraphics) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Index( 
            /* [retval][out] */ long *Index) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TimeStamp( 
            /* [retval][out] */ long *TimeStamp) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileSize( 
            /* [retval][out] */ long *FileSize) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReferenceCount( 
            /* [retval][out] */ long *refCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadFileDependencyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadFileDependency * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadFileDependency * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadFileDependency * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadFileDependency * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadFileDependency * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadFileDependency * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadFileDependency * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullFileName )( 
            IAcadFileDependency * This,
            /* [retval][out] */ BSTR *FullFileName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            IAcadFileDependency * This,
            /* [retval][out] */ BSTR *FileName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FoundPath )( 
            IAcadFileDependency * This,
            /* [retval][out] */ BSTR *FoundPath);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FingerprintGuid )( 
            IAcadFileDependency * This,
            /* [retval][out] */ BSTR *FingerprintGuid);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VersionGuid )( 
            IAcadFileDependency * This,
            /* [retval][out] */ BSTR *VersionGuid);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Feature )( 
            IAcadFileDependency * This,
            /* [retval][out] */ BSTR *Feature);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsModified )( 
            IAcadFileDependency * This,
            /* [retval][out] */ VARIANT_BOOL *IsModified);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AffectsGraphics )( 
            IAcadFileDependency * This,
            /* [retval][out] */ VARIANT_BOOL *AffectsGraphics);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Index )( 
            IAcadFileDependency * This,
            /* [retval][out] */ long *Index);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TimeStamp )( 
            IAcadFileDependency * This,
            /* [retval][out] */ long *TimeStamp);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileSize )( 
            IAcadFileDependency * This,
            /* [retval][out] */ long *FileSize);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReferenceCount )( 
            IAcadFileDependency * This,
            /* [retval][out] */ long *refCount);
        
        END_INTERFACE
    } IAcadFileDependencyVtbl;

    interface IAcadFileDependency
    {
        CONST_VTBL struct IAcadFileDependencyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadFileDependency_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadFileDependency_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadFileDependency_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadFileDependency_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadFileDependency_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadFileDependency_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadFileDependency_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadFileDependency_get_FullFileName(This,FullFileName)	\
    (This)->lpVtbl -> get_FullFileName(This,FullFileName)

#define IAcadFileDependency_get_FileName(This,FileName)	\
    (This)->lpVtbl -> get_FileName(This,FileName)

#define IAcadFileDependency_get_FoundPath(This,FoundPath)	\
    (This)->lpVtbl -> get_FoundPath(This,FoundPath)

#define IAcadFileDependency_get_FingerprintGuid(This,FingerprintGuid)	\
    (This)->lpVtbl -> get_FingerprintGuid(This,FingerprintGuid)

#define IAcadFileDependency_get_VersionGuid(This,VersionGuid)	\
    (This)->lpVtbl -> get_VersionGuid(This,VersionGuid)

#define IAcadFileDependency_get_Feature(This,Feature)	\
    (This)->lpVtbl -> get_Feature(This,Feature)

#define IAcadFileDependency_get_IsModified(This,IsModified)	\
    (This)->lpVtbl -> get_IsModified(This,IsModified)

#define IAcadFileDependency_get_AffectsGraphics(This,AffectsGraphics)	\
    (This)->lpVtbl -> get_AffectsGraphics(This,AffectsGraphics)

#define IAcadFileDependency_get_Index(This,Index)	\
    (This)->lpVtbl -> get_Index(This,Index)

#define IAcadFileDependency_get_TimeStamp(This,TimeStamp)	\
    (This)->lpVtbl -> get_TimeStamp(This,TimeStamp)

#define IAcadFileDependency_get_FileSize(This,FileSize)	\
    (This)->lpVtbl -> get_FileSize(This,FileSize)

#define IAcadFileDependency_get_ReferenceCount(This,refCount)	\
    (This)->lpVtbl -> get_ReferenceCount(This,refCount)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadFileDependency_get_FullFileName_Proxy( 
    IAcadFileDependency * This,
    /* [retval][out] */ BSTR *FullFileName);


void __RPC_STUB IAcadFileDependency_get_FullFileName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadFileDependency_get_FileName_Proxy( 
    IAcadFileDependency * This,
    /* [retval][out] */ BSTR *FileName);


void __RPC_STUB IAcadFileDependency_get_FileName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadFileDependency_get_FoundPath_Proxy( 
    IAcadFileDependency * This,
    /* [retval][out] */ BSTR *FoundPath);


void __RPC_STUB IAcadFileDependency_get_FoundPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadFileDependency_get_FingerprintGuid_Proxy( 
    IAcadFileDependency * This,
    /* [retval][out] */ BSTR *FingerprintGuid);


void __RPC_STUB IAcadFileDependency_get_FingerprintGuid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadFileDependency_get_VersionGuid_Proxy( 
    IAcadFileDependency * This,
    /* [retval][out] */ BSTR *VersionGuid);


void __RPC_STUB IAcadFileDependency_get_VersionGuid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadFileDependency_get_Feature_Proxy( 
    IAcadFileDependency * This,
    /* [retval][out] */ BSTR *Feature);


void __RPC_STUB IAcadFileDependency_get_Feature_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadFileDependency_get_IsModified_Proxy( 
    IAcadFileDependency * This,
    /* [retval][out] */ VARIANT_BOOL *IsModified);


void __RPC_STUB IAcadFileDependency_get_IsModified_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadFileDependency_get_AffectsGraphics_Proxy( 
    IAcadFileDependency * This,
    /* [retval][out] */ VARIANT_BOOL *AffectsGraphics);


void __RPC_STUB IAcadFileDependency_get_AffectsGraphics_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadFileDependency_get_Index_Proxy( 
    IAcadFileDependency * This,
    /* [retval][out] */ long *Index);


void __RPC_STUB IAcadFileDependency_get_Index_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadFileDependency_get_TimeStamp_Proxy( 
    IAcadFileDependency * This,
    /* [retval][out] */ long *TimeStamp);


void __RPC_STUB IAcadFileDependency_get_TimeStamp_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadFileDependency_get_FileSize_Proxy( 
    IAcadFileDependency * This,
    /* [retval][out] */ long *FileSize);


void __RPC_STUB IAcadFileDependency_get_FileSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadFileDependency_get_ReferenceCount_Proxy( 
    IAcadFileDependency * This,
    /* [retval][out] */ long *refCount);


void __RPC_STUB IAcadFileDependency_get_ReferenceCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadFileDependency_INTERFACE_DEFINED__ */


#ifndef __IAcadSummaryInfo_INTERFACE_DEFINED__
#define __IAcadSummaryInfo_INTERFACE_DEFINED__

/* interface IAcadSummaryInfo */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadSummaryInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("136EBBF5-66F5-41E8-BE4F-75BCB08A7401")
    IAcadSummaryInfo : public IDispatch
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Author( 
            /* [retval][out] */ BSTR *pAuthor) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Author( 
            /* [in] */ BSTR pAuthor) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Comments( 
            /* [retval][out] */ BSTR *pComments) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Comments( 
            /* [in] */ BSTR pComments) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HyperlinkBase( 
            /* [retval][out] */ BSTR *pHyperlinkBase) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_HyperlinkBase( 
            /* [in] */ BSTR pHyperlinkBase) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Keywords( 
            /* [retval][out] */ BSTR *pKeywords) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Keywords( 
            /* [in] */ BSTR pKeywords) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastSavedBy( 
            /* [retval][out] */ BSTR *pLastSavedBy) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LastSavedBy( 
            /* [in] */ BSTR pLastSavedBy) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_RevisionNumber( 
            /* [retval][out] */ BSTR *pRevisionNumber) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_RevisionNumber( 
            /* [in] */ BSTR pRevisionNumber) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *pSubject) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR pSubject) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Title( 
            /* [retval][out] */ BSTR *pTitle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Title( 
            /* [in] */ BSTR pTitle) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE NumCustomInfo( 
            /* [retval][out] */ int *Index) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCustomByIndex( 
            /* [in] */ int Index,
            /* [out] */ BSTR *pKey,
            /* [out] */ BSTR *pValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCustomByKey( 
            /* [in] */ BSTR key,
            /* [out] */ BSTR *pValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCustomByIndex( 
            /* [in] */ int Index,
            /* [in] */ BSTR key,
            /* [in] */ BSTR Value) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCustomByKey( 
            /* [in] */ BSTR key,
            /* [in] */ BSTR Value) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddCustomInfo( 
            /* [in] */ BSTR key,
            /* [in] */ BSTR Value) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RemoveCustomByIndex( 
            /* [in] */ int Index) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RemoveCustomByKey( 
            /* [in] */ BSTR key) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadSummaryInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadSummaryInfo * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadSummaryInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadSummaryInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadSummaryInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadSummaryInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadSummaryInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadSummaryInfo * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IAcadSummaryInfo * This,
            /* [retval][out] */ BSTR *pAuthor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Author )( 
            IAcadSummaryInfo * This,
            /* [in] */ BSTR pAuthor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Comments )( 
            IAcadSummaryInfo * This,
            /* [retval][out] */ BSTR *pComments);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Comments )( 
            IAcadSummaryInfo * This,
            /* [in] */ BSTR pComments);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HyperlinkBase )( 
            IAcadSummaryInfo * This,
            /* [retval][out] */ BSTR *pHyperlinkBase);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HyperlinkBase )( 
            IAcadSummaryInfo * This,
            /* [in] */ BSTR pHyperlinkBase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Keywords )( 
            IAcadSummaryInfo * This,
            /* [retval][out] */ BSTR *pKeywords);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Keywords )( 
            IAcadSummaryInfo * This,
            /* [in] */ BSTR pKeywords);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastSavedBy )( 
            IAcadSummaryInfo * This,
            /* [retval][out] */ BSTR *pLastSavedBy);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LastSavedBy )( 
            IAcadSummaryInfo * This,
            /* [in] */ BSTR pLastSavedBy);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RevisionNumber )( 
            IAcadSummaryInfo * This,
            /* [retval][out] */ BSTR *pRevisionNumber);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RevisionNumber )( 
            IAcadSummaryInfo * This,
            /* [in] */ BSTR pRevisionNumber);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            IAcadSummaryInfo * This,
            /* [retval][out] */ BSTR *pSubject);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            IAcadSummaryInfo * This,
            /* [in] */ BSTR pSubject);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IAcadSummaryInfo * This,
            /* [retval][out] */ BSTR *pTitle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Title )( 
            IAcadSummaryInfo * This,
            /* [in] */ BSTR pTitle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *NumCustomInfo )( 
            IAcadSummaryInfo * This,
            /* [retval][out] */ int *Index);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCustomByIndex )( 
            IAcadSummaryInfo * This,
            /* [in] */ int Index,
            /* [out] */ BSTR *pKey,
            /* [out] */ BSTR *pValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCustomByKey )( 
            IAcadSummaryInfo * This,
            /* [in] */ BSTR key,
            /* [out] */ BSTR *pValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCustomByIndex )( 
            IAcadSummaryInfo * This,
            /* [in] */ int Index,
            /* [in] */ BSTR key,
            /* [in] */ BSTR Value);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCustomByKey )( 
            IAcadSummaryInfo * This,
            /* [in] */ BSTR key,
            /* [in] */ BSTR Value);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCustomInfo )( 
            IAcadSummaryInfo * This,
            /* [in] */ BSTR key,
            /* [in] */ BSTR Value);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveCustomByIndex )( 
            IAcadSummaryInfo * This,
            /* [in] */ int Index);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveCustomByKey )( 
            IAcadSummaryInfo * This,
            /* [in] */ BSTR key);
        
        END_INTERFACE
    } IAcadSummaryInfoVtbl;

    interface IAcadSummaryInfo
    {
        CONST_VTBL struct IAcadSummaryInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadSummaryInfo_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadSummaryInfo_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadSummaryInfo_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadSummaryInfo_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadSummaryInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadSummaryInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadSummaryInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadSummaryInfo_get_Author(This,pAuthor)	\
    (This)->lpVtbl -> get_Author(This,pAuthor)

#define IAcadSummaryInfo_put_Author(This,pAuthor)	\
    (This)->lpVtbl -> put_Author(This,pAuthor)

#define IAcadSummaryInfo_get_Comments(This,pComments)	\
    (This)->lpVtbl -> get_Comments(This,pComments)

#define IAcadSummaryInfo_put_Comments(This,pComments)	\
    (This)->lpVtbl -> put_Comments(This,pComments)

#define IAcadSummaryInfo_get_HyperlinkBase(This,pHyperlinkBase)	\
    (This)->lpVtbl -> get_HyperlinkBase(This,pHyperlinkBase)

#define IAcadSummaryInfo_put_HyperlinkBase(This,pHyperlinkBase)	\
    (This)->lpVtbl -> put_HyperlinkBase(This,pHyperlinkBase)

#define IAcadSummaryInfo_get_Keywords(This,pKeywords)	\
    (This)->lpVtbl -> get_Keywords(This,pKeywords)

#define IAcadSummaryInfo_put_Keywords(This,pKeywords)	\
    (This)->lpVtbl -> put_Keywords(This,pKeywords)

#define IAcadSummaryInfo_get_LastSavedBy(This,pLastSavedBy)	\
    (This)->lpVtbl -> get_LastSavedBy(This,pLastSavedBy)

#define IAcadSummaryInfo_put_LastSavedBy(This,pLastSavedBy)	\
    (This)->lpVtbl -> put_LastSavedBy(This,pLastSavedBy)

#define IAcadSummaryInfo_get_RevisionNumber(This,pRevisionNumber)	\
    (This)->lpVtbl -> get_RevisionNumber(This,pRevisionNumber)

#define IAcadSummaryInfo_put_RevisionNumber(This,pRevisionNumber)	\
    (This)->lpVtbl -> put_RevisionNumber(This,pRevisionNumber)

#define IAcadSummaryInfo_get_Subject(This,pSubject)	\
    (This)->lpVtbl -> get_Subject(This,pSubject)

#define IAcadSummaryInfo_put_Subject(This,pSubject)	\
    (This)->lpVtbl -> put_Subject(This,pSubject)

#define IAcadSummaryInfo_get_Title(This,pTitle)	\
    (This)->lpVtbl -> get_Title(This,pTitle)

#define IAcadSummaryInfo_put_Title(This,pTitle)	\
    (This)->lpVtbl -> put_Title(This,pTitle)

#define IAcadSummaryInfo_NumCustomInfo(This,Index)	\
    (This)->lpVtbl -> NumCustomInfo(This,Index)

#define IAcadSummaryInfo_GetCustomByIndex(This,Index,pKey,pValue)	\
    (This)->lpVtbl -> GetCustomByIndex(This,Index,pKey,pValue)

#define IAcadSummaryInfo_GetCustomByKey(This,key,pValue)	\
    (This)->lpVtbl -> GetCustomByKey(This,key,pValue)

#define IAcadSummaryInfo_SetCustomByIndex(This,Index,key,Value)	\
    (This)->lpVtbl -> SetCustomByIndex(This,Index,key,Value)

#define IAcadSummaryInfo_SetCustomByKey(This,key,Value)	\
    (This)->lpVtbl -> SetCustomByKey(This,key,Value)

#define IAcadSummaryInfo_AddCustomInfo(This,key,Value)	\
    (This)->lpVtbl -> AddCustomInfo(This,key,Value)

#define IAcadSummaryInfo_RemoveCustomByIndex(This,Index)	\
    (This)->lpVtbl -> RemoveCustomByIndex(This,Index)

#define IAcadSummaryInfo_RemoveCustomByKey(This,key)	\
    (This)->lpVtbl -> RemoveCustomByKey(This,key)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_get_Author_Proxy( 
    IAcadSummaryInfo * This,
    /* [retval][out] */ BSTR *pAuthor);


void __RPC_STUB IAcadSummaryInfo_get_Author_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_put_Author_Proxy( 
    IAcadSummaryInfo * This,
    /* [in] */ BSTR pAuthor);


void __RPC_STUB IAcadSummaryInfo_put_Author_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_get_Comments_Proxy( 
    IAcadSummaryInfo * This,
    /* [retval][out] */ BSTR *pComments);


void __RPC_STUB IAcadSummaryInfo_get_Comments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_put_Comments_Proxy( 
    IAcadSummaryInfo * This,
    /* [in] */ BSTR pComments);


void __RPC_STUB IAcadSummaryInfo_put_Comments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_get_HyperlinkBase_Proxy( 
    IAcadSummaryInfo * This,
    /* [retval][out] */ BSTR *pHyperlinkBase);


void __RPC_STUB IAcadSummaryInfo_get_HyperlinkBase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_put_HyperlinkBase_Proxy( 
    IAcadSummaryInfo * This,
    /* [in] */ BSTR pHyperlinkBase);


void __RPC_STUB IAcadSummaryInfo_put_HyperlinkBase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_get_Keywords_Proxy( 
    IAcadSummaryInfo * This,
    /* [retval][out] */ BSTR *pKeywords);


void __RPC_STUB IAcadSummaryInfo_get_Keywords_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_put_Keywords_Proxy( 
    IAcadSummaryInfo * This,
    /* [in] */ BSTR pKeywords);


void __RPC_STUB IAcadSummaryInfo_put_Keywords_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_get_LastSavedBy_Proxy( 
    IAcadSummaryInfo * This,
    /* [retval][out] */ BSTR *pLastSavedBy);


void __RPC_STUB IAcadSummaryInfo_get_LastSavedBy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_put_LastSavedBy_Proxy( 
    IAcadSummaryInfo * This,
    /* [in] */ BSTR pLastSavedBy);


void __RPC_STUB IAcadSummaryInfo_put_LastSavedBy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_get_RevisionNumber_Proxy( 
    IAcadSummaryInfo * This,
    /* [retval][out] */ BSTR *pRevisionNumber);


void __RPC_STUB IAcadSummaryInfo_get_RevisionNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_put_RevisionNumber_Proxy( 
    IAcadSummaryInfo * This,
    /* [in] */ BSTR pRevisionNumber);


void __RPC_STUB IAcadSummaryInfo_put_RevisionNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_get_Subject_Proxy( 
    IAcadSummaryInfo * This,
    /* [retval][out] */ BSTR *pSubject);


void __RPC_STUB IAcadSummaryInfo_get_Subject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_put_Subject_Proxy( 
    IAcadSummaryInfo * This,
    /* [in] */ BSTR pSubject);


void __RPC_STUB IAcadSummaryInfo_put_Subject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_get_Title_Proxy( 
    IAcadSummaryInfo * This,
    /* [retval][out] */ BSTR *pTitle);


void __RPC_STUB IAcadSummaryInfo_get_Title_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_put_Title_Proxy( 
    IAcadSummaryInfo * This,
    /* [in] */ BSTR pTitle);


void __RPC_STUB IAcadSummaryInfo_put_Title_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_NumCustomInfo_Proxy( 
    IAcadSummaryInfo * This,
    /* [retval][out] */ int *Index);


void __RPC_STUB IAcadSummaryInfo_NumCustomInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_GetCustomByIndex_Proxy( 
    IAcadSummaryInfo * This,
    /* [in] */ int Index,
    /* [out] */ BSTR *pKey,
    /* [out] */ BSTR *pValue);


void __RPC_STUB IAcadSummaryInfo_GetCustomByIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_GetCustomByKey_Proxy( 
    IAcadSummaryInfo * This,
    /* [in] */ BSTR key,
    /* [out] */ BSTR *pValue);


void __RPC_STUB IAcadSummaryInfo_GetCustomByKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_SetCustomByIndex_Proxy( 
    IAcadSummaryInfo * This,
    /* [in] */ int Index,
    /* [in] */ BSTR key,
    /* [in] */ BSTR Value);


void __RPC_STUB IAcadSummaryInfo_SetCustomByIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_SetCustomByKey_Proxy( 
    IAcadSummaryInfo * This,
    /* [in] */ BSTR key,
    /* [in] */ BSTR Value);


void __RPC_STUB IAcadSummaryInfo_SetCustomByKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_AddCustomInfo_Proxy( 
    IAcadSummaryInfo * This,
    /* [in] */ BSTR key,
    /* [in] */ BSTR Value);


void __RPC_STUB IAcadSummaryInfo_AddCustomInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_RemoveCustomByIndex_Proxy( 
    IAcadSummaryInfo * This,
    /* [in] */ int Index);


void __RPC_STUB IAcadSummaryInfo_RemoveCustomByIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSummaryInfo_RemoveCustomByKey_Proxy( 
    IAcadSummaryInfo * This,
    /* [in] */ BSTR key);


void __RPC_STUB IAcadSummaryInfo_RemoveCustomByKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadSummaryInfo_INTERFACE_DEFINED__ */


#ifndef __IAcadIdPair_INTERFACE_DEFINED__
#define __IAcadIdPair_INTERFACE_DEFINED__

/* interface IAcadIdPair */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadIdPair;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3E41A603-2870-4E69-81FC-CC672A41DD5F")
    IAcadIdPair : public IDispatch
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsCloned( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsOwnerXlated( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsPrimary( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_key( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch **ApplicationObject) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadIdPairVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadIdPair * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadIdPair * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadIdPair * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadIdPair * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadIdPair * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadIdPair * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadIdPair * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsCloned )( 
            IAcadIdPair * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsOwnerXlated )( 
            IAcadIdPair * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsPrimary )( 
            IAcadIdPair * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_key )( 
            IAcadIdPair * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            IAcadIdPair * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadIdPair * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        END_INTERFACE
    } IAcadIdPairVtbl;

    interface IAcadIdPair
    {
        CONST_VTBL struct IAcadIdPairVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadIdPair_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadIdPair_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadIdPair_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadIdPair_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadIdPair_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadIdPair_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadIdPair_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadIdPair_get_IsCloned(This,pVal)	\
    (This)->lpVtbl -> get_IsCloned(This,pVal)

#define IAcadIdPair_get_IsOwnerXlated(This,pVal)	\
    (This)->lpVtbl -> get_IsOwnerXlated(This,pVal)

#define IAcadIdPair_get_IsPrimary(This,pVal)	\
    (This)->lpVtbl -> get_IsPrimary(This,pVal)

#define IAcadIdPair_get_key(This,pVal)	\
    (This)->lpVtbl -> get_key(This,pVal)

#define IAcadIdPair_get_Value(This,pVal)	\
    (This)->lpVtbl -> get_Value(This,pVal)

#define IAcadIdPair_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadIdPair_get_IsCloned_Proxy( 
    IAcadIdPair * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IAcadIdPair_get_IsCloned_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadIdPair_get_IsOwnerXlated_Proxy( 
    IAcadIdPair * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IAcadIdPair_get_IsOwnerXlated_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadIdPair_get_IsPrimary_Proxy( 
    IAcadIdPair * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IAcadIdPair_get_IsPrimary_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadIdPair_get_key_Proxy( 
    IAcadIdPair * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IAcadIdPair_get_key_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadIdPair_get_Value_Proxy( 
    IAcadIdPair * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IAcadIdPair_get_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadIdPair_get_Application_Proxy( 
    IAcadIdPair * This,
    /* [retval][out] */ IDispatch **ApplicationObject);


void __RPC_STUB IAcadIdPair_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadIdPair_INTERFACE_DEFINED__ */


#ifndef __IAcadAttributeReference_INTERFACE_DEFINED__
#define __IAcadAttributeReference_INTERFACE_DEFINED__

/* interface IAcadAttributeReference */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadAttributeReference;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C3141F04-F068-4788-9483-C40D28E9AB9F")
    IAcadAttributeReference : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *Height) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_HorizontalAlignment( 
            /* [retval][out] */ AcHorizontalAlignment *horizAlign) = 0;
        
        virtual /* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_HorizontalAlignment( 
            /* [in] */ AcHorizontalAlignment horizAlign) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_InsertionPoint( 
            /* [retval][out] */ VARIANT *insPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_InsertionPoint( 
            /* [in] */ VARIANT insPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *Normal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT Normal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ObliqueAngle( 
            /* [retval][out] */ ACAD_ANGLE *obliAngle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ObliqueAngle( 
            /* [in] */ ACAD_ANGLE obliAngle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
            /* [retval][out] */ ACAD_ANGLE *rotAngle) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
            /* [in] */ ACAD_ANGLE rotAngle) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ScaleFactor( 
            /* [retval][out] */ ACAD_NOUNITS *scalFactor) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ScaleFactor( 
            /* [in] */ ACAD_NOUNITS scalFactor) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_StyleName( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_StyleName( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TagString( 
            /* [retval][out] */ BSTR *bstrTag) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TagString( 
            /* [in] */ BSTR bstrTag) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextAlignmentPoint( 
            /* [retval][out] */ VARIANT *alignPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextAlignmentPoint( 
            /* [in] */ VARIANT alignPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextGenerationFlag( 
            /* [retval][out] */ long *textGenFlag) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextGenerationFlag( 
            /* [in] */ long textGenFlag) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextString( 
            /* [retval][out] */ BSTR *bstrText) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextString( 
            /* [in] */ BSTR bstrText) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *Thickness) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thickness) = 0;
        
        virtual /* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_VerticalAlignment( 
            /* [retval][out] */ AcVerticalAlignment *vertiAlign) = 0;
        
        virtual /* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_VerticalAlignment( 
            /* [in] */ AcVerticalAlignment vertiAlign) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_FieldLength( 
            /* [retval][out] */ long *fieldLen) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_FieldLength( 
            /* [in] */ long fieldLen) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Alignment( 
            /* [retval][out] */ AcAlignment *align) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Alignment( 
            /* [in] */ AcAlignment align) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_UpsideDown( 
            /* [retval][out] */ VARIANT_BOOL *bUpsideDown) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_UpsideDown( 
            /* [in] */ VARIANT_BOOL bUpsideDown) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Backward( 
            /* [retval][out] */ VARIANT_BOOL *bBackward) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Backward( 
            /* [in] */ VARIANT_BOOL bBackward) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Invisible( 
            /* [retval][out] */ VARIANT_BOOL *bInvisible) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Invisible( 
            /* [in] */ VARIANT_BOOL bInvisible) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Constant( 
            /* [retval][out] */ VARIANT_BOOL *bConstant) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadAttributeReferenceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadAttributeReference * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadAttributeReference * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadAttributeReference * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadAttributeReference * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadAttributeReference * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadAttributeReference * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadAttributeReference * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadAttributeReference * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadAttributeReference * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadAttributeReference * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadAttributeReference * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadAttributeReference * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadAttributeReference * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadAttributeReference * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadAttributeReference * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadAttributeReference * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadAttributeReference * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadAttributeReference * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadAttributeReference * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadAttributeReference * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadAttributeReference * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadAttributeReference * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadAttributeReference * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadAttributeReference * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadAttributeReference * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadAttributeReference * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadAttributeReference * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadAttributeReference * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadAttributeReference * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadAttributeReference * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadAttributeReference * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadAttributeReference * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IAcadAttributeReference * This,
            /* [in] */ double Height);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalAlignment )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ AcHorizontalAlignment *horizAlign);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalAlignment )( 
            IAcadAttributeReference * This,
            /* [in] */ AcHorizontalAlignment horizAlign);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ VARIANT *insPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IAcadAttributeReference * This,
            /* [in] */ VARIANT insPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadAttributeReference * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObliqueAngle )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ ACAD_ANGLE *obliAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ObliqueAngle )( 
            IAcadAttributeReference * This,
            /* [in] */ ACAD_ANGLE obliAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IAcadAttributeReference * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ ACAD_NOUNITS *scalFactor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IAcadAttributeReference * This,
            /* [in] */ ACAD_NOUNITS scalFactor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IAcadAttributeReference * This,
            /* [in] */ BSTR Name);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TagString )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ BSTR *bstrTag);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TagString )( 
            IAcadAttributeReference * This,
            /* [in] */ BSTR bstrTag);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlignmentPoint )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ VARIANT *alignPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextAlignmentPoint )( 
            IAcadAttributeReference * This,
            /* [in] */ VARIANT alignPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextGenerationFlag )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ long *textGenFlag);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextGenerationFlag )( 
            IAcadAttributeReference * This,
            /* [in] */ long textGenFlag);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextString )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ BSTR *bstrText);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextString )( 
            IAcadAttributeReference * This,
            /* [in] */ BSTR bstrText);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ double *Thickness);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IAcadAttributeReference * This,
            /* [in] */ double Thickness);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalAlignment )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ AcVerticalAlignment *vertiAlign);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalAlignment )( 
            IAcadAttributeReference * This,
            /* [in] */ AcVerticalAlignment vertiAlign);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FieldLength )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ long *fieldLen);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FieldLength )( 
            IAcadAttributeReference * This,
            /* [in] */ long fieldLen);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Alignment )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ AcAlignment *align);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Alignment )( 
            IAcadAttributeReference * This,
            /* [in] */ AcAlignment align);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UpsideDown )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ VARIANT_BOOL *bUpsideDown);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UpsideDown )( 
            IAcadAttributeReference * This,
            /* [in] */ VARIANT_BOOL bUpsideDown);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Backward )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ VARIANT_BOOL *bBackward);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Backward )( 
            IAcadAttributeReference * This,
            /* [in] */ VARIANT_BOOL bBackward);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Invisible )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ VARIANT_BOOL *bInvisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Invisible )( 
            IAcadAttributeReference * This,
            /* [in] */ VARIANT_BOOL bInvisible);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Constant )( 
            IAcadAttributeReference * This,
            /* [retval][out] */ VARIANT_BOOL *bConstant);
        
        END_INTERFACE
    } IAcadAttributeReferenceVtbl;

    interface IAcadAttributeReference
    {
        CONST_VTBL struct IAcadAttributeReferenceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadAttributeReference_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadAttributeReference_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadAttributeReference_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadAttributeReference_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadAttributeReference_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadAttributeReference_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadAttributeReference_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadAttributeReference_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadAttributeReference_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadAttributeReference_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadAttributeReference_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadAttributeReference_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadAttributeReference_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadAttributeReference_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadAttributeReference_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadAttributeReference_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadAttributeReference_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadAttributeReference_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadAttributeReference_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadAttributeReference_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadAttributeReference_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadAttributeReference_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadAttributeReference_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadAttributeReference_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadAttributeReference_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadAttributeReference_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadAttributeReference_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadAttributeReference_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadAttributeReference_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadAttributeReference_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadAttributeReference_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadAttributeReference_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadAttributeReference_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadAttributeReference_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadAttributeReference_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadAttributeReference_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadAttributeReference_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadAttributeReference_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadAttributeReference_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadAttributeReference_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadAttributeReference_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadAttributeReference_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadAttributeReference_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadAttributeReference_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadAttributeReference_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadAttributeReference_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadAttributeReference_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadAttributeReference_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadAttributeReference_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadAttributeReference_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadAttributeReference_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadAttributeReference_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadAttributeReference_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadAttributeReference_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAcadAttributeReference_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAcadAttributeReference_get_HorizontalAlignment(This,horizAlign)	\
    (This)->lpVtbl -> get_HorizontalAlignment(This,horizAlign)

#define IAcadAttributeReference_put_HorizontalAlignment(This,horizAlign)	\
    (This)->lpVtbl -> put_HorizontalAlignment(This,horizAlign)

#define IAcadAttributeReference_get_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> get_InsertionPoint(This,insPoint)

#define IAcadAttributeReference_put_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> put_InsertionPoint(This,insPoint)

#define IAcadAttributeReference_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadAttributeReference_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadAttributeReference_get_ObliqueAngle(This,obliAngle)	\
    (This)->lpVtbl -> get_ObliqueAngle(This,obliAngle)

#define IAcadAttributeReference_put_ObliqueAngle(This,obliAngle)	\
    (This)->lpVtbl -> put_ObliqueAngle(This,obliAngle)

#define IAcadAttributeReference_get_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> get_Rotation(This,rotAngle)

#define IAcadAttributeReference_put_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> put_Rotation(This,rotAngle)

#define IAcadAttributeReference_get_ScaleFactor(This,scalFactor)	\
    (This)->lpVtbl -> get_ScaleFactor(This,scalFactor)

#define IAcadAttributeReference_put_ScaleFactor(This,scalFactor)	\
    (This)->lpVtbl -> put_ScaleFactor(This,scalFactor)

#define IAcadAttributeReference_get_StyleName(This,Name)	\
    (This)->lpVtbl -> get_StyleName(This,Name)

#define IAcadAttributeReference_put_StyleName(This,Name)	\
    (This)->lpVtbl -> put_StyleName(This,Name)

#define IAcadAttributeReference_get_TagString(This,bstrTag)	\
    (This)->lpVtbl -> get_TagString(This,bstrTag)

#define IAcadAttributeReference_put_TagString(This,bstrTag)	\
    (This)->lpVtbl -> put_TagString(This,bstrTag)

#define IAcadAttributeReference_get_TextAlignmentPoint(This,alignPoint)	\
    (This)->lpVtbl -> get_TextAlignmentPoint(This,alignPoint)

#define IAcadAttributeReference_put_TextAlignmentPoint(This,alignPoint)	\
    (This)->lpVtbl -> put_TextAlignmentPoint(This,alignPoint)

#define IAcadAttributeReference_get_TextGenerationFlag(This,textGenFlag)	\
    (This)->lpVtbl -> get_TextGenerationFlag(This,textGenFlag)

#define IAcadAttributeReference_put_TextGenerationFlag(This,textGenFlag)	\
    (This)->lpVtbl -> put_TextGenerationFlag(This,textGenFlag)

#define IAcadAttributeReference_get_TextString(This,bstrText)	\
    (This)->lpVtbl -> get_TextString(This,bstrText)

#define IAcadAttributeReference_put_TextString(This,bstrText)	\
    (This)->lpVtbl -> put_TextString(This,bstrText)

#define IAcadAttributeReference_get_Thickness(This,Thickness)	\
    (This)->lpVtbl -> get_Thickness(This,Thickness)

#define IAcadAttributeReference_put_Thickness(This,Thickness)	\
    (This)->lpVtbl -> put_Thickness(This,Thickness)

#define IAcadAttributeReference_get_VerticalAlignment(This,vertiAlign)	\
    (This)->lpVtbl -> get_VerticalAlignment(This,vertiAlign)

#define IAcadAttributeReference_put_VerticalAlignment(This,vertiAlign)	\
    (This)->lpVtbl -> put_VerticalAlignment(This,vertiAlign)

#define IAcadAttributeReference_get_FieldLength(This,fieldLen)	\
    (This)->lpVtbl -> get_FieldLength(This,fieldLen)

#define IAcadAttributeReference_put_FieldLength(This,fieldLen)	\
    (This)->lpVtbl -> put_FieldLength(This,fieldLen)

#define IAcadAttributeReference_get_Alignment(This,align)	\
    (This)->lpVtbl -> get_Alignment(This,align)

#define IAcadAttributeReference_put_Alignment(This,align)	\
    (This)->lpVtbl -> put_Alignment(This,align)

#define IAcadAttributeReference_get_UpsideDown(This,bUpsideDown)	\
    (This)->lpVtbl -> get_UpsideDown(This,bUpsideDown)

#define IAcadAttributeReference_put_UpsideDown(This,bUpsideDown)	\
    (This)->lpVtbl -> put_UpsideDown(This,bUpsideDown)

#define IAcadAttributeReference_get_Backward(This,bBackward)	\
    (This)->lpVtbl -> get_Backward(This,bBackward)

#define IAcadAttributeReference_put_Backward(This,bBackward)	\
    (This)->lpVtbl -> put_Backward(This,bBackward)

#define IAcadAttributeReference_get_Invisible(This,bInvisible)	\
    (This)->lpVtbl -> get_Invisible(This,bInvisible)

#define IAcadAttributeReference_put_Invisible(This,bInvisible)	\
    (This)->lpVtbl -> put_Invisible(This,bInvisible)

#define IAcadAttributeReference_get_Constant(This,bConstant)	\
    (This)->lpVtbl -> get_Constant(This,bConstant)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_get_Height_Proxy( 
    IAcadAttributeReference * This,
    /* [retval][out] */ double *Height);


void __RPC_STUB IAcadAttributeReference_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_put_Height_Proxy( 
    IAcadAttributeReference * This,
    /* [in] */ double Height);


void __RPC_STUB IAcadAttributeReference_put_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_get_HorizontalAlignment_Proxy( 
    IAcadAttributeReference * This,
    /* [retval][out] */ AcHorizontalAlignment *horizAlign);


void __RPC_STUB IAcadAttributeReference_get_HorizontalAlignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_put_HorizontalAlignment_Proxy( 
    IAcadAttributeReference * This,
    /* [in] */ AcHorizontalAlignment horizAlign);


void __RPC_STUB IAcadAttributeReference_put_HorizontalAlignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_get_InsertionPoint_Proxy( 
    IAcadAttributeReference * This,
    /* [retval][out] */ VARIANT *insPoint);


void __RPC_STUB IAcadAttributeReference_get_InsertionPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_put_InsertionPoint_Proxy( 
    IAcadAttributeReference * This,
    /* [in] */ VARIANT insPoint);


void __RPC_STUB IAcadAttributeReference_put_InsertionPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_get_Normal_Proxy( 
    IAcadAttributeReference * This,
    /* [retval][out] */ VARIANT *Normal);


void __RPC_STUB IAcadAttributeReference_get_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_put_Normal_Proxy( 
    IAcadAttributeReference * This,
    /* [in] */ VARIANT Normal);


void __RPC_STUB IAcadAttributeReference_put_Normal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_get_ObliqueAngle_Proxy( 
    IAcadAttributeReference * This,
    /* [retval][out] */ ACAD_ANGLE *obliAngle);


void __RPC_STUB IAcadAttributeReference_get_ObliqueAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_put_ObliqueAngle_Proxy( 
    IAcadAttributeReference * This,
    /* [in] */ ACAD_ANGLE obliAngle);


void __RPC_STUB IAcadAttributeReference_put_ObliqueAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_get_Rotation_Proxy( 
    IAcadAttributeReference * This,
    /* [retval][out] */ ACAD_ANGLE *rotAngle);


void __RPC_STUB IAcadAttributeReference_get_Rotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_put_Rotation_Proxy( 
    IAcadAttributeReference * This,
    /* [in] */ ACAD_ANGLE rotAngle);


void __RPC_STUB IAcadAttributeReference_put_Rotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_get_ScaleFactor_Proxy( 
    IAcadAttributeReference * This,
    /* [retval][out] */ ACAD_NOUNITS *scalFactor);


void __RPC_STUB IAcadAttributeReference_get_ScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_put_ScaleFactor_Proxy( 
    IAcadAttributeReference * This,
    /* [in] */ ACAD_NOUNITS scalFactor);


void __RPC_STUB IAcadAttributeReference_put_ScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_get_StyleName_Proxy( 
    IAcadAttributeReference * This,
    /* [retval][out] */ BSTR *Name);


void __RPC_STUB IAcadAttributeReference_get_StyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_put_StyleName_Proxy( 
    IAcadAttributeReference * This,
    /* [in] */ BSTR Name);


void __RPC_STUB IAcadAttributeReference_put_StyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_get_TagString_Proxy( 
    IAcadAttributeReference * This,
    /* [retval][out] */ BSTR *bstrTag);


void __RPC_STUB IAcadAttributeReference_get_TagString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_put_TagString_Proxy( 
    IAcadAttributeReference * This,
    /* [in] */ BSTR bstrTag);


void __RPC_STUB IAcadAttributeReference_put_TagString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_get_TextAlignmentPoint_Proxy( 
    IAcadAttributeReference * This,
    /* [retval][out] */ VARIANT *alignPoint);


void __RPC_STUB IAcadAttributeReference_get_TextAlignmentPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_put_TextAlignmentPoint_Proxy( 
    IAcadAttributeReference * This,
    /* [in] */ VARIANT alignPoint);


void __RPC_STUB IAcadAttributeReference_put_TextAlignmentPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_get_TextGenerationFlag_Proxy( 
    IAcadAttributeReference * This,
    /* [retval][out] */ long *textGenFlag);


void __RPC_STUB IAcadAttributeReference_get_TextGenerationFlag_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_put_TextGenerationFlag_Proxy( 
    IAcadAttributeReference * This,
    /* [in] */ long textGenFlag);


void __RPC_STUB IAcadAttributeReference_put_TextGenerationFlag_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_get_TextString_Proxy( 
    IAcadAttributeReference * This,
    /* [retval][out] */ BSTR *bstrText);


void __RPC_STUB IAcadAttributeReference_get_TextString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_put_TextString_Proxy( 
    IAcadAttributeReference * This,
    /* [in] */ BSTR bstrText);


void __RPC_STUB IAcadAttributeReference_put_TextString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_get_Thickness_Proxy( 
    IAcadAttributeReference * This,
    /* [retval][out] */ double *Thickness);


void __RPC_STUB IAcadAttributeReference_get_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_put_Thickness_Proxy( 
    IAcadAttributeReference * This,
    /* [in] */ double Thickness);


void __RPC_STUB IAcadAttributeReference_put_Thickness_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_get_VerticalAlignment_Proxy( 
    IAcadAttributeReference * This,
    /* [retval][out] */ AcVerticalAlignment *vertiAlign);


void __RPC_STUB IAcadAttributeReference_get_VerticalAlignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_put_VerticalAlignment_Proxy( 
    IAcadAttributeReference * This,
    /* [in] */ AcVerticalAlignment vertiAlign);


void __RPC_STUB IAcadAttributeReference_put_VerticalAlignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_get_FieldLength_Proxy( 
    IAcadAttributeReference * This,
    /* [retval][out] */ long *fieldLen);


void __RPC_STUB IAcadAttributeReference_get_FieldLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_put_FieldLength_Proxy( 
    IAcadAttributeReference * This,
    /* [in] */ long fieldLen);


void __RPC_STUB IAcadAttributeReference_put_FieldLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_get_Alignment_Proxy( 
    IAcadAttributeReference * This,
    /* [retval][out] */ AcAlignment *align);


void __RPC_STUB IAcadAttributeReference_get_Alignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_put_Alignment_Proxy( 
    IAcadAttributeReference * This,
    /* [in] */ AcAlignment align);


void __RPC_STUB IAcadAttributeReference_put_Alignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_get_UpsideDown_Proxy( 
    IAcadAttributeReference * This,
    /* [retval][out] */ VARIANT_BOOL *bUpsideDown);


void __RPC_STUB IAcadAttributeReference_get_UpsideDown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_put_UpsideDown_Proxy( 
    IAcadAttributeReference * This,
    /* [in] */ VARIANT_BOOL bUpsideDown);


void __RPC_STUB IAcadAttributeReference_put_UpsideDown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_get_Backward_Proxy( 
    IAcadAttributeReference * This,
    /* [retval][out] */ VARIANT_BOOL *bBackward);


void __RPC_STUB IAcadAttributeReference_get_Backward_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_put_Backward_Proxy( 
    IAcadAttributeReference * This,
    /* [in] */ VARIANT_BOOL bBackward);


void __RPC_STUB IAcadAttributeReference_put_Backward_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_get_Invisible_Proxy( 
    IAcadAttributeReference * This,
    /* [retval][out] */ VARIANT_BOOL *bInvisible);


void __RPC_STUB IAcadAttributeReference_get_Invisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_put_Invisible_Proxy( 
    IAcadAttributeReference * This,
    /* [in] */ VARIANT_BOOL bInvisible);


void __RPC_STUB IAcadAttributeReference_put_Invisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadAttributeReference_get_Constant_Proxy( 
    IAcadAttributeReference * This,
    /* [retval][out] */ VARIANT_BOOL *bConstant);


void __RPC_STUB IAcadAttributeReference_get_Constant_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadAttributeReference_INTERFACE_DEFINED__ */


#ifndef __IAcadSortentsTable_INTERFACE_DEFINED__
#define __IAcadSortentsTable_INTERFACE_DEFINED__

/* interface IAcadSortentsTable */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadSortentsTable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4D77E92E-5D7A-4571-869A-44A552E12E79")
    IAcadSortentsTable : public IAcadObject
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE MoveToBottom( 
            /* [in] */ VARIANT Objects) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE MoveToTop( 
            /* [in] */ VARIANT Objects) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE MoveBelow( 
            /* [in] */ VARIANT Objects,
            /* [in] */ IAcadEntity *Target) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE MoveAbove( 
            /* [in] */ VARIANT Objects,
            /* [in] */ IAcadEntity *Target) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SwapOrder( 
            /* [in] */ IAcadEntity *Object1,
            /* [in] */ IAcadEntity *Object2) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Block( 
            /* [retval][out] */ IAcadBlock **pBlock) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetFullDrawOrder( 
            /* [out] */ VARIANT *Objects,
            /* [in] */ VARIANT_BOOL honorSortentsSysvar) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetRelativeDrawOrder( 
            /* [out][in] */ VARIANT *Objects,
            /* [in] */ VARIANT_BOOL honorSortentsSysvar) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetRelativeDrawOrder( 
            /* [in] */ VARIANT Objects) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadSortentsTableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadSortentsTable * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadSortentsTable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadSortentsTable * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadSortentsTable * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadSortentsTable * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadSortentsTable * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadSortentsTable * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadSortentsTable * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadSortentsTable * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadSortentsTable * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadSortentsTable * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadSortentsTable * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadSortentsTable * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadSortentsTable * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadSortentsTable * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadSortentsTable * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadSortentsTable * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadSortentsTable * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadSortentsTable * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadSortentsTable * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MoveToBottom )( 
            IAcadSortentsTable * This,
            /* [in] */ VARIANT Objects);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MoveToTop )( 
            IAcadSortentsTable * This,
            /* [in] */ VARIANT Objects);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MoveBelow )( 
            IAcadSortentsTable * This,
            /* [in] */ VARIANT Objects,
            /* [in] */ IAcadEntity *Target);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MoveAbove )( 
            IAcadSortentsTable * This,
            /* [in] */ VARIANT Objects,
            /* [in] */ IAcadEntity *Target);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SwapOrder )( 
            IAcadSortentsTable * This,
            /* [in] */ IAcadEntity *Object1,
            /* [in] */ IAcadEntity *Object2);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Block )( 
            IAcadSortentsTable * This,
            /* [retval][out] */ IAcadBlock **pBlock);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetFullDrawOrder )( 
            IAcadSortentsTable * This,
            /* [out] */ VARIANT *Objects,
            /* [in] */ VARIANT_BOOL honorSortentsSysvar);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetRelativeDrawOrder )( 
            IAcadSortentsTable * This,
            /* [out][in] */ VARIANT *Objects,
            /* [in] */ VARIANT_BOOL honorSortentsSysvar);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetRelativeDrawOrder )( 
            IAcadSortentsTable * This,
            /* [in] */ VARIANT Objects);
        
        END_INTERFACE
    } IAcadSortentsTableVtbl;

    interface IAcadSortentsTable
    {
        CONST_VTBL struct IAcadSortentsTableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadSortentsTable_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadSortentsTable_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadSortentsTable_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadSortentsTable_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadSortentsTable_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadSortentsTable_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadSortentsTable_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadSortentsTable_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadSortentsTable_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadSortentsTable_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadSortentsTable_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadSortentsTable_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadSortentsTable_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadSortentsTable_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadSortentsTable_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadSortentsTable_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadSortentsTable_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadSortentsTable_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadSortentsTable_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadSortentsTable_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadSortentsTable_MoveToBottom(This,Objects)	\
    (This)->lpVtbl -> MoveToBottom(This,Objects)

#define IAcadSortentsTable_MoveToTop(This,Objects)	\
    (This)->lpVtbl -> MoveToTop(This,Objects)

#define IAcadSortentsTable_MoveBelow(This,Objects,Target)	\
    (This)->lpVtbl -> MoveBelow(This,Objects,Target)

#define IAcadSortentsTable_MoveAbove(This,Objects,Target)	\
    (This)->lpVtbl -> MoveAbove(This,Objects,Target)

#define IAcadSortentsTable_SwapOrder(This,Object1,Object2)	\
    (This)->lpVtbl -> SwapOrder(This,Object1,Object2)

#define IAcadSortentsTable_Block(This,pBlock)	\
    (This)->lpVtbl -> Block(This,pBlock)

#define IAcadSortentsTable_GetFullDrawOrder(This,Objects,honorSortentsSysvar)	\
    (This)->lpVtbl -> GetFullDrawOrder(This,Objects,honorSortentsSysvar)

#define IAcadSortentsTable_GetRelativeDrawOrder(This,Objects,honorSortentsSysvar)	\
    (This)->lpVtbl -> GetRelativeDrawOrder(This,Objects,honorSortentsSysvar)

#define IAcadSortentsTable_SetRelativeDrawOrder(This,Objects)	\
    (This)->lpVtbl -> SetRelativeDrawOrder(This,Objects)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSortentsTable_MoveToBottom_Proxy( 
    IAcadSortentsTable * This,
    /* [in] */ VARIANT Objects);


void __RPC_STUB IAcadSortentsTable_MoveToBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSortentsTable_MoveToTop_Proxy( 
    IAcadSortentsTable * This,
    /* [in] */ VARIANT Objects);


void __RPC_STUB IAcadSortentsTable_MoveToTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSortentsTable_MoveBelow_Proxy( 
    IAcadSortentsTable * This,
    /* [in] */ VARIANT Objects,
    /* [in] */ IAcadEntity *Target);


void __RPC_STUB IAcadSortentsTable_MoveBelow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSortentsTable_MoveAbove_Proxy( 
    IAcadSortentsTable * This,
    /* [in] */ VARIANT Objects,
    /* [in] */ IAcadEntity *Target);


void __RPC_STUB IAcadSortentsTable_MoveAbove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSortentsTable_SwapOrder_Proxy( 
    IAcadSortentsTable * This,
    /* [in] */ IAcadEntity *Object1,
    /* [in] */ IAcadEntity *Object2);


void __RPC_STUB IAcadSortentsTable_SwapOrder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSortentsTable_Block_Proxy( 
    IAcadSortentsTable * This,
    /* [retval][out] */ IAcadBlock **pBlock);


void __RPC_STUB IAcadSortentsTable_Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSortentsTable_GetFullDrawOrder_Proxy( 
    IAcadSortentsTable * This,
    /* [out] */ VARIANT *Objects,
    /* [in] */ VARIANT_BOOL honorSortentsSysvar);


void __RPC_STUB IAcadSortentsTable_GetFullDrawOrder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSortentsTable_GetRelativeDrawOrder_Proxy( 
    IAcadSortentsTable * This,
    /* [out][in] */ VARIANT *Objects,
    /* [in] */ VARIANT_BOOL honorSortentsSysvar);


void __RPC_STUB IAcadSortentsTable_GetRelativeDrawOrder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadSortentsTable_SetRelativeDrawOrder_Proxy( 
    IAcadSortentsTable * This,
    /* [in] */ VARIANT Objects);


void __RPC_STUB IAcadSortentsTable_SetRelativeDrawOrder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadSortentsTable_INTERFACE_DEFINED__ */


#ifndef __IAcadLayer2_INTERFACE_DEFINED__
#define __IAcadLayer2_INTERFACE_DEFINED__

/* interface IAcadLayer2 */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadLayer2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BF7BB1D4-A757-4E67-A834-6B758D1A2F07")
    IAcadLayer2 : public IAcadLayer
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *Description) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ BSTR Description) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Used( 
            /* [retval][out] */ VARIANT_BOOL *bUsed) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadLayer2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadLayer2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadLayer2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadLayer2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadLayer2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadLayer2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadLayer2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadLayer2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadLayer2 * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadLayer2 * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadLayer2 * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadLayer2 * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadLayer2 * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadLayer2 * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadLayer2 * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadLayer2 * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadLayer2 * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadLayer2 * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadLayer2 * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadLayer2 * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadLayer2 * This);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadLayer2 * This,
            /* [retval][out] */ AcColor *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadLayer2 * This,
            /* [in] */ AcColor color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadLayer2 * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadLayer2 * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Freeze )( 
            IAcadLayer2 * This,
            /* [retval][out] */ VARIANT_BOOL *bFreeze);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Freeze )( 
            IAcadLayer2 * This,
            /* [in] */ VARIANT_BOOL bFreeze);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LayerOn )( 
            IAcadLayer2 * This,
            /* [retval][out] */ VARIANT_BOOL *bOn);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LayerOn )( 
            IAcadLayer2 * This,
            /* [in] */ VARIANT_BOOL bOn);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadLayer2 * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadLayer2 * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lock )( 
            IAcadLayer2 * This,
            /* [retval][out] */ VARIANT_BOOL *Block);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lock )( 
            IAcadLayer2 * This,
            /* [in] */ VARIANT_BOOL Block);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadLayer2 * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadLayer2 * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Plottable )( 
            IAcadLayer2 * This,
            /* [retval][out] */ VARIANT_BOOL *bPlottable);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Plottable )( 
            IAcadLayer2 * This,
            /* [in] */ VARIANT_BOOL bPlottable);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ViewportDefault )( 
            IAcadLayer2 * This,
            /* [retval][out] */ VARIANT_BOOL *bDefault);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ViewportDefault )( 
            IAcadLayer2 * This,
            /* [in] */ VARIANT_BOOL bDefault);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadLayer2 * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadLayer2 * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadLayer2 * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadLayer2 * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IAcadLayer2 * This,
            /* [retval][out] */ BSTR *Description);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            IAcadLayer2 * This,
            /* [in] */ BSTR Description);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Used )( 
            IAcadLayer2 * This,
            /* [retval][out] */ VARIANT_BOOL *bUsed);
        
        END_INTERFACE
    } IAcadLayer2Vtbl;

    interface IAcadLayer2
    {
        CONST_VTBL struct IAcadLayer2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadLayer2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadLayer2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadLayer2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadLayer2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadLayer2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadLayer2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadLayer2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadLayer2_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadLayer2_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadLayer2_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadLayer2_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadLayer2_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadLayer2_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadLayer2_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadLayer2_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadLayer2_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadLayer2_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadLayer2_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadLayer2_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadLayer2_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadLayer2_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadLayer2_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)

#define IAcadLayer2_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadLayer2_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadLayer2_get_Freeze(This,bFreeze)	\
    (This)->lpVtbl -> get_Freeze(This,bFreeze)

#define IAcadLayer2_put_Freeze(This,bFreeze)	\
    (This)->lpVtbl -> put_Freeze(This,bFreeze)

#define IAcadLayer2_get_LayerOn(This,bOn)	\
    (This)->lpVtbl -> get_LayerOn(This,bOn)

#define IAcadLayer2_put_LayerOn(This,bOn)	\
    (This)->lpVtbl -> put_LayerOn(This,bOn)

#define IAcadLayer2_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadLayer2_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadLayer2_get_Lock(This,Block)	\
    (This)->lpVtbl -> get_Lock(This,Block)

#define IAcadLayer2_put_Lock(This,Block)	\
    (This)->lpVtbl -> put_Lock(This,Block)

#define IAcadLayer2_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadLayer2_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#define IAcadLayer2_get_Plottable(This,bPlottable)	\
    (This)->lpVtbl -> get_Plottable(This,bPlottable)

#define IAcadLayer2_put_Plottable(This,bPlottable)	\
    (This)->lpVtbl -> put_Plottable(This,bPlottable)

#define IAcadLayer2_get_ViewportDefault(This,bDefault)	\
    (This)->lpVtbl -> get_ViewportDefault(This,bDefault)

#define IAcadLayer2_put_ViewportDefault(This,bDefault)	\
    (This)->lpVtbl -> put_ViewportDefault(This,bDefault)

#define IAcadLayer2_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadLayer2_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadLayer2_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadLayer2_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)


#define IAcadLayer2_get_Description(This,Description)	\
    (This)->lpVtbl -> get_Description(This,Description)

#define IAcadLayer2_put_Description(This,Description)	\
    (This)->lpVtbl -> put_Description(This,Description)

#define IAcadLayer2_get_Used(This,bUsed)	\
    (This)->lpVtbl -> get_Used(This,bUsed)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer2_get_Description_Proxy( 
    IAcadLayer2 * This,
    /* [retval][out] */ BSTR *Description);


void __RPC_STUB IAcadLayer2_get_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer2_put_Description_Proxy( 
    IAcadLayer2 * This,
    /* [in] */ BSTR Description);


void __RPC_STUB IAcadLayer2_put_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadLayer2_get_Used_Proxy( 
    IAcadLayer2 * This,
    /* [retval][out] */ VARIANT_BOOL *bUsed);


void __RPC_STUB IAcadLayer2_get_Used_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadLayer2_INTERFACE_DEFINED__ */


#ifndef __IAcadView2_INTERFACE_DEFINED__
#define __IAcadView2_INTERFACE_DEFINED__

/* interface IAcadView2 */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadView2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7D8ECA12-D2DC-4F4C-B8BD-F1709363597D")
    IAcadView2 : public IAcadView
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_CategoryName( 
            /* [retval][out] */ BSTR *category) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_CategoryName( 
            /* [in] */ BSTR category) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LayoutId( 
            /* [retval][out] */ long *ObjectID) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LayoutId( 
            /* [in] */ long ObjectID) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LayerState( 
            /* [retval][out] */ BSTR *LayerState) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LayerState( 
            /* [in] */ BSTR LayerState) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HasVpAssociation( 
            /* [retval][out] */ VARIANT_BOOL *bVpAssoc) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_HasVpAssociation( 
            /* [in] */ VARIANT_BOOL bVpAssoc) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadView2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadView2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadView2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadView2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadView2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadView2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadView2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadView2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadView2 * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadView2 * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadView2 * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadView2 * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadView2 * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadView2 * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadView2 * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadView2 * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadView2 * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadView2 * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadView2 * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadView2 * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadView2 * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Center )( 
            IAcadView2 * This,
            /* [retval][out] */ VARIANT *Center);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Center )( 
            IAcadView2 * This,
            /* [in] */ VARIANT Center);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IAcadView2 * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IAcadView2 * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IAcadView2 * This,
            /* [retval][out] */ double *Width);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            IAcadView2 * This,
            /* [in] */ double Width);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Target )( 
            IAcadView2 * This,
            /* [retval][out] */ VARIANT *targetPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Target )( 
            IAcadView2 * This,
            /* [in] */ VARIANT targetPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Direction )( 
            IAcadView2 * This,
            /* [retval][out] */ VARIANT *dirVec);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Direction )( 
            IAcadView2 * This,
            /* [in] */ VARIANT dirVec);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadView2 * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadView2 * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CategoryName )( 
            IAcadView2 * This,
            /* [retval][out] */ BSTR *category);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CategoryName )( 
            IAcadView2 * This,
            /* [in] */ BSTR category);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LayoutId )( 
            IAcadView2 * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LayoutId )( 
            IAcadView2 * This,
            /* [in] */ long ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LayerState )( 
            IAcadView2 * This,
            /* [retval][out] */ BSTR *LayerState);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LayerState )( 
            IAcadView2 * This,
            /* [in] */ BSTR LayerState);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasVpAssociation )( 
            IAcadView2 * This,
            /* [retval][out] */ VARIANT_BOOL *bVpAssoc);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HasVpAssociation )( 
            IAcadView2 * This,
            /* [in] */ VARIANT_BOOL bVpAssoc);
        
        END_INTERFACE
    } IAcadView2Vtbl;

    interface IAcadView2
    {
        CONST_VTBL struct IAcadView2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadView2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadView2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadView2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadView2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadView2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadView2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadView2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadView2_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadView2_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadView2_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadView2_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadView2_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadView2_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadView2_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadView2_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadView2_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadView2_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadView2_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadView2_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadView2_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadView2_get_Center(This,Center)	\
    (This)->lpVtbl -> get_Center(This,Center)

#define IAcadView2_put_Center(This,Center)	\
    (This)->lpVtbl -> put_Center(This,Center)

#define IAcadView2_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAcadView2_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAcadView2_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAcadView2_put_Width(This,Width)	\
    (This)->lpVtbl -> put_Width(This,Width)

#define IAcadView2_get_Target(This,targetPoint)	\
    (This)->lpVtbl -> get_Target(This,targetPoint)

#define IAcadView2_put_Target(This,targetPoint)	\
    (This)->lpVtbl -> put_Target(This,targetPoint)

#define IAcadView2_get_Direction(This,dirVec)	\
    (This)->lpVtbl -> get_Direction(This,dirVec)

#define IAcadView2_put_Direction(This,dirVec)	\
    (This)->lpVtbl -> put_Direction(This,dirVec)

#define IAcadView2_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadView2_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)


#define IAcadView2_get_CategoryName(This,category)	\
    (This)->lpVtbl -> get_CategoryName(This,category)

#define IAcadView2_put_CategoryName(This,category)	\
    (This)->lpVtbl -> put_CategoryName(This,category)

#define IAcadView2_get_LayoutId(This,ObjectID)	\
    (This)->lpVtbl -> get_LayoutId(This,ObjectID)

#define IAcadView2_put_LayoutId(This,ObjectID)	\
    (This)->lpVtbl -> put_LayoutId(This,ObjectID)

#define IAcadView2_get_LayerState(This,LayerState)	\
    (This)->lpVtbl -> get_LayerState(This,LayerState)

#define IAcadView2_put_LayerState(This,LayerState)	\
    (This)->lpVtbl -> put_LayerState(This,LayerState)

#define IAcadView2_get_HasVpAssociation(This,bVpAssoc)	\
    (This)->lpVtbl -> get_HasVpAssociation(This,bVpAssoc)

#define IAcadView2_put_HasVpAssociation(This,bVpAssoc)	\
    (This)->lpVtbl -> put_HasVpAssociation(This,bVpAssoc)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadView2_get_CategoryName_Proxy( 
    IAcadView2 * This,
    /* [retval][out] */ BSTR *category);


void __RPC_STUB IAcadView2_get_CategoryName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadView2_put_CategoryName_Proxy( 
    IAcadView2 * This,
    /* [in] */ BSTR category);


void __RPC_STUB IAcadView2_put_CategoryName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadView2_get_LayoutId_Proxy( 
    IAcadView2 * This,
    /* [retval][out] */ long *ObjectID);


void __RPC_STUB IAcadView2_get_LayoutId_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadView2_put_LayoutId_Proxy( 
    IAcadView2 * This,
    /* [in] */ long ObjectID);


void __RPC_STUB IAcadView2_put_LayoutId_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadView2_get_LayerState_Proxy( 
    IAcadView2 * This,
    /* [retval][out] */ BSTR *LayerState);


void __RPC_STUB IAcadView2_get_LayerState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadView2_put_LayerState_Proxy( 
    IAcadView2 * This,
    /* [in] */ BSTR LayerState);


void __RPC_STUB IAcadView2_put_LayerState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadView2_get_HasVpAssociation_Proxy( 
    IAcadView2 * This,
    /* [retval][out] */ VARIANT_BOOL *bVpAssoc);


void __RPC_STUB IAcadView2_get_HasVpAssociation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadView2_put_HasVpAssociation_Proxy( 
    IAcadView2 * This,
    /* [in] */ VARIANT_BOOL bVpAssoc);


void __RPC_STUB IAcadView2_put_HasVpAssociation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadView2_INTERFACE_DEFINED__ */


#ifndef __IAcadTableStyle_INTERFACE_DEFINED__
#define __IAcadTableStyle_INTERFACE_DEFINED__

/* interface IAcadTableStyle */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadTableStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FF6E2F35-66A9-4451-B955-75C6062D22D8")
    IAcadTableStyle : public IAcadObject
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *bstrValue) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bstrValue) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *bstr) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ BSTR bstr) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_BitFlags( 
            /* [retval][out] */ long *bitFlag) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_BitFlags( 
            /* [in] */ long bitFlag) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_FlowDirection( 
            /* [retval][out] */ AcTableDirection *pFlow) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_FlowDirection( 
            /* [in] */ AcTableDirection pFlow) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HorzCellMargin( 
            /* [retval][out] */ double *dHorzCellMargin) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_HorzCellMargin( 
            /* [in] */ double dHorzCellMargin) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_VertCellMargin( 
            /* [retval][out] */ double *dVertCellMargin) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_VertCellMargin( 
            /* [in] */ double dVertCellMargin) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TitleSuppressed( 
            /* [retval][out] */ VARIANT_BOOL *bValue) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TitleSuppressed( 
            /* [in] */ VARIANT_BOOL bValue) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HeaderSuppressed( 
            /* [retval][out] */ VARIANT_BOOL *bValue) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_HeaderSuppressed( 
            /* [in] */ VARIANT_BOOL bValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetTextStyle( 
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetTextStyle( 
            /* [in] */ int rowTypes,
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetTextHeight( 
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ double *pTextHeight) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetTextHeight( 
            /* [in] */ int rowTypes,
            /* [in] */ double TextHeight) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetAlignment( 
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ AcCellAlignment *pCellAlignment) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetAlignment( 
            /* [in] */ int rowTypes,
            /* [in] */ AcCellAlignment cellAlignment) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetColor( 
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ IAcadAcCmColor **pColor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetColor( 
            /* [in] */ int rowTypes,
            /* [in] */ IAcadAcCmColor *pColor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBackgroundColor( 
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ IAcadAcCmColor **pColor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetBackgroundColor( 
            /* [in] */ int rowTypes,
            /* [in] */ IAcadAcCmColor *pColor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBackgroundColorNone( 
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ VARIANT_BOOL *bValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetBackgroundColorNone( 
            /* [in] */ int rowTypes,
            /* [in] */ VARIANT_BOOL bValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetGridLineWeight( 
            /* [in] */ AcGridLineType gridLineType,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetGridLineWeight( 
            /* [in] */ int gridLineTypes,
            /* [in] */ int rowTypes,
            /* [in] */ ACAD_LWEIGHT Lineweight) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetGridColor( 
            /* [in] */ AcGridLineType gridLineType,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ IAcadAcCmColor **pColor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetGridColor( 
            /* [in] */ int gridLineTypes,
            /* [in] */ int rowTypes,
            /* [in] */ IAcadAcCmColor *pColor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetGridVisibility( 
            /* [in] */ AcGridLineType gridLineType,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ VARIANT_BOOL *bValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetGridVisibility( 
            /* [in] */ int gridLineTypes,
            /* [in] */ int rowTypes,
            /* [in] */ VARIANT_BOOL bValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadTableStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadTableStyle * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadTableStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadTableStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadTableStyle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadTableStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadTableStyle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadTableStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadTableStyle * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadTableStyle * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadTableStyle * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadTableStyle * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadTableStyle * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadTableStyle * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadTableStyle * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadTableStyle * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadTableStyle * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadTableStyle * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadTableStyle * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadTableStyle * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadTableStyle * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadTableStyle * This,
            /* [retval][out] */ BSTR *bstrValue);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadTableStyle * This,
            /* [in] */ BSTR bstrValue);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IAcadTableStyle * This,
            /* [retval][out] */ BSTR *bstr);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            IAcadTableStyle * This,
            /* [in] */ BSTR bstr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BitFlags )( 
            IAcadTableStyle * This,
            /* [retval][out] */ long *bitFlag);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BitFlags )( 
            IAcadTableStyle * This,
            /* [in] */ long bitFlag);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FlowDirection )( 
            IAcadTableStyle * This,
            /* [retval][out] */ AcTableDirection *pFlow);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FlowDirection )( 
            IAcadTableStyle * This,
            /* [in] */ AcTableDirection pFlow);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HorzCellMargin )( 
            IAcadTableStyle * This,
            /* [retval][out] */ double *dHorzCellMargin);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HorzCellMargin )( 
            IAcadTableStyle * This,
            /* [in] */ double dHorzCellMargin);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VertCellMargin )( 
            IAcadTableStyle * This,
            /* [retval][out] */ double *dVertCellMargin);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VertCellMargin )( 
            IAcadTableStyle * This,
            /* [in] */ double dVertCellMargin);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TitleSuppressed )( 
            IAcadTableStyle * This,
            /* [retval][out] */ VARIANT_BOOL *bValue);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TitleSuppressed )( 
            IAcadTableStyle * This,
            /* [in] */ VARIANT_BOOL bValue);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderSuppressed )( 
            IAcadTableStyle * This,
            /* [retval][out] */ VARIANT_BOOL *bValue);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderSuppressed )( 
            IAcadTableStyle * This,
            /* [in] */ VARIANT_BOOL bValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetTextStyle )( 
            IAcadTableStyle * This,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetTextStyle )( 
            IAcadTableStyle * This,
            /* [in] */ int rowTypes,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetTextHeight )( 
            IAcadTableStyle * This,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ double *pTextHeight);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetTextHeight )( 
            IAcadTableStyle * This,
            /* [in] */ int rowTypes,
            /* [in] */ double TextHeight);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetAlignment )( 
            IAcadTableStyle * This,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ AcCellAlignment *pCellAlignment);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetAlignment )( 
            IAcadTableStyle * This,
            /* [in] */ int rowTypes,
            /* [in] */ AcCellAlignment cellAlignment);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetColor )( 
            IAcadTableStyle * This,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetColor )( 
            IAcadTableStyle * This,
            /* [in] */ int rowTypes,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBackgroundColor )( 
            IAcadTableStyle * This,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetBackgroundColor )( 
            IAcadTableStyle * This,
            /* [in] */ int rowTypes,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBackgroundColorNone )( 
            IAcadTableStyle * This,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ VARIANT_BOOL *bValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetBackgroundColorNone )( 
            IAcadTableStyle * This,
            /* [in] */ int rowTypes,
            /* [in] */ VARIANT_BOOL bValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetGridLineWeight )( 
            IAcadTableStyle * This,
            /* [in] */ AcGridLineType gridLineType,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetGridLineWeight )( 
            IAcadTableStyle * This,
            /* [in] */ int gridLineTypes,
            /* [in] */ int rowTypes,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetGridColor )( 
            IAcadTableStyle * This,
            /* [in] */ AcGridLineType gridLineType,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetGridColor )( 
            IAcadTableStyle * This,
            /* [in] */ int gridLineTypes,
            /* [in] */ int rowTypes,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetGridVisibility )( 
            IAcadTableStyle * This,
            /* [in] */ AcGridLineType gridLineType,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ VARIANT_BOOL *bValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetGridVisibility )( 
            IAcadTableStyle * This,
            /* [in] */ int gridLineTypes,
            /* [in] */ int rowTypes,
            /* [in] */ VARIANT_BOOL bValue);
        
        END_INTERFACE
    } IAcadTableStyleVtbl;

    interface IAcadTableStyle
    {
        CONST_VTBL struct IAcadTableStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadTableStyle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadTableStyle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadTableStyle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadTableStyle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadTableStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadTableStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadTableStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadTableStyle_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadTableStyle_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadTableStyle_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadTableStyle_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadTableStyle_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadTableStyle_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadTableStyle_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadTableStyle_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadTableStyle_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadTableStyle_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadTableStyle_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadTableStyle_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadTableStyle_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadTableStyle_get_Name(This,bstrValue)	\
    (This)->lpVtbl -> get_Name(This,bstrValue)

#define IAcadTableStyle_put_Name(This,bstrValue)	\
    (This)->lpVtbl -> put_Name(This,bstrValue)

#define IAcadTableStyle_get_Description(This,bstr)	\
    (This)->lpVtbl -> get_Description(This,bstr)

#define IAcadTableStyle_put_Description(This,bstr)	\
    (This)->lpVtbl -> put_Description(This,bstr)

#define IAcadTableStyle_get_BitFlags(This,bitFlag)	\
    (This)->lpVtbl -> get_BitFlags(This,bitFlag)

#define IAcadTableStyle_put_BitFlags(This,bitFlag)	\
    (This)->lpVtbl -> put_BitFlags(This,bitFlag)

#define IAcadTableStyle_get_FlowDirection(This,pFlow)	\
    (This)->lpVtbl -> get_FlowDirection(This,pFlow)

#define IAcadTableStyle_put_FlowDirection(This,pFlow)	\
    (This)->lpVtbl -> put_FlowDirection(This,pFlow)

#define IAcadTableStyle_get_HorzCellMargin(This,dHorzCellMargin)	\
    (This)->lpVtbl -> get_HorzCellMargin(This,dHorzCellMargin)

#define IAcadTableStyle_put_HorzCellMargin(This,dHorzCellMargin)	\
    (This)->lpVtbl -> put_HorzCellMargin(This,dHorzCellMargin)

#define IAcadTableStyle_get_VertCellMargin(This,dVertCellMargin)	\
    (This)->lpVtbl -> get_VertCellMargin(This,dVertCellMargin)

#define IAcadTableStyle_put_VertCellMargin(This,dVertCellMargin)	\
    (This)->lpVtbl -> put_VertCellMargin(This,dVertCellMargin)

#define IAcadTableStyle_get_TitleSuppressed(This,bValue)	\
    (This)->lpVtbl -> get_TitleSuppressed(This,bValue)

#define IAcadTableStyle_put_TitleSuppressed(This,bValue)	\
    (This)->lpVtbl -> put_TitleSuppressed(This,bValue)

#define IAcadTableStyle_get_HeaderSuppressed(This,bValue)	\
    (This)->lpVtbl -> get_HeaderSuppressed(This,bValue)

#define IAcadTableStyle_put_HeaderSuppressed(This,bValue)	\
    (This)->lpVtbl -> put_HeaderSuppressed(This,bValue)

#define IAcadTableStyle_GetTextStyle(This,rowType,bstrName)	\
    (This)->lpVtbl -> GetTextStyle(This,rowType,bstrName)

#define IAcadTableStyle_SetTextStyle(This,rowTypes,bstrName)	\
    (This)->lpVtbl -> SetTextStyle(This,rowTypes,bstrName)

#define IAcadTableStyle_GetTextHeight(This,rowType,pTextHeight)	\
    (This)->lpVtbl -> GetTextHeight(This,rowType,pTextHeight)

#define IAcadTableStyle_SetTextHeight(This,rowTypes,TextHeight)	\
    (This)->lpVtbl -> SetTextHeight(This,rowTypes,TextHeight)

#define IAcadTableStyle_GetAlignment(This,rowType,pCellAlignment)	\
    (This)->lpVtbl -> GetAlignment(This,rowType,pCellAlignment)

#define IAcadTableStyle_SetAlignment(This,rowTypes,cellAlignment)	\
    (This)->lpVtbl -> SetAlignment(This,rowTypes,cellAlignment)

#define IAcadTableStyle_GetColor(This,rowType,pColor)	\
    (This)->lpVtbl -> GetColor(This,rowType,pColor)

#define IAcadTableStyle_SetColor(This,rowTypes,pColor)	\
    (This)->lpVtbl -> SetColor(This,rowTypes,pColor)

#define IAcadTableStyle_GetBackgroundColor(This,rowType,pColor)	\
    (This)->lpVtbl -> GetBackgroundColor(This,rowType,pColor)

#define IAcadTableStyle_SetBackgroundColor(This,rowTypes,pColor)	\
    (This)->lpVtbl -> SetBackgroundColor(This,rowTypes,pColor)

#define IAcadTableStyle_GetBackgroundColorNone(This,rowType,bValue)	\
    (This)->lpVtbl -> GetBackgroundColorNone(This,rowType,bValue)

#define IAcadTableStyle_SetBackgroundColorNone(This,rowTypes,bValue)	\
    (This)->lpVtbl -> SetBackgroundColorNone(This,rowTypes,bValue)

#define IAcadTableStyle_GetGridLineWeight(This,gridLineType,rowType,Lineweight)	\
    (This)->lpVtbl -> GetGridLineWeight(This,gridLineType,rowType,Lineweight)

#define IAcadTableStyle_SetGridLineWeight(This,gridLineTypes,rowTypes,Lineweight)	\
    (This)->lpVtbl -> SetGridLineWeight(This,gridLineTypes,rowTypes,Lineweight)

#define IAcadTableStyle_GetGridColor(This,gridLineType,rowType,pColor)	\
    (This)->lpVtbl -> GetGridColor(This,gridLineType,rowType,pColor)

#define IAcadTableStyle_SetGridColor(This,gridLineTypes,rowTypes,pColor)	\
    (This)->lpVtbl -> SetGridColor(This,gridLineTypes,rowTypes,pColor)

#define IAcadTableStyle_GetGridVisibility(This,gridLineType,rowType,bValue)	\
    (This)->lpVtbl -> GetGridVisibility(This,gridLineType,rowType,bValue)

#define IAcadTableStyle_SetGridVisibility(This,gridLineTypes,rowTypes,bValue)	\
    (This)->lpVtbl -> SetGridVisibility(This,gridLineTypes,rowTypes,bValue)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_get_Name_Proxy( 
    IAcadTableStyle * This,
    /* [retval][out] */ BSTR *bstrValue);


void __RPC_STUB IAcadTableStyle_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_put_Name_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ BSTR bstrValue);


void __RPC_STUB IAcadTableStyle_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_get_Description_Proxy( 
    IAcadTableStyle * This,
    /* [retval][out] */ BSTR *bstr);


void __RPC_STUB IAcadTableStyle_get_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_put_Description_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ BSTR bstr);


void __RPC_STUB IAcadTableStyle_put_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_get_BitFlags_Proxy( 
    IAcadTableStyle * This,
    /* [retval][out] */ long *bitFlag);


void __RPC_STUB IAcadTableStyle_get_BitFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_put_BitFlags_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ long bitFlag);


void __RPC_STUB IAcadTableStyle_put_BitFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_get_FlowDirection_Proxy( 
    IAcadTableStyle * This,
    /* [retval][out] */ AcTableDirection *pFlow);


void __RPC_STUB IAcadTableStyle_get_FlowDirection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_put_FlowDirection_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ AcTableDirection pFlow);


void __RPC_STUB IAcadTableStyle_put_FlowDirection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_get_HorzCellMargin_Proxy( 
    IAcadTableStyle * This,
    /* [retval][out] */ double *dHorzCellMargin);


void __RPC_STUB IAcadTableStyle_get_HorzCellMargin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_put_HorzCellMargin_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ double dHorzCellMargin);


void __RPC_STUB IAcadTableStyle_put_HorzCellMargin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_get_VertCellMargin_Proxy( 
    IAcadTableStyle * This,
    /* [retval][out] */ double *dVertCellMargin);


void __RPC_STUB IAcadTableStyle_get_VertCellMargin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_put_VertCellMargin_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ double dVertCellMargin);


void __RPC_STUB IAcadTableStyle_put_VertCellMargin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_get_TitleSuppressed_Proxy( 
    IAcadTableStyle * This,
    /* [retval][out] */ VARIANT_BOOL *bValue);


void __RPC_STUB IAcadTableStyle_get_TitleSuppressed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_put_TitleSuppressed_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ VARIANT_BOOL bValue);


void __RPC_STUB IAcadTableStyle_put_TitleSuppressed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_get_HeaderSuppressed_Proxy( 
    IAcadTableStyle * This,
    /* [retval][out] */ VARIANT_BOOL *bValue);


void __RPC_STUB IAcadTableStyle_get_HeaderSuppressed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_put_HeaderSuppressed_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ VARIANT_BOOL bValue);


void __RPC_STUB IAcadTableStyle_put_HeaderSuppressed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_GetTextStyle_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ AcRowType rowType,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadTableStyle_GetTextStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_SetTextStyle_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ int rowTypes,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadTableStyle_SetTextStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_GetTextHeight_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ AcRowType rowType,
    /* [retval][out] */ double *pTextHeight);


void __RPC_STUB IAcadTableStyle_GetTextHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_SetTextHeight_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ int rowTypes,
    /* [in] */ double TextHeight);


void __RPC_STUB IAcadTableStyle_SetTextHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_GetAlignment_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ AcRowType rowType,
    /* [retval][out] */ AcCellAlignment *pCellAlignment);


void __RPC_STUB IAcadTableStyle_GetAlignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_SetAlignment_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ int rowTypes,
    /* [in] */ AcCellAlignment cellAlignment);


void __RPC_STUB IAcadTableStyle_SetAlignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_GetColor_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ AcRowType rowType,
    /* [retval][out] */ IAcadAcCmColor **pColor);


void __RPC_STUB IAcadTableStyle_GetColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_SetColor_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ int rowTypes,
    /* [in] */ IAcadAcCmColor *pColor);


void __RPC_STUB IAcadTableStyle_SetColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_GetBackgroundColor_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ AcRowType rowType,
    /* [retval][out] */ IAcadAcCmColor **pColor);


void __RPC_STUB IAcadTableStyle_GetBackgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_SetBackgroundColor_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ int rowTypes,
    /* [in] */ IAcadAcCmColor *pColor);


void __RPC_STUB IAcadTableStyle_SetBackgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_GetBackgroundColorNone_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ AcRowType rowType,
    /* [retval][out] */ VARIANT_BOOL *bValue);


void __RPC_STUB IAcadTableStyle_GetBackgroundColorNone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_SetBackgroundColorNone_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ int rowTypes,
    /* [in] */ VARIANT_BOOL bValue);


void __RPC_STUB IAcadTableStyle_SetBackgroundColorNone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_GetGridLineWeight_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ AcGridLineType gridLineType,
    /* [in] */ AcRowType rowType,
    /* [retval][out] */ ACAD_LWEIGHT *Lineweight);


void __RPC_STUB IAcadTableStyle_GetGridLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_SetGridLineWeight_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ int gridLineTypes,
    /* [in] */ int rowTypes,
    /* [in] */ ACAD_LWEIGHT Lineweight);


void __RPC_STUB IAcadTableStyle_SetGridLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_GetGridColor_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ AcGridLineType gridLineType,
    /* [in] */ AcRowType rowType,
    /* [retval][out] */ IAcadAcCmColor **pColor);


void __RPC_STUB IAcadTableStyle_GetGridColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_SetGridColor_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ int gridLineTypes,
    /* [in] */ int rowTypes,
    /* [in] */ IAcadAcCmColor *pColor);


void __RPC_STUB IAcadTableStyle_SetGridColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_GetGridVisibility_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ AcGridLineType gridLineType,
    /* [in] */ AcRowType rowType,
    /* [retval][out] */ VARIANT_BOOL *bValue);


void __RPC_STUB IAcadTableStyle_GetGridVisibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTableStyle_SetGridVisibility_Proxy( 
    IAcadTableStyle * This,
    /* [in] */ int gridLineTypes,
    /* [in] */ int rowTypes,
    /* [in] */ VARIANT_BOOL bValue);


void __RPC_STUB IAcadTableStyle_SetGridVisibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadTableStyle_INTERFACE_DEFINED__ */


#ifndef __IAcadLayers2_INTERFACE_DEFINED__
#define __IAcadLayers2_INTERFACE_DEFINED__

/* interface IAcadLayers2 */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadLayers2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("40C71296-4BB6-4A00-AC4A-4EF14168282E")
    IAcadLayers2 : public IAcadLayers
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GenerateUsageData( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadLayers2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadLayers2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadLayers2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadLayers2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadLayers2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadLayers2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadLayers2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadLayers2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadLayers2 * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadLayers2 * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadLayers2 * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadLayers2 * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadLayers2 * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadLayers2 * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadLayers2 * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadLayers2 * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadLayers2 * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadLayers2 * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadLayers2 * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadLayers2 * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadLayers2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadLayers2 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadLayer **pItem);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadLayers2 * This,
            /* [retval][out] */ long *pCount);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadLayers2 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IAcadLayers2 * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAcadLayer **pLayer);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GenerateUsageData )( 
            IAcadLayers2 * This);
        
        END_INTERFACE
    } IAcadLayers2Vtbl;

    interface IAcadLayers2
    {
        CONST_VTBL struct IAcadLayers2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadLayers2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadLayers2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadLayers2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadLayers2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadLayers2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadLayers2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadLayers2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadLayers2_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadLayers2_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadLayers2_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadLayers2_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadLayers2_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadLayers2_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadLayers2_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadLayers2_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadLayers2_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadLayers2_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadLayers2_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadLayers2_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadLayers2_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadLayers2_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadLayers2_get_Count(This,pCount)	\
    (This)->lpVtbl -> get_Count(This,pCount)

#define IAcadLayers2_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadLayers2_Add(This,Name,pLayer)	\
    (This)->lpVtbl -> Add(This,Name,pLayer)


#define IAcadLayers2_GenerateUsageData(This)	\
    (This)->lpVtbl -> GenerateUsageData(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadLayers2_GenerateUsageData_Proxy( 
    IAcadLayers2 * This);


void __RPC_STUB IAcadLayers2_GenerateUsageData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadLayers2_INTERFACE_DEFINED__ */


#ifndef __IAcadMText2_INTERFACE_DEFINED__
#define __IAcadMText2_INTERFACE_DEFINED__

/* interface IAcadMText2 */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadMText2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2F07BD27-5F93-481F-9D55-DA8B0CDE1872")
    IAcadMText2 : public IAcadMText
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_BackgroundFill( 
            /* [retval][out] */ VARIANT_BOOL *bUseBackgroundFill) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_BackgroundFill( 
            /* [in] */ VARIANT_BOOL bUseBackgroundFill) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE FieldCode( 
            /* [retval][out] */ BSTR *bstrText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadMText2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadMText2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadMText2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadMText2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadMText2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadMText2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadMText2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadMText2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadMText2 * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadMText2 * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadMText2 * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadMText2 * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadMText2 * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadMText2 * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadMText2 * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadMText2 * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadMText2 * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadMText2 * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadMText2 * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadMText2 * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadMText2 * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadMText2 * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadMText2 * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadMText2 * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadMText2 * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadMText2 * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadMText2 * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadMText2 * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadMText2 * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadMText2 * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadMText2 * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadMText2 * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadMText2 * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadMText2 * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadMText2 * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadMText2 * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadMText2 * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadMText2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadMText2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadMText2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadMText2 * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadMText2 * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadMText2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadMText2 * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadMText2 * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadMText2 * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadMText2 * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadMText2 * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadMText2 * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadMText2 * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadMText2 * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadMText2 * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadMText2 * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadMText2 * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextString )( 
            IAcadMText2 * This,
            /* [retval][out] */ BSTR *bstrText);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextString )( 
            IAcadMText2 * This,
            /* [in] */ BSTR bstrText);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IAcadMText2 * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IAcadMText2 * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AttachmentPoint )( 
            IAcadMText2 * This,
            /* [retval][out] */ AcAttachmentPoint *attPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AttachmentPoint )( 
            IAcadMText2 * This,
            /* [in] */ AcAttachmentPoint attPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DrawingDirection )( 
            IAcadMText2 * This,
            /* [retval][out] */ AcDrawingDirection *drawDir);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DrawingDirection )( 
            IAcadMText2 * This,
            /* [in] */ AcDrawingDirection drawDir);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IAcadMText2 * This,
            /* [retval][out] */ double *Width);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            IAcadMText2 * This,
            /* [in] */ double Width);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IAcadMText2 * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IAcadMText2 * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IAcadMText2 * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IAcadMText2 * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IAcadMText2 * This,
            /* [retval][out] */ VARIANT *insPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IAcadMText2 * This,
            /* [in] */ VARIANT insPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadMText2 * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadMText2 * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LineSpacingFactor )( 
            IAcadMText2 * This,
            /* [retval][out] */ double *factor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LineSpacingFactor )( 
            IAcadMText2 * This,
            /* [in] */ double factor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LineSpacingStyle )( 
            IAcadMText2 * This,
            /* [retval][out] */ AcLineSpacingStyle *style);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LineSpacingStyle )( 
            IAcadMText2 * This,
            /* [in] */ AcLineSpacingStyle style);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LineSpacingDistance )( 
            IAcadMText2 * This,
            /* [retval][out] */ double *Value);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LineSpacingDistance )( 
            IAcadMText2 * This,
            /* [in] */ double Value);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BackgroundFill )( 
            IAcadMText2 * This,
            /* [retval][out] */ VARIANT_BOOL *bUseBackgroundFill);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BackgroundFill )( 
            IAcadMText2 * This,
            /* [in] */ VARIANT_BOOL bUseBackgroundFill);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *FieldCode )( 
            IAcadMText2 * This,
            /* [retval][out] */ BSTR *bstrText);
        
        END_INTERFACE
    } IAcadMText2Vtbl;

    interface IAcadMText2
    {
        CONST_VTBL struct IAcadMText2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadMText2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadMText2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadMText2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadMText2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadMText2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadMText2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadMText2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadMText2_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadMText2_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadMText2_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadMText2_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadMText2_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadMText2_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadMText2_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadMText2_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadMText2_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadMText2_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadMText2_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadMText2_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadMText2_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadMText2_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadMText2_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadMText2_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadMText2_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadMText2_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadMText2_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadMText2_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadMText2_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadMText2_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadMText2_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadMText2_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadMText2_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadMText2_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadMText2_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadMText2_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadMText2_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadMText2_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadMText2_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadMText2_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadMText2_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadMText2_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadMText2_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadMText2_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadMText2_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadMText2_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadMText2_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadMText2_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadMText2_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadMText2_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadMText2_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadMText2_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadMText2_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadMText2_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadMText2_get_TextString(This,bstrText)	\
    (This)->lpVtbl -> get_TextString(This,bstrText)

#define IAcadMText2_put_TextString(This,bstrText)	\
    (This)->lpVtbl -> put_TextString(This,bstrText)

#define IAcadMText2_get_StyleName(This,bstrName)	\
    (This)->lpVtbl -> get_StyleName(This,bstrName)

#define IAcadMText2_put_StyleName(This,bstrName)	\
    (This)->lpVtbl -> put_StyleName(This,bstrName)

#define IAcadMText2_get_AttachmentPoint(This,attPoint)	\
    (This)->lpVtbl -> get_AttachmentPoint(This,attPoint)

#define IAcadMText2_put_AttachmentPoint(This,attPoint)	\
    (This)->lpVtbl -> put_AttachmentPoint(This,attPoint)

#define IAcadMText2_get_DrawingDirection(This,drawDir)	\
    (This)->lpVtbl -> get_DrawingDirection(This,drawDir)

#define IAcadMText2_put_DrawingDirection(This,drawDir)	\
    (This)->lpVtbl -> put_DrawingDirection(This,drawDir)

#define IAcadMText2_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAcadMText2_put_Width(This,Width)	\
    (This)->lpVtbl -> put_Width(This,Width)

#define IAcadMText2_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAcadMText2_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAcadMText2_get_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> get_Rotation(This,rotAngle)

#define IAcadMText2_put_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> put_Rotation(This,rotAngle)

#define IAcadMText2_get_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> get_InsertionPoint(This,insPoint)

#define IAcadMText2_put_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> put_InsertionPoint(This,insPoint)

#define IAcadMText2_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadMText2_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadMText2_get_LineSpacingFactor(This,factor)	\
    (This)->lpVtbl -> get_LineSpacingFactor(This,factor)

#define IAcadMText2_put_LineSpacingFactor(This,factor)	\
    (This)->lpVtbl -> put_LineSpacingFactor(This,factor)

#define IAcadMText2_get_LineSpacingStyle(This,style)	\
    (This)->lpVtbl -> get_LineSpacingStyle(This,style)

#define IAcadMText2_put_LineSpacingStyle(This,style)	\
    (This)->lpVtbl -> put_LineSpacingStyle(This,style)

#define IAcadMText2_get_LineSpacingDistance(This,Value)	\
    (This)->lpVtbl -> get_LineSpacingDistance(This,Value)

#define IAcadMText2_put_LineSpacingDistance(This,Value)	\
    (This)->lpVtbl -> put_LineSpacingDistance(This,Value)


#define IAcadMText2_get_BackgroundFill(This,bUseBackgroundFill)	\
    (This)->lpVtbl -> get_BackgroundFill(This,bUseBackgroundFill)

#define IAcadMText2_put_BackgroundFill(This,bUseBackgroundFill)	\
    (This)->lpVtbl -> put_BackgroundFill(This,bUseBackgroundFill)

#define IAcadMText2_FieldCode(This,bstrText)	\
    (This)->lpVtbl -> FieldCode(This,bstrText)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadMText2_get_BackgroundFill_Proxy( 
    IAcadMText2 * This,
    /* [retval][out] */ VARIANT_BOOL *bUseBackgroundFill);


void __RPC_STUB IAcadMText2_get_BackgroundFill_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadMText2_put_BackgroundFill_Proxy( 
    IAcadMText2 * This,
    /* [in] */ VARIANT_BOOL bUseBackgroundFill);


void __RPC_STUB IAcadMText2_put_BackgroundFill_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadMText2_FieldCode_Proxy( 
    IAcadMText2 * This,
    /* [retval][out] */ BSTR *bstrText);


void __RPC_STUB IAcadMText2_FieldCode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadMText2_INTERFACE_DEFINED__ */


#ifndef __IAcadText2_INTERFACE_DEFINED__
#define __IAcadText2_INTERFACE_DEFINED__

/* interface IAcadText2 */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadText2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("458D1C8C-C670-4304-A480-4399180BD2AF")
    IAcadText2 : public IAcadText
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE FieldCode( 
            /* [retval][out] */ BSTR *bstrText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadText2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadText2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadText2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadText2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadText2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadText2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadText2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadText2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadText2 * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadText2 * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadText2 * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadText2 * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadText2 * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadText2 * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadText2 * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadText2 * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadText2 * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadText2 * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadText2 * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadText2 * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadText2 * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadText2 * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadText2 * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadText2 * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadText2 * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadText2 * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadText2 * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadText2 * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadText2 * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadText2 * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadText2 * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadText2 * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadText2 * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadText2 * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadText2 * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadText2 * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadText2 * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadText2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadText2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadText2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadText2 * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadText2 * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadText2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadText2 * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadText2 * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadText2 * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadText2 * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadText2 * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadText2 * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadText2 * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadText2 * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadText2 * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadText2 * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadText2 * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextString )( 
            IAcadText2 * This,
            /* [retval][out] */ BSTR *bstrText);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextString )( 
            IAcadText2 * This,
            /* [in] */ BSTR bstrText);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IAcadText2 * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IAcadText2 * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Alignment )( 
            IAcadText2 * This,
            /* [retval][out] */ AcAlignment *align);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Alignment )( 
            IAcadText2 * This,
            /* [in] */ AcAlignment align);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalAlignment )( 
            IAcadText2 * This,
            /* [retval][out] */ AcHorizontalAlignment *horizAlign);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalAlignment )( 
            IAcadText2 * This,
            /* [in] */ AcHorizontalAlignment horizAlign);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalAlignment )( 
            IAcadText2 * This,
            /* [retval][out] */ AcVerticalAlignment *vertiAlign);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalAlignment )( 
            IAcadText2 * This,
            /* [in] */ AcVerticalAlignment vertiAlign);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IAcadText2 * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IAcadText2 * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IAcadText2 * This,
            /* [retval][out] */ ACAD_ANGLE *rotAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IAcadText2 * This,
            /* [in] */ ACAD_ANGLE rotAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IAcadText2 * This,
            /* [retval][out] */ ACAD_NOUNITS *scalFactor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IAcadText2 * This,
            /* [in] */ ACAD_NOUNITS scalFactor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObliqueAngle )( 
            IAcadText2 * This,
            /* [retval][out] */ ACAD_ANGLE *obliAngle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ObliqueAngle )( 
            IAcadText2 * This,
            /* [in] */ ACAD_ANGLE obliAngle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlignmentPoint )( 
            IAcadText2 * This,
            /* [retval][out] */ VARIANT *alignPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextAlignmentPoint )( 
            IAcadText2 * This,
            /* [in] */ VARIANT alignPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IAcadText2 * This,
            /* [retval][out] */ VARIANT *insPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IAcadText2 * This,
            /* [in] */ VARIANT insPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IAcadText2 * This,
            /* [retval][out] */ VARIANT *Normal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IAcadText2 * This,
            /* [in] */ VARIANT Normal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextGenerationFlag )( 
            IAcadText2 * This,
            /* [retval][out] */ long *textGenFlag);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextGenerationFlag )( 
            IAcadText2 * This,
            /* [in] */ long textGenFlag);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IAcadText2 * This,
            /* [retval][out] */ double *Thickness);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IAcadText2 * This,
            /* [in] */ double Thickness);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UpsideDown )( 
            IAcadText2 * This,
            /* [retval][out] */ VARIANT_BOOL *UpsideDown);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UpsideDown )( 
            IAcadText2 * This,
            /* [in] */ VARIANT_BOOL UpsideDown);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Backward )( 
            IAcadText2 * This,
            /* [retval][out] */ VARIANT_BOOL *Backward);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Backward )( 
            IAcadText2 * This,
            /* [in] */ VARIANT_BOOL Backward);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *FieldCode )( 
            IAcadText2 * This,
            /* [retval][out] */ BSTR *bstrText);
        
        END_INTERFACE
    } IAcadText2Vtbl;

    interface IAcadText2
    {
        CONST_VTBL struct IAcadText2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadText2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadText2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadText2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadText2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadText2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadText2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadText2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadText2_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadText2_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadText2_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadText2_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadText2_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadText2_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadText2_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadText2_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadText2_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadText2_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadText2_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadText2_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadText2_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadText2_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadText2_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadText2_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadText2_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadText2_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadText2_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadText2_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadText2_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadText2_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadText2_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadText2_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadText2_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadText2_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadText2_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadText2_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadText2_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadText2_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadText2_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadText2_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadText2_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadText2_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadText2_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadText2_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadText2_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadText2_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadText2_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadText2_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadText2_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadText2_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadText2_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadText2_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadText2_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadText2_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadText2_get_TextString(This,bstrText)	\
    (This)->lpVtbl -> get_TextString(This,bstrText)

#define IAcadText2_put_TextString(This,bstrText)	\
    (This)->lpVtbl -> put_TextString(This,bstrText)

#define IAcadText2_get_StyleName(This,bstrName)	\
    (This)->lpVtbl -> get_StyleName(This,bstrName)

#define IAcadText2_put_StyleName(This,bstrName)	\
    (This)->lpVtbl -> put_StyleName(This,bstrName)

#define IAcadText2_get_Alignment(This,align)	\
    (This)->lpVtbl -> get_Alignment(This,align)

#define IAcadText2_put_Alignment(This,align)	\
    (This)->lpVtbl -> put_Alignment(This,align)

#define IAcadText2_get_HorizontalAlignment(This,horizAlign)	\
    (This)->lpVtbl -> get_HorizontalAlignment(This,horizAlign)

#define IAcadText2_put_HorizontalAlignment(This,horizAlign)	\
    (This)->lpVtbl -> put_HorizontalAlignment(This,horizAlign)

#define IAcadText2_get_VerticalAlignment(This,vertiAlign)	\
    (This)->lpVtbl -> get_VerticalAlignment(This,vertiAlign)

#define IAcadText2_put_VerticalAlignment(This,vertiAlign)	\
    (This)->lpVtbl -> put_VerticalAlignment(This,vertiAlign)

#define IAcadText2_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAcadText2_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAcadText2_get_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> get_Rotation(This,rotAngle)

#define IAcadText2_put_Rotation(This,rotAngle)	\
    (This)->lpVtbl -> put_Rotation(This,rotAngle)

#define IAcadText2_get_ScaleFactor(This,scalFactor)	\
    (This)->lpVtbl -> get_ScaleFactor(This,scalFactor)

#define IAcadText2_put_ScaleFactor(This,scalFactor)	\
    (This)->lpVtbl -> put_ScaleFactor(This,scalFactor)

#define IAcadText2_get_ObliqueAngle(This,obliAngle)	\
    (This)->lpVtbl -> get_ObliqueAngle(This,obliAngle)

#define IAcadText2_put_ObliqueAngle(This,obliAngle)	\
    (This)->lpVtbl -> put_ObliqueAngle(This,obliAngle)

#define IAcadText2_get_TextAlignmentPoint(This,alignPoint)	\
    (This)->lpVtbl -> get_TextAlignmentPoint(This,alignPoint)

#define IAcadText2_put_TextAlignmentPoint(This,alignPoint)	\
    (This)->lpVtbl -> put_TextAlignmentPoint(This,alignPoint)

#define IAcadText2_get_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> get_InsertionPoint(This,insPoint)

#define IAcadText2_put_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> put_InsertionPoint(This,insPoint)

#define IAcadText2_get_Normal(This,Normal)	\
    (This)->lpVtbl -> get_Normal(This,Normal)

#define IAcadText2_put_Normal(This,Normal)	\
    (This)->lpVtbl -> put_Normal(This,Normal)

#define IAcadText2_get_TextGenerationFlag(This,textGenFlag)	\
    (This)->lpVtbl -> get_TextGenerationFlag(This,textGenFlag)

#define IAcadText2_put_TextGenerationFlag(This,textGenFlag)	\
    (This)->lpVtbl -> put_TextGenerationFlag(This,textGenFlag)

#define IAcadText2_get_Thickness(This,Thickness)	\
    (This)->lpVtbl -> get_Thickness(This,Thickness)

#define IAcadText2_put_Thickness(This,Thickness)	\
    (This)->lpVtbl -> put_Thickness(This,Thickness)

#define IAcadText2_get_UpsideDown(This,UpsideDown)	\
    (This)->lpVtbl -> get_UpsideDown(This,UpsideDown)

#define IAcadText2_put_UpsideDown(This,UpsideDown)	\
    (This)->lpVtbl -> put_UpsideDown(This,UpsideDown)

#define IAcadText2_get_Backward(This,Backward)	\
    (This)->lpVtbl -> get_Backward(This,Backward)

#define IAcadText2_put_Backward(This,Backward)	\
    (This)->lpVtbl -> put_Backward(This,Backward)


#define IAcadText2_FieldCode(This,bstrText)	\
    (This)->lpVtbl -> FieldCode(This,bstrText)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadText2_FieldCode_Proxy( 
    IAcadText2 * This,
    /* [retval][out] */ BSTR *bstrText);


void __RPC_STUB IAcadText2_FieldCode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadText2_INTERFACE_DEFINED__ */


#ifndef __IAcadPViewport2_INTERFACE_DEFINED__
#define __IAcadPViewport2_INTERFACE_DEFINED__

/* interface IAcadPViewport2 */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadPViewport2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5715C780-205B-44CE-A1C1-68016239B6B6")
    IAcadPViewport2 : public IAcadPViewport
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ModelView( 
            /* [retval][out] */ IAcadView **View) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ModelView( 
            /* [in] */ IAcadView *View) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SheetView( 
            /* [retval][out] */ IAcadView **View) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_SheetView( 
            /* [in] */ IAcadView *View) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LabelBlockId( 
            /* [retval][out] */ long *ObjectID) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LabelBlockId( 
            /* [in] */ long *ObjectID) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HasSheetView( 
            /* [retval][out] */ VARIANT_BOOL *bSheetView) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SyncModelView( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadPViewport2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadPViewport2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadPViewport2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadPViewport2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadPViewport2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadPViewport2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadPViewport2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadPViewport2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadPViewport2 * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadPViewport2 * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadPViewport2 * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadPViewport2 * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadPViewport2 * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadPViewport2 * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadPViewport2 * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadPViewport2 * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadPViewport2 * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadPViewport2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadPViewport2 * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadPViewport2 * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadPViewport2 * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadPViewport2 * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadPViewport2 * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Center )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ VARIANT *CenterPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Center )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT CenterPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Direction )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ VARIANT *dirVector);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Direction )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT dirVector);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GridOn )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ VARIANT_BOOL *bGridOn);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GridOn )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT_BOOL bGridOn);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IAcadPViewport2 * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ double *Width);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            IAcadPViewport2 * This,
            /* [in] */ double Width);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ViewportOn )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ VARIANT_BOOL *bOn);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ViewportOn )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT_BOOL bOn);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Clipped )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ VARIANT_BOOL *bClipped);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayLocked )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ VARIANT_BOOL *bLocked);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayLocked )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT_BOOL bLocked);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StandardScale )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ AcViewportScale *scale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StandardScale )( 
            IAcadPViewport2 * This,
            /* [in] */ AcViewportScale scale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CustomScale )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ double *scale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CustomScale )( 
            IAcadPViewport2 * This,
            /* [in] */ double scale);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleSheet )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleSheet )( 
            IAcadPViewport2 * This,
            /* [in] */ BSTR pName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UCSPerViewport )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ VARIANT_BOOL *UCSSaved);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UCSPerViewport )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT_BOOL UCSSaved);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SnapBasePoint )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ VARIANT *lowLeft);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SnapBasePoint )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT lowLeft);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SnapOn )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ VARIANT_BOOL *bSnapOn);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SnapOn )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT_BOOL bSnapOn);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SnapRotationAngle )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ double *Angle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SnapRotationAngle )( 
            IAcadPViewport2 * This,
            /* [in] */ double Angle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UCSIconOn )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ VARIANT_BOOL *bIconOn);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UCSIconOn )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT_BOOL bIconOn);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UCSIconAtOrigin )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ VARIANT_BOOL *bIconAtOrigin);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UCSIconAtOrigin )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT_BOOL bIconAtOrigin);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetGridSpacing )( 
            IAcadPViewport2 * This,
            /* [out] */ double *XSpacing,
            /* [out] */ double *YSpacing);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetGridSpacing )( 
            IAcadPViewport2 * This,
            /* [in] */ double XSpacing,
            /* [in] */ double YSpacing);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSnapSpacing )( 
            IAcadPViewport2 * This,
            /* [out] */ double *XSpacing,
            /* [out] */ double *YSpacing);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetSnapSpacing )( 
            IAcadPViewport2 * This,
            /* [in] */ double XSpacing,
            /* [in] */ double YSpacing);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT_BOOL bStatus);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TwistAngle )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ ACAD_ANGLE *Angle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TwistAngle )( 
            IAcadPViewport2 * This,
            /* [in] */ ACAD_ANGLE Angle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LensLength )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ double *Length);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LensLength )( 
            IAcadPViewport2 * This,
            /* [in] */ double Length);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RemoveHiddenLines )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ VARIANT_BOOL *bRemoval);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RemoveHiddenLines )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT_BOOL bRemoval);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Target )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ VARIANT *targetPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Target )( 
            IAcadPViewport2 * This,
            /* [in] */ VARIANT targetPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ArcSmoothness )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ long *arcSmooth);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ArcSmoothness )( 
            IAcadPViewport2 * This,
            /* [in] */ long arcSmooth);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShadePlot )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ AcShadePlot *ShadePlot);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShadePlot )( 
            IAcadPViewport2 * This,
            /* [in] */ AcShadePlot ShadePlot);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ModelView )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ IAcadView **View);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ModelView )( 
            IAcadPViewport2 * This,
            /* [in] */ IAcadView *View);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SheetView )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ IAcadView **View);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SheetView )( 
            IAcadPViewport2 * This,
            /* [in] */ IAcadView *View);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LabelBlockId )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LabelBlockId )( 
            IAcadPViewport2 * This,
            /* [in] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasSheetView )( 
            IAcadPViewport2 * This,
            /* [retval][out] */ VARIANT_BOOL *bSheetView);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SyncModelView )( 
            IAcadPViewport2 * This);
        
        END_INTERFACE
    } IAcadPViewport2Vtbl;

    interface IAcadPViewport2
    {
        CONST_VTBL struct IAcadPViewport2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadPViewport2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadPViewport2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadPViewport2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadPViewport2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadPViewport2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadPViewport2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadPViewport2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadPViewport2_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadPViewport2_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadPViewport2_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadPViewport2_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadPViewport2_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadPViewport2_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadPViewport2_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadPViewport2_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadPViewport2_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadPViewport2_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadPViewport2_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadPViewport2_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadPViewport2_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadPViewport2_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadPViewport2_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadPViewport2_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadPViewport2_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadPViewport2_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadPViewport2_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadPViewport2_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadPViewport2_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadPViewport2_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadPViewport2_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadPViewport2_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadPViewport2_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadPViewport2_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadPViewport2_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadPViewport2_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadPViewport2_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadPViewport2_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadPViewport2_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadPViewport2_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadPViewport2_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadPViewport2_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadPViewport2_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadPViewport2_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadPViewport2_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadPViewport2_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadPViewport2_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadPViewport2_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadPViewport2_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadPViewport2_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadPViewport2_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadPViewport2_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadPViewport2_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadPViewport2_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadPViewport2_get_Center(This,CenterPoint)	\
    (This)->lpVtbl -> get_Center(This,CenterPoint)

#define IAcadPViewport2_put_Center(This,CenterPoint)	\
    (This)->lpVtbl -> put_Center(This,CenterPoint)

#define IAcadPViewport2_get_Direction(This,dirVector)	\
    (This)->lpVtbl -> get_Direction(This,dirVector)

#define IAcadPViewport2_put_Direction(This,dirVector)	\
    (This)->lpVtbl -> put_Direction(This,dirVector)

#define IAcadPViewport2_get_GridOn(This,bGridOn)	\
    (This)->lpVtbl -> get_GridOn(This,bGridOn)

#define IAcadPViewport2_put_GridOn(This,bGridOn)	\
    (This)->lpVtbl -> put_GridOn(This,bGridOn)

#define IAcadPViewport2_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAcadPViewport2_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAcadPViewport2_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAcadPViewport2_put_Width(This,Width)	\
    (This)->lpVtbl -> put_Width(This,Width)

#define IAcadPViewport2_get_ViewportOn(This,bOn)	\
    (This)->lpVtbl -> get_ViewportOn(This,bOn)

#define IAcadPViewport2_put_ViewportOn(This,bOn)	\
    (This)->lpVtbl -> put_ViewportOn(This,bOn)

#define IAcadPViewport2_get_Clipped(This,bClipped)	\
    (This)->lpVtbl -> get_Clipped(This,bClipped)

#define IAcadPViewport2_get_DisplayLocked(This,bLocked)	\
    (This)->lpVtbl -> get_DisplayLocked(This,bLocked)

#define IAcadPViewport2_put_DisplayLocked(This,bLocked)	\
    (This)->lpVtbl -> put_DisplayLocked(This,bLocked)

#define IAcadPViewport2_get_StandardScale(This,scale)	\
    (This)->lpVtbl -> get_StandardScale(This,scale)

#define IAcadPViewport2_put_StandardScale(This,scale)	\
    (This)->lpVtbl -> put_StandardScale(This,scale)

#define IAcadPViewport2_get_CustomScale(This,scale)	\
    (This)->lpVtbl -> get_CustomScale(This,scale)

#define IAcadPViewport2_put_CustomScale(This,scale)	\
    (This)->lpVtbl -> put_CustomScale(This,scale)

#define IAcadPViewport2_get_StyleSheet(This,pName)	\
    (This)->lpVtbl -> get_StyleSheet(This,pName)

#define IAcadPViewport2_put_StyleSheet(This,pName)	\
    (This)->lpVtbl -> put_StyleSheet(This,pName)

#define IAcadPViewport2_get_UCSPerViewport(This,UCSSaved)	\
    (This)->lpVtbl -> get_UCSPerViewport(This,UCSSaved)

#define IAcadPViewport2_put_UCSPerViewport(This,UCSSaved)	\
    (This)->lpVtbl -> put_UCSPerViewport(This,UCSSaved)

#define IAcadPViewport2_get_SnapBasePoint(This,lowLeft)	\
    (This)->lpVtbl -> get_SnapBasePoint(This,lowLeft)

#define IAcadPViewport2_put_SnapBasePoint(This,lowLeft)	\
    (This)->lpVtbl -> put_SnapBasePoint(This,lowLeft)

#define IAcadPViewport2_get_SnapOn(This,bSnapOn)	\
    (This)->lpVtbl -> get_SnapOn(This,bSnapOn)

#define IAcadPViewport2_put_SnapOn(This,bSnapOn)	\
    (This)->lpVtbl -> put_SnapOn(This,bSnapOn)

#define IAcadPViewport2_get_SnapRotationAngle(This,Angle)	\
    (This)->lpVtbl -> get_SnapRotationAngle(This,Angle)

#define IAcadPViewport2_put_SnapRotationAngle(This,Angle)	\
    (This)->lpVtbl -> put_SnapRotationAngle(This,Angle)

#define IAcadPViewport2_get_UCSIconOn(This,bIconOn)	\
    (This)->lpVtbl -> get_UCSIconOn(This,bIconOn)

#define IAcadPViewport2_put_UCSIconOn(This,bIconOn)	\
    (This)->lpVtbl -> put_UCSIconOn(This,bIconOn)

#define IAcadPViewport2_get_UCSIconAtOrigin(This,bIconAtOrigin)	\
    (This)->lpVtbl -> get_UCSIconAtOrigin(This,bIconAtOrigin)

#define IAcadPViewport2_put_UCSIconAtOrigin(This,bIconAtOrigin)	\
    (This)->lpVtbl -> put_UCSIconAtOrigin(This,bIconAtOrigin)

#define IAcadPViewport2_GetGridSpacing(This,XSpacing,YSpacing)	\
    (This)->lpVtbl -> GetGridSpacing(This,XSpacing,YSpacing)

#define IAcadPViewport2_SetGridSpacing(This,XSpacing,YSpacing)	\
    (This)->lpVtbl -> SetGridSpacing(This,XSpacing,YSpacing)

#define IAcadPViewport2_GetSnapSpacing(This,XSpacing,YSpacing)	\
    (This)->lpVtbl -> GetSnapSpacing(This,XSpacing,YSpacing)

#define IAcadPViewport2_SetSnapSpacing(This,XSpacing,YSpacing)	\
    (This)->lpVtbl -> SetSnapSpacing(This,XSpacing,YSpacing)

#define IAcadPViewport2_Display(This,bStatus)	\
    (This)->lpVtbl -> Display(This,bStatus)

#define IAcadPViewport2_get_TwistAngle(This,Angle)	\
    (This)->lpVtbl -> get_TwistAngle(This,Angle)

#define IAcadPViewport2_put_TwistAngle(This,Angle)	\
    (This)->lpVtbl -> put_TwistAngle(This,Angle)

#define IAcadPViewport2_get_LensLength(This,Length)	\
    (This)->lpVtbl -> get_LensLength(This,Length)

#define IAcadPViewport2_put_LensLength(This,Length)	\
    (This)->lpVtbl -> put_LensLength(This,Length)

#define IAcadPViewport2_get_RemoveHiddenLines(This,bRemoval)	\
    (This)->lpVtbl -> get_RemoveHiddenLines(This,bRemoval)

#define IAcadPViewport2_put_RemoveHiddenLines(This,bRemoval)	\
    (This)->lpVtbl -> put_RemoveHiddenLines(This,bRemoval)

#define IAcadPViewport2_get_Target(This,targetPoint)	\
    (This)->lpVtbl -> get_Target(This,targetPoint)

#define IAcadPViewport2_put_Target(This,targetPoint)	\
    (This)->lpVtbl -> put_Target(This,targetPoint)

#define IAcadPViewport2_get_ArcSmoothness(This,arcSmooth)	\
    (This)->lpVtbl -> get_ArcSmoothness(This,arcSmooth)

#define IAcadPViewport2_put_ArcSmoothness(This,arcSmooth)	\
    (This)->lpVtbl -> put_ArcSmoothness(This,arcSmooth)

#define IAcadPViewport2_get_ShadePlot(This,ShadePlot)	\
    (This)->lpVtbl -> get_ShadePlot(This,ShadePlot)

#define IAcadPViewport2_put_ShadePlot(This,ShadePlot)	\
    (This)->lpVtbl -> put_ShadePlot(This,ShadePlot)


#define IAcadPViewport2_get_ModelView(This,View)	\
    (This)->lpVtbl -> get_ModelView(This,View)

#define IAcadPViewport2_put_ModelView(This,View)	\
    (This)->lpVtbl -> put_ModelView(This,View)

#define IAcadPViewport2_get_SheetView(This,View)	\
    (This)->lpVtbl -> get_SheetView(This,View)

#define IAcadPViewport2_put_SheetView(This,View)	\
    (This)->lpVtbl -> put_SheetView(This,View)

#define IAcadPViewport2_get_LabelBlockId(This,ObjectID)	\
    (This)->lpVtbl -> get_LabelBlockId(This,ObjectID)

#define IAcadPViewport2_put_LabelBlockId(This,ObjectID)	\
    (This)->lpVtbl -> put_LabelBlockId(This,ObjectID)

#define IAcadPViewport2_get_HasSheetView(This,bSheetView)	\
    (This)->lpVtbl -> get_HasSheetView(This,bSheetView)

#define IAcadPViewport2_SyncModelView(This)	\
    (This)->lpVtbl -> SyncModelView(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport2_get_ModelView_Proxy( 
    IAcadPViewport2 * This,
    /* [retval][out] */ IAcadView **View);


void __RPC_STUB IAcadPViewport2_get_ModelView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport2_put_ModelView_Proxy( 
    IAcadPViewport2 * This,
    /* [in] */ IAcadView *View);


void __RPC_STUB IAcadPViewport2_put_ModelView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport2_get_SheetView_Proxy( 
    IAcadPViewport2 * This,
    /* [retval][out] */ IAcadView **View);


void __RPC_STUB IAcadPViewport2_get_SheetView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport2_put_SheetView_Proxy( 
    IAcadPViewport2 * This,
    /* [in] */ IAcadView *View);


void __RPC_STUB IAcadPViewport2_put_SheetView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport2_get_LabelBlockId_Proxy( 
    IAcadPViewport2 * This,
    /* [retval][out] */ long *ObjectID);


void __RPC_STUB IAcadPViewport2_get_LabelBlockId_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport2_put_LabelBlockId_Proxy( 
    IAcadPViewport2 * This,
    /* [in] */ long *ObjectID);


void __RPC_STUB IAcadPViewport2_put_LabelBlockId_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport2_get_HasSheetView_Proxy( 
    IAcadPViewport2 * This,
    /* [retval][out] */ VARIANT_BOOL *bSheetView);


void __RPC_STUB IAcadPViewport2_get_HasSheetView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPViewport2_SyncModelView_Proxy( 
    IAcadPViewport2 * This);


void __RPC_STUB IAcadPViewport2_SyncModelView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadPViewport2_INTERFACE_DEFINED__ */


#ifndef __IAcadTable_INTERFACE_DEFINED__
#define __IAcadTable_INTERFACE_DEFINED__

/* interface IAcadTable */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadTable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C7E73C3F-0967-48A8-97AB-AC38C24875B9")
    IAcadTable : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_StyleName( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_StyleName( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Rows( 
            /* [retval][out] */ int *pRows) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Rows( 
            /* [in] */ int pRows) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Columns( 
            /* [retval][out] */ int *pColumns) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Columns( 
            /* [in] */ int pColumns) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_FlowDirection( 
            /* [retval][out] */ AcTableDirection *pFlow) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_FlowDirection( 
            /* [in] */ AcTableDirection pFlow) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ double *pWidth) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ double pWidth) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *pHeight) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double pHeight) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_VertCellMargin( 
            /* [retval][out] */ double *pGap) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_VertCellMargin( 
            /* [in] */ double pGap) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HorzCellMargin( 
            /* [retval][out] */ double *pGap) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_HorzCellMargin( 
            /* [in] */ double pGap) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_InsertionPoint( 
            /* [retval][out] */ VARIANT *insPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_InsertionPoint( 
            /* [in] */ VARIANT insPoint) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetColumnWidth( 
            /* [in] */ int col,
            /* [retval][out] */ double *pWidth) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetColumnWidth( 
            /* [in] */ int col,
            /* [in] */ double Width) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ColumnWidth( 
            /* [in] */ double rhs) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetRowHeight( 
            /* [in] */ int row,
            /* [retval][out] */ double *pHeight) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetRowHeight( 
            /* [in] */ int row,
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_RowHeight( 
            /* [in] */ double rhs) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetMinimumColumnWidth( 
            /* [in] */ int col,
            /* [retval][out] */ double *pWidth) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetMinimumRowHeight( 
            /* [in] */ int row,
            /* [retval][out] */ double *pHeight) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_MinimumTableWidth( 
            /* [retval][out] */ double *pWidth) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_MinimumTableHeight( 
            /* [retval][out] */ double *pHeight) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Direction( 
            /* [retval][out] */ VARIANT *DirectionVector) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Direction( 
            /* [in] */ VARIANT DirectionVector) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TitleSuppressed( 
            /* [retval][out] */ VARIANT_BOOL *bValue) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TitleSuppressed( 
            /* [in] */ VARIANT_BOOL bValue) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HeaderSuppressed( 
            /* [retval][out] */ VARIANT_BOOL *bValue) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_HeaderSuppressed( 
            /* [in] */ VARIANT_BOOL bValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetAlignment( 
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ AcCellAlignment *pCellAlignment) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetAlignment( 
            /* [in] */ int rowTypes,
            /* [in] */ AcCellAlignment cellAlignment) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBackgroundColorNone( 
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ VARIANT_BOOL *bValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetBackgroundColorNone( 
            /* [in] */ int rowTypes,
            /* [in] */ VARIANT_BOOL bValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBackgroundColor( 
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ IAcadAcCmColor **pColor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetBackgroundColor( 
            /* [in] */ int rowTypes,
            /* [in] */ IAcadAcCmColor *pColor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetContentColor( 
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ IAcadAcCmColor **pColor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetContentColor( 
            /* [in] */ int rowTypes,
            /* [in] */ IAcadAcCmColor *pColor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetTextStyle( 
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetTextStyle( 
            /* [in] */ int rowTypes,
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetTextHeight( 
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ double *pTextHeight) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetTextHeight( 
            /* [in] */ int rowTypes,
            /* [in] */ double TextHeight) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetGridLineWeight( 
            /* [in] */ AcGridLineType gridLineType,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetGridLineWeight( 
            /* [in] */ int gridLineTypes,
            /* [in] */ int rowTypes,
            /* [in] */ ACAD_LWEIGHT Lineweight) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetGridColor( 
            /* [in] */ AcGridLineType gridLineType,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ IAcadAcCmColor **pColor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetGridColor( 
            /* [in] */ int gridLineTypes,
            /* [in] */ int rowTypes,
            /* [in] */ IAcadAcCmColor *pColor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetGridVisibility( 
            /* [in] */ AcGridLineType gridLineType,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ VARIANT_BOOL *bValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetGridVisibility( 
            /* [in] */ int gridLineTypes,
            /* [in] */ int rowTypes,
            /* [in] */ VARIANT_BOOL bValue) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TableStyleOverrides( 
            /* [retval][out] */ VARIANT *pIntArray) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ClearTableStyleOverrides( 
            /* [in] */ int flag) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCellType( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ AcCellType *pCellType) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCellType( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ AcCellType CellType) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCellExtents( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ VARIANT_BOOL bOuterCell,
            /* [retval][out] */ VARIANT *pPts) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetAttachmentPoint( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ VARIANT *pAttachmentPoint) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCellAlignment( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ AcCellAlignment *pCellAlignment) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCellAlignment( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ AcCellAlignment cellAlignment) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCellBackgroundColorNone( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ VARIANT_BOOL *bValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCellBackgroundColorNone( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ VARIANT_BOOL bValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCellBackgroundColor( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ IAcadAcCmColor **pColor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCellBackgroundColor( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ IAcadAcCmColor *pColor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCellContentColor( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ IAcadAcCmColor **pColor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCellContentColor( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ IAcadAcCmColor *pColor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCellStyleOverrides( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ VARIANT *pIntArray) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DeleteCellContent( 
            /* [in] */ int row,
            /* [in] */ int col) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetRowType( 
            /* [in] */ int row,
            /* [retval][out] */ AcRowType *pRowType) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetText( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ BSTR *pStr) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetText( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ BSTR pStr) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCellTextStyle( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCellTextStyle( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCellTextHeight( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ double *pTextHeight) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCellTextHeight( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ double TextHeight) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetTextRotation( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ AcRotationAngle *TextRotation) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetTextRotation( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ AcRotationAngle TextRotation) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetAutoScale( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ VARIANT_BOOL *bValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetAutoScale( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ VARIANT_BOOL bValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBlockTableRecordId( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ long *blkId) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetBlockTableRecordId( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ long blkId,
            /* [in] */ VARIANT_BOOL bAutoFit) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBlockScale( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ double *blkScale) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetBlockScale( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ double blkScale) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBlockRotation( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ double *blkRotation) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetBlockRotation( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ double blkRotation) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBlockAttributeValue( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ long attdefId,
            /* [retval][out] */ BSTR *bstrValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetBlockAttributeValue( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ long attdefId,
            /* [in] */ BSTR bstrValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCellGridLineWeight( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ AcCellEdgeMask edge,
            /* [retval][out] */ ACAD_LWEIGHT *plineweight) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCellGridLineWeight( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ int edges,
            /* [in] */ ACAD_LWEIGHT Lineweight) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCellGridColor( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ AcCellEdgeMask edge,
            /* [retval][out] */ IAcadAcCmColor **pColor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCellGridColor( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ int edges,
            /* [in] */ IAcadAcCmColor *pColor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCellGridVisibility( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ AcCellEdgeMask edge,
            /* [retval][out] */ VARIANT_BOOL *bValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCellGridVisibility( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ int edges,
            /* [in] */ VARIANT_BOOL bValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE InsertColumns( 
            /* [in] */ int col,
            /* [in] */ double Width,
            /* [in] */ int cols) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DeleteColumns( 
            /* [in] */ int col,
            /* [in] */ int cols) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE InsertRows( 
            /* [in] */ int row,
            /* [in] */ double Height,
            /* [in] */ int Rows) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DeleteRows( 
            /* [in] */ int row,
            /* [in] */ int Rows) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE MergeCells( 
            /* [in] */ int minRow,
            /* [in] */ int maxRow,
            /* [in] */ int minCol,
            /* [in] */ int maxCol) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE UnmergeCells( 
            /* [in] */ int minRow,
            /* [in] */ int maxRow,
            /* [in] */ int minCol,
            /* [in] */ int maxCol) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IsMergedCell( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [out] */ int *minRow,
            /* [out] */ int *maxRow,
            /* [out] */ int *minCol,
            /* [out] */ int *maxCol,
            /* [retval][out] */ VARIANT_BOOL *pbValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetFieldId( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ long *fieldId) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetFieldId( 
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ long fieldId) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GenerateLayout( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RecomputeTableBlock( 
            /* [in] */ VARIANT_BOOL bForceUpdate) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE HitTest( 
            /* [in] */ VARIANT wpt,
            /* [in] */ VARIANT wviewVec,
            /* [out] */ int *resultRowIndex,
            /* [out] */ int *resultColumnIndex,
            /* [retval][out] */ VARIANT_BOOL *bReturn) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Select( 
            /* [in] */ VARIANT wpt,
            /* [in] */ VARIANT wvwVec,
            /* [in] */ VARIANT wvwxVec,
            /* [in] */ double wxaper,
            /* [in] */ double wyaper,
            /* [in] */ VARIANT_BOOL allowOutside,
            /* [out] */ int *resultRowIndex,
            /* [out] */ int *resultColumnIndex,
            /* [retval][out] */ VARIANT *pPaths) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SelectSubRegion( 
            /* [in] */ VARIANT wpt1,
            /* [in] */ VARIANT wpt2,
            /* [in] */ VARIANT wvwVec,
            /* [in] */ VARIANT wvwxVec,
            /* [in] */ AcSelectType seltype,
            /* [in] */ VARIANT_BOOL bIncludeCurrentSelection,
            /* [out] */ int *rowMin,
            /* [out] */ int *rowMax,
            /* [out] */ int *colMin,
            /* [out] */ int *colMax,
            /* [retval][out] */ VARIANT *pPaths) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ReselectSubRegion( 
            /* [retval][out] */ VARIANT *pPaths) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetSubSelection( 
            /* [out] */ int *rowMin,
            /* [out] */ int *rowMax,
            /* [out] */ int *colMin,
            /* [out] */ int *colMax) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetSubSelection( 
            /* [in] */ int rowMin,
            /* [in] */ int rowMax,
            /* [in] */ int colMin,
            /* [in] */ int colMax) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ClearSubSelection( void) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HasSubSelection( 
            /* [retval][out] */ VARIANT_BOOL *pbValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadTableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadTable * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadTable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadTable * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadTable * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadTable * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadTable * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadTable * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadTable * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadTable * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadTable * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadTable * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadTable * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadTable * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadTable * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadTable * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadTable * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadTable * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadTable * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadTable * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadTable * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadTable * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadTable * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadTable * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadTable * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadTable * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadTable * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadTable * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadTable * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadTable * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadTable * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadTable * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadTable * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadTable * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadTable * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadTable * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadTable * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadTable * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadTable * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadTable * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadTable * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadTable * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadTable * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadTable * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadTable * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadTable * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadTable * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadTable * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadTable * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadTable * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadTable * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadTable * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadTable * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadTable * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IAcadTable * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IAcadTable * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rows )( 
            IAcadTable * This,
            /* [retval][out] */ int *pRows);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rows )( 
            IAcadTable * This,
            /* [in] */ int pRows);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Columns )( 
            IAcadTable * This,
            /* [retval][out] */ int *pColumns);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Columns )( 
            IAcadTable * This,
            /* [in] */ int pColumns);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FlowDirection )( 
            IAcadTable * This,
            /* [retval][out] */ AcTableDirection *pFlow);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FlowDirection )( 
            IAcadTable * This,
            /* [in] */ AcTableDirection pFlow);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IAcadTable * This,
            /* [retval][out] */ double *pWidth);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            IAcadTable * This,
            /* [in] */ double pWidth);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IAcadTable * This,
            /* [retval][out] */ double *pHeight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IAcadTable * This,
            /* [in] */ double pHeight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VertCellMargin )( 
            IAcadTable * This,
            /* [retval][out] */ double *pGap);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VertCellMargin )( 
            IAcadTable * This,
            /* [in] */ double pGap);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HorzCellMargin )( 
            IAcadTable * This,
            /* [retval][out] */ double *pGap);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HorzCellMargin )( 
            IAcadTable * This,
            /* [in] */ double pGap);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IAcadTable * This,
            /* [retval][out] */ VARIANT *insPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IAcadTable * This,
            /* [in] */ VARIANT insPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetColumnWidth )( 
            IAcadTable * This,
            /* [in] */ int col,
            /* [retval][out] */ double *pWidth);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetColumnWidth )( 
            IAcadTable * This,
            /* [in] */ int col,
            /* [in] */ double Width);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ColumnWidth )( 
            IAcadTable * This,
            /* [in] */ double rhs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetRowHeight )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [retval][out] */ double *pHeight);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetRowHeight )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ double Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RowHeight )( 
            IAcadTable * This,
            /* [in] */ double rhs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetMinimumColumnWidth )( 
            IAcadTable * This,
            /* [in] */ int col,
            /* [retval][out] */ double *pWidth);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetMinimumRowHeight )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [retval][out] */ double *pHeight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MinimumTableWidth )( 
            IAcadTable * This,
            /* [retval][out] */ double *pWidth);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MinimumTableHeight )( 
            IAcadTable * This,
            /* [retval][out] */ double *pHeight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Direction )( 
            IAcadTable * This,
            /* [retval][out] */ VARIANT *DirectionVector);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Direction )( 
            IAcadTable * This,
            /* [in] */ VARIANT DirectionVector);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TitleSuppressed )( 
            IAcadTable * This,
            /* [retval][out] */ VARIANT_BOOL *bValue);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TitleSuppressed )( 
            IAcadTable * This,
            /* [in] */ VARIANT_BOOL bValue);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderSuppressed )( 
            IAcadTable * This,
            /* [retval][out] */ VARIANT_BOOL *bValue);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderSuppressed )( 
            IAcadTable * This,
            /* [in] */ VARIANT_BOOL bValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetAlignment )( 
            IAcadTable * This,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ AcCellAlignment *pCellAlignment);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetAlignment )( 
            IAcadTable * This,
            /* [in] */ int rowTypes,
            /* [in] */ AcCellAlignment cellAlignment);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBackgroundColorNone )( 
            IAcadTable * This,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ VARIANT_BOOL *bValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetBackgroundColorNone )( 
            IAcadTable * This,
            /* [in] */ int rowTypes,
            /* [in] */ VARIANT_BOOL bValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBackgroundColor )( 
            IAcadTable * This,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetBackgroundColor )( 
            IAcadTable * This,
            /* [in] */ int rowTypes,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetContentColor )( 
            IAcadTable * This,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetContentColor )( 
            IAcadTable * This,
            /* [in] */ int rowTypes,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetTextStyle )( 
            IAcadTable * This,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetTextStyle )( 
            IAcadTable * This,
            /* [in] */ int rowTypes,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetTextHeight )( 
            IAcadTable * This,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ double *pTextHeight);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetTextHeight )( 
            IAcadTable * This,
            /* [in] */ int rowTypes,
            /* [in] */ double TextHeight);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetGridLineWeight )( 
            IAcadTable * This,
            /* [in] */ AcGridLineType gridLineType,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetGridLineWeight )( 
            IAcadTable * This,
            /* [in] */ int gridLineTypes,
            /* [in] */ int rowTypes,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetGridColor )( 
            IAcadTable * This,
            /* [in] */ AcGridLineType gridLineType,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetGridColor )( 
            IAcadTable * This,
            /* [in] */ int gridLineTypes,
            /* [in] */ int rowTypes,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetGridVisibility )( 
            IAcadTable * This,
            /* [in] */ AcGridLineType gridLineType,
            /* [in] */ AcRowType rowType,
            /* [retval][out] */ VARIANT_BOOL *bValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetGridVisibility )( 
            IAcadTable * This,
            /* [in] */ int gridLineTypes,
            /* [in] */ int rowTypes,
            /* [in] */ VARIANT_BOOL bValue);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TableStyleOverrides )( 
            IAcadTable * This,
            /* [retval][out] */ VARIANT *pIntArray);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ClearTableStyleOverrides )( 
            IAcadTable * This,
            /* [in] */ int flag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCellType )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ AcCellType *pCellType);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCellType )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ AcCellType CellType);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCellExtents )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ VARIANT_BOOL bOuterCell,
            /* [retval][out] */ VARIANT *pPts);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetAttachmentPoint )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ VARIANT *pAttachmentPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCellAlignment )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ AcCellAlignment *pCellAlignment);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCellAlignment )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ AcCellAlignment cellAlignment);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCellBackgroundColorNone )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ VARIANT_BOOL *bValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCellBackgroundColorNone )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ VARIANT_BOOL bValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCellBackgroundColor )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCellBackgroundColor )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCellContentColor )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCellContentColor )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCellStyleOverrides )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ VARIANT *pIntArray);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteCellContent )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetRowType )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [retval][out] */ AcRowType *pRowType);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetText )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ BSTR *pStr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetText )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ BSTR pStr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCellTextStyle )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCellTextStyle )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCellTextHeight )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ double *pTextHeight);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCellTextHeight )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ double TextHeight);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetTextRotation )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ AcRotationAngle *TextRotation);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetTextRotation )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ AcRotationAngle TextRotation);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetAutoScale )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ VARIANT_BOOL *bValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetAutoScale )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ VARIANT_BOOL bValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBlockTableRecordId )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ long *blkId);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetBlockTableRecordId )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ long blkId,
            /* [in] */ VARIANT_BOOL bAutoFit);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBlockScale )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ double *blkScale);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetBlockScale )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ double blkScale);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBlockRotation )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ double *blkRotation);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetBlockRotation )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ double blkRotation);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBlockAttributeValue )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ long attdefId,
            /* [retval][out] */ BSTR *bstrValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetBlockAttributeValue )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ long attdefId,
            /* [in] */ BSTR bstrValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCellGridLineWeight )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ AcCellEdgeMask edge,
            /* [retval][out] */ ACAD_LWEIGHT *plineweight);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCellGridLineWeight )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ int edges,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCellGridColor )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ AcCellEdgeMask edge,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCellGridColor )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ int edges,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCellGridVisibility )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ AcCellEdgeMask edge,
            /* [retval][out] */ VARIANT_BOOL *bValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCellGridVisibility )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ int edges,
            /* [in] */ VARIANT_BOOL bValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *InsertColumns )( 
            IAcadTable * This,
            /* [in] */ int col,
            /* [in] */ double Width,
            /* [in] */ int cols);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteColumns )( 
            IAcadTable * This,
            /* [in] */ int col,
            /* [in] */ int cols);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *InsertRows )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ double Height,
            /* [in] */ int Rows);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteRows )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int Rows);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MergeCells )( 
            IAcadTable * This,
            /* [in] */ int minRow,
            /* [in] */ int maxRow,
            /* [in] */ int minCol,
            /* [in] */ int maxCol);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *UnmergeCells )( 
            IAcadTable * This,
            /* [in] */ int minRow,
            /* [in] */ int maxRow,
            /* [in] */ int minCol,
            /* [in] */ int maxCol);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsMergedCell )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [out] */ int *minRow,
            /* [out] */ int *maxRow,
            /* [out] */ int *minCol,
            /* [out] */ int *maxCol,
            /* [retval][out] */ VARIANT_BOOL *pbValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetFieldId )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [retval][out] */ long *fieldId);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetFieldId )( 
            IAcadTable * This,
            /* [in] */ int row,
            /* [in] */ int col,
            /* [in] */ long fieldId);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GenerateLayout )( 
            IAcadTable * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RecomputeTableBlock )( 
            IAcadTable * This,
            /* [in] */ VARIANT_BOOL bForceUpdate);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HitTest )( 
            IAcadTable * This,
            /* [in] */ VARIANT wpt,
            /* [in] */ VARIANT wviewVec,
            /* [out] */ int *resultRowIndex,
            /* [out] */ int *resultColumnIndex,
            /* [retval][out] */ VARIANT_BOOL *bReturn);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Select )( 
            IAcadTable * This,
            /* [in] */ VARIANT wpt,
            /* [in] */ VARIANT wvwVec,
            /* [in] */ VARIANT wvwxVec,
            /* [in] */ double wxaper,
            /* [in] */ double wyaper,
            /* [in] */ VARIANT_BOOL allowOutside,
            /* [out] */ int *resultRowIndex,
            /* [out] */ int *resultColumnIndex,
            /* [retval][out] */ VARIANT *pPaths);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SelectSubRegion )( 
            IAcadTable * This,
            /* [in] */ VARIANT wpt1,
            /* [in] */ VARIANT wpt2,
            /* [in] */ VARIANT wvwVec,
            /* [in] */ VARIANT wvwxVec,
            /* [in] */ AcSelectType seltype,
            /* [in] */ VARIANT_BOOL bIncludeCurrentSelection,
            /* [out] */ int *rowMin,
            /* [out] */ int *rowMax,
            /* [out] */ int *colMin,
            /* [out] */ int *colMax,
            /* [retval][out] */ VARIANT *pPaths);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ReselectSubRegion )( 
            IAcadTable * This,
            /* [retval][out] */ VARIANT *pPaths);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubSelection )( 
            IAcadTable * This,
            /* [out] */ int *rowMin,
            /* [out] */ int *rowMax,
            /* [out] */ int *colMin,
            /* [out] */ int *colMax);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetSubSelection )( 
            IAcadTable * This,
            /* [in] */ int rowMin,
            /* [in] */ int rowMax,
            /* [in] */ int colMin,
            /* [in] */ int colMax);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ClearSubSelection )( 
            IAcadTable * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasSubSelection )( 
            IAcadTable * This,
            /* [retval][out] */ VARIANT_BOOL *pbValue);
        
        END_INTERFACE
    } IAcadTableVtbl;

    interface IAcadTable
    {
        CONST_VTBL struct IAcadTableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadTable_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadTable_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadTable_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadTable_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadTable_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadTable_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadTable_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadTable_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadTable_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadTable_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadTable_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadTable_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadTable_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadTable_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadTable_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadTable_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadTable_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadTable_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadTable_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadTable_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadTable_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadTable_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadTable_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadTable_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadTable_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadTable_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadTable_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadTable_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadTable_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadTable_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadTable_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadTable_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadTable_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadTable_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadTable_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadTable_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadTable_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadTable_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadTable_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadTable_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadTable_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadTable_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadTable_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadTable_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadTable_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadTable_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadTable_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadTable_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadTable_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadTable_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadTable_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadTable_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadTable_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadTable_get_StyleName(This,bstrName)	\
    (This)->lpVtbl -> get_StyleName(This,bstrName)

#define IAcadTable_put_StyleName(This,bstrName)	\
    (This)->lpVtbl -> put_StyleName(This,bstrName)

#define IAcadTable_get_Rows(This,pRows)	\
    (This)->lpVtbl -> get_Rows(This,pRows)

#define IAcadTable_put_Rows(This,pRows)	\
    (This)->lpVtbl -> put_Rows(This,pRows)

#define IAcadTable_get_Columns(This,pColumns)	\
    (This)->lpVtbl -> get_Columns(This,pColumns)

#define IAcadTable_put_Columns(This,pColumns)	\
    (This)->lpVtbl -> put_Columns(This,pColumns)

#define IAcadTable_get_FlowDirection(This,pFlow)	\
    (This)->lpVtbl -> get_FlowDirection(This,pFlow)

#define IAcadTable_put_FlowDirection(This,pFlow)	\
    (This)->lpVtbl -> put_FlowDirection(This,pFlow)

#define IAcadTable_get_Width(This,pWidth)	\
    (This)->lpVtbl -> get_Width(This,pWidth)

#define IAcadTable_put_Width(This,pWidth)	\
    (This)->lpVtbl -> put_Width(This,pWidth)

#define IAcadTable_get_Height(This,pHeight)	\
    (This)->lpVtbl -> get_Height(This,pHeight)

#define IAcadTable_put_Height(This,pHeight)	\
    (This)->lpVtbl -> put_Height(This,pHeight)

#define IAcadTable_get_VertCellMargin(This,pGap)	\
    (This)->lpVtbl -> get_VertCellMargin(This,pGap)

#define IAcadTable_put_VertCellMargin(This,pGap)	\
    (This)->lpVtbl -> put_VertCellMargin(This,pGap)

#define IAcadTable_get_HorzCellMargin(This,pGap)	\
    (This)->lpVtbl -> get_HorzCellMargin(This,pGap)

#define IAcadTable_put_HorzCellMargin(This,pGap)	\
    (This)->lpVtbl -> put_HorzCellMargin(This,pGap)

#define IAcadTable_get_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> get_InsertionPoint(This,insPoint)

#define IAcadTable_put_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> put_InsertionPoint(This,insPoint)

#define IAcadTable_GetColumnWidth(This,col,pWidth)	\
    (This)->lpVtbl -> GetColumnWidth(This,col,pWidth)

#define IAcadTable_SetColumnWidth(This,col,Width)	\
    (This)->lpVtbl -> SetColumnWidth(This,col,Width)

#define IAcadTable_put_ColumnWidth(This,rhs)	\
    (This)->lpVtbl -> put_ColumnWidth(This,rhs)

#define IAcadTable_GetRowHeight(This,row,pHeight)	\
    (This)->lpVtbl -> GetRowHeight(This,row,pHeight)

#define IAcadTable_SetRowHeight(This,row,Height)	\
    (This)->lpVtbl -> SetRowHeight(This,row,Height)

#define IAcadTable_put_RowHeight(This,rhs)	\
    (This)->lpVtbl -> put_RowHeight(This,rhs)

#define IAcadTable_GetMinimumColumnWidth(This,col,pWidth)	\
    (This)->lpVtbl -> GetMinimumColumnWidth(This,col,pWidth)

#define IAcadTable_GetMinimumRowHeight(This,row,pHeight)	\
    (This)->lpVtbl -> GetMinimumRowHeight(This,row,pHeight)

#define IAcadTable_get_MinimumTableWidth(This,pWidth)	\
    (This)->lpVtbl -> get_MinimumTableWidth(This,pWidth)

#define IAcadTable_get_MinimumTableHeight(This,pHeight)	\
    (This)->lpVtbl -> get_MinimumTableHeight(This,pHeight)

#define IAcadTable_get_Direction(This,DirectionVector)	\
    (This)->lpVtbl -> get_Direction(This,DirectionVector)

#define IAcadTable_put_Direction(This,DirectionVector)	\
    (This)->lpVtbl -> put_Direction(This,DirectionVector)

#define IAcadTable_get_TitleSuppressed(This,bValue)	\
    (This)->lpVtbl -> get_TitleSuppressed(This,bValue)

#define IAcadTable_put_TitleSuppressed(This,bValue)	\
    (This)->lpVtbl -> put_TitleSuppressed(This,bValue)

#define IAcadTable_get_HeaderSuppressed(This,bValue)	\
    (This)->lpVtbl -> get_HeaderSuppressed(This,bValue)

#define IAcadTable_put_HeaderSuppressed(This,bValue)	\
    (This)->lpVtbl -> put_HeaderSuppressed(This,bValue)

#define IAcadTable_GetAlignment(This,rowType,pCellAlignment)	\
    (This)->lpVtbl -> GetAlignment(This,rowType,pCellAlignment)

#define IAcadTable_SetAlignment(This,rowTypes,cellAlignment)	\
    (This)->lpVtbl -> SetAlignment(This,rowTypes,cellAlignment)

#define IAcadTable_GetBackgroundColorNone(This,rowType,bValue)	\
    (This)->lpVtbl -> GetBackgroundColorNone(This,rowType,bValue)

#define IAcadTable_SetBackgroundColorNone(This,rowTypes,bValue)	\
    (This)->lpVtbl -> SetBackgroundColorNone(This,rowTypes,bValue)

#define IAcadTable_GetBackgroundColor(This,rowType,pColor)	\
    (This)->lpVtbl -> GetBackgroundColor(This,rowType,pColor)

#define IAcadTable_SetBackgroundColor(This,rowTypes,pColor)	\
    (This)->lpVtbl -> SetBackgroundColor(This,rowTypes,pColor)

#define IAcadTable_GetContentColor(This,rowType,pColor)	\
    (This)->lpVtbl -> GetContentColor(This,rowType,pColor)

#define IAcadTable_SetContentColor(This,rowTypes,pColor)	\
    (This)->lpVtbl -> SetContentColor(This,rowTypes,pColor)

#define IAcadTable_GetTextStyle(This,rowType,bstrName)	\
    (This)->lpVtbl -> GetTextStyle(This,rowType,bstrName)

#define IAcadTable_SetTextStyle(This,rowTypes,bstrName)	\
    (This)->lpVtbl -> SetTextStyle(This,rowTypes,bstrName)

#define IAcadTable_GetTextHeight(This,rowType,pTextHeight)	\
    (This)->lpVtbl -> GetTextHeight(This,rowType,pTextHeight)

#define IAcadTable_SetTextHeight(This,rowTypes,TextHeight)	\
    (This)->lpVtbl -> SetTextHeight(This,rowTypes,TextHeight)

#define IAcadTable_GetGridLineWeight(This,gridLineType,rowType,Lineweight)	\
    (This)->lpVtbl -> GetGridLineWeight(This,gridLineType,rowType,Lineweight)

#define IAcadTable_SetGridLineWeight(This,gridLineTypes,rowTypes,Lineweight)	\
    (This)->lpVtbl -> SetGridLineWeight(This,gridLineTypes,rowTypes,Lineweight)

#define IAcadTable_GetGridColor(This,gridLineType,rowType,pColor)	\
    (This)->lpVtbl -> GetGridColor(This,gridLineType,rowType,pColor)

#define IAcadTable_SetGridColor(This,gridLineTypes,rowTypes,pColor)	\
    (This)->lpVtbl -> SetGridColor(This,gridLineTypes,rowTypes,pColor)

#define IAcadTable_GetGridVisibility(This,gridLineType,rowType,bValue)	\
    (This)->lpVtbl -> GetGridVisibility(This,gridLineType,rowType,bValue)

#define IAcadTable_SetGridVisibility(This,gridLineTypes,rowTypes,bValue)	\
    (This)->lpVtbl -> SetGridVisibility(This,gridLineTypes,rowTypes,bValue)

#define IAcadTable_get_TableStyleOverrides(This,pIntArray)	\
    (This)->lpVtbl -> get_TableStyleOverrides(This,pIntArray)

#define IAcadTable_ClearTableStyleOverrides(This,flag)	\
    (This)->lpVtbl -> ClearTableStyleOverrides(This,flag)

#define IAcadTable_GetCellType(This,row,col,pCellType)	\
    (This)->lpVtbl -> GetCellType(This,row,col,pCellType)

#define IAcadTable_SetCellType(This,row,col,CellType)	\
    (This)->lpVtbl -> SetCellType(This,row,col,CellType)

#define IAcadTable_GetCellExtents(This,row,col,bOuterCell,pPts)	\
    (This)->lpVtbl -> GetCellExtents(This,row,col,bOuterCell,pPts)

#define IAcadTable_GetAttachmentPoint(This,row,col,pAttachmentPoint)	\
    (This)->lpVtbl -> GetAttachmentPoint(This,row,col,pAttachmentPoint)

#define IAcadTable_GetCellAlignment(This,row,col,pCellAlignment)	\
    (This)->lpVtbl -> GetCellAlignment(This,row,col,pCellAlignment)

#define IAcadTable_SetCellAlignment(This,row,col,cellAlignment)	\
    (This)->lpVtbl -> SetCellAlignment(This,row,col,cellAlignment)

#define IAcadTable_GetCellBackgroundColorNone(This,row,col,bValue)	\
    (This)->lpVtbl -> GetCellBackgroundColorNone(This,row,col,bValue)

#define IAcadTable_SetCellBackgroundColorNone(This,row,col,bValue)	\
    (This)->lpVtbl -> SetCellBackgroundColorNone(This,row,col,bValue)

#define IAcadTable_GetCellBackgroundColor(This,row,col,pColor)	\
    (This)->lpVtbl -> GetCellBackgroundColor(This,row,col,pColor)

#define IAcadTable_SetCellBackgroundColor(This,row,col,pColor)	\
    (This)->lpVtbl -> SetCellBackgroundColor(This,row,col,pColor)

#define IAcadTable_GetCellContentColor(This,row,col,pColor)	\
    (This)->lpVtbl -> GetCellContentColor(This,row,col,pColor)

#define IAcadTable_SetCellContentColor(This,row,col,pColor)	\
    (This)->lpVtbl -> SetCellContentColor(This,row,col,pColor)

#define IAcadTable_GetCellStyleOverrides(This,row,col,pIntArray)	\
    (This)->lpVtbl -> GetCellStyleOverrides(This,row,col,pIntArray)

#define IAcadTable_DeleteCellContent(This,row,col)	\
    (This)->lpVtbl -> DeleteCellContent(This,row,col)

#define IAcadTable_GetRowType(This,row,pRowType)	\
    (This)->lpVtbl -> GetRowType(This,row,pRowType)

#define IAcadTable_GetText(This,row,col,pStr)	\
    (This)->lpVtbl -> GetText(This,row,col,pStr)

#define IAcadTable_SetText(This,row,col,pStr)	\
    (This)->lpVtbl -> SetText(This,row,col,pStr)

#define IAcadTable_GetCellTextStyle(This,row,col,bstrName)	\
    (This)->lpVtbl -> GetCellTextStyle(This,row,col,bstrName)

#define IAcadTable_SetCellTextStyle(This,row,col,bstrName)	\
    (This)->lpVtbl -> SetCellTextStyle(This,row,col,bstrName)

#define IAcadTable_GetCellTextHeight(This,row,col,pTextHeight)	\
    (This)->lpVtbl -> GetCellTextHeight(This,row,col,pTextHeight)

#define IAcadTable_SetCellTextHeight(This,row,col,TextHeight)	\
    (This)->lpVtbl -> SetCellTextHeight(This,row,col,TextHeight)

#define IAcadTable_GetTextRotation(This,row,col,TextRotation)	\
    (This)->lpVtbl -> GetTextRotation(This,row,col,TextRotation)

#define IAcadTable_SetTextRotation(This,row,col,TextRotation)	\
    (This)->lpVtbl -> SetTextRotation(This,row,col,TextRotation)

#define IAcadTable_GetAutoScale(This,row,col,bValue)	\
    (This)->lpVtbl -> GetAutoScale(This,row,col,bValue)

#define IAcadTable_SetAutoScale(This,row,col,bValue)	\
    (This)->lpVtbl -> SetAutoScale(This,row,col,bValue)

#define IAcadTable_GetBlockTableRecordId(This,row,col,blkId)	\
    (This)->lpVtbl -> GetBlockTableRecordId(This,row,col,blkId)

#define IAcadTable_SetBlockTableRecordId(This,row,col,blkId,bAutoFit)	\
    (This)->lpVtbl -> SetBlockTableRecordId(This,row,col,blkId,bAutoFit)

#define IAcadTable_GetBlockScale(This,row,col,blkScale)	\
    (This)->lpVtbl -> GetBlockScale(This,row,col,blkScale)

#define IAcadTable_SetBlockScale(This,row,col,blkScale)	\
    (This)->lpVtbl -> SetBlockScale(This,row,col,blkScale)

#define IAcadTable_GetBlockRotation(This,row,col,blkRotation)	\
    (This)->lpVtbl -> GetBlockRotation(This,row,col,blkRotation)

#define IAcadTable_SetBlockRotation(This,row,col,blkRotation)	\
    (This)->lpVtbl -> SetBlockRotation(This,row,col,blkRotation)

#define IAcadTable_GetBlockAttributeValue(This,row,col,attdefId,bstrValue)	\
    (This)->lpVtbl -> GetBlockAttributeValue(This,row,col,attdefId,bstrValue)

#define IAcadTable_SetBlockAttributeValue(This,row,col,attdefId,bstrValue)	\
    (This)->lpVtbl -> SetBlockAttributeValue(This,row,col,attdefId,bstrValue)

#define IAcadTable_GetCellGridLineWeight(This,row,col,edge,plineweight)	\
    (This)->lpVtbl -> GetCellGridLineWeight(This,row,col,edge,plineweight)

#define IAcadTable_SetCellGridLineWeight(This,row,col,edges,Lineweight)	\
    (This)->lpVtbl -> SetCellGridLineWeight(This,row,col,edges,Lineweight)

#define IAcadTable_GetCellGridColor(This,row,col,edge,pColor)	\
    (This)->lpVtbl -> GetCellGridColor(This,row,col,edge,pColor)

#define IAcadTable_SetCellGridColor(This,row,col,edges,pColor)	\
    (This)->lpVtbl -> SetCellGridColor(This,row,col,edges,pColor)

#define IAcadTable_GetCellGridVisibility(This,row,col,edge,bValue)	\
    (This)->lpVtbl -> GetCellGridVisibility(This,row,col,edge,bValue)

#define IAcadTable_SetCellGridVisibility(This,row,col,edges,bValue)	\
    (This)->lpVtbl -> SetCellGridVisibility(This,row,col,edges,bValue)

#define IAcadTable_InsertColumns(This,col,Width,cols)	\
    (This)->lpVtbl -> InsertColumns(This,col,Width,cols)

#define IAcadTable_DeleteColumns(This,col,cols)	\
    (This)->lpVtbl -> DeleteColumns(This,col,cols)

#define IAcadTable_InsertRows(This,row,Height,Rows)	\
    (This)->lpVtbl -> InsertRows(This,row,Height,Rows)

#define IAcadTable_DeleteRows(This,row,Rows)	\
    (This)->lpVtbl -> DeleteRows(This,row,Rows)

#define IAcadTable_MergeCells(This,minRow,maxRow,minCol,maxCol)	\
    (This)->lpVtbl -> MergeCells(This,minRow,maxRow,minCol,maxCol)

#define IAcadTable_UnmergeCells(This,minRow,maxRow,minCol,maxCol)	\
    (This)->lpVtbl -> UnmergeCells(This,minRow,maxRow,minCol,maxCol)

#define IAcadTable_IsMergedCell(This,row,col,minRow,maxRow,minCol,maxCol,pbValue)	\
    (This)->lpVtbl -> IsMergedCell(This,row,col,minRow,maxRow,minCol,maxCol,pbValue)

#define IAcadTable_GetFieldId(This,row,col,fieldId)	\
    (This)->lpVtbl -> GetFieldId(This,row,col,fieldId)

#define IAcadTable_SetFieldId(This,row,col,fieldId)	\
    (This)->lpVtbl -> SetFieldId(This,row,col,fieldId)

#define IAcadTable_GenerateLayout(This)	\
    (This)->lpVtbl -> GenerateLayout(This)

#define IAcadTable_RecomputeTableBlock(This,bForceUpdate)	\
    (This)->lpVtbl -> RecomputeTableBlock(This,bForceUpdate)

#define IAcadTable_HitTest(This,wpt,wviewVec,resultRowIndex,resultColumnIndex,bReturn)	\
    (This)->lpVtbl -> HitTest(This,wpt,wviewVec,resultRowIndex,resultColumnIndex,bReturn)

#define IAcadTable_Select(This,wpt,wvwVec,wvwxVec,wxaper,wyaper,allowOutside,resultRowIndex,resultColumnIndex,pPaths)	\
    (This)->lpVtbl -> Select(This,wpt,wvwVec,wvwxVec,wxaper,wyaper,allowOutside,resultRowIndex,resultColumnIndex,pPaths)

#define IAcadTable_SelectSubRegion(This,wpt1,wpt2,wvwVec,wvwxVec,seltype,bIncludeCurrentSelection,rowMin,rowMax,colMin,colMax,pPaths)	\
    (This)->lpVtbl -> SelectSubRegion(This,wpt1,wpt2,wvwVec,wvwxVec,seltype,bIncludeCurrentSelection,rowMin,rowMax,colMin,colMax,pPaths)

#define IAcadTable_ReselectSubRegion(This,pPaths)	\
    (This)->lpVtbl -> ReselectSubRegion(This,pPaths)

#define IAcadTable_GetSubSelection(This,rowMin,rowMax,colMin,colMax)	\
    (This)->lpVtbl -> GetSubSelection(This,rowMin,rowMax,colMin,colMax)

#define IAcadTable_SetSubSelection(This,rowMin,rowMax,colMin,colMax)	\
    (This)->lpVtbl -> SetSubSelection(This,rowMin,rowMax,colMin,colMax)

#define IAcadTable_ClearSubSelection(This)	\
    (This)->lpVtbl -> ClearSubSelection(This)

#define IAcadTable_get_HasSubSelection(This,pbValue)	\
    (This)->lpVtbl -> get_HasSubSelection(This,pbValue)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_get_StyleName_Proxy( 
    IAcadTable * This,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadTable_get_StyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_put_StyleName_Proxy( 
    IAcadTable * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadTable_put_StyleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_get_Rows_Proxy( 
    IAcadTable * This,
    /* [retval][out] */ int *pRows);


void __RPC_STUB IAcadTable_get_Rows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_put_Rows_Proxy( 
    IAcadTable * This,
    /* [in] */ int pRows);


void __RPC_STUB IAcadTable_put_Rows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_get_Columns_Proxy( 
    IAcadTable * This,
    /* [retval][out] */ int *pColumns);


void __RPC_STUB IAcadTable_get_Columns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_put_Columns_Proxy( 
    IAcadTable * This,
    /* [in] */ int pColumns);


void __RPC_STUB IAcadTable_put_Columns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_get_FlowDirection_Proxy( 
    IAcadTable * This,
    /* [retval][out] */ AcTableDirection *pFlow);


void __RPC_STUB IAcadTable_get_FlowDirection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_put_FlowDirection_Proxy( 
    IAcadTable * This,
    /* [in] */ AcTableDirection pFlow);


void __RPC_STUB IAcadTable_put_FlowDirection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_get_Width_Proxy( 
    IAcadTable * This,
    /* [retval][out] */ double *pWidth);


void __RPC_STUB IAcadTable_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_put_Width_Proxy( 
    IAcadTable * This,
    /* [in] */ double pWidth);


void __RPC_STUB IAcadTable_put_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_get_Height_Proxy( 
    IAcadTable * This,
    /* [retval][out] */ double *pHeight);


void __RPC_STUB IAcadTable_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_put_Height_Proxy( 
    IAcadTable * This,
    /* [in] */ double pHeight);


void __RPC_STUB IAcadTable_put_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_get_VertCellMargin_Proxy( 
    IAcadTable * This,
    /* [retval][out] */ double *pGap);


void __RPC_STUB IAcadTable_get_VertCellMargin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_put_VertCellMargin_Proxy( 
    IAcadTable * This,
    /* [in] */ double pGap);


void __RPC_STUB IAcadTable_put_VertCellMargin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_get_HorzCellMargin_Proxy( 
    IAcadTable * This,
    /* [retval][out] */ double *pGap);


void __RPC_STUB IAcadTable_get_HorzCellMargin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_put_HorzCellMargin_Proxy( 
    IAcadTable * This,
    /* [in] */ double pGap);


void __RPC_STUB IAcadTable_put_HorzCellMargin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_get_InsertionPoint_Proxy( 
    IAcadTable * This,
    /* [retval][out] */ VARIANT *insPoint);


void __RPC_STUB IAcadTable_get_InsertionPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_put_InsertionPoint_Proxy( 
    IAcadTable * This,
    /* [in] */ VARIANT insPoint);


void __RPC_STUB IAcadTable_put_InsertionPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetColumnWidth_Proxy( 
    IAcadTable * This,
    /* [in] */ int col,
    /* [retval][out] */ double *pWidth);


void __RPC_STUB IAcadTable_GetColumnWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetColumnWidth_Proxy( 
    IAcadTable * This,
    /* [in] */ int col,
    /* [in] */ double Width);


void __RPC_STUB IAcadTable_SetColumnWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_put_ColumnWidth_Proxy( 
    IAcadTable * This,
    /* [in] */ double rhs);


void __RPC_STUB IAcadTable_put_ColumnWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetRowHeight_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [retval][out] */ double *pHeight);


void __RPC_STUB IAcadTable_GetRowHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetRowHeight_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ double Height);


void __RPC_STUB IAcadTable_SetRowHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_put_RowHeight_Proxy( 
    IAcadTable * This,
    /* [in] */ double rhs);


void __RPC_STUB IAcadTable_put_RowHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetMinimumColumnWidth_Proxy( 
    IAcadTable * This,
    /* [in] */ int col,
    /* [retval][out] */ double *pWidth);


void __RPC_STUB IAcadTable_GetMinimumColumnWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetMinimumRowHeight_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [retval][out] */ double *pHeight);


void __RPC_STUB IAcadTable_GetMinimumRowHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_get_MinimumTableWidth_Proxy( 
    IAcadTable * This,
    /* [retval][out] */ double *pWidth);


void __RPC_STUB IAcadTable_get_MinimumTableWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_get_MinimumTableHeight_Proxy( 
    IAcadTable * This,
    /* [retval][out] */ double *pHeight);


void __RPC_STUB IAcadTable_get_MinimumTableHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_get_Direction_Proxy( 
    IAcadTable * This,
    /* [retval][out] */ VARIANT *DirectionVector);


void __RPC_STUB IAcadTable_get_Direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_put_Direction_Proxy( 
    IAcadTable * This,
    /* [in] */ VARIANT DirectionVector);


void __RPC_STUB IAcadTable_put_Direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_get_TitleSuppressed_Proxy( 
    IAcadTable * This,
    /* [retval][out] */ VARIANT_BOOL *bValue);


void __RPC_STUB IAcadTable_get_TitleSuppressed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_put_TitleSuppressed_Proxy( 
    IAcadTable * This,
    /* [in] */ VARIANT_BOOL bValue);


void __RPC_STUB IAcadTable_put_TitleSuppressed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_get_HeaderSuppressed_Proxy( 
    IAcadTable * This,
    /* [retval][out] */ VARIANT_BOOL *bValue);


void __RPC_STUB IAcadTable_get_HeaderSuppressed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_put_HeaderSuppressed_Proxy( 
    IAcadTable * This,
    /* [in] */ VARIANT_BOOL bValue);


void __RPC_STUB IAcadTable_put_HeaderSuppressed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetAlignment_Proxy( 
    IAcadTable * This,
    /* [in] */ AcRowType rowType,
    /* [retval][out] */ AcCellAlignment *pCellAlignment);


void __RPC_STUB IAcadTable_GetAlignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetAlignment_Proxy( 
    IAcadTable * This,
    /* [in] */ int rowTypes,
    /* [in] */ AcCellAlignment cellAlignment);


void __RPC_STUB IAcadTable_SetAlignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetBackgroundColorNone_Proxy( 
    IAcadTable * This,
    /* [in] */ AcRowType rowType,
    /* [retval][out] */ VARIANT_BOOL *bValue);


void __RPC_STUB IAcadTable_GetBackgroundColorNone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetBackgroundColorNone_Proxy( 
    IAcadTable * This,
    /* [in] */ int rowTypes,
    /* [in] */ VARIANT_BOOL bValue);


void __RPC_STUB IAcadTable_SetBackgroundColorNone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetBackgroundColor_Proxy( 
    IAcadTable * This,
    /* [in] */ AcRowType rowType,
    /* [retval][out] */ IAcadAcCmColor **pColor);


void __RPC_STUB IAcadTable_GetBackgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetBackgroundColor_Proxy( 
    IAcadTable * This,
    /* [in] */ int rowTypes,
    /* [in] */ IAcadAcCmColor *pColor);


void __RPC_STUB IAcadTable_SetBackgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetContentColor_Proxy( 
    IAcadTable * This,
    /* [in] */ AcRowType rowType,
    /* [retval][out] */ IAcadAcCmColor **pColor);


void __RPC_STUB IAcadTable_GetContentColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetContentColor_Proxy( 
    IAcadTable * This,
    /* [in] */ int rowTypes,
    /* [in] */ IAcadAcCmColor *pColor);


void __RPC_STUB IAcadTable_SetContentColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetTextStyle_Proxy( 
    IAcadTable * This,
    /* [in] */ AcRowType rowType,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadTable_GetTextStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetTextStyle_Proxy( 
    IAcadTable * This,
    /* [in] */ int rowTypes,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadTable_SetTextStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetTextHeight_Proxy( 
    IAcadTable * This,
    /* [in] */ AcRowType rowType,
    /* [retval][out] */ double *pTextHeight);


void __RPC_STUB IAcadTable_GetTextHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetTextHeight_Proxy( 
    IAcadTable * This,
    /* [in] */ int rowTypes,
    /* [in] */ double TextHeight);


void __RPC_STUB IAcadTable_SetTextHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetGridLineWeight_Proxy( 
    IAcadTable * This,
    /* [in] */ AcGridLineType gridLineType,
    /* [in] */ AcRowType rowType,
    /* [retval][out] */ ACAD_LWEIGHT *Lineweight);


void __RPC_STUB IAcadTable_GetGridLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetGridLineWeight_Proxy( 
    IAcadTable * This,
    /* [in] */ int gridLineTypes,
    /* [in] */ int rowTypes,
    /* [in] */ ACAD_LWEIGHT Lineweight);


void __RPC_STUB IAcadTable_SetGridLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetGridColor_Proxy( 
    IAcadTable * This,
    /* [in] */ AcGridLineType gridLineType,
    /* [in] */ AcRowType rowType,
    /* [retval][out] */ IAcadAcCmColor **pColor);


void __RPC_STUB IAcadTable_GetGridColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetGridColor_Proxy( 
    IAcadTable * This,
    /* [in] */ int gridLineTypes,
    /* [in] */ int rowTypes,
    /* [in] */ IAcadAcCmColor *pColor);


void __RPC_STUB IAcadTable_SetGridColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetGridVisibility_Proxy( 
    IAcadTable * This,
    /* [in] */ AcGridLineType gridLineType,
    /* [in] */ AcRowType rowType,
    /* [retval][out] */ VARIANT_BOOL *bValue);


void __RPC_STUB IAcadTable_GetGridVisibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetGridVisibility_Proxy( 
    IAcadTable * This,
    /* [in] */ int gridLineTypes,
    /* [in] */ int rowTypes,
    /* [in] */ VARIANT_BOOL bValue);


void __RPC_STUB IAcadTable_SetGridVisibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_get_TableStyleOverrides_Proxy( 
    IAcadTable * This,
    /* [retval][out] */ VARIANT *pIntArray);


void __RPC_STUB IAcadTable_get_TableStyleOverrides_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_ClearTableStyleOverrides_Proxy( 
    IAcadTable * This,
    /* [in] */ int flag);


void __RPC_STUB IAcadTable_ClearTableStyleOverrides_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetCellType_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [retval][out] */ AcCellType *pCellType);


void __RPC_STUB IAcadTable_GetCellType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetCellType_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ AcCellType CellType);


void __RPC_STUB IAcadTable_SetCellType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetCellExtents_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ VARIANT_BOOL bOuterCell,
    /* [retval][out] */ VARIANT *pPts);


void __RPC_STUB IAcadTable_GetCellExtents_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetAttachmentPoint_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [retval][out] */ VARIANT *pAttachmentPoint);


void __RPC_STUB IAcadTable_GetAttachmentPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetCellAlignment_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [retval][out] */ AcCellAlignment *pCellAlignment);


void __RPC_STUB IAcadTable_GetCellAlignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetCellAlignment_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ AcCellAlignment cellAlignment);


void __RPC_STUB IAcadTable_SetCellAlignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetCellBackgroundColorNone_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [retval][out] */ VARIANT_BOOL *bValue);


void __RPC_STUB IAcadTable_GetCellBackgroundColorNone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetCellBackgroundColorNone_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ VARIANT_BOOL bValue);


void __RPC_STUB IAcadTable_SetCellBackgroundColorNone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetCellBackgroundColor_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [retval][out] */ IAcadAcCmColor **pColor);


void __RPC_STUB IAcadTable_GetCellBackgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetCellBackgroundColor_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ IAcadAcCmColor *pColor);


void __RPC_STUB IAcadTable_SetCellBackgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetCellContentColor_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [retval][out] */ IAcadAcCmColor **pColor);


void __RPC_STUB IAcadTable_GetCellContentColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetCellContentColor_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ IAcadAcCmColor *pColor);


void __RPC_STUB IAcadTable_SetCellContentColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetCellStyleOverrides_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [retval][out] */ VARIANT *pIntArray);


void __RPC_STUB IAcadTable_GetCellStyleOverrides_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_DeleteCellContent_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col);


void __RPC_STUB IAcadTable_DeleteCellContent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetRowType_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [retval][out] */ AcRowType *pRowType);


void __RPC_STUB IAcadTable_GetRowType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetText_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [retval][out] */ BSTR *pStr);


void __RPC_STUB IAcadTable_GetText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetText_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ BSTR pStr);


void __RPC_STUB IAcadTable_SetText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetCellTextStyle_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [retval][out] */ BSTR *bstrName);


void __RPC_STUB IAcadTable_GetCellTextStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetCellTextStyle_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ BSTR bstrName);


void __RPC_STUB IAcadTable_SetCellTextStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetCellTextHeight_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [retval][out] */ double *pTextHeight);


void __RPC_STUB IAcadTable_GetCellTextHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetCellTextHeight_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ double TextHeight);


void __RPC_STUB IAcadTable_SetCellTextHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetTextRotation_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [retval][out] */ AcRotationAngle *TextRotation);


void __RPC_STUB IAcadTable_GetTextRotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetTextRotation_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ AcRotationAngle TextRotation);


void __RPC_STUB IAcadTable_SetTextRotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetAutoScale_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [retval][out] */ VARIANT_BOOL *bValue);


void __RPC_STUB IAcadTable_GetAutoScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetAutoScale_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ VARIANT_BOOL bValue);


void __RPC_STUB IAcadTable_SetAutoScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetBlockTableRecordId_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [retval][out] */ long *blkId);


void __RPC_STUB IAcadTable_GetBlockTableRecordId_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetBlockTableRecordId_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ long blkId,
    /* [in] */ VARIANT_BOOL bAutoFit);


void __RPC_STUB IAcadTable_SetBlockTableRecordId_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetBlockScale_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [retval][out] */ double *blkScale);


void __RPC_STUB IAcadTable_GetBlockScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetBlockScale_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ double blkScale);


void __RPC_STUB IAcadTable_SetBlockScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetBlockRotation_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [retval][out] */ double *blkRotation);


void __RPC_STUB IAcadTable_GetBlockRotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetBlockRotation_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ double blkRotation);


void __RPC_STUB IAcadTable_SetBlockRotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetBlockAttributeValue_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ long attdefId,
    /* [retval][out] */ BSTR *bstrValue);


void __RPC_STUB IAcadTable_GetBlockAttributeValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetBlockAttributeValue_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ long attdefId,
    /* [in] */ BSTR bstrValue);


void __RPC_STUB IAcadTable_SetBlockAttributeValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetCellGridLineWeight_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ AcCellEdgeMask edge,
    /* [retval][out] */ ACAD_LWEIGHT *plineweight);


void __RPC_STUB IAcadTable_GetCellGridLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetCellGridLineWeight_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ int edges,
    /* [in] */ ACAD_LWEIGHT Lineweight);


void __RPC_STUB IAcadTable_SetCellGridLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetCellGridColor_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ AcCellEdgeMask edge,
    /* [retval][out] */ IAcadAcCmColor **pColor);


void __RPC_STUB IAcadTable_GetCellGridColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetCellGridColor_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ int edges,
    /* [in] */ IAcadAcCmColor *pColor);


void __RPC_STUB IAcadTable_SetCellGridColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetCellGridVisibility_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ AcCellEdgeMask edge,
    /* [retval][out] */ VARIANT_BOOL *bValue);


void __RPC_STUB IAcadTable_GetCellGridVisibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetCellGridVisibility_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ int edges,
    /* [in] */ VARIANT_BOOL bValue);


void __RPC_STUB IAcadTable_SetCellGridVisibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_InsertColumns_Proxy( 
    IAcadTable * This,
    /* [in] */ int col,
    /* [in] */ double Width,
    /* [in] */ int cols);


void __RPC_STUB IAcadTable_InsertColumns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_DeleteColumns_Proxy( 
    IAcadTable * This,
    /* [in] */ int col,
    /* [in] */ int cols);


void __RPC_STUB IAcadTable_DeleteColumns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_InsertRows_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ double Height,
    /* [in] */ int Rows);


void __RPC_STUB IAcadTable_InsertRows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_DeleteRows_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int Rows);


void __RPC_STUB IAcadTable_DeleteRows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_MergeCells_Proxy( 
    IAcadTable * This,
    /* [in] */ int minRow,
    /* [in] */ int maxRow,
    /* [in] */ int minCol,
    /* [in] */ int maxCol);


void __RPC_STUB IAcadTable_MergeCells_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_UnmergeCells_Proxy( 
    IAcadTable * This,
    /* [in] */ int minRow,
    /* [in] */ int maxRow,
    /* [in] */ int minCol,
    /* [in] */ int maxCol);


void __RPC_STUB IAcadTable_UnmergeCells_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_IsMergedCell_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [out] */ int *minRow,
    /* [out] */ int *maxRow,
    /* [out] */ int *minCol,
    /* [out] */ int *maxCol,
    /* [retval][out] */ VARIANT_BOOL *pbValue);


void __RPC_STUB IAcadTable_IsMergedCell_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetFieldId_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [retval][out] */ long *fieldId);


void __RPC_STUB IAcadTable_GetFieldId_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetFieldId_Proxy( 
    IAcadTable * This,
    /* [in] */ int row,
    /* [in] */ int col,
    /* [in] */ long fieldId);


void __RPC_STUB IAcadTable_SetFieldId_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GenerateLayout_Proxy( 
    IAcadTable * This);


void __RPC_STUB IAcadTable_GenerateLayout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_RecomputeTableBlock_Proxy( 
    IAcadTable * This,
    /* [in] */ VARIANT_BOOL bForceUpdate);


void __RPC_STUB IAcadTable_RecomputeTableBlock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_HitTest_Proxy( 
    IAcadTable * This,
    /* [in] */ VARIANT wpt,
    /* [in] */ VARIANT wviewVec,
    /* [out] */ int *resultRowIndex,
    /* [out] */ int *resultColumnIndex,
    /* [retval][out] */ VARIANT_BOOL *bReturn);


void __RPC_STUB IAcadTable_HitTest_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_Select_Proxy( 
    IAcadTable * This,
    /* [in] */ VARIANT wpt,
    /* [in] */ VARIANT wvwVec,
    /* [in] */ VARIANT wvwxVec,
    /* [in] */ double wxaper,
    /* [in] */ double wyaper,
    /* [in] */ VARIANT_BOOL allowOutside,
    /* [out] */ int *resultRowIndex,
    /* [out] */ int *resultColumnIndex,
    /* [retval][out] */ VARIANT *pPaths);


void __RPC_STUB IAcadTable_Select_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SelectSubRegion_Proxy( 
    IAcadTable * This,
    /* [in] */ VARIANT wpt1,
    /* [in] */ VARIANT wpt2,
    /* [in] */ VARIANT wvwVec,
    /* [in] */ VARIANT wvwxVec,
    /* [in] */ AcSelectType seltype,
    /* [in] */ VARIANT_BOOL bIncludeCurrentSelection,
    /* [out] */ int *rowMin,
    /* [out] */ int *rowMax,
    /* [out] */ int *colMin,
    /* [out] */ int *colMax,
    /* [retval][out] */ VARIANT *pPaths);


void __RPC_STUB IAcadTable_SelectSubRegion_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_ReselectSubRegion_Proxy( 
    IAcadTable * This,
    /* [retval][out] */ VARIANT *pPaths);


void __RPC_STUB IAcadTable_ReselectSubRegion_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_GetSubSelection_Proxy( 
    IAcadTable * This,
    /* [out] */ int *rowMin,
    /* [out] */ int *rowMax,
    /* [out] */ int *colMin,
    /* [out] */ int *colMax);


void __RPC_STUB IAcadTable_GetSubSelection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_SetSubSelection_Proxy( 
    IAcadTable * This,
    /* [in] */ int rowMin,
    /* [in] */ int rowMax,
    /* [in] */ int colMin,
    /* [in] */ int colMax);


void __RPC_STUB IAcadTable_SetSubSelection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_ClearSubSelection_Proxy( 
    IAcadTable * This);


void __RPC_STUB IAcadTable_ClearSubSelection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadTable_get_HasSubSelection_Proxy( 
    IAcadTable * This,
    /* [retval][out] */ VARIANT_BOOL *pbValue);


void __RPC_STUB IAcadTable_get_HasSubSelection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadTable_INTERFACE_DEFINED__ */


#ifndef __IAcadOle_INTERFACE_DEFINED__
#define __IAcadOle_INTERFACE_DEFINED__

/* interface IAcadOle */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadOle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("942904F0-FBE1-49F4-919B-3395EC1D5AB5")
    IAcadOle : public IAcadEntity
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_InsertionPoint( 
            /* [retval][out] */ VARIANT *insPoint) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_InsertionPoint( 
            /* [in] */ VARIANT insPoint) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
            /* [retval][out] */ ACAD_ANGLE *rot) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
            /* [in] */ ACAD_ANGLE rot) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ double *Width) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ double Width) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *Height) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ScaleWidth( 
            /* [retval][out] */ double *swidth) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ScaleWidth( 
            /* [in] */ double swidth) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ScaleHeight( 
            /* [retval][out] */ double *sheight) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ScaleHeight( 
            /* [in] */ double sheight) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LockAspectRatio( 
            /* [retval][out] */ VARIANT_BOOL *aspect) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_LockAspectRatio( 
            /* [in] */ VARIANT_BOOL aspect) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_OleItemType( 
            /* [retval][out] */ AcOleType *pType) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_OleItemType( 
            /* [in] */ AcOleType pType) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_OlePlotQuality( 
            /* [retval][out] */ AcOlePlotQuality *pPQuality) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_OlePlotQuality( 
            /* [in] */ AcOlePlotQuality pPQuality) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_OleSourceApp( 
            /* [retval][out] */ BSTR *srcApp) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_OleSourceApp( 
            /* [in] */ BSTR srcApp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadOleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadOle * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadOle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadOle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadOle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadOle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadOle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadOle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadOle * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadOle * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadOle * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadOle * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadOle * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadOle * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadOle * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadOle * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadOle * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadOle * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadOle * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadOle * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadOle * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IAcadOle * This,
            /* [retval][out] */ IAcadAcCmColor **pColor);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IAcadOle * This,
            /* [in] */ IAcadAcCmColor *pColor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IAcadOle * This,
            /* [retval][out] */ BSTR *Layer);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IAcadOle * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IAcadOle * This,
            /* [retval][out] */ BSTR *Linetype);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IAcadOle * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IAcadOle * This,
            /* [retval][out] */ ACAD_NOUNITS *ltScale);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IAcadOle * This,
            /* [in] */ ACAD_NOUNITS ltScale);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IAcadOle * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IAcadOle * This,
            /* [in] */ VARIANT_BOOL bVisible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IAcadOle * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double AngleToFill,
            /* [in] */ VARIANT CenterPoint,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IAcadOle * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double DistBetweenRows,
            /* [in] */ double DistBetweenCols,
            /* [in] */ double DistBetweenLevels,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IAcadOle * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IAcadOle * This,
            /* [retval][out] */ IDispatch **pCopyObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IAcadOle * This,
            /* [in] */ VARIANT FromPoint,
            /* [in] */ VARIANT ToPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IAcadOle * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IAcadOle * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IAcadOle * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IAcadOle * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [retval][out] */ IDispatch **pMirrorObj);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IAcadOle * This,
            /* [in] */ VARIANT BasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IAcadOle * This,
            /* [in] */ VARIANT TransformationMatrix);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAcadOle * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IAcadOle * This,
            /* [out] */ VARIANT *MinPoint,
            /* [out] */ VARIANT *MaxPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IAcadOle * This,
            /* [in] */ IDispatch *IntersectObject,
            /* [in] */ AcExtendOption option,
            /* [retval][out] */ VARIANT *intPoints);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlotStyleName )( 
            IAcadOle * This,
            /* [retval][out] */ BSTR *plotStyle);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PlotStyleName )( 
            IAcadOle * This,
            /* [in] */ BSTR plotStyle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IAcadOle * This,
            /* [retval][out] */ ACAD_LWEIGHT *Lineweight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IAcadOle * This,
            /* [in] */ ACAD_LWEIGHT Lineweight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IAcadOle * This,
            /* [retval][out] */ IAcadHyperlinks **Hyperlinks);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IAcadOle * This,
            /* [retval][out] */ BSTR *EntityName);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IAcadOle * This,
            /* [retval][out] */ long *entType);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IAcadOle * This,
            /* [retval][out] */ ACAD_COLOR *color);
        
        /* [helpstring][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IAcadOle * This,
            /* [in] */ ACAD_COLOR color);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IAcadOle * This,
            /* [retval][out] */ VARIANT *insPoint);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IAcadOle * This,
            /* [in] */ VARIANT insPoint);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IAcadOle * This,
            /* [retval][out] */ ACAD_ANGLE *rot);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IAcadOle * This,
            /* [in] */ ACAD_ANGLE rot);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IAcadOle * This,
            /* [retval][out] */ double *Width);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            IAcadOle * This,
            /* [in] */ double Width);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IAcadOle * This,
            /* [retval][out] */ double *Height);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IAcadOle * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleWidth )( 
            IAcadOle * This,
            /* [retval][out] */ double *swidth);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleWidth )( 
            IAcadOle * This,
            /* [in] */ double swidth);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleHeight )( 
            IAcadOle * This,
            /* [retval][out] */ double *sheight);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleHeight )( 
            IAcadOle * This,
            /* [in] */ double sheight);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LockAspectRatio )( 
            IAcadOle * This,
            /* [retval][out] */ VARIANT_BOOL *aspect);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LockAspectRatio )( 
            IAcadOle * This,
            /* [in] */ VARIANT_BOOL aspect);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OleItemType )( 
            IAcadOle * This,
            /* [retval][out] */ AcOleType *pType);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OleItemType )( 
            IAcadOle * This,
            /* [in] */ AcOleType pType);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OlePlotQuality )( 
            IAcadOle * This,
            /* [retval][out] */ AcOlePlotQuality *pPQuality);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OlePlotQuality )( 
            IAcadOle * This,
            /* [in] */ AcOlePlotQuality pPQuality);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OleSourceApp )( 
            IAcadOle * This,
            /* [retval][out] */ BSTR *srcApp);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OleSourceApp )( 
            IAcadOle * This,
            /* [in] */ BSTR srcApp);
        
        END_INTERFACE
    } IAcadOleVtbl;

    interface IAcadOle
    {
        CONST_VTBL struct IAcadOleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadOle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadOle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadOle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadOle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadOle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadOle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadOle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadOle_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadOle_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadOle_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadOle_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadOle_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadOle_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadOle_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadOle_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadOle_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadOle_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadOle_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadOle_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadOle_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadOle_get_TrueColor(This,pColor)	\
    (This)->lpVtbl -> get_TrueColor(This,pColor)

#define IAcadOle_put_TrueColor(This,pColor)	\
    (This)->lpVtbl -> put_TrueColor(This,pColor)

#define IAcadOle_get_Layer(This,Layer)	\
    (This)->lpVtbl -> get_Layer(This,Layer)

#define IAcadOle_put_Layer(This,Layer)	\
    (This)->lpVtbl -> put_Layer(This,Layer)

#define IAcadOle_get_Linetype(This,Linetype)	\
    (This)->lpVtbl -> get_Linetype(This,Linetype)

#define IAcadOle_put_Linetype(This,Linetype)	\
    (This)->lpVtbl -> put_Linetype(This,Linetype)

#define IAcadOle_get_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> get_LinetypeScale(This,ltScale)

#define IAcadOle_put_LinetypeScale(This,ltScale)	\
    (This)->lpVtbl -> put_LinetypeScale(This,ltScale)

#define IAcadOle_get_Visible(This,bVisible)	\
    (This)->lpVtbl -> get_Visible(This,bVisible)

#define IAcadOle_put_Visible(This,bVisible)	\
    (This)->lpVtbl -> put_Visible(This,bVisible)

#define IAcadOle_ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)	\
    (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,AngleToFill,CenterPoint,pArrayObjs)

#define IAcadOle_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)	\
    (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,DistBetweenRows,DistBetweenCols,DistBetweenLevels,pArrayObjs)

#define IAcadOle_Highlight(This,HighlightFlag)	\
    (This)->lpVtbl -> Highlight(This,HighlightFlag)

#define IAcadOle_Copy(This,pCopyObj)	\
    (This)->lpVtbl -> Copy(This,pCopyObj)

#define IAcadOle_Move(This,FromPoint,ToPoint)	\
    (This)->lpVtbl -> Move(This,FromPoint,ToPoint)

#define IAcadOle_Rotate(This,BasePoint,RotationAngle)	\
    (This)->lpVtbl -> Rotate(This,BasePoint,RotationAngle)

#define IAcadOle_Rotate3D(This,Point1,Point2,RotationAngle)	\
    (This)->lpVtbl -> Rotate3D(This,Point1,Point2,RotationAngle)

#define IAcadOle_Mirror(This,Point1,Point2,pMirrorObj)	\
    (This)->lpVtbl -> Mirror(This,Point1,Point2,pMirrorObj)

#define IAcadOle_Mirror3D(This,Point1,Point2,point3,pMirrorObj)	\
    (This)->lpVtbl -> Mirror3D(This,Point1,Point2,point3,pMirrorObj)

#define IAcadOle_ScaleEntity(This,BasePoint,ScaleFactor)	\
    (This)->lpVtbl -> ScaleEntity(This,BasePoint,ScaleFactor)

#define IAcadOle_TransformBy(This,TransformationMatrix)	\
    (This)->lpVtbl -> TransformBy(This,TransformationMatrix)

#define IAcadOle_Update(This)	\
    (This)->lpVtbl -> Update(This)

#define IAcadOle_GetBoundingBox(This,MinPoint,MaxPoint)	\
    (This)->lpVtbl -> GetBoundingBox(This,MinPoint,MaxPoint)

#define IAcadOle_IntersectWith(This,IntersectObject,option,intPoints)	\
    (This)->lpVtbl -> IntersectWith(This,IntersectObject,option,intPoints)

#define IAcadOle_get_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> get_PlotStyleName(This,plotStyle)

#define IAcadOle_put_PlotStyleName(This,plotStyle)	\
    (This)->lpVtbl -> put_PlotStyleName(This,plotStyle)

#define IAcadOle_get_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> get_Lineweight(This,Lineweight)

#define IAcadOle_put_Lineweight(This,Lineweight)	\
    (This)->lpVtbl -> put_Lineweight(This,Lineweight)

#define IAcadOle_get_Hyperlinks(This,Hyperlinks)	\
    (This)->lpVtbl -> get_Hyperlinks(This,Hyperlinks)

#define IAcadOle_get_EntityName(This,EntityName)	\
    (This)->lpVtbl -> get_EntityName(This,EntityName)

#define IAcadOle_get_EntityType(This,entType)	\
    (This)->lpVtbl -> get_EntityType(This,entType)

#define IAcadOle_get_color(This,color)	\
    (This)->lpVtbl -> get_color(This,color)

#define IAcadOle_put_color(This,color)	\
    (This)->lpVtbl -> put_color(This,color)


#define IAcadOle_get_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> get_InsertionPoint(This,insPoint)

#define IAcadOle_put_InsertionPoint(This,insPoint)	\
    (This)->lpVtbl -> put_InsertionPoint(This,insPoint)

#define IAcadOle_get_Rotation(This,rot)	\
    (This)->lpVtbl -> get_Rotation(This,rot)

#define IAcadOle_put_Rotation(This,rot)	\
    (This)->lpVtbl -> put_Rotation(This,rot)

#define IAcadOle_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAcadOle_put_Width(This,Width)	\
    (This)->lpVtbl -> put_Width(This,Width)

#define IAcadOle_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAcadOle_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAcadOle_get_ScaleWidth(This,swidth)	\
    (This)->lpVtbl -> get_ScaleWidth(This,swidth)

#define IAcadOle_put_ScaleWidth(This,swidth)	\
    (This)->lpVtbl -> put_ScaleWidth(This,swidth)

#define IAcadOle_get_ScaleHeight(This,sheight)	\
    (This)->lpVtbl -> get_ScaleHeight(This,sheight)

#define IAcadOle_put_ScaleHeight(This,sheight)	\
    (This)->lpVtbl -> put_ScaleHeight(This,sheight)

#define IAcadOle_get_LockAspectRatio(This,aspect)	\
    (This)->lpVtbl -> get_LockAspectRatio(This,aspect)

#define IAcadOle_put_LockAspectRatio(This,aspect)	\
    (This)->lpVtbl -> put_LockAspectRatio(This,aspect)

#define IAcadOle_get_OleItemType(This,pType)	\
    (This)->lpVtbl -> get_OleItemType(This,pType)

#define IAcadOle_put_OleItemType(This,pType)	\
    (This)->lpVtbl -> put_OleItemType(This,pType)

#define IAcadOle_get_OlePlotQuality(This,pPQuality)	\
    (This)->lpVtbl -> get_OlePlotQuality(This,pPQuality)

#define IAcadOle_put_OlePlotQuality(This,pPQuality)	\
    (This)->lpVtbl -> put_OlePlotQuality(This,pPQuality)

#define IAcadOle_get_OleSourceApp(This,srcApp)	\
    (This)->lpVtbl -> get_OleSourceApp(This,srcApp)

#define IAcadOle_put_OleSourceApp(This,srcApp)	\
    (This)->lpVtbl -> put_OleSourceApp(This,srcApp)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadOle_get_InsertionPoint_Proxy( 
    IAcadOle * This,
    /* [retval][out] */ VARIANT *insPoint);


void __RPC_STUB IAcadOle_get_InsertionPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadOle_put_InsertionPoint_Proxy( 
    IAcadOle * This,
    /* [in] */ VARIANT insPoint);


void __RPC_STUB IAcadOle_put_InsertionPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadOle_get_Rotation_Proxy( 
    IAcadOle * This,
    /* [retval][out] */ ACAD_ANGLE *rot);


void __RPC_STUB IAcadOle_get_Rotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadOle_put_Rotation_Proxy( 
    IAcadOle * This,
    /* [in] */ ACAD_ANGLE rot);


void __RPC_STUB IAcadOle_put_Rotation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadOle_get_Width_Proxy( 
    IAcadOle * This,
    /* [retval][out] */ double *Width);


void __RPC_STUB IAcadOle_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadOle_put_Width_Proxy( 
    IAcadOle * This,
    /* [in] */ double Width);


void __RPC_STUB IAcadOle_put_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadOle_get_Height_Proxy( 
    IAcadOle * This,
    /* [retval][out] */ double *Height);


void __RPC_STUB IAcadOle_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadOle_put_Height_Proxy( 
    IAcadOle * This,
    /* [in] */ double Height);


void __RPC_STUB IAcadOle_put_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadOle_get_ScaleWidth_Proxy( 
    IAcadOle * This,
    /* [retval][out] */ double *swidth);


void __RPC_STUB IAcadOle_get_ScaleWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadOle_put_ScaleWidth_Proxy( 
    IAcadOle * This,
    /* [in] */ double swidth);


void __RPC_STUB IAcadOle_put_ScaleWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadOle_get_ScaleHeight_Proxy( 
    IAcadOle * This,
    /* [retval][out] */ double *sheight);


void __RPC_STUB IAcadOle_get_ScaleHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadOle_put_ScaleHeight_Proxy( 
    IAcadOle * This,
    /* [in] */ double sheight);


void __RPC_STUB IAcadOle_put_ScaleHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadOle_get_LockAspectRatio_Proxy( 
    IAcadOle * This,
    /* [retval][out] */ VARIANT_BOOL *aspect);


void __RPC_STUB IAcadOle_get_LockAspectRatio_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadOle_put_LockAspectRatio_Proxy( 
    IAcadOle * This,
    /* [in] */ VARIANT_BOOL aspect);


void __RPC_STUB IAcadOle_put_LockAspectRatio_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadOle_get_OleItemType_Proxy( 
    IAcadOle * This,
    /* [retval][out] */ AcOleType *pType);


void __RPC_STUB IAcadOle_get_OleItemType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadOle_put_OleItemType_Proxy( 
    IAcadOle * This,
    /* [in] */ AcOleType pType);


void __RPC_STUB IAcadOle_put_OleItemType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadOle_get_OlePlotQuality_Proxy( 
    IAcadOle * This,
    /* [retval][out] */ AcOlePlotQuality *pPQuality);


void __RPC_STUB IAcadOle_get_OlePlotQuality_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadOle_put_OlePlotQuality_Proxy( 
    IAcadOle * This,
    /* [in] */ AcOlePlotQuality pPQuality);


void __RPC_STUB IAcadOle_put_OlePlotQuality_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IAcadOle_get_OleSourceApp_Proxy( 
    IAcadOle * This,
    /* [retval][out] */ BSTR *srcApp);


void __RPC_STUB IAcadOle_get_OleSourceApp_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IAcadOle_put_OleSourceApp_Proxy( 
    IAcadOle * This,
    /* [in] */ BSTR srcApp);


void __RPC_STUB IAcadOle_put_OleSourceApp_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadOle_INTERFACE_DEFINED__ */


#ifndef __IAcadModelSpace2_INTERFACE_DEFINED__
#define __IAcadModelSpace2_INTERFACE_DEFINED__

/* interface IAcadModelSpace2 */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadModelSpace2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("954FE9C8-5F70-4DC4-9B3C-45C45CA51083")
    IAcadModelSpace2 : public IAcadModelSpace
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddTable( 
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ int NumRows,
            /* [in] */ int NumColumns,
            /* [in] */ double RowHeight,
            /* [in] */ double ColWidth,
            /* [retval][out] */ IAcadTable **pTable) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadModelSpace2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadModelSpace2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadModelSpace2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadModelSpace2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadModelSpace2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadModelSpace2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadModelSpace2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadModelSpace2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadModelSpace2 * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadModelSpace2 * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadModelSpace2 * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadModelSpace2 * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadModelSpace2 * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadModelSpace2 * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadModelSpace2 * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadModelSpace2 * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadModelSpace2 * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadModelSpace2 * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadModelSpace2 * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadModelSpace2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadEntity **pItem);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadModelSpace2 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadModelSpace2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadModelSpace2 * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadModelSpace2 * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Origin )( 
            IAcadModelSpace2 * This,
            /* [retval][out] */ VARIANT *Origin);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Origin )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT Origin);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCustomObject )( 
            IAcadModelSpace2 * This,
            /* [in] */ BSTR ClassName,
            /* [retval][out] */ IDispatch **pObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DFace )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [in] */ VARIANT Point4,
            /* [retval][out] */ IAcad3DFace **pFace3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DMesh )( 
            IAcadModelSpace2 * This,
            /* [in] */ int M,
            /* [in] */ int N,
            /* [in] */ VARIANT PointsMatrix,
            /* [retval][out] */ IAcadPolygonMesh **pMesh3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DPoly )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT PointsArray,
            /* [retval][out] */ IAcad3DPolyline **pPoly3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddArc )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [in] */ double StartAngle,
            /* [in] */ double EndAngle,
            /* [retval][out] */ IAcadArc **pArc);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            IAcadModelSpace2 * This,
            /* [in] */ double Height,
            /* [in] */ AcAttributeMode Mode,
            /* [in] */ BSTR Prompt,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Tag,
            /* [in] */ BSTR Value,
            /* [retval][out] */ IAcadAttribute **pAttr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddBox )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT Origin,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pBox);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCircle )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [retval][out] */ IAcadCircle **pCircle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCone )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double BaseRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pCone);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCylinder )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pCyl);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimAligned )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT ExtLine1Point,
            /* [in] */ VARIANT ExtLine2Point,
            /* [in] */ VARIANT TextPosition,
            /* [retval][out] */ IAcadDimAligned **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimAngular )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT AngleVertex,
            /* [in] */ VARIANT FirstEndPoint,
            /* [in] */ VARIANT SecondEndPoint,
            /* [in] */ VARIANT TextPoint,
            /* [retval][out] */ IAcadDimAngular **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimDiametric )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT ChordPoint,
            /* [in] */ VARIANT FarChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IAcadDimDiametric **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimRotated )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT ExtLine1Point,
            /* [in] */ VARIANT ExtLine2Point,
            /* [in] */ VARIANT DimLineLocation,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadDimRotated **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimOrdinate )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT DefinitionPoint,
            /* [in] */ VARIANT LeaderEndPoint,
            /* [in] */ int UseXAxis,
            /* [retval][out] */ IAcadDimOrdinate **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimRadial )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ VARIANT ChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IAcadDimRadial **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipse )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ VARIANT MajorAxis,
            /* [in] */ double RadiusRatio,
            /* [retval][out] */ IAcadEllipse **pEllipse);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCone )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pEllipCone);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCylinder )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pEllipCyl);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolid )( 
            IAcadModelSpace2 * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ double Height,
            /* [in] */ double TaperAngle,
            /* [retval][out] */ IAcad3DSolid **pExtrSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolidAlongPath )( 
            IAcadModelSpace2 * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ IDispatch *Path,
            /* [retval][out] */ IAcad3DSolid **pExtrSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLeader )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT PointsArray,
            /* [in] */ IAcadEntity *Annotation,
            /* [in] */ AcLeaderType Type,
            /* [retval][out] */ IAcadLeader **pLeader);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMText )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Width,
            /* [in] */ BSTR Text,
            /* [retval][out] */ IAcadMText **pMtext);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPoint )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT Point,
            /* [retval][out] */ IAcadPoint **pPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLightWeightPolyline )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT VerticesList,
            /* [retval][out] */ IAcadLWPolyline **pLWPolyline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPolyline )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT VerticesList,
            /* [retval][out] */ IAcadPolyline **pPolyline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRay )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IAcadRay **pRay);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRegion )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT ObjectList,
            /* [retval][out] */ VARIANT *pRegions);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRevolvedSolid )( 
            IAcadModelSpace2 * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ VARIANT AxisPoint,
            /* [in] */ VARIANT AxisDir,
            /* [in] */ double Angle,
            /* [retval][out] */ IAcad3DSolid **pRevolSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddShape )( 
            IAcadModelSpace2 * This,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double ScaleFactor,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadShape **pShape);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSolid )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [in] */ VARIANT Point4,
            /* [retval][out] */ IAcadSolid **pSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSphere )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [retval][out] */ IAcad3DSolid **pSphere);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSpline )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT PointsArray,
            /* [in] */ VARIANT StartTangent,
            /* [in] */ VARIANT EndTangent,
            /* [retval][out] */ IAcadSpline **pSpline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddText )( 
            IAcadModelSpace2 * This,
            /* [in] */ BSTR TextString,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Height,
            /* [retval][out] */ IAcadText **pText);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTolerance )( 
            IAcadModelSpace2 * This,
            /* [in] */ BSTR Text,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ VARIANT Direction,
            /* [retval][out] */ IAcadTolerance **pTolerance);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTorus )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double TorusRadius,
            /* [in] */ double TubeRadius,
            /* [retval][out] */ IAcad3DSolid **pTorus);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTrace )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT PointsArray,
            /* [retval][out] */ IAcadTrace **pTrace);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddWedge )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pWedge);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddXline )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IAcadXline **pXline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *InsertBlock )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Name,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadBlockReference **pBlkRef);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddHatch )( 
            IAcadModelSpace2 * This,
            /* [in] */ int PatternType,
            /* [in] */ BSTR PatternName,
            /* [in] */ VARIANT_BOOL Associativity,
            /* [optional][in] */ VARIANT HatchObjectType,
            /* [retval][out] */ IAcadHatch **pHatch);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRaster )( 
            IAcadModelSpace2 * This,
            /* [in] */ BSTR imageFileName,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double ScaleFactor,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadRasterImage **pRaster);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLine )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT StartPoint,
            /* [in] */ VARIANT EndPoint,
            /* [retval][out] */ IAcadLine **pLine);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsLayout )( 
            IAcadModelSpace2 * This,
            /* [retval][out] */ VARIANT_BOOL *bIsLayout);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layout )( 
            IAcadModelSpace2 * This,
            /* [retval][out] */ IAcadLayout **pLayout);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsXRef )( 
            IAcadModelSpace2 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsXRref);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMInsertBlock )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Name,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [in] */ long NumRows,
            /* [in] */ long NumColumns,
            /* [in] */ long RowSpacing,
            /* [in] */ long ColumnSpacing,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadMInsertBlock **pMInsertBlk);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPolyfaceMesh )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT VertexList,
            /* [in] */ VARIANT FaceList,
            /* [retval][out] */ IAcadPolyfaceMesh **pPFMesh);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMLine )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT VertexList,
            /* [retval][out] */ IAcadMLine **pMLine);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDim3PointAngular )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT AngleVertex,
            /* [in] */ VARIANT FirstEndPoint,
            /* [in] */ VARIANT SecondEndPoint,
            /* [in] */ VARIANT TextPoint,
            /* [retval][out] */ IAcadDim3PointAngular **pDim);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XRefDatabase )( 
            IAcadModelSpace2 * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AttachExternalReference )( 
            IAcadModelSpace2 * This,
            /* [in] */ BSTR PathName,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [in] */ VARIANT_BOOL bOverlay,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadExternalReference **pXRef);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Unload )( 
            IAcadModelSpace2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Reload )( 
            IAcadModelSpace2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Bind )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT_BOOL bPrefixName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Detach )( 
            IAcadModelSpace2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTable )( 
            IAcadModelSpace2 * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ int NumRows,
            /* [in] */ int NumColumns,
            /* [in] */ double RowHeight,
            /* [in] */ double ColWidth,
            /* [retval][out] */ IAcadTable **pTable);
        
        END_INTERFACE
    } IAcadModelSpace2Vtbl;

    interface IAcadModelSpace2
    {
        CONST_VTBL struct IAcadModelSpace2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadModelSpace2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadModelSpace2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadModelSpace2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadModelSpace2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadModelSpace2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadModelSpace2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadModelSpace2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadModelSpace2_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadModelSpace2_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadModelSpace2_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadModelSpace2_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadModelSpace2_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadModelSpace2_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadModelSpace2_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadModelSpace2_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadModelSpace2_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadModelSpace2_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadModelSpace2_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadModelSpace2_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadModelSpace2_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadModelSpace2_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadModelSpace2_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadModelSpace2_get_Count(This,pVal)	\
    (This)->lpVtbl -> get_Count(This,pVal)

#define IAcadModelSpace2_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadModelSpace2_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#define IAcadModelSpace2_get_Origin(This,Origin)	\
    (This)->lpVtbl -> get_Origin(This,Origin)

#define IAcadModelSpace2_put_Origin(This,Origin)	\
    (This)->lpVtbl -> put_Origin(This,Origin)

#define IAcadModelSpace2_AddCustomObject(This,ClassName,pObject)	\
    (This)->lpVtbl -> AddCustomObject(This,ClassName,pObject)

#define IAcadModelSpace2_Add3DFace(This,Point1,Point2,point3,Point4,pFace3d)	\
    (This)->lpVtbl -> Add3DFace(This,Point1,Point2,point3,Point4,pFace3d)

#define IAcadModelSpace2_Add3DMesh(This,M,N,PointsMatrix,pMesh3d)	\
    (This)->lpVtbl -> Add3DMesh(This,M,N,PointsMatrix,pMesh3d)

#define IAcadModelSpace2_Add3DPoly(This,PointsArray,pPoly3d)	\
    (This)->lpVtbl -> Add3DPoly(This,PointsArray,pPoly3d)

#define IAcadModelSpace2_AddArc(This,Center,Radius,StartAngle,EndAngle,pArc)	\
    (This)->lpVtbl -> AddArc(This,Center,Radius,StartAngle,EndAngle,pArc)

#define IAcadModelSpace2_AddAttribute(This,Height,Mode,Prompt,InsertionPoint,Tag,Value,pAttr)	\
    (This)->lpVtbl -> AddAttribute(This,Height,Mode,Prompt,InsertionPoint,Tag,Value,pAttr)

#define IAcadModelSpace2_AddBox(This,Origin,Length,Width,Height,pBox)	\
    (This)->lpVtbl -> AddBox(This,Origin,Length,Width,Height,pBox)

#define IAcadModelSpace2_AddCircle(This,Center,Radius,pCircle)	\
    (This)->lpVtbl -> AddCircle(This,Center,Radius,pCircle)

#define IAcadModelSpace2_AddCone(This,Center,BaseRadius,Height,pCone)	\
    (This)->lpVtbl -> AddCone(This,Center,BaseRadius,Height,pCone)

#define IAcadModelSpace2_AddCylinder(This,Center,Radius,Height,pCyl)	\
    (This)->lpVtbl -> AddCylinder(This,Center,Radius,Height,pCyl)

#define IAcadModelSpace2_AddDimAligned(This,ExtLine1Point,ExtLine2Point,TextPosition,pDim)	\
    (This)->lpVtbl -> AddDimAligned(This,ExtLine1Point,ExtLine2Point,TextPosition,pDim)

#define IAcadModelSpace2_AddDimAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)	\
    (This)->lpVtbl -> AddDimAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)

#define IAcadModelSpace2_AddDimDiametric(This,ChordPoint,FarChordPoint,LeaderLength,pDim)	\
    (This)->lpVtbl -> AddDimDiametric(This,ChordPoint,FarChordPoint,LeaderLength,pDim)

#define IAcadModelSpace2_AddDimRotated(This,ExtLine1Point,ExtLine2Point,DimLineLocation,RotationAngle,pDim)	\
    (This)->lpVtbl -> AddDimRotated(This,ExtLine1Point,ExtLine2Point,DimLineLocation,RotationAngle,pDim)

#define IAcadModelSpace2_AddDimOrdinate(This,DefinitionPoint,LeaderEndPoint,UseXAxis,pDim)	\
    (This)->lpVtbl -> AddDimOrdinate(This,DefinitionPoint,LeaderEndPoint,UseXAxis,pDim)

#define IAcadModelSpace2_AddDimRadial(This,Center,ChordPoint,LeaderLength,pDim)	\
    (This)->lpVtbl -> AddDimRadial(This,Center,ChordPoint,LeaderLength,pDim)

#define IAcadModelSpace2_AddEllipse(This,Center,MajorAxis,RadiusRatio,pEllipse)	\
    (This)->lpVtbl -> AddEllipse(This,Center,MajorAxis,RadiusRatio,pEllipse)

#define IAcadModelSpace2_AddEllipticalCone(This,Center,MajorRadius,MinorRadius,Height,pEllipCone)	\
    (This)->lpVtbl -> AddEllipticalCone(This,Center,MajorRadius,MinorRadius,Height,pEllipCone)

#define IAcadModelSpace2_AddEllipticalCylinder(This,Center,MajorRadius,MinorRadius,Height,pEllipCyl)	\
    (This)->lpVtbl -> AddEllipticalCylinder(This,Center,MajorRadius,MinorRadius,Height,pEllipCyl)

#define IAcadModelSpace2_AddExtrudedSolid(This,Profile,Height,TaperAngle,pExtrSolid)	\
    (This)->lpVtbl -> AddExtrudedSolid(This,Profile,Height,TaperAngle,pExtrSolid)

#define IAcadModelSpace2_AddExtrudedSolidAlongPath(This,Profile,Path,pExtrSolid)	\
    (This)->lpVtbl -> AddExtrudedSolidAlongPath(This,Profile,Path,pExtrSolid)

#define IAcadModelSpace2_AddLeader(This,PointsArray,Annotation,Type,pLeader)	\
    (This)->lpVtbl -> AddLeader(This,PointsArray,Annotation,Type,pLeader)

#define IAcadModelSpace2_AddMText(This,InsertionPoint,Width,Text,pMtext)	\
    (This)->lpVtbl -> AddMText(This,InsertionPoint,Width,Text,pMtext)

#define IAcadModelSpace2_AddPoint(This,Point,pPoint)	\
    (This)->lpVtbl -> AddPoint(This,Point,pPoint)

#define IAcadModelSpace2_AddLightWeightPolyline(This,VerticesList,pLWPolyline)	\
    (This)->lpVtbl -> AddLightWeightPolyline(This,VerticesList,pLWPolyline)

#define IAcadModelSpace2_AddPolyline(This,VerticesList,pPolyline)	\
    (This)->lpVtbl -> AddPolyline(This,VerticesList,pPolyline)

#define IAcadModelSpace2_AddRay(This,Point1,Point2,pRay)	\
    (This)->lpVtbl -> AddRay(This,Point1,Point2,pRay)

#define IAcadModelSpace2_AddRegion(This,ObjectList,pRegions)	\
    (This)->lpVtbl -> AddRegion(This,ObjectList,pRegions)

#define IAcadModelSpace2_AddRevolvedSolid(This,Profile,AxisPoint,AxisDir,Angle,pRevolSolid)	\
    (This)->lpVtbl -> AddRevolvedSolid(This,Profile,AxisPoint,AxisDir,Angle,pRevolSolid)

#define IAcadModelSpace2_AddShape(This,Name,InsertionPoint,ScaleFactor,RotationAngle,pShape)	\
    (This)->lpVtbl -> AddShape(This,Name,InsertionPoint,ScaleFactor,RotationAngle,pShape)

#define IAcadModelSpace2_AddSolid(This,Point1,Point2,point3,Point4,pSolid)	\
    (This)->lpVtbl -> AddSolid(This,Point1,Point2,point3,Point4,pSolid)

#define IAcadModelSpace2_AddSphere(This,Center,Radius,pSphere)	\
    (This)->lpVtbl -> AddSphere(This,Center,Radius,pSphere)

#define IAcadModelSpace2_AddSpline(This,PointsArray,StartTangent,EndTangent,pSpline)	\
    (This)->lpVtbl -> AddSpline(This,PointsArray,StartTangent,EndTangent,pSpline)

#define IAcadModelSpace2_AddText(This,TextString,InsertionPoint,Height,pText)	\
    (This)->lpVtbl -> AddText(This,TextString,InsertionPoint,Height,pText)

#define IAcadModelSpace2_AddTolerance(This,Text,InsertionPoint,Direction,pTolerance)	\
    (This)->lpVtbl -> AddTolerance(This,Text,InsertionPoint,Direction,pTolerance)

#define IAcadModelSpace2_AddTorus(This,Center,TorusRadius,TubeRadius,pTorus)	\
    (This)->lpVtbl -> AddTorus(This,Center,TorusRadius,TubeRadius,pTorus)

#define IAcadModelSpace2_AddTrace(This,PointsArray,pTrace)	\
    (This)->lpVtbl -> AddTrace(This,PointsArray,pTrace)

#define IAcadModelSpace2_AddWedge(This,Center,Length,Width,Height,pWedge)	\
    (This)->lpVtbl -> AddWedge(This,Center,Length,Width,Height,pWedge)

#define IAcadModelSpace2_AddXline(This,Point1,Point2,pXline)	\
    (This)->lpVtbl -> AddXline(This,Point1,Point2,pXline)

#define IAcadModelSpace2_InsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,Password,pBlkRef)	\
    (This)->lpVtbl -> InsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,Password,pBlkRef)

#define IAcadModelSpace2_AddHatch(This,PatternType,PatternName,Associativity,HatchObjectType,pHatch)	\
    (This)->lpVtbl -> AddHatch(This,PatternType,PatternName,Associativity,HatchObjectType,pHatch)

#define IAcadModelSpace2_AddRaster(This,imageFileName,InsertionPoint,ScaleFactor,RotationAngle,pRaster)	\
    (This)->lpVtbl -> AddRaster(This,imageFileName,InsertionPoint,ScaleFactor,RotationAngle,pRaster)

#define IAcadModelSpace2_AddLine(This,StartPoint,EndPoint,pLine)	\
    (This)->lpVtbl -> AddLine(This,StartPoint,EndPoint,pLine)

#define IAcadModelSpace2_get_IsLayout(This,bIsLayout)	\
    (This)->lpVtbl -> get_IsLayout(This,bIsLayout)

#define IAcadModelSpace2_get_Layout(This,pLayout)	\
    (This)->lpVtbl -> get_Layout(This,pLayout)

#define IAcadModelSpace2_get_IsXRef(This,pIsXRref)	\
    (This)->lpVtbl -> get_IsXRef(This,pIsXRref)

#define IAcadModelSpace2_AddMInsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,NumRows,NumColumns,RowSpacing,ColumnSpacing,Password,pMInsertBlk)	\
    (This)->lpVtbl -> AddMInsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,NumRows,NumColumns,RowSpacing,ColumnSpacing,Password,pMInsertBlk)

#define IAcadModelSpace2_AddPolyfaceMesh(This,VertexList,FaceList,pPFMesh)	\
    (This)->lpVtbl -> AddPolyfaceMesh(This,VertexList,FaceList,pPFMesh)

#define IAcadModelSpace2_AddMLine(This,VertexList,pMLine)	\
    (This)->lpVtbl -> AddMLine(This,VertexList,pMLine)

#define IAcadModelSpace2_AddDim3PointAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)	\
    (This)->lpVtbl -> AddDim3PointAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)

#define IAcadModelSpace2_get_XRefDatabase(This,pDatabase)	\
    (This)->lpVtbl -> get_XRefDatabase(This,pDatabase)

#define IAcadModelSpace2_AttachExternalReference(This,PathName,Name,InsertionPoint,Xscale,Yscale,Zscale,Rotation,bOverlay,Password,pXRef)	\
    (This)->lpVtbl -> AttachExternalReference(This,PathName,Name,InsertionPoint,Xscale,Yscale,Zscale,Rotation,bOverlay,Password,pXRef)

#define IAcadModelSpace2_Unload(This)	\
    (This)->lpVtbl -> Unload(This)

#define IAcadModelSpace2_Reload(This)	\
    (This)->lpVtbl -> Reload(This)

#define IAcadModelSpace2_Bind(This,bPrefixName)	\
    (This)->lpVtbl -> Bind(This,bPrefixName)

#define IAcadModelSpace2_Detach(This)	\
    (This)->lpVtbl -> Detach(This)



#define IAcadModelSpace2_AddTable(This,InsertionPoint,NumRows,NumColumns,RowHeight,ColWidth,pTable)	\
    (This)->lpVtbl -> AddTable(This,InsertionPoint,NumRows,NumColumns,RowHeight,ColWidth,pTable)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadModelSpace2_AddTable_Proxy( 
    IAcadModelSpace2 * This,
    /* [in] */ VARIANT InsertionPoint,
    /* [in] */ int NumRows,
    /* [in] */ int NumColumns,
    /* [in] */ double RowHeight,
    /* [in] */ double ColWidth,
    /* [retval][out] */ IAcadTable **pTable);


void __RPC_STUB IAcadModelSpace2_AddTable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadModelSpace2_INTERFACE_DEFINED__ */


#ifndef __IAcadPaperSpace2_INTERFACE_DEFINED__
#define __IAcadPaperSpace2_INTERFACE_DEFINED__

/* interface IAcadPaperSpace2 */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadPaperSpace2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B1A1F22D-B54B-4EED-A6DD-79A526AB9DA6")
    IAcadPaperSpace2 : public IAcadPaperSpace
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddTable( 
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ int NumRows,
            /* [in] */ int NumColumns,
            /* [in] */ double RowHeight,
            /* [in] */ double ColWidth,
            /* [retval][out] */ IAcadTable **pTable) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadPaperSpace2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadPaperSpace2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadPaperSpace2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadPaperSpace2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAcadPaperSpace2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAcadPaperSpace2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAcadPaperSpace2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAcadPaperSpace2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IAcadPaperSpace2 * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IAcadPaperSpace2 * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IAcadPaperSpace2 * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IAcadPaperSpace2 * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IAcadPaperSpace2 * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IAcadPaperSpace2 * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IAcadPaperSpace2 * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IAcadPaperSpace2 * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IAcadPaperSpace2 * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IAcadPaperSpace2 * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IAcadPaperSpace2 * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IAcadPaperSpace2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IAcadEntity **pItem);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IAcadPaperSpace2 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IAcadPaperSpace2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IAcadPaperSpace2 * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IAcadPaperSpace2 * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Origin )( 
            IAcadPaperSpace2 * This,
            /* [retval][out] */ VARIANT *Origin);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Origin )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT Origin);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCustomObject )( 
            IAcadPaperSpace2 * This,
            /* [in] */ BSTR ClassName,
            /* [retval][out] */ IDispatch **pObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DFace )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [in] */ VARIANT Point4,
            /* [retval][out] */ IAcad3DFace **pFace3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DMesh )( 
            IAcadPaperSpace2 * This,
            /* [in] */ int M,
            /* [in] */ int N,
            /* [in] */ VARIANT PointsMatrix,
            /* [retval][out] */ IAcadPolygonMesh **pMesh3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add3DPoly )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT PointsArray,
            /* [retval][out] */ IAcad3DPolyline **pPoly3d);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddArc )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [in] */ double StartAngle,
            /* [in] */ double EndAngle,
            /* [retval][out] */ IAcadArc **pArc);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            IAcadPaperSpace2 * This,
            /* [in] */ double Height,
            /* [in] */ AcAttributeMode Mode,
            /* [in] */ BSTR Prompt,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Tag,
            /* [in] */ BSTR Value,
            /* [retval][out] */ IAcadAttribute **pAttr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddBox )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT Origin,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pBox);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCircle )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [retval][out] */ IAcadCircle **pCircle);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCone )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double BaseRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pCone);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddCylinder )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pCyl);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimAligned )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT ExtLine1Point,
            /* [in] */ VARIANT ExtLine2Point,
            /* [in] */ VARIANT TextPosition,
            /* [retval][out] */ IAcadDimAligned **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimAngular )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT AngleVertex,
            /* [in] */ VARIANT FirstEndPoint,
            /* [in] */ VARIANT SecondEndPoint,
            /* [in] */ VARIANT TextPoint,
            /* [retval][out] */ IAcadDimAngular **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimDiametric )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT ChordPoint,
            /* [in] */ VARIANT FarChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IAcadDimDiametric **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimRotated )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT ExtLine1Point,
            /* [in] */ VARIANT ExtLine2Point,
            /* [in] */ VARIANT DimLineLocation,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadDimRotated **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimOrdinate )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT DefinitionPoint,
            /* [in] */ VARIANT LeaderEndPoint,
            /* [in] */ int UseXAxis,
            /* [retval][out] */ IAcadDimOrdinate **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDimRadial )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ VARIANT ChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IAcadDimRadial **pDim);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipse )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ VARIANT MajorAxis,
            /* [in] */ double RadiusRatio,
            /* [retval][out] */ IAcadEllipse **pEllipse);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCone )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pEllipCone);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCylinder )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pEllipCyl);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolid )( 
            IAcadPaperSpace2 * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ double Height,
            /* [in] */ double TaperAngle,
            /* [retval][out] */ IAcad3DSolid **pExtrSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolidAlongPath )( 
            IAcadPaperSpace2 * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ IDispatch *Path,
            /* [retval][out] */ IAcad3DSolid **pExtrSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLeader )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT PointsArray,
            /* [in] */ IAcadEntity *Annotation,
            /* [in] */ AcLeaderType Type,
            /* [retval][out] */ IAcadLeader **pLeader);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMText )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Width,
            /* [in] */ BSTR Text,
            /* [retval][out] */ IAcadMText **pMtext);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPoint )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT Point,
            /* [retval][out] */ IAcadPoint **pPoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLightWeightPolyline )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT VerticesList,
            /* [retval][out] */ IAcadLWPolyline **pLWPolyline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPolyline )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT VerticesList,
            /* [retval][out] */ IAcadPolyline **pPolyline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRay )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IAcadRay **pRay);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRegion )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT ObjectList,
            /* [retval][out] */ VARIANT *pRegions);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRevolvedSolid )( 
            IAcadPaperSpace2 * This,
            /* [in] */ IAcadRegion *Profile,
            /* [in] */ VARIANT AxisPoint,
            /* [in] */ VARIANT AxisDir,
            /* [in] */ double Angle,
            /* [retval][out] */ IAcad3DSolid **pRevolSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddShape )( 
            IAcadPaperSpace2 * This,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double ScaleFactor,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadShape **pShape);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSolid )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [in] */ VARIANT point3,
            /* [in] */ VARIANT Point4,
            /* [retval][out] */ IAcadSolid **pSolid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSphere )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Radius,
            /* [retval][out] */ IAcad3DSolid **pSphere);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSpline )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT PointsArray,
            /* [in] */ VARIANT StartTangent,
            /* [in] */ VARIANT EndTangent,
            /* [retval][out] */ IAcadSpline **pSpline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddText )( 
            IAcadPaperSpace2 * This,
            /* [in] */ BSTR TextString,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Height,
            /* [retval][out] */ IAcadText **pText);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTolerance )( 
            IAcadPaperSpace2 * This,
            /* [in] */ BSTR Text,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ VARIANT Direction,
            /* [retval][out] */ IAcadTolerance **pTolerance);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTorus )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double TorusRadius,
            /* [in] */ double TubeRadius,
            /* [retval][out] */ IAcad3DSolid **pTorus);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTrace )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT PointsArray,
            /* [retval][out] */ IAcadTrace **pTrace);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddWedge )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IAcad3DSolid **pWedge);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddXline )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT Point1,
            /* [in] */ VARIANT Point2,
            /* [retval][out] */ IAcadXline **pXline);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *InsertBlock )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Name,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadBlockReference **pBlkRef);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddHatch )( 
            IAcadPaperSpace2 * This,
            /* [in] */ int PatternType,
            /* [in] */ BSTR PatternName,
            /* [in] */ VARIANT_BOOL Associativity,
            /* [optional][in] */ VARIANT HatchObjectType,
            /* [retval][out] */ IAcadHatch **pHatch);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRaster )( 
            IAcadPaperSpace2 * This,
            /* [in] */ BSTR imageFileName,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double ScaleFactor,
            /* [in] */ double RotationAngle,
            /* [retval][out] */ IAcadRasterImage **pRaster);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddLine )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT StartPoint,
            /* [in] */ VARIANT EndPoint,
            /* [retval][out] */ IAcadLine **pLine);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsLayout )( 
            IAcadPaperSpace2 * This,
            /* [retval][out] */ VARIANT_BOOL *bIsLayout);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layout )( 
            IAcadPaperSpace2 * This,
            /* [retval][out] */ IAcadLayout **pLayout);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsXRef )( 
            IAcadPaperSpace2 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsXRref);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMInsertBlock )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ BSTR Name,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [in] */ long NumRows,
            /* [in] */ long NumColumns,
            /* [in] */ long RowSpacing,
            /* [in] */ long ColumnSpacing,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadMInsertBlock **pMInsertBlk);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPolyfaceMesh )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT VertexList,
            /* [in] */ VARIANT FaceList,
            /* [retval][out] */ IAcadPolyfaceMesh **pPFMesh);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMLine )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT VertexList,
            /* [retval][out] */ IAcadMLine **pMLine);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddDim3PointAngular )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT AngleVertex,
            /* [in] */ VARIANT FirstEndPoint,
            /* [in] */ VARIANT SecondEndPoint,
            /* [in] */ VARIANT TextPoint,
            /* [retval][out] */ IAcadDim3PointAngular **pDim);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XRefDatabase )( 
            IAcadPaperSpace2 * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AttachExternalReference )( 
            IAcadPaperSpace2 * This,
            /* [in] */ BSTR PathName,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ double Xscale,
            /* [in] */ double Yscale,
            /* [in] */ double Zscale,
            /* [in] */ double Rotation,
            /* [in] */ VARIANT_BOOL bOverlay,
            /* [optional][in] */ VARIANT Password,
            /* [retval][out] */ IAcadExternalReference **pXRef);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Unload )( 
            IAcadPaperSpace2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Reload )( 
            IAcadPaperSpace2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Bind )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT_BOOL bPrefixName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Detach )( 
            IAcadPaperSpace2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddPViewport )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT Center,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IAcadPViewport **pPViewport);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddTable )( 
            IAcadPaperSpace2 * This,
            /* [in] */ VARIANT InsertionPoint,
            /* [in] */ int NumRows,
            /* [in] */ int NumColumns,
            /* [in] */ double RowHeight,
            /* [in] */ double ColWidth,
            /* [retval][out] */ IAcadTable **pTable);
        
        END_INTERFACE
    } IAcadPaperSpace2Vtbl;

    interface IAcadPaperSpace2
    {
        CONST_VTBL struct IAcadPaperSpace2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadPaperSpace2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadPaperSpace2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadPaperSpace2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadPaperSpace2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAcadPaperSpace2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAcadPaperSpace2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAcadPaperSpace2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAcadPaperSpace2_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IAcadPaperSpace2_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IAcadPaperSpace2_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IAcadPaperSpace2_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IAcadPaperSpace2_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IAcadPaperSpace2_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IAcadPaperSpace2_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IAcadPaperSpace2_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IAcadPaperSpace2_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IAcadPaperSpace2_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IAcadPaperSpace2_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IAcadPaperSpace2_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IAcadPaperSpace2_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IAcadPaperSpace2_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IAcadPaperSpace2_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IAcadPaperSpace2_get_Count(This,pVal)	\
    (This)->lpVtbl -> get_Count(This,pVal)

#define IAcadPaperSpace2_get_Name(This,bstrName)	\
    (This)->lpVtbl -> get_Name(This,bstrName)

#define IAcadPaperSpace2_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#define IAcadPaperSpace2_get_Origin(This,Origin)	\
    (This)->lpVtbl -> get_Origin(This,Origin)

#define IAcadPaperSpace2_put_Origin(This,Origin)	\
    (This)->lpVtbl -> put_Origin(This,Origin)

#define IAcadPaperSpace2_AddCustomObject(This,ClassName,pObject)	\
    (This)->lpVtbl -> AddCustomObject(This,ClassName,pObject)

#define IAcadPaperSpace2_Add3DFace(This,Point1,Point2,point3,Point4,pFace3d)	\
    (This)->lpVtbl -> Add3DFace(This,Point1,Point2,point3,Point4,pFace3d)

#define IAcadPaperSpace2_Add3DMesh(This,M,N,PointsMatrix,pMesh3d)	\
    (This)->lpVtbl -> Add3DMesh(This,M,N,PointsMatrix,pMesh3d)

#define IAcadPaperSpace2_Add3DPoly(This,PointsArray,pPoly3d)	\
    (This)->lpVtbl -> Add3DPoly(This,PointsArray,pPoly3d)

#define IAcadPaperSpace2_AddArc(This,Center,Radius,StartAngle,EndAngle,pArc)	\
    (This)->lpVtbl -> AddArc(This,Center,Radius,StartAngle,EndAngle,pArc)

#define IAcadPaperSpace2_AddAttribute(This,Height,Mode,Prompt,InsertionPoint,Tag,Value,pAttr)	\
    (This)->lpVtbl -> AddAttribute(This,Height,Mode,Prompt,InsertionPoint,Tag,Value,pAttr)

#define IAcadPaperSpace2_AddBox(This,Origin,Length,Width,Height,pBox)	\
    (This)->lpVtbl -> AddBox(This,Origin,Length,Width,Height,pBox)

#define IAcadPaperSpace2_AddCircle(This,Center,Radius,pCircle)	\
    (This)->lpVtbl -> AddCircle(This,Center,Radius,pCircle)

#define IAcadPaperSpace2_AddCone(This,Center,BaseRadius,Height,pCone)	\
    (This)->lpVtbl -> AddCone(This,Center,BaseRadius,Height,pCone)

#define IAcadPaperSpace2_AddCylinder(This,Center,Radius,Height,pCyl)	\
    (This)->lpVtbl -> AddCylinder(This,Center,Radius,Height,pCyl)

#define IAcadPaperSpace2_AddDimAligned(This,ExtLine1Point,ExtLine2Point,TextPosition,pDim)	\
    (This)->lpVtbl -> AddDimAligned(This,ExtLine1Point,ExtLine2Point,TextPosition,pDim)

#define IAcadPaperSpace2_AddDimAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)	\
    (This)->lpVtbl -> AddDimAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)

#define IAcadPaperSpace2_AddDimDiametric(This,ChordPoint,FarChordPoint,LeaderLength,pDim)	\
    (This)->lpVtbl -> AddDimDiametric(This,ChordPoint,FarChordPoint,LeaderLength,pDim)

#define IAcadPaperSpace2_AddDimRotated(This,ExtLine1Point,ExtLine2Point,DimLineLocation,RotationAngle,pDim)	\
    (This)->lpVtbl -> AddDimRotated(This,ExtLine1Point,ExtLine2Point,DimLineLocation,RotationAngle,pDim)

#define IAcadPaperSpace2_AddDimOrdinate(This,DefinitionPoint,LeaderEndPoint,UseXAxis,pDim)	\
    (This)->lpVtbl -> AddDimOrdinate(This,DefinitionPoint,LeaderEndPoint,UseXAxis,pDim)

#define IAcadPaperSpace2_AddDimRadial(This,Center,ChordPoint,LeaderLength,pDim)	\
    (This)->lpVtbl -> AddDimRadial(This,Center,ChordPoint,LeaderLength,pDim)

#define IAcadPaperSpace2_AddEllipse(This,Center,MajorAxis,RadiusRatio,pEllipse)	\
    (This)->lpVtbl -> AddEllipse(This,Center,MajorAxis,RadiusRatio,pEllipse)

#define IAcadPaperSpace2_AddEllipticalCone(This,Center,MajorRadius,MinorRadius,Height,pEllipCone)	\
    (This)->lpVtbl -> AddEllipticalCone(This,Center,MajorRadius,MinorRadius,Height,pEllipCone)

#define IAcadPaperSpace2_AddEllipticalCylinder(This,Center,MajorRadius,MinorRadius,Height,pEllipCyl)	\
    (This)->lpVtbl -> AddEllipticalCylinder(This,Center,MajorRadius,MinorRadius,Height,pEllipCyl)

#define IAcadPaperSpace2_AddExtrudedSolid(This,Profile,Height,TaperAngle,pExtrSolid)	\
    (This)->lpVtbl -> AddExtrudedSolid(This,Profile,Height,TaperAngle,pExtrSolid)

#define IAcadPaperSpace2_AddExtrudedSolidAlongPath(This,Profile,Path,pExtrSolid)	\
    (This)->lpVtbl -> AddExtrudedSolidAlongPath(This,Profile,Path,pExtrSolid)

#define IAcadPaperSpace2_AddLeader(This,PointsArray,Annotation,Type,pLeader)	\
    (This)->lpVtbl -> AddLeader(This,PointsArray,Annotation,Type,pLeader)

#define IAcadPaperSpace2_AddMText(This,InsertionPoint,Width,Text,pMtext)	\
    (This)->lpVtbl -> AddMText(This,InsertionPoint,Width,Text,pMtext)

#define IAcadPaperSpace2_AddPoint(This,Point,pPoint)	\
    (This)->lpVtbl -> AddPoint(This,Point,pPoint)

#define IAcadPaperSpace2_AddLightWeightPolyline(This,VerticesList,pLWPolyline)	\
    (This)->lpVtbl -> AddLightWeightPolyline(This,VerticesList,pLWPolyline)

#define IAcadPaperSpace2_AddPolyline(This,VerticesList,pPolyline)	\
    (This)->lpVtbl -> AddPolyline(This,VerticesList,pPolyline)

#define IAcadPaperSpace2_AddRay(This,Point1,Point2,pRay)	\
    (This)->lpVtbl -> AddRay(This,Point1,Point2,pRay)

#define IAcadPaperSpace2_AddRegion(This,ObjectList,pRegions)	\
    (This)->lpVtbl -> AddRegion(This,ObjectList,pRegions)

#define IAcadPaperSpace2_AddRevolvedSolid(This,Profile,AxisPoint,AxisDir,Angle,pRevolSolid)	\
    (This)->lpVtbl -> AddRevolvedSolid(This,Profile,AxisPoint,AxisDir,Angle,pRevolSolid)

#define IAcadPaperSpace2_AddShape(This,Name,InsertionPoint,ScaleFactor,RotationAngle,pShape)	\
    (This)->lpVtbl -> AddShape(This,Name,InsertionPoint,ScaleFactor,RotationAngle,pShape)

#define IAcadPaperSpace2_AddSolid(This,Point1,Point2,point3,Point4,pSolid)	\
    (This)->lpVtbl -> AddSolid(This,Point1,Point2,point3,Point4,pSolid)

#define IAcadPaperSpace2_AddSphere(This,Center,Radius,pSphere)	\
    (This)->lpVtbl -> AddSphere(This,Center,Radius,pSphere)

#define IAcadPaperSpace2_AddSpline(This,PointsArray,StartTangent,EndTangent,pSpline)	\
    (This)->lpVtbl -> AddSpline(This,PointsArray,StartTangent,EndTangent,pSpline)

#define IAcadPaperSpace2_AddText(This,TextString,InsertionPoint,Height,pText)	\
    (This)->lpVtbl -> AddText(This,TextString,InsertionPoint,Height,pText)

#define IAcadPaperSpace2_AddTolerance(This,Text,InsertionPoint,Direction,pTolerance)	\
    (This)->lpVtbl -> AddTolerance(This,Text,InsertionPoint,Direction,pTolerance)

#define IAcadPaperSpace2_AddTorus(This,Center,TorusRadius,TubeRadius,pTorus)	\
    (This)->lpVtbl -> AddTorus(This,Center,TorusRadius,TubeRadius,pTorus)

#define IAcadPaperSpace2_AddTrace(This,PointsArray,pTrace)	\
    (This)->lpVtbl -> AddTrace(This,PointsArray,pTrace)

#define IAcadPaperSpace2_AddWedge(This,Center,Length,Width,Height,pWedge)	\
    (This)->lpVtbl -> AddWedge(This,Center,Length,Width,Height,pWedge)

#define IAcadPaperSpace2_AddXline(This,Point1,Point2,pXline)	\
    (This)->lpVtbl -> AddXline(This,Point1,Point2,pXline)

#define IAcadPaperSpace2_InsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,Password,pBlkRef)	\
    (This)->lpVtbl -> InsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,Password,pBlkRef)

#define IAcadPaperSpace2_AddHatch(This,PatternType,PatternName,Associativity,HatchObjectType,pHatch)	\
    (This)->lpVtbl -> AddHatch(This,PatternType,PatternName,Associativity,HatchObjectType,pHatch)

#define IAcadPaperSpace2_AddRaster(This,imageFileName,InsertionPoint,ScaleFactor,RotationAngle,pRaster)	\
    (This)->lpVtbl -> AddRaster(This,imageFileName,InsertionPoint,ScaleFactor,RotationAngle,pRaster)

#define IAcadPaperSpace2_AddLine(This,StartPoint,EndPoint,pLine)	\
    (This)->lpVtbl -> AddLine(This,StartPoint,EndPoint,pLine)

#define IAcadPaperSpace2_get_IsLayout(This,bIsLayout)	\
    (This)->lpVtbl -> get_IsLayout(This,bIsLayout)

#define IAcadPaperSpace2_get_Layout(This,pLayout)	\
    (This)->lpVtbl -> get_Layout(This,pLayout)

#define IAcadPaperSpace2_get_IsXRef(This,pIsXRref)	\
    (This)->lpVtbl -> get_IsXRef(This,pIsXRref)

#define IAcadPaperSpace2_AddMInsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,NumRows,NumColumns,RowSpacing,ColumnSpacing,Password,pMInsertBlk)	\
    (This)->lpVtbl -> AddMInsertBlock(This,InsertionPoint,Name,Xscale,Yscale,Zscale,Rotation,NumRows,NumColumns,RowSpacing,ColumnSpacing,Password,pMInsertBlk)

#define IAcadPaperSpace2_AddPolyfaceMesh(This,VertexList,FaceList,pPFMesh)	\
    (This)->lpVtbl -> AddPolyfaceMesh(This,VertexList,FaceList,pPFMesh)

#define IAcadPaperSpace2_AddMLine(This,VertexList,pMLine)	\
    (This)->lpVtbl -> AddMLine(This,VertexList,pMLine)

#define IAcadPaperSpace2_AddDim3PointAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)	\
    (This)->lpVtbl -> AddDim3PointAngular(This,AngleVertex,FirstEndPoint,SecondEndPoint,TextPoint,pDim)

#define IAcadPaperSpace2_get_XRefDatabase(This,pDatabase)	\
    (This)->lpVtbl -> get_XRefDatabase(This,pDatabase)

#define IAcadPaperSpace2_AttachExternalReference(This,PathName,Name,InsertionPoint,Xscale,Yscale,Zscale,Rotation,bOverlay,Password,pXRef)	\
    (This)->lpVtbl -> AttachExternalReference(This,PathName,Name,InsertionPoint,Xscale,Yscale,Zscale,Rotation,bOverlay,Password,pXRef)

#define IAcadPaperSpace2_Unload(This)	\
    (This)->lpVtbl -> Unload(This)

#define IAcadPaperSpace2_Reload(This)	\
    (This)->lpVtbl -> Reload(This)

#define IAcadPaperSpace2_Bind(This,bPrefixName)	\
    (This)->lpVtbl -> Bind(This,bPrefixName)

#define IAcadPaperSpace2_Detach(This)	\
    (This)->lpVtbl -> Detach(This)


#define IAcadPaperSpace2_AddPViewport(This,Center,Width,Height,pPViewport)	\
    (This)->lpVtbl -> AddPViewport(This,Center,Width,Height,pPViewport)


#define IAcadPaperSpace2_AddTable(This,InsertionPoint,NumRows,NumColumns,RowHeight,ColWidth,pTable)	\
    (This)->lpVtbl -> AddTable(This,InsertionPoint,NumRows,NumColumns,RowHeight,ColWidth,pTable)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IAcadPaperSpace2_AddTable_Proxy( 
    IAcadPaperSpace2 * This,
    /* [in] */ VARIANT InsertionPoint,
    /* [in] */ int NumRows,
    /* [in] */ int NumColumns,
    /* [in] */ double RowHeight,
    /* [in] */ double ColWidth,
    /* [retval][out] */ IAcadTable **pTable);


void __RPC_STUB IAcadPaperSpace2_AddTable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadPaperSpace2_INTERFACE_DEFINED__ */


#ifndef __IOdaMLineStyles_INTERFACE_DEFINED__
#define __IOdaMLineStyles_INTERFACE_DEFINED__

/* interface IOdaMLineStyles */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IOdaMLineStyles;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CD11F1E2-9A4B-4b4c-885E-7C742D9A7B1B")
    IOdaMLineStyles : public IAcadObject
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IOdaMLineStyle **pItem) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IOdaMLineStyle **pLayout) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOdaMLineStylesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IOdaMLineStyles * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IOdaMLineStyles * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IOdaMLineStyles * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IOdaMLineStyles * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IOdaMLineStyles * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IOdaMLineStyles * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IOdaMLineStyles * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IOdaMLineStyles * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IOdaMLineStyles * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IOdaMLineStyles * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IOdaMLineStyles * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IOdaMLineStyles * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IOdaMLineStyles * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IOdaMLineStyles * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IOdaMLineStyles * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IOdaMLineStyles * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IOdaMLineStyles * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IOdaMLineStyles * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IOdaMLineStyles * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IOdaMLineStyles * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IOdaMLineStyles * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IOdaMLineStyle **pItem);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IOdaMLineStyles * This,
            /* [retval][out] */ long *pCount);
        
        /* [hidden][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IOdaMLineStyles * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IOdaMLineStyles * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IOdaMLineStyle **pLayout);
        
        END_INTERFACE
    } IOdaMLineStylesVtbl;

    interface IOdaMLineStyles
    {
        CONST_VTBL struct IOdaMLineStylesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOdaMLineStyles_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IOdaMLineStyles_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IOdaMLineStyles_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IOdaMLineStyles_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IOdaMLineStyles_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IOdaMLineStyles_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IOdaMLineStyles_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IOdaMLineStyles_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IOdaMLineStyles_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IOdaMLineStyles_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IOdaMLineStyles_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IOdaMLineStyles_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IOdaMLineStyles_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IOdaMLineStyles_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IOdaMLineStyles_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IOdaMLineStyles_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IOdaMLineStyles_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IOdaMLineStyles_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IOdaMLineStyles_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IOdaMLineStyles_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IOdaMLineStyles_Item(This,Index,pItem)	\
    (This)->lpVtbl -> Item(This,Index,pItem)

#define IOdaMLineStyles_get_Count(This,pCount)	\
    (This)->lpVtbl -> get_Count(This,pCount)

#define IOdaMLineStyles_get__NewEnum(This,pVal)	\
    (This)->lpVtbl -> get__NewEnum(This,pVal)

#define IOdaMLineStyles_Add(This,Name,pLayout)	\
    (This)->lpVtbl -> Add(This,Name,pLayout)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyles_Item_Proxy( 
    IOdaMLineStyles * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ IOdaMLineStyle **pItem);


void __RPC_STUB IOdaMLineStyles_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyles_get_Count_Proxy( 
    IOdaMLineStyles * This,
    /* [retval][out] */ long *pCount);


void __RPC_STUB IOdaMLineStyles_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyles_get__NewEnum_Proxy( 
    IOdaMLineStyles * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IOdaMLineStyles_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyles_Add_Proxy( 
    IOdaMLineStyles * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IOdaMLineStyle **pLayout);


void __RPC_STUB IOdaMLineStyles_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IOdaMLineStyles_INTERFACE_DEFINED__ */


#ifndef __IOdaMLineStyle_INTERFACE_DEFINED__
#define __IOdaMLineStyle_INTERFACE_DEFINED__

/* interface IOdaMLineStyle */
/* [object][oleautomation][dual][helpstring][uuid] */ 


EXTERN_C const IID IID_IOdaMLineStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3A0452E3-C808-4f24-8BBF-9F6AC829E389")
    IOdaMLineStyle : public IAcadObject
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR pName) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *bstrDes) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ BSTR bstrDes) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_StartAngle( 
            /* [retval][out] */ ACAD_ANGLE *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_StartAngle( 
            /* [in] */ ACAD_ANGLE newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_EndAngle( 
            /* [retval][out] */ ACAD_ANGLE *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_EndAngle( 
            /* [in] */ ACAD_ANGLE newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FillColor( 
            /* [retval][out] */ IAcadAcCmColor **pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FillColor( 
            /* [in] */ IAcadAcCmColor *newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ElementsCount( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Filled( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Filled( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ShowMiters( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ShowMiters( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_StartSquareCap( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_StartSquareCap( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_StartRoundCap( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_StartRoundCap( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_StartInnerArcs( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_StartInnerArcs( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_EndSquareCap( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_EndSquareCap( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_EndRoundCap( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_EndRoundCap( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_EndInnerArcs( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_EndInnerArcs( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddElement( 
            /* [in] */ double offset,
            /* [in] */ IAcadAcCmColor *Color,
            /* [in] */ IAcadLineType *pLinetype) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_OffsetAt( 
            /* [in] */ int index,
            /* [retval][out] */ double *value) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_OffsetAt( 
            /* [in] */ int index,
            /* [in] */ double value) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ColorAt( 
            /* [in] */ int index,
            /* [retval][out] */ IAcadAcCmColor **Color) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ColorAt( 
            /* [in] */ int index,
            /* [in] */ IAcadAcCmColor *Color) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LineTypeAt( 
            /* [in] */ int index,
            /* [retval][out] */ IAcadLineType **LineType) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_LineTypeAt( 
            /* [in] */ int index,
            /* [in] */ IAcadLineType *LineType) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOdaMLineStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IOdaMLineStyle * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IOdaMLineStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IOdaMLineStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IOdaMLineStyle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IOdaMLineStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IOdaMLineStyle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IOdaMLineStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ BSTR *Handle);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectName )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ BSTR *ObjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IOdaMLineStyle * This,
            /* [in] */ BSTR AppName,
            /* [out] */ VARIANT *XDataType,
            /* [out] */ VARIANT *XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IOdaMLineStyle * This,
            /* [in] */ VARIANT XDataType,
            /* [in] */ VARIANT XDataValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IOdaMLineStyle * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ long *ObjectID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ IDispatch **ApplicationObject);
        
        /* [helpstring][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Database )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ IAcadDatabase **pDatabase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ IAcadDictionary **pExtDictionary);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OwnerID )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ long *OwnerID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ IDispatch **pDocument);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IOdaMLineStyle * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IOdaMLineStyle * This,
            /* [in] */ BSTR pName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ BSTR *bstrDes);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            IOdaMLineStyle * This,
            /* [in] */ BSTR bstrDes);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartAngle )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ ACAD_ANGLE *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StartAngle )( 
            IOdaMLineStyle * This,
            /* [in] */ ACAD_ANGLE newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EndAngle )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ ACAD_ANGLE *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EndAngle )( 
            IOdaMLineStyle * This,
            /* [in] */ ACAD_ANGLE newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FillColor )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ IAcadAcCmColor **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FillColor )( 
            IOdaMLineStyle * This,
            /* [in] */ IAcadAcCmColor *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ElementsCount )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Filled )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Filled )( 
            IOdaMLineStyle * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowMiters )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowMiters )( 
            IOdaMLineStyle * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartSquareCap )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StartSquareCap )( 
            IOdaMLineStyle * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartRoundCap )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StartRoundCap )( 
            IOdaMLineStyle * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartInnerArcs )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StartInnerArcs )( 
            IOdaMLineStyle * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EndSquareCap )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EndSquareCap )( 
            IOdaMLineStyle * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EndRoundCap )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EndRoundCap )( 
            IOdaMLineStyle * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EndInnerArcs )( 
            IOdaMLineStyle * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EndInnerArcs )( 
            IOdaMLineStyle * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddElement )( 
            IOdaMLineStyle * This,
            /* [in] */ double offset,
            /* [in] */ IAcadAcCmColor *Color,
            /* [in] */ IAcadLineType *pLinetype);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OffsetAt )( 
            IOdaMLineStyle * This,
            /* [in] */ int index,
            /* [retval][out] */ double *value);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_OffsetAt )( 
            IOdaMLineStyle * This,
            /* [in] */ int index,
            /* [in] */ double value);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ColorAt )( 
            IOdaMLineStyle * This,
            /* [in] */ int index,
            /* [retval][out] */ IAcadAcCmColor **Color);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ColorAt )( 
            IOdaMLineStyle * This,
            /* [in] */ int index,
            /* [in] */ IAcadAcCmColor *Color);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LineTypeAt )( 
            IOdaMLineStyle * This,
            /* [in] */ int index,
            /* [retval][out] */ IAcadLineType **LineType);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_LineTypeAt )( 
            IOdaMLineStyle * This,
            /* [in] */ int index,
            /* [in] */ IAcadLineType *LineType);
        
        END_INTERFACE
    } IOdaMLineStyleVtbl;

    interface IOdaMLineStyle
    {
        CONST_VTBL struct IOdaMLineStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOdaMLineStyle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IOdaMLineStyle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IOdaMLineStyle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IOdaMLineStyle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IOdaMLineStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IOdaMLineStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IOdaMLineStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IOdaMLineStyle_get_Handle(This,Handle)	\
    (This)->lpVtbl -> get_Handle(This,Handle)

#define IOdaMLineStyle_get_ObjectName(This,ObjectName)	\
    (This)->lpVtbl -> get_ObjectName(This,ObjectName)

#define IOdaMLineStyle_GetXData(This,AppName,XDataType,XDataValue)	\
    (This)->lpVtbl -> GetXData(This,AppName,XDataType,XDataValue)

#define IOdaMLineStyle_SetXData(This,XDataType,XDataValue)	\
    (This)->lpVtbl -> SetXData(This,XDataType,XDataValue)

#define IOdaMLineStyle_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IOdaMLineStyle_get_ObjectID(This,ObjectID)	\
    (This)->lpVtbl -> get_ObjectID(This,ObjectID)

#define IOdaMLineStyle_get_Application(This,ApplicationObject)	\
    (This)->lpVtbl -> get_Application(This,ApplicationObject)

#define IOdaMLineStyle_get_Database(This,pDatabase)	\
    (This)->lpVtbl -> get_Database(This,pDatabase)

#define IOdaMLineStyle_get_HasExtensionDictionary(This,bHasDictionary)	\
    (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary)

#define IOdaMLineStyle_GetExtensionDictionary(This,pExtDictionary)	\
    (This)->lpVtbl -> GetExtensionDictionary(This,pExtDictionary)

#define IOdaMLineStyle_get_OwnerID(This,OwnerID)	\
    (This)->lpVtbl -> get_OwnerID(This,OwnerID)

#define IOdaMLineStyle_get_Document(This,pDocument)	\
    (This)->lpVtbl -> get_Document(This,pDocument)

#define IOdaMLineStyle_Erase(This)	\
    (This)->lpVtbl -> Erase(This)


#define IOdaMLineStyle_get_Name(This,pName)	\
    (This)->lpVtbl -> get_Name(This,pName)

#define IOdaMLineStyle_put_Name(This,pName)	\
    (This)->lpVtbl -> put_Name(This,pName)

#define IOdaMLineStyle_get_Description(This,bstrDes)	\
    (This)->lpVtbl -> get_Description(This,bstrDes)

#define IOdaMLineStyle_put_Description(This,bstrDes)	\
    (This)->lpVtbl -> put_Description(This,bstrDes)

#define IOdaMLineStyle_get_StartAngle(This,pVal)	\
    (This)->lpVtbl -> get_StartAngle(This,pVal)

#define IOdaMLineStyle_put_StartAngle(This,newVal)	\
    (This)->lpVtbl -> put_StartAngle(This,newVal)

#define IOdaMLineStyle_get_EndAngle(This,pVal)	\
    (This)->lpVtbl -> get_EndAngle(This,pVal)

#define IOdaMLineStyle_put_EndAngle(This,newVal)	\
    (This)->lpVtbl -> put_EndAngle(This,newVal)

#define IOdaMLineStyle_get_FillColor(This,pVal)	\
    (This)->lpVtbl -> get_FillColor(This,pVal)

#define IOdaMLineStyle_put_FillColor(This,newVal)	\
    (This)->lpVtbl -> put_FillColor(This,newVal)

#define IOdaMLineStyle_get_ElementsCount(This,pVal)	\
    (This)->lpVtbl -> get_ElementsCount(This,pVal)

#define IOdaMLineStyle_get_Filled(This,pVal)	\
    (This)->lpVtbl -> get_Filled(This,pVal)

#define IOdaMLineStyle_put_Filled(This,newVal)	\
    (This)->lpVtbl -> put_Filled(This,newVal)

#define IOdaMLineStyle_get_ShowMiters(This,pVal)	\
    (This)->lpVtbl -> get_ShowMiters(This,pVal)

#define IOdaMLineStyle_put_ShowMiters(This,newVal)	\
    (This)->lpVtbl -> put_ShowMiters(This,newVal)

#define IOdaMLineStyle_get_StartSquareCap(This,pVal)	\
    (This)->lpVtbl -> get_StartSquareCap(This,pVal)

#define IOdaMLineStyle_put_StartSquareCap(This,newVal)	\
    (This)->lpVtbl -> put_StartSquareCap(This,newVal)

#define IOdaMLineStyle_get_StartRoundCap(This,pVal)	\
    (This)->lpVtbl -> get_StartRoundCap(This,pVal)

#define IOdaMLineStyle_put_StartRoundCap(This,newVal)	\
    (This)->lpVtbl -> put_StartRoundCap(This,newVal)

#define IOdaMLineStyle_get_StartInnerArcs(This,pVal)	\
    (This)->lpVtbl -> get_StartInnerArcs(This,pVal)

#define IOdaMLineStyle_put_StartInnerArcs(This,newVal)	\
    (This)->lpVtbl -> put_StartInnerArcs(This,newVal)

#define IOdaMLineStyle_get_EndSquareCap(This,pVal)	\
    (This)->lpVtbl -> get_EndSquareCap(This,pVal)

#define IOdaMLineStyle_put_EndSquareCap(This,newVal)	\
    (This)->lpVtbl -> put_EndSquareCap(This,newVal)

#define IOdaMLineStyle_get_EndRoundCap(This,pVal)	\
    (This)->lpVtbl -> get_EndRoundCap(This,pVal)

#define IOdaMLineStyle_put_EndRoundCap(This,newVal)	\
    (This)->lpVtbl -> put_EndRoundCap(This,newVal)

#define IOdaMLineStyle_get_EndInnerArcs(This,pVal)	\
    (This)->lpVtbl -> get_EndInnerArcs(This,pVal)

#define IOdaMLineStyle_put_EndInnerArcs(This,newVal)	\
    (This)->lpVtbl -> put_EndInnerArcs(This,newVal)

#define IOdaMLineStyle_AddElement(This,offset,Color,pLinetype)	\
    (This)->lpVtbl -> AddElement(This,offset,Color,pLinetype)

#define IOdaMLineStyle_get_OffsetAt(This,index,value)	\
    (This)->lpVtbl -> get_OffsetAt(This,index,value)

#define IOdaMLineStyle_put_OffsetAt(This,index,value)	\
    (This)->lpVtbl -> put_OffsetAt(This,index,value)

#define IOdaMLineStyle_get_ColorAt(This,index,Color)	\
    (This)->lpVtbl -> get_ColorAt(This,index,Color)

#define IOdaMLineStyle_put_ColorAt(This,index,Color)	\
    (This)->lpVtbl -> put_ColorAt(This,index,Color)

#define IOdaMLineStyle_get_LineTypeAt(This,index,LineType)	\
    (This)->lpVtbl -> get_LineTypeAt(This,index,LineType)

#define IOdaMLineStyle_put_LineTypeAt(This,index,LineType)	\
    (This)->lpVtbl -> put_LineTypeAt(This,index,LineType)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_get_Name_Proxy( 
    IOdaMLineStyle * This,
    /* [retval][out] */ BSTR *pName);


void __RPC_STUB IOdaMLineStyle_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_put_Name_Proxy( 
    IOdaMLineStyle * This,
    /* [in] */ BSTR pName);


void __RPC_STUB IOdaMLineStyle_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_get_Description_Proxy( 
    IOdaMLineStyle * This,
    /* [retval][out] */ BSTR *bstrDes);


void __RPC_STUB IOdaMLineStyle_get_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_put_Description_Proxy( 
    IOdaMLineStyle * This,
    /* [in] */ BSTR bstrDes);


void __RPC_STUB IOdaMLineStyle_put_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_get_StartAngle_Proxy( 
    IOdaMLineStyle * This,
    /* [retval][out] */ ACAD_ANGLE *pVal);


void __RPC_STUB IOdaMLineStyle_get_StartAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_put_StartAngle_Proxy( 
    IOdaMLineStyle * This,
    /* [in] */ ACAD_ANGLE newVal);


void __RPC_STUB IOdaMLineStyle_put_StartAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_get_EndAngle_Proxy( 
    IOdaMLineStyle * This,
    /* [retval][out] */ ACAD_ANGLE *pVal);


void __RPC_STUB IOdaMLineStyle_get_EndAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_put_EndAngle_Proxy( 
    IOdaMLineStyle * This,
    /* [in] */ ACAD_ANGLE newVal);


void __RPC_STUB IOdaMLineStyle_put_EndAngle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_get_FillColor_Proxy( 
    IOdaMLineStyle * This,
    /* [retval][out] */ IAcadAcCmColor **pVal);


void __RPC_STUB IOdaMLineStyle_get_FillColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_put_FillColor_Proxy( 
    IOdaMLineStyle * This,
    /* [in] */ IAcadAcCmColor *newVal);


void __RPC_STUB IOdaMLineStyle_put_FillColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_get_ElementsCount_Proxy( 
    IOdaMLineStyle * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IOdaMLineStyle_get_ElementsCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_get_Filled_Proxy( 
    IOdaMLineStyle * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IOdaMLineStyle_get_Filled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_put_Filled_Proxy( 
    IOdaMLineStyle * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IOdaMLineStyle_put_Filled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_get_ShowMiters_Proxy( 
    IOdaMLineStyle * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IOdaMLineStyle_get_ShowMiters_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_put_ShowMiters_Proxy( 
    IOdaMLineStyle * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IOdaMLineStyle_put_ShowMiters_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_get_StartSquareCap_Proxy( 
    IOdaMLineStyle * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IOdaMLineStyle_get_StartSquareCap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_put_StartSquareCap_Proxy( 
    IOdaMLineStyle * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IOdaMLineStyle_put_StartSquareCap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_get_StartRoundCap_Proxy( 
    IOdaMLineStyle * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IOdaMLineStyle_get_StartRoundCap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_put_StartRoundCap_Proxy( 
    IOdaMLineStyle * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IOdaMLineStyle_put_StartRoundCap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_get_StartInnerArcs_Proxy( 
    IOdaMLineStyle * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IOdaMLineStyle_get_StartInnerArcs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_put_StartInnerArcs_Proxy( 
    IOdaMLineStyle * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IOdaMLineStyle_put_StartInnerArcs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_get_EndSquareCap_Proxy( 
    IOdaMLineStyle * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IOdaMLineStyle_get_EndSquareCap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_put_EndSquareCap_Proxy( 
    IOdaMLineStyle * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IOdaMLineStyle_put_EndSquareCap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_get_EndRoundCap_Proxy( 
    IOdaMLineStyle * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IOdaMLineStyle_get_EndRoundCap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_put_EndRoundCap_Proxy( 
    IOdaMLineStyle * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IOdaMLineStyle_put_EndRoundCap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_get_EndInnerArcs_Proxy( 
    IOdaMLineStyle * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IOdaMLineStyle_get_EndInnerArcs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_put_EndInnerArcs_Proxy( 
    IOdaMLineStyle * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IOdaMLineStyle_put_EndInnerArcs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_AddElement_Proxy( 
    IOdaMLineStyle * This,
    /* [in] */ double offset,
    /* [in] */ IAcadAcCmColor *Color,
    /* [in] */ IAcadLineType *pLinetype);


void __RPC_STUB IOdaMLineStyle_AddElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_get_OffsetAt_Proxy( 
    IOdaMLineStyle * This,
    /* [in] */ int index,
    /* [retval][out] */ double *value);


void __RPC_STUB IOdaMLineStyle_get_OffsetAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_put_OffsetAt_Proxy( 
    IOdaMLineStyle * This,
    /* [in] */ int index,
    /* [in] */ double value);


void __RPC_STUB IOdaMLineStyle_put_OffsetAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_get_ColorAt_Proxy( 
    IOdaMLineStyle * This,
    /* [in] */ int index,
    /* [retval][out] */ IAcadAcCmColor **Color);


void __RPC_STUB IOdaMLineStyle_get_ColorAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_put_ColorAt_Proxy( 
    IOdaMLineStyle * This,
    /* [in] */ int index,
    /* [in] */ IAcadAcCmColor *Color);


void __RPC_STUB IOdaMLineStyle_put_ColorAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_get_LineTypeAt_Proxy( 
    IOdaMLineStyle * This,
    /* [in] */ int index,
    /* [retval][out] */ IAcadLineType **LineType);


void __RPC_STUB IOdaMLineStyle_get_LineTypeAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IOdaMLineStyle_put_LineTypeAt_Proxy( 
    IOdaMLineStyle * This,
    /* [in] */ int index,
    /* [in] */ IAcadLineType *LineType);


void __RPC_STUB IOdaMLineStyle_put_LineTypeAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IOdaMLineStyle_INTERFACE_DEFINED__ */



#ifndef __OdaX_LIBRARY_DEFINED__
#define __OdaX_LIBRARY_DEFINED__

/* library OdaX */
/* [helpstring][version][uuid] */ 


EXTERN_C const IID LIBID_OdaX;

#ifndef __IAcadObjectEvents_INTERFACE_DEFINED__
#define __IAcadObjectEvents_INTERFACE_DEFINED__

/* interface IAcadObjectEvents */
/* [object][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IAcadObjectEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C1DAA11F-559F-4649-9D7F-AA82FCF9C3AB")
    IAcadObjectEvents : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Modified( 
            /* [in] */ IAcadObject *pObject) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAcadObjectEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAcadObjectEvents * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAcadObjectEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAcadObjectEvents * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Modified )( 
            IAcadObjectEvents * This,
            /* [in] */ IAcadObject *pObject);
        
        END_INTERFACE
    } IAcadObjectEventsVtbl;

    interface IAcadObjectEvents
    {
        CONST_VTBL struct IAcadObjectEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAcadObjectEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAcadObjectEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAcadObjectEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAcadObjectEvents_Modified(This,pObject)	\
    (This)->lpVtbl -> Modified(This,pObject)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IAcadObjectEvents_Modified_Proxy( 
    IAcadObjectEvents * This,
    /* [in] */ IAcadObject *pObject);


void __RPC_STUB IAcadObjectEvents_Modified_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAcadObjectEvents_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_AcadLine;

#ifdef __cplusplus

class DECLSPEC_UUID("a4854525-6157-44f9-95f3-b0e362e15d99")
AcadLine;
#endif

EXTERN_C const CLSID CLSID_AcadObject;

#ifdef __cplusplus

class DECLSPEC_UUID("35a19641-cf80-4c5f-bbfa-7c1fdd9db084")
AcadObject;
#endif

EXTERN_C const CLSID CLSID_AcadEntity;

#ifdef __cplusplus

class DECLSPEC_UUID("c8453465-1701-4ca4-bd4e-6f23f7d94557")
AcadEntity;
#endif

EXTERN_C const CLSID CLSID_AcadDimension;

#ifdef __cplusplus

class DECLSPEC_UUID("3216af84-6e1a-47ae-9d98-b57a5748a0d3")
AcadDimension;
#endif

EXTERN_C const CLSID CLSID_AcadDimRotated;

#ifdef __cplusplus

class DECLSPEC_UUID("91bbd5b2-1132-4c57-855d-49a0b3401d91")
AcadDimRotated;
#endif

EXTERN_C const CLSID CLSID_AcadMText;

#ifdef __cplusplus

class DECLSPEC_UUID("e7edd38d-9dd5-4a2b-a770-92276e83abae")
AcadMText;
#endif

EXTERN_C const CLSID CLSID_AcadDatabase;

#ifdef __cplusplus

class DECLSPEC_UUID("6602232a-b6ba-4e64-b55f-afff53f29eda")
AcadDatabase;
#endif

EXTERN_C const CLSID CLSID_AcadViewport;

#ifdef __cplusplus

class DECLSPEC_UUID("3f856c09-e4bd-4171-beed-6696d3b770a5")
AcadViewport;
#endif

EXTERN_C const CLSID CLSID_AcadViewports;

#ifdef __cplusplus

class DECLSPEC_UUID("47385000-66c1-46d3-b878-2193f4d0dc9b")
AcadViewports;
#endif

EXTERN_C const CLSID CLSID_AcadText;

#ifdef __cplusplus

class DECLSPEC_UUID("34f60411-6765-463a-917b-04de0f8e4e28")
AcadText;
#endif

EXTERN_C const CLSID CLSID_AcadTrace;

#ifdef __cplusplus

class DECLSPEC_UUID("8c9d5ccc-e03a-472a-954d-d2c79ed6b28e")
AcadTrace;
#endif

EXTERN_C const CLSID CLSID_AcadPolyline;

#ifdef __cplusplus

class DECLSPEC_UUID("23d8ef63-2641-4b29-9398-3899854235d4")
AcadPolyline;
#endif

EXTERN_C const CLSID CLSID_AcadLineTypes;

#ifdef __cplusplus

class DECLSPEC_UUID("73ddb771-f4b3-4f2c-9240-98f643e60cc0")
AcadLineTypes;
#endif

EXTERN_C const CLSID CLSID_OdaLineType;

#ifdef __cplusplus

class DECLSPEC_UUID("74708740-a8c1-4f09-8fcd-bf8254334fd1")
OdaLineType;
#endif

EXTERN_C const CLSID CLSID_AcadBlocks;

#ifdef __cplusplus

class DECLSPEC_UUID("6db3af36-c53d-4ab4-b4d3-7daafc084ebf")
AcadBlocks;
#endif

EXTERN_C const CLSID CLSID_OdaBlock;

#ifdef __cplusplus

class DECLSPEC_UUID("1d62215e-2e74-4f2a-9012-e325e3f75cba")
OdaBlock;
#endif

EXTERN_C const CLSID CLSID_AcadEllipse;

#ifdef __cplusplus

class DECLSPEC_UUID("d6b34626-852d-428b-81f8-f08bfdfd0e43")
AcadEllipse;
#endif

EXTERN_C const CLSID CLSID_AcadCircle;

#ifdef __cplusplus

class DECLSPEC_UUID("f3e3d09f-3762-445f-a980-5a9c4701f0b9")
AcadCircle;
#endif

EXTERN_C const CLSID CLSID_AcadPoint;

#ifdef __cplusplus

class DECLSPEC_UUID("12077455-6bb2-44c4-9f73-33b0d89682dc")
AcadPoint;
#endif

EXTERN_C const CLSID CLSID_Acad3DFace;

#ifdef __cplusplus

class DECLSPEC_UUID("c13d8048-79b1-4822-a1aa-7ff53c3ce47c")
Acad3DFace;
#endif

EXTERN_C const CLSID CLSID_Acad3DPolyline;

#ifdef __cplusplus

class DECLSPEC_UUID("9173029e-9ef5-4381-9d48-0337fe131fa5")
Acad3DPolyline;
#endif

EXTERN_C const CLSID CLSID_Acad3DSolid;

#ifdef __cplusplus

class DECLSPEC_UUID("7c75edf5-f231-49c5-8321-fa04773cfa90")
Acad3DSolid;
#endif

EXTERN_C const CLSID CLSID_AcadArc;

#ifdef __cplusplus

class DECLSPEC_UUID("af654796-8294-4471-8c34-7155203fa7ff")
AcadArc;
#endif

EXTERN_C const CLSID CLSID_AcadAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("a903f7cd-638e-4d62-b400-8669b3c3f91d")
AcadAttribute;
#endif

EXTERN_C const CLSID CLSID_AcadLeader;

#ifdef __cplusplus

class DECLSPEC_UUID("07327085-0c63-466b-9883-fdcea4262b7d")
AcadLeader;
#endif

EXTERN_C const CLSID CLSID_AcadTolerance;

#ifdef __cplusplus

class DECLSPEC_UUID("b92d1d23-5b3c-48f7-8113-a57a329700b4")
AcadTolerance;
#endif

EXTERN_C const CLSID CLSID_AcadBlockReference;

#ifdef __cplusplus

class DECLSPEC_UUID("e0f552fc-7044-41b5-aa5a-23e421fc9f70")
AcadBlockReference;
#endif

EXTERN_C const CLSID CLSID_AcadDim3PointAngular;

#ifdef __cplusplus

class DECLSPEC_UUID("59fb1211-a248-4a90-ae91-97e5bf5edd2f")
AcadDim3PointAngular;
#endif

EXTERN_C const CLSID CLSID_AcadDimAligned;

#ifdef __cplusplus

class DECLSPEC_UUID("e1c74867-4ba2-4ad3-ba2c-f932d5a05ad6")
AcadDimAligned;
#endif

EXTERN_C const CLSID CLSID_AcadShape;

#ifdef __cplusplus

class DECLSPEC_UUID("11d91189-18ed-4c61-bbcf-19a93530ca4d")
AcadShape;
#endif

EXTERN_C const CLSID CLSID_AcadSolid;

#ifdef __cplusplus

class DECLSPEC_UUID("8f08f08c-0d35-4244-a5d3-29c6e8834cec")
AcadSolid;
#endif

EXTERN_C const CLSID CLSID_AcadSpline;

#ifdef __cplusplus

class DECLSPEC_UUID("7ba7dbb4-de46-42e4-b754-829fad7fc90d")
AcadSpline;
#endif

EXTERN_C const CLSID CLSID_AcadDimAngular;

#ifdef __cplusplus

class DECLSPEC_UUID("df93031c-a068-4cf8-93ff-aec1d12fb2ee")
AcadDimAngular;
#endif

EXTERN_C const CLSID CLSID_AcadDimDiametric;

#ifdef __cplusplus

class DECLSPEC_UUID("bd092bef-9f0a-4f7a-8ae0-3addc081c553")
AcadDimDiametric;
#endif

EXTERN_C const CLSID CLSID_AcadDimOrdinate;

#ifdef __cplusplus

class DECLSPEC_UUID("e41cbb63-e65a-4d52-afa6-2c0802a3edcc")
AcadDimOrdinate;
#endif

EXTERN_C const CLSID CLSID_AcadDimRadial;

#ifdef __cplusplus

class DECLSPEC_UUID("e5307e8f-cb92-436e-a03b-9b1bf4dd6c5a")
AcadDimRadial;
#endif

EXTERN_C const CLSID CLSID_AcadXRecord;

#ifdef __cplusplus

class DECLSPEC_UUID("994047d3-0810-4012-9d28-de42917912d4")
AcadXRecord;
#endif

EXTERN_C const CLSID CLSID_AcadXline;

#ifdef __cplusplus

class DECLSPEC_UUID("25835061-3fa8-4350-9177-5089807ec64e")
AcadXline;
#endif

EXTERN_C const CLSID CLSID_AcadRay;

#ifdef __cplusplus

class DECLSPEC_UUID("94e6d027-5172-49ed-8d14-ecfa79afbd71")
AcadRay;
#endif

EXTERN_C const CLSID CLSID_AcadDimStyle;

#ifdef __cplusplus

class DECLSPEC_UUID("a53be397-7c46-4432-b723-330d14380d22")
AcadDimStyle;
#endif

EXTERN_C const CLSID CLSID_AcadExternalReference;

#ifdef __cplusplus

class DECLSPEC_UUID("7eba28b7-440f-489a-8c92-b76a119f715f")
AcadExternalReference;
#endif

EXTERN_C const CLSID CLSID_AcadMInsertBlock;

#ifdef __cplusplus

class DECLSPEC_UUID("67ae8157-a7b0-44dc-87c7-d40494ba1619")
AcadMInsertBlock;
#endif

EXTERN_C const CLSID CLSID_AcadDimStyles;

#ifdef __cplusplus

class DECLSPEC_UUID("5df86caa-a7d8-4625-9ee7-683aee835660")
AcadDimStyles;
#endif

EXTERN_C const CLSID CLSID_AcadUCS;

#ifdef __cplusplus

class DECLSPEC_UUID("e64587d6-b63c-45e0-92a6-85d8df393ef7")
AcadUCS;
#endif

EXTERN_C const CLSID CLSID_AcadUCSs;

#ifdef __cplusplus

class DECLSPEC_UUID("8688382c-b15d-48f7-bb57-5423a5073b01")
AcadUCSs;
#endif

EXTERN_C const CLSID CLSID_AcadView;

#ifdef __cplusplus

class DECLSPEC_UUID("0150a117-dc12-4e2a-81e8-cee3cc7ec993")
AcadView;
#endif

EXTERN_C const CLSID CLSID_AcadViews;

#ifdef __cplusplus

class DECLSPEC_UUID("5bcbe1c5-257c-44d6-a706-572a24313d4a")
AcadViews;
#endif

EXTERN_C const CLSID CLSID_AcadGroup;

#ifdef __cplusplus

class DECLSPEC_UUID("b3708624-bdf6-4353-b81e-4a6e821e94a5")
AcadGroup;
#endif

EXTERN_C const CLSID CLSID_AcadGroups;

#ifdef __cplusplus

class DECLSPEC_UUID("f9fd265f-fc93-4fd1-8a9f-85839d103c8e")
AcadGroups;
#endif

EXTERN_C const CLSID CLSID_AcadDictionaries;

#ifdef __cplusplus

class DECLSPEC_UUID("8c7c309b-dcb9-4c55-be24-cb6ce2dae920")
AcadDictionaries;
#endif

EXTERN_C const CLSID CLSID_AcadDictionary;

#ifdef __cplusplus

class DECLSPEC_UUID("308d2802-0974-4858-8a57-a1e0fc954dc3")
AcadDictionary;
#endif

EXTERN_C const CLSID CLSID_AcadLayouts;

#ifdef __cplusplus

class DECLSPEC_UUID("f51eb478-7203-49a6-8008-94b8b7a9b16f")
AcadLayouts;
#endif

EXTERN_C const CLSID CLSID_AcadLayout;

#ifdef __cplusplus

class DECLSPEC_UUID("5fe28263-0775-4214-814b-0dd9fd16d320")
AcadLayout;
#endif

EXTERN_C const CLSID CLSID_AcadTextStyle;

#ifdef __cplusplus

class DECLSPEC_UUID("5b4ad1af-13c6-4a0d-a0ed-bce5219b92f2")
AcadTextStyle;
#endif

EXTERN_C const CLSID CLSID_AcadTextStyles;

#ifdef __cplusplus

class DECLSPEC_UUID("45a46392-bc12-4564-b7de-52863675de0e")
AcadTextStyles;
#endif

EXTERN_C const CLSID CLSID_AcadHatch;

#ifdef __cplusplus

class DECLSPEC_UUID("64f49fc4-6013-4e0a-8df6-b6d8cde9af30")
AcadHatch;
#endif

EXTERN_C const CLSID CLSID_AcadMLine;

#ifdef __cplusplus

class DECLSPEC_UUID("77e3a10c-aa5a-47bb-aa5c-f96805583565")
AcadMLine;
#endif

EXTERN_C const CLSID CLSID_AcadPolygonMesh;

#ifdef __cplusplus

class DECLSPEC_UUID("83c7ea90-67a5-4445-b1ea-d8d931663762")
AcadPolygonMesh;
#endif

EXTERN_C const CLSID CLSID_AcadPolyfaceMesh;

#ifdef __cplusplus

class DECLSPEC_UUID("f4ec45ae-686e-46fd-ab2a-11c0dd4a0012")
AcadPolyfaceMesh;
#endif

EXTERN_C const CLSID CLSID_AcadPlotConfiguration;

#ifdef __cplusplus

class DECLSPEC_UUID("9aa52a72-5fe1-499a-a584-1dcce83e1a5f")
AcadPlotConfiguration;
#endif

EXTERN_C const CLSID CLSID_AcadPlotConfigurations;

#ifdef __cplusplus

class DECLSPEC_UUID("fe135691-6ad8-4dd0-aedb-11850b27b526")
AcadPlotConfigurations;
#endif

EXTERN_C const CLSID CLSID_AcadRasterImage;

#ifdef __cplusplus

class DECLSPEC_UUID("5e4e9169-d9d4-4af2-a24d-f2f5d64209f9")
AcadRasterImage;
#endif

EXTERN_C const CLSID CLSID_AcadRegion;

#ifdef __cplusplus

class DECLSPEC_UUID("b439864d-adab-4c4e-a98e-1bdd6af7332c")
AcadRegion;
#endif

EXTERN_C const CLSID CLSID_AcadRegisteredApplication;

#ifdef __cplusplus

class DECLSPEC_UUID("dc254069-ba96-4d0b-aa68-e3f3483d8644")
AcadRegisteredApplication;
#endif

EXTERN_C const CLSID CLSID_AcadRegisteredApplications;

#ifdef __cplusplus

class DECLSPEC_UUID("4fd9f27e-53b8-463f-918e-06dd87198203")
AcadRegisteredApplications;
#endif

EXTERN_C const CLSID CLSID_AcadPViewport;

#ifdef __cplusplus

class DECLSPEC_UUID("33ef0de9-cb1c-442a-8314-a3902099fe91")
AcadPViewport;
#endif

EXTERN_C const CLSID CLSID_AcadDatabasePreferences;

#ifdef __cplusplus

class DECLSPEC_UUID("b8c62eea-5c36-411b-b48a-0a9f14c94e48")
AcadDatabasePreferences;
#endif

EXTERN_C const CLSID CLSID_AcadHyperlink;

#ifdef __cplusplus

class DECLSPEC_UUID("17d437d1-6d20-44d1-9a5f-df1210a46e1b")
AcadHyperlink;
#endif

EXTERN_C const CLSID CLSID_AcadHyperlinks;

#ifdef __cplusplus

class DECLSPEC_UUID("390f6043-16c1-4856-97a9-12b386861745")
AcadHyperlinks;
#endif

EXTERN_C const CLSID CLSID_AcadLayer;

#ifdef __cplusplus

class DECLSPEC_UUID("834b505d-ecf6-4efe-966c-39e4f6242bda")
AcadLayer;
#endif

EXTERN_C const CLSID CLSID_AcadLayers;

#ifdef __cplusplus

class DECLSPEC_UUID("8a8723c4-2e00-4644-aaad-57637ec7f0bf")
AcadLayers;
#endif

EXTERN_C const CLSID CLSID_AcadLWPolyline;

#ifdef __cplusplus

class DECLSPEC_UUID("73184003-ed82-4d89-bb61-e9d977f33bde")
AcadLWPolyline;
#endif

EXTERN_C const CLSID CLSID_AcadPaperSpace;

#ifdef __cplusplus

class DECLSPEC_UUID("88c04ad3-5619-4c5e-83dd-0e0b054dea18")
AcadPaperSpace;
#endif

EXTERN_C const CLSID CLSID_AcadModelSpace;

#ifdef __cplusplus

class DECLSPEC_UUID("7b108189-f323-4767-853e-eb0c6f471880")
AcadModelSpace;
#endif

EXTERN_C const CLSID CLSID_AcadAttributeReference;

#ifdef __cplusplus

class DECLSPEC_UUID("7a26b27c-6dbe-4474-9efa-099254f199d4")
AcadAttributeReference;
#endif

EXTERN_C const CLSID CLSID_AcadAcCmColor;

#ifdef __cplusplus

class DECLSPEC_UUID("29dc8b91-12d6-4cb3-a47b-ec5b4bc48851")
AcadAcCmColor;
#endif

EXTERN_C const CLSID CLSID_AcadSummaryInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("4d989357-d8eb-4d52-8518-4efbf5bc46de")
AcadSummaryInfo;
#endif

EXTERN_C const CLSID CLSID_AcadFileDependencies;

#ifdef __cplusplus

class DECLSPEC_UUID("25860600-28b6-4b17-a02f-0a480745342e")
AcadFileDependencies;
#endif

EXTERN_C const CLSID CLSID_AcadFileDependency;

#ifdef __cplusplus

class DECLSPEC_UUID("95a50d6c-7f9f-4970-a9fa-7c71eb9bf84a")
AcadFileDependency;
#endif

EXTERN_C const CLSID CLSID_AcadTable;

#ifdef __cplusplus

class DECLSPEC_UUID("a0dd1669-0e3a-46e5-8463-643a7eea96b5")
AcadTable;
#endif

EXTERN_C const CLSID CLSID_AcadOle;

#ifdef __cplusplus

class DECLSPEC_UUID("24d71eba-27b4-434b-9b87-f98fc6dfd5a5")
AcadOle;
#endif

EXTERN_C const CLSID CLSID_AcadTableStyle;

#ifdef __cplusplus

class DECLSPEC_UUID("0f935a2e-4ebe-4eb3-b186-51373930a0b4")
AcadTableStyle;
#endif

EXTERN_C const CLSID CLSID_AcadSortentsTable;

#ifdef __cplusplus

class DECLSPEC_UUID("b03414cd-b1b9-46a1-be55-d7b93896b9e8")
AcadSortentsTable;
#endif

EXTERN_C const CLSID CLSID_OdaMLineStyles;

#ifdef __cplusplus

class DECLSPEC_UUID("4f021634-148b-474a-abad-ef995e66ea7e")
OdaMLineStyles;
#endif

EXTERN_C const CLSID CLSID_OdaMLineStyle;

#ifdef __cplusplus

class DECLSPEC_UUID("7d27ae89-422e-4931-8822-7638cb272616")
OdaMLineStyle;
#endif
#endif /* __OdaX_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long *, unsigned long            , VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal(  unsigned long *, unsigned char *, VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal(unsigned long *, unsigned char *, VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long *, VARIANT * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif



