///////////////////////////////////////////////////////////
//  FieldNode.cs
//  Implementation of the Class FieldNode
//  Generated by Enterprise Architect
//  Created on:      08-四月-2011 13:45:31
//  Original author: Administrator
///////////////////////////////////////////////////////////




namespace DIST.DGP.DataExchange.VCT.FileData {
	/// <summary>
	/// VCT表字段信息节点类
	/// </summary>
	public class FieldNode {

        /// <summary>
        /// 字段名
        /// </summary>
        public string FieldName
        {
            get
            {
                return this.m_strFieldName;
            }
            set
            {
                this.m_strFieldName = value;
            }
        }
        private string m_strFieldName;

        /// <summary>
        /// 字段类型
        /// </summary>
        public string FieldType
        {
            get
            {
                return this.m_strFieldType;
            }
            set
            {
                this.m_strFieldType = value;
            }
        }
        private string m_strFieldType;

		/// <summary>
		/// 字段长度
		/// </summary>
        public int FieldLength
        {
            get
            {
                return this.m_nFieldLength;
            }
            set
            {
                this.m_nFieldLength = value;
            }
        }
        private int m_nFieldLength;

        /// <summary>
		/// 字段精度
		/// </summary>
        public int FieldPrecision
        {
            get
            {
                return this.m_nFieldPrecision;
            }
            set
            {
                this.m_nFieldPrecision = value;
            }
        }
        private int m_nFieldPrecision = -1;

        /// <summary>
        /// 字段索引
        /// </summary>
        public int FieldIndex
        {
            get
            {
                return this.m_nFieldIndex;
            }
            set
            {
                this.m_nFieldIndex = value;
            }
        }
        private int m_nFieldIndex = -1;
        
        public FieldNode(string strLine)
        {
            string[] arrTemp = strLine.Split(HeadNode.Separator);

            if (arrTemp.Length > 0)
                this.m_strFieldName = arrTemp[0];
            if (arrTemp.Length > 1)
                this.m_strFieldType = arrTemp[1];
            int nLength = -1;
            if (arrTemp.Length > 2)
            {
                if (VCTFile.ConvertToInt32(arrTemp[2],out nLength))
                    this.m_nFieldLength = nLength;
            }
            if (arrTemp.Length > 3)
            {
                if (VCTFile.ConvertToInt32(arrTemp[3], out nLength))
                    this.m_nFieldPrecision = nLength;
            }
        }

		~FieldNode(){

		}

		public virtual void Dispose(){

		}

        /// <summary>
        /// 输出VCT节点
        /// </summary>
        public override string ToString()
        {
            string strNode = this.m_strFieldName + HeadNode.Separator.ToString() + this.m_strFieldType + HeadNode.Separator.ToString() + this.m_nFieldLength.ToString();
            if (m_strFieldType.ToLower() == "float")
            {
                //只有float类型的才输出精度
                if (m_nFieldPrecision > -1)
                    strNode += HeadNode.Separator.ToString() + this.m_nFieldPrecision.ToString();
                else
                    strNode += HeadNode.Separator.ToString() + "0";
            }
            else
            {
 
            }

            return strNode;
        }


	}//end FieldNode

}//end namespace FileData