///////////////////////////////////////////////////////////
//  AnnotationNode.cs
//  Implementation of the Class AnnotationNode
//  Generated by Enterprise Architect
//  Created on:      08-四月-2011 13:45:29
//  Original author: Administrator
///////////////////////////////////////////////////////////




using DIST.DGP.DataExchange.VCT.FileData;
namespace DIST.DGP.DataExchange.VCT.FileData {
	/// <summary>
	/// VCT注记节点
	/// </summary>
	public class AnnotationNode : EntityNode {

		/// <summary>
		/// 角度
		/// </summary>
        public double Angle
        {
            get
            {
                return m_dAngle;
            }
            set
            {
                m_dAngle = value;
            }
        }
		private double m_dAngle;

		/// <summary>
        /// 注记的特征类型。1表示单点注记，2表示多点注记。土地利用规划数据采用单点注记。
		/// </summary>
        public int AnnotationType
        {
            get
            {
                return m_nAnnotationType;
            }
            set
            {
                m_nAnnotationType = value;
            }
        }
        private int m_nAnnotationType = 1;

		/// <summary>
		/// 坐标位置
		/// </summary>
        public PointInfoNode PointLocation
        {
            get
            {
                return m_PointInfoNode;
            }
            set
            {
                m_PointInfoNode = value;
            }
        }
        private PointInfoNode m_PointInfoNode;

		/// <summary>
		/// 注记的内容
		/// </summary>
        public string Text
        {
            get
            {
                return m_strText;
            }
            set
            {
                m_strText = value;
            }
        }
        private string m_strText;

		public AnnotationNode()
        {

		}

        //~AnnotationNode()
        //{

        //}

        //public override void Dispose(){

        //}

        /// <summary>
        /// 输出VCT节点
        /// </summary>
        public override string ToString()
        {
            string strNode = base.ToString();
            strNode += "\r\n" + this.m_nAnnotationType.ToString();
            strNode += "\r\n" + this.m_strText;
            strNode += "\r\n" + this.m_PointInfoNode.ToString() + HeadNode.Separator.ToString() + this.m_dAngle.ToString();

            strNode += "\r\n0";

            return strNode;
        }

	}//end AnnotationNode

}//end namespace FileData