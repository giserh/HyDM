///////////////////////////////////////////////////////////
//  TableStructureNode.cs
//  Implementation of the Class TableStructureNode
//  Generated by Enterprise Architect
//  Created on:      08-四月-2011 13:45:33
//  Original author: Administrator
///////////////////////////////////////////////////////////




using DIST.DGP.DataExchange.VCT.FileData;
using System.Collections.Generic;
namespace DIST.DGP.DataExchange.VCT.FileData {
	/// <summary>
	/// VCT数据表结构节点类
	/// </summary>
	public class TableStructureNode {

		/// <summary>
		/// 数据表名
		/// </summary>
        public string TableName
        {
            get
            {
                return m_strTableName;
            }
            set
            {
                m_strTableName = value;
            }
        }
        private string m_strTableName;

        /// <summary>
        /// 数据表字段集合
        /// </summary>
        public System.Collections.Generic.List<FieldNode> FieldNodes
        {
            get
            {
                return m_arrFieldNode;
            }
            set
            {
                m_arrFieldNode = value;
            }
        }
        private System.Collections.Generic.List<FieldNode> m_arrFieldNode;

        /// <summary>
        /// 是否是空间数据表
        /// </summary>
        public bool IsGeometryTable
        {
            get
            {
                return m_bGeometryTable;
            }
            set
            {
                m_bGeometryTable = true;
            }
        }
        private bool m_bGeometryTable = true;
 
		public TableStructureNode(){

		}

		~TableStructureNode(){

		}

		public virtual void Dispose(){

		}

        /// <summary>
        /// 输出VCT节点
        /// </summary>
        public override string ToString()
        {
            string strNode = m_strTableName + HeadNode.Separator.ToString() + m_arrFieldNode.Count.ToString();
            if (m_bGeometryTable == false)
                strNode += HeadNode.Separator.ToString() + "NoneGeometry";

            for (int i = 0; i < m_arrFieldNode.Count; i++)
            {
                strNode += "\r\n" + m_arrFieldNode[i].ToString();
            }
            strNode += "\r\n0";
            return strNode;
        }
	}//end TableStructureNode

}//end namespace FileData